<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet ekr_test?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5">
	<global_window_position top="74" left="372" height="800" width="898"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20070416075121" str_leo_pos="11"><vh>Startup</vh>
<v t="ekr.20070529172620"><vh>@chapters</vh>
<v t="ekr.20070529173219"><vh>@chapter abc</vh>
<v t="ekr.20070529173219.1"><vh>abc node 1</vh></v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
</v>
<v t="ekr.20070603190944"><vh>@chapter xyz</vh>
<v t="ekr.20070603190944.1"><vh>xyz node 1</vh></v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
</v>
</v>
<v t="ekr.20070224123943"><vh>@settings</vh>
<v t="ekr.20070701090143"><vh>@@bool force_newlines_in_at_nosent_bodies = False</vh></v>
<v t="ekr.20070504080933"><vh>@bool create_nonexistent_directories = True</vh></v>
<v t="ekr.20080412082246.1"><vh>@bool fixedWindow = False</vh></v>
<v t="ekr.20070604100125"><vh>@bool use_chapter_tabs = True</vh></v>
<v t="ekr.20070503085527"><vh>@bool use_chapters = True</vh></v>
<v t="ekr.20071025193940"><vh>@enabled-plugins</vh></v>
<v t="ekr.20080529111617.1"><vh>plugins</vh>
<v t="ekr.20070723091227"><vh>http plugin</vh>
<v t="ekr.20070723091227.1"><vh>@bool http_active = True</vh></v>
<v t="ekr.20070723091227.2"><vh>@int  port = 8080</vh></v>
<v t="ekr.20070723091227.3"><vh>@string rst_http_attributename = 'rst_http_attribute'</vh></v>
</v>
<v t="ekr.20070305085403"><vh>vim plugin</vh>
<v t="ekr.20070305085403.1"><vh>@string vim_cmd = c:\vim\vim63\gvim --servername LEO</vh></v>
<v t="ekr.20070305085403.2"><vh>@string vim_exe = c:\vim\vim63\gvim</vh></v>
</v>
<v t="ekr.20080529111617.2"><vh>cleo</vh>
<v t="ekr.20080529111617.3"><vh>@color cleo_color_prog_green =</vh></v>
<v t="ekr.20080529111617.4"><vh>@color cleo_color_prog_red =</vh></v>
<v t="ekr.20080529111617.5"><vh>@data cleo_color_file_node_list</vh></v>
<v t="ekr.20080529111617.6"><vh>@int cleo_prog_width = 18</vh></v>
<v t="ekr.20080529111617.7"><vh>@float cleo_time_init = 1.0</vh></v>
<v t="ekr.20080529111617.8"><vh>@int cleo_prog_scale = 1</vh></v>
<v t="ekr.20080529111617.9"><vh>@float cleo_prog_extra = 4</vh></v>
<v t="ekr.20080529111617.10"><vh>@string cleo_time_name = 'days'</vh></v>
</v>
</v>
</v>
<v t="ekr.20041001211817"><vh>Buttons</vh>
<v t="ekr.20061030041450"><vh>Run Iron Python scripts</vh>
<v t="ekr.20061030041356"><vh>@url c:\prog\IronPython-1.0.1\Doc\IronPythonApiReference.chm</vh></v>
</v>
<v t="ekr.20070531102813"><vh>Disabled buttons</vh>
<v t="ekr.20060814111542"><vh>@@button add-e</vh></v>
<v t="ekr.20060918083159"><vh>@@button Clear uAs</vh></v>
<v t="ekr.20071002150320"><vh>@@button create-canvas</vh></v>
<v t="ekr.20060809084033"><vh>@@button cvt to g.et</vh>
<v t="ekr.20060809104405"><vh>&lt;&lt; version history &gt;&gt;</vh></v>
<v t="ekr.20060809092023"><vh>test</vh>
<v t="ekr.20060809103738"><vh>test1</vh></v>
<v t="ekr.20060809103738.1"><vh>test2</vh></v>
</v>
<v t="ekr.20060809090508"><vh>replace</vh>
<v t="ekr.20060809091749.72"><vh>&lt;&lt; handle string &gt;&gt;</vh></v>
<v t="ekr.20060809091749.73"><vh>&lt;&lt; handle g.es &gt;&gt;</vh></v>
</v>
</v>
<v t="ekr.20070531104646"><vh>@@button da-comp</vh></v>
<v t="ekr.20070531103315"><vh>@@button da-expand</vh></v>
<v t="ekr.20070530072113"><vh>@@button hide-ch</vh></v>
<v t="ekr.20071025192258"><vh>@@button local-tests @key=Alt+4</vh></v>
<v t="ekr.20071006084354"><vh>@@button print tk line number</vh></v>
<v t="ekr.20080105115712"><vh>@@button pylint</vh>
<v t="ekr.20080115085447"><vh>harmless warnings, errors</vh></v>
<v t="ekr.20080105130903"><vh>warnings</vh></v>
<v t="ekr.20080105120559"><vh>&lt;&lt; define data &gt;&gt;</vh></v>
</v>
<v t="ekr.20070515073111"><vh>@@button sep</vh></v>
<v t="ekr.20060427103457"><vh>@@button settings.leo</vh></v>
<v t="ekr.20080310111916.1"><vh>@@button Translate "can not" to "can't"</vh></v>
<v t="ekr.20070115092430"><vh>@@button winpdb</vh></v>
<v t="ekr.20071128122043"><vh>@@command create-shell-tab @key = Alt+5</vh></v>
<v t="ekr.20071101163934"><vh>@@command rst3</vh></v>
<v t="ekr.20070604095313"><vh>Chapter buttons</vh>
<v t="ekr.20070530072113.1"><vh>@@button show-ch</vh></v>
<v t="ekr.20070603175054.1"><vh>@@button ch-main</vh></v>
<v t="ekr.20070603175054"><vh>@@button ch-abc</vh></v>
<v t="ekr.20070603190713.1"><vh>@@button ch-xyz</vh></v>
<v t="ekr.20070603190713"><vh>@@button ch-add-xyz</vh></v>
</v>
<v t="ekr.20060904110922"><vh>OPML buttons</vh>
<v t="ekr.20060904111037.1"><vh>@@button opml-write</vh></v>
<v t="ekr.20060904111037"><vh>@@button opml-read</vh></v>
</v>
</v>
<v t="ekr.20061030041200"><vh>@@button iron-py @key=Alt-5</vh></v>
</v>
<v t="ekr.20070410063214"><vh>Commands</vh>
<v t="ekr.20060924180049"><vh>@@command clones-tab</vh>
<v t="ekr.20060924180049.1"><vh>class cloneNavigator</vh>
<v t="ekr.20060924180049.2"><vh>init</vh></v>
<v t="ekr.20060924180049.3"><vh>getAllClones</vh></v>
<v t="ekr.20060924180049.4"><vh>displayClones</vh>
<v t="ekr.20060924180049.5"><vh>&lt;&lt;Fill listbox with clone parent headlines&gt;&gt;</vh></v>
<v t="ekr.20060924180049.6"><vh>&lt;&lt;Goto selected position when listbox selection changes&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ekr.20080214091706.2"><vh>@@command ekr-command</vh></v>
</v>
<v t="ekr.20071026102420.3"><vh>Scripts</vh>
<v t="ekr.20071129103842"><vh>create-at-auto-nodes</vh></v>
<v t="ekr.20070223164126"><vh>Recursive import script</vh>
<v t="ekr.20070223164126.1"><vh>importFiles</vh></v>
<v t="ekr.20070223164126.2"><vh>importDir</vh></v>
<v t="ekr.20070223164126.3"><vh>createLastChildOf</vh></v>
</v>
<v t="ekr.20070517070854"><vh>run script in nullGui</vh></v>
<v t="ekr.20070517071510"><vh>run script with leoBridge</vh></v>
<v t="ekr.20080206055658"><vh>Script to print font settings</vh></v>
</v>
</v>
<v t="ekr.20071025193940" annotate="7d71002855087072696f7269747971015504393939397102550870726f67726573737103550071045509617263686574797065710568045502666771066804752e"><vh>@enabled-plugins</vh></v>
<v t="ekr.20080412082246.1"><vh>@bool fixedWindow = False</vh></v>
<v t="ekr.20070517160058.1"><vh>Prototypes</vh>
<v t="ekr.20071026102420"><vh>Garbage collection</vh>
<v t="ekr.20070504064616"><vh>gc.get_objects</vh></v>
<v t="ekr.20070504131950"><vh>getNewObjects</vh>
<v t="ekr.20070504134219"><vh>isLargeItem</vh></v>
</v>
</v>
<v t="ekr.20070127154855.1"><vh>Prototype of Java</vh>
<v t="ekr.20070127150459"><vh>@@button java</vh></v>
<v t="ekr.20070127150459.1"><vh>java-script</vh>
<v t="ekr.20070127154637"><vh>class TestApp</vh>
<v t="ekr.20070127152353"><vh>main</vh></v>
</v>
</v>
</v>
<v t="ekr.20070929154250"><vh>Prototype of jyleo </vh>
<v t="ekr.20070929154250.1"><vh>@@command jyleo @key=Alt+Key+7</vh></v>
<v t="ekr.20070930043027"><vh>first-jyleo-script</vh></v>
<v t="ekr.20070930055931"><vh>jyleo-script</vh></v>
<v t="ekr.20070930183037"><vh>@@thin jyleo.py</vh></v>
</v>
<v t="ekr.20070929062147"><vh>Prototype of networkx graph tools</vh>
<v t="ekr.20070929122956"><vh>Data trees</vh>
<v t="ekr.20070929114617"><vh>@graph-target</vh></v>
<v t="ekr.20070929072043"><vh>@networkx</vh>
<v t="ekr.20070929072506.1"><vh>@nodes</vh></v>
<v t="ekr.20070929072506"><vh>@edges</vh></v>
</v>
<v t="ekr.20070929070257"><vh>@graph</vh>
<v t="ekr.20070929070257.1"><vh>@node child1</vh>
<v t="ekr.20070929070632"><vh>@link ('ekr', '20070929070257', 2): @node child2</vh></v>
</v>
<v t="ekr.20070929070257.2"><vh>@node child2</vh>
<v t="ekr.20070929070632.1"><vh>@link ('ekr', '20070929070257', 1): @node child1</vh></v>
</v>
</v>
<v t="ekr.20070928095102"><vh>root-node</vh>
<v t="ekr.20070928095102.1"><vh>child1</vh></v>
<v t="ekr.20070928095102.2"><vh>child2</vh></v>
</v>
</v>
<v t="ekr.20070929122956.1"><vh>buttons</vh>
<v t="ekr.20070929070426"><vh>@@button print link</vh></v>
<v t="ekr.20070927175908"><vh>@@button leo2graph</vh></v>
<v t="ekr.20070929062147.1"><vh>@@button at-graph2graph</vh></v>
<v t="ekr.20070929062147.2"><vh>@@button at-networkx2graph</vh>
<v t="ekr.20070929081505"><vh>error</vh></v>
<v t="ekr.20070929074830"><vh>parse</vh></v>
<v t="ekr.20070929072506.2"><vh>parseNodes</vh></v>
<v t="ekr.20070929074830.1"><vh>parseEdges</vh></v>
</v>
<v t="ekr.20070929082546"><vh>@@button at-networkx2at-graph</vh>
<v t="ekr.20070929120541"><vh>createEdges</vh></v>
<v t="ekr.20070929120541.1"><vh>createNodes</vh></v>
<v t="ekr.20070929115302"><vh>createTree</vh></v>
<v t="ekr.20070929114410.2"><vh>error</vh></v>
<v t="ekr.20070929114410.3"><vh>parse</vh></v>
<v t="ekr.20070929114410.5"><vh>parseEdges</vh></v>
<v t="ekr.20070929114410.4"><vh>parseNodes</vh></v>
</v>
</v>
</v>
<v t="ekr.20070630142904"><vh>Prototype of pyrex</vh>
<v t="ekr.20070630142904.2"><vh>gcc build docs</vh></v>
<v t="ekr.20070630142904.3"><vh>pyrexc command-line options</vh></v>
<v t="ekr.20070630142904.4"><vh>@@file myModule.pyx</vh></v>
<v t="ekr.20070630142904.5"><vh>Make myModule.c</vh></v>
</v>
<v t="ekr.20071026082438"><vh>Prototype of user icons</vh>
<v t="ekr.20071026082914"><vh>Arrow target</vh></v>
<v t="ekr.20071026084348"><vh>Icon target</vh></v>
<v t="ekr.20071026174655"><vh>Small icons</vh>
<v t="ekr.20071026174231"><vh>small icons</vh></v>
</v>
<v t="ekr.20071026174414"><vh>Medium icons</vh>
<v t="ekr.20071026174331"><vh>medium icons 1</vh></v>
<v t="ekr.20071026174414.1"><vh></vh></v>
<v t="ekr.20071026174414.2"><vh>medium icons 2</vh></v>
</v>
<v t="ekr.20071026174655.1"><vh>Large icons</vh>
<v t="ekr.20071026174817"><vh></vh></v>
<v t="ekr.20071026174817.1"><vh></vh></v>
<v t="ekr.20071026174655.2"><vh>large icons 1</vh></v>
</v>
<v t="ekr.20071026082438.1"><vh>@@button delete all icons</vh></v>
<v t="ekr.20071026085244"><vh>@@button delete icons</vh></v>
<v t="ekr.20071026082438.2"><vh>@@button insert arrows</vh>
<v t="ekr.20071026082438.3"><vh>&lt;&lt; define event callbacks &gt;&gt;</vh></v>
</v>
<v t="ekr.20071026083020"><vh>@@button insert icons @key=Alt+5</vh>
<v t="ekr.20071026133046"><vh>getImageHeight</vh></v>
</v>
<v t="ekr.20071026170504"><vh>print sizes of all icons in various directories</vh>
<v t="ekr.20071026170511.1"><vh>getImageStats</vh></v>
</v>
<v t="ekr.20071026175552"><vh>print icon paths</vh></v>
</v>
<v t="ekr.20071026102420.2"><vh>Screen capture</vh>
<v t="ekr.20070528111805"><vh>FrontWindowCapture.pyw</vh></v>
<v t="ekr.20070609085533"><vh>@@url c:\prog\wink\ChangeViewMenu.htm</vh></v>
</v>
<v t="edreamleo.20080110083531"><vh>gtk stuff</vh>
<v t="edreamleo.20080110130828"><vh>createWindow</vh></v>
<v t="bob.20080111200056"><vh>@thin gtkOutlineDemo.py</vh></v>
</v>
<v t="ekr.20071124195608"><vh>Prototype of Leo in Ajax</vh>
<v t="ekr.20071126145358"><vh>To do</vh></v>
<v t="mcrowe.20060823083143.7"><vh>@@button Leo2DHTML</vh>
<v t="ekr.20071205142535"><vh>&lt;&lt; about LeoToHTML &gt;&gt;</vh></v>
<v t="ekr.20071205152904"><vh>&lt;&lt; define dhtml stuff &gt;&gt;</vh></v>
<v t="ekr.20071205160026"><vh>escape</vh></v>
<v t="ekr.20071210181436"><vh>writeAll</vh></v>
<v t="ekr.20071210181436.1"><vh>writeBody</vh></v>
<v t="ekr.20071210181436.2"><vh>writeHead</vh></v>
<v t="ekr.20071205144151.1"><vh>writeContents</vh></v>
<v t="ekr.20071205144151"><vh>writePreamble</vh></v>
<v t="ekr.20071207164625"><vh>writePostamble</vh></v>
</v>
<v t="ekr.20071124153244" tnodeList="ekr.20071124153244"><vh>@file server.py</vh></v>
<v t="ekr.20071124155034" tnodeList="ekr.20071124155034"><vh>@file hello.html</vh></v>
<v t="ekr.20071124160243" tnodeList="ekr.20071124160243,ekr.20071210150314.2,ekr.20071210150314.6,ekr.20071210145720,ekr.20071210145720.1,ekr.20071210145720.2,ekr.20071210155555,ekr.20071210150314.7"><vh>@file cgi-bin/edward.py</vh>
<v t="ekr.20071210150314.2"><vh>&lt;&lt; define dhtml stuff &gt;&gt;</vh></v>
<v t="ekr.20071210150314.6"><vh>escape</vh></v>
<v t="ekr.20071210145720"><vh>print_all</vh></v>
<v t="ekr.20071210145720.1"><vh>print_body</vh></v>
<v t="ekr.20071210145720.2"><vh>print_head</vh></v>
<v t="ekr.20071210155555"><vh>print_leo_dot_js</vh></v>
<v t="ekr.20071210150314.7"><vh>print_tree</vh></v>
</v>
<v t="ekr.20071210102626"><vh>@thin cgi-bin/leo.js</vh></v>
<v t="ekr.20071210125008"><vh>@@thin jqueryTest.html</vh></v>
</v>
<v t="ekr.20080118100049"><vh>cairo</vh></v>
<v t="ekr.20080128143841"><vh>test of ekrProj</vh></v>
<v t="ekr.20080127215337"><vh>package-script</vh></v>
<v t="ekr.20080503202744.3"><vh>Rope</vh></v>
</v>
<v t="ekr.20070315071830"><vh>Test files (do not delete)</vh>
<v t="ekr.20070227104713"><vh>@thin leoBridgeTest.py</vh></v>
<v t="ekr.20070626153912"><vh>@thin leoDynamicTest.py</vh></v>
</v>
<v t="ekr.20071105085941"><vh>Tests</vh>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
<v t="ekr.20070722102255"><vh>@image C:\prog\tigris-cvs\leo\Icons\leo_inst.ico</vh></v>
<v t="ekr.20071030094853"><vh>Java import tests</vh>
<v t="ekr.20071030103209"><vh>Scripts: print/add/disable all java files in the from-victor directory</vh>
<v t="ekr.20071030103909"><vh>files</vh></v>
</v>
<v t="ekr.20071110092702.1"><vh>@@auto c:\prog\tigris-cvs\leo\test\r-41-framework\adminPermission.java</vh></v>
<v t="ekr.20071030103258"><vh>@@auto c:\prog\test\from-victor\AdminPermission.java</vh></v>
<v t="ekr.20071030103909.19"><vh>@@auto c:\prog\test\from-victor\AllServiceListener.java</vh></v>
<v t="ekr.20071030104140.23"><vh>@@auto c:\prog\test\from-victor\Bundle.java</vh></v>
<v t="ekr.20071030104140.22"><vh>@@auto c:\prog\test\from-victor\BundleActivator.java</vh></v>
<v t="ekr.20071030104140.21"><vh>@@auto c:\prog\test\from-victor\BundleContext.java</vh></v>
<v t="ekr.20071030104140.20"><vh>@@auto c:\prog\test\from-victor\BundleEvent.java</vh></v>
<v t="ekr.20071030104140.19"><vh>@@auto c:\prog\test\from-victor\BundleListener.java</vh></v>
<v t="ekr.20071030104140.18"><vh>@@auto c:\prog\test\from-victor\BundlePermission.java</vh></v>
<v t="ekr.20071030104140.17"><vh>@@auto c:\prog\test\from-victor\Configurable.java</vh></v>
<v t="ekr.20071030104140.16"><vh>@@auto c:\prog\test\from-victor\Constants.java</vh></v>
<v t="ekr.20071030104140.15"><vh>@@auto c:\prog\test\from-victor\Filter.java</vh></v>
<v t="ekr.20071030104140.14"><vh>@@auto c:\prog\test\from-victor\FrameworkEvent.java</vh></v>
<v t="ekr.20071030104140.13"><vh>@@auto c:\prog\test\from-victor\FrameworkListener.java</vh></v>
<v t="ekr.20071030104140.12"><vh>@@auto c:\prog\test\from-victor\FrameworkUtil.java</vh></v>
<v t="ekr.20071030104140.11"><vh>@@auto c:\prog\test\from-victor\InvalidSyntaxException.java</vh></v>
<v t="ekr.20071030104140.10"><vh>@@auto c:\prog\test\from-victor\PackagePermission.java</vh></v>
<v t="ekr.20071030104140.9"><vh>@@auto c:\prog\test\from-victor\ServiceEvent.java</vh></v>
<v t="ekr.20071030104140.8"><vh>@@auto c:\prog\test\from-victor\ServiceFactory.java</vh></v>
<v t="ekr.20071030104140.7"><vh>@@auto c:\prog\test\from-victor\ServiceListener.java</vh></v>
<v t="ekr.20071030104140.6"><vh>@@auto c:\prog\test\from-victor\ServicePermission.java</vh></v>
<v t="ekr.20071030104140.5"><vh>@@auto c:\prog\test\from-victor\ServiceReference.java</vh></v>
<v t="ekr.20071030104140.4"><vh>@@auto c:\prog\test\from-victor\ServiceRegistration.java</vh></v>
<v t="ekr.20071030102858.3"><vh>@@auto c:\prog\test\from-victor\shortBundleException.java</vh></v>
<v t="ekr.20071030104140.3"><vh>@@auto c:\prog\test\from-victor\shortBundleException.java</vh></v>
<v t="ekr.20071030104140.2"><vh>@@auto c:\prog\test\from-victor\SynchronousBundleListener.java</vh></v>
<v t="ekr.20071030104140.1"><vh>@@auto c:\prog\test\from-victor\Version.java</vh></v>
<v t="ekr.20071019073617"><vh>@@auto AdminPermission.java</vh></v>
</v>
<v t="ekr.20071114053401"><vh>@@file minimimal-at-thin-test.py</vh></v>
<v t="ekr.20071113100456"><vh>color_markup test</vh></v>
<v t="ekr.20071114071901"><vh>@url http://webpages.charter.net/edreamleo/front.html</vh></v>
<v t="ekr.20071115061426"><vh>@rst preformat-test.html</vh>
<v t="ekr.20071115061426.1"><vh>@rst-no-head links</vh></v>
<v t="ekr.20071115061426.2"><vh>Before section</vh></v>
<v t="ekr.20071115061426.3"><vh>@rst-preformat</vh></v>
<v t="ekr.20071115061535.1"><vh>After section</vh></v>
<v t="ekr.20071115061426.12"><vh>@rst-no-head end stuff</vh></v>
</v>
<v t="ekr.20071117152614"><vh>Mini test of at.putBuffered</vh></v>
<v t="ekr.20071127232245"><vh>lockout test</vh></v>
<v t="ekr.20071129090337"><vh>perl problem</vh></v>
<v t="ekr.20071201065815"><vh>@@auto at-auto-test.py</vh>
<v t="ekr.20071201073632"><vh>class Index</vh></v>
<v t="ekr.20071201073632.1"><vh>main</vh></v>
</v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
<v t="ekr.20080108091619"><vh>Convenience methods for icons</vh>
<v t="ekr.20080108092210"><vh>@@button insert-icon</vh></v>
<v t="ekr.20080108092210.1"><vh>@@button delete-icons</vh></v>
</v>
<v t="ekr.20071114092813"><vh>Tests of user icons</vh>
<v t="ekr.20071114092813.1"><vh>Arrow target</vh></v>
<v t="ekr.20071114092813.2"><vh>Icon target</vh></v>
<v t="ekr.20071114092813.3"><vh>Small icons</vh>
<v t="ekr.20071114092813.4"><vh>small icons</vh></v>
</v>
<v t="ekr.20071114092813.5"><vh>Medium icons</vh>
<v t="ekr.20071114092813.6"><vh>medium icons 1</vh></v>
<v t="ekr.20071114092813.7"><vh></vh></v>
<v t="ekr.20071114092813.8"><vh>medium icons 2</vh></v>
</v>
<v t="ekr.20071114092813.9"><vh>Large icons</vh>
<v t="ekr.20071114092813.10"><vh></vh></v>
<v t="ekr.20071114092813.11"><vh></vh></v>
<v t="ekr.20071114092813.12"><vh>large icons 1</vh></v>
</v>
<v t="ekr.20071114092813.13"><vh>@@button delete all icons</vh></v>
<v t="ekr.20071114092813.14"><vh>@@button delete icons</vh></v>
<v t="ekr.20071114092813.15"><vh>@@button insert arrows</vh>
<v t="ekr.20071114092813.16"><vh>&lt;&lt; define event callbacks &gt;&gt;</vh></v>
</v>
<v t="ekr.20071114092813.17"><vh>@@button insert icons @key=Alt+5</vh>
<v t="ekr.20071114092813.18"><vh>getImageHeight</vh></v>
</v>
<v t="ekr.20071114092813.19"><vh>print sizes of all icons in various directories</vh>
<v t="ekr.20071114092813.20"><vh>getImageStats</vh></v>
</v>
<v t="ekr.20071114092813.21"><vh>print icon paths</vh></v>
<v t="ekr.20071114084053"><vh>From Icons/Tango/16x16/emotes</vh></v>
<v t="ekr.20071116113202"><vh>Body text contains all icons in Icons/Tango</vh></v>
</v>
<v t="ekr.20080211085709"><vh>filter</vh></v>
<v t="ekr.20080211090819"><vh>@path c:\prog\test</vh>
<v t="ekr.20080210201921"><vh>@@auto pascalTest.pas</vh>
<v t="ekr.20080211172530"><vh>pascalTest declarations</vh></v>
<v t="ekr.20080211172530.1"><vh>interface</vh></v>
</v>
</v>
<v t="ekr.20080212035042"><vh>@@auto c:\prog\test\django-tests.py</vh>
<v t="ekr.20080212114457"><vh>django-tests declarations</vh></v>
</v>
<v t="ekr.20080223084414"><vh>testing mixture of keyword args and *args arg</vh></v>
<v t="ekr.20080229140820"><vh>test minibuffer command with args</vh></v>
<v t="ekr.20080413195706.1"><vh>PyDispatcher</vh></v>
<v t="ekr.20080502120646.1"><vh>@@asis C:\leo.repo\trunk\leo\test\test.php</vh></v>
<v t="ekr.20080503195928.1"><vh>@@auto C:\leo.repo\trunk\leo\test\test.php</vh></v>
</v>
<v t="ekr.20080531080812.1"><vh>tracer test</vh></v>
<v t="ekr.20080531113507.1" a="E"><vh>mxTextTools test</vh>
<v t="ekr.20080531113507.2"><vh>&lt;&lt; define TextTools stuff &gt;&gt;</vh></v>
<v t="ekr.20080531113507.3"><vh>&lt;&lt; define s &gt;&gt;</vh></v>
<v t="ekr.20080531113507.4"><vh>printItem</vh></v>
</v>
<v t="ekr.20080531120008.1"><vh>output from mxTextTools test</vh></v>
<v t="ekr.20080531131542.3"><vh>&lt;&lt; define s &gt;&gt;</vh></v>
<v t="ekr.20080531131542.1" a="E"><vh>mxTextTools test (for derived files)</vh>
<v t="ekr.20080531141227.1"><vh>&lt;&lt; define s &gt;&gt;</vh></v>
<v t="ekr.20080531131542.2"><vh>&lt;&lt; define scan4 tables &gt;&gt;</vh></v>
<v t="ekr.20080531131542.4"><vh>printItem</vh></v>
</v>
<v t="ekr.20080531140301.1"><vh>output from second test</vh></v>
</vnodes>
<tnodes>
<t tx="edreamleo.20080110083531">import gtk

@others

createWindow()

gtk.main()</t>
<t tx="edreamleo.20080110130828">def createWindow():

    def onKeyUp(w,event):
        g.trace(event.state,event.keyval,event.string)

    window = gtk.Window()
    window.set_title("Hello World")

    # button = gtk.Button("-----Press me-----")
    # button.connect("clicked",onButtonPressed)
    # window.add(button)

    splitter1 = gtk.VPaned()
    window.add(splitter1)

    tree = gtk.TextView()
    buf1 = tree.get_buffer()
    buf1.set_text("tree")

    body = gtk.TextView()
    buf2 = body.get_buffer()
    buf2.set_text("body")
    body.connect("key_release_event",onKeyUp)

    splitter1.add(tree)
    splitter1.add2(body)

    window.connect("delete-event",gtk.main_quit)
    window.show_all()
    return window
</t>
<t tx="ekr.20041001211817">import os

print os.path.exists(os.path.normpath("C:\\Progra~1\\Eclipse"))</t>
<t tx="ekr.20060427103457"># Open leoSettings.leo
c.openLeoSettings()</t>
<t tx="ekr.20060809084033">'''A script to convert calls to g.es to g.et, and raw strings s to g._(s)'''

__version__ = 0.2
&lt;&lt; version history &gt;&gt;

@others

trace = False # For debugging.
doReplace = True # True: actually replace the body text.

if not doReplace: g.es_print('-' * 40)
c.beginUpdate()
try:
    u = c.undoer
    undoType = 'Convert g.es'
    u.beforeChangeGroup (p,undoType)
    for p in c.currentPosition().self_and_subtree_iter():
        replace(p)
    u.afterChangeGroup(p,undoType,reportFlag=True)
finally:
    c.endUpdate()</t>
<t tx="ekr.20060809090508"># Based on leoImport.scanPythonText.
def replace(p):
    '''Replace g.es by g.et and strings s by g._(s)'''
    s = p.bodyString()
    if not s.strip(): return
    result = [] ;  i = 0 ; count = 0
    while i &lt; len(s):
        progress = j = i
        ch = s[i]
        if ch == '\n' or ch == '\r':
            i = g.skip_nl(s,i)
            result.append(s[j:i])
        elif ch == '#':
            i = g.skip_to_end_of_line(s,i)
            result.append(s[j:i])
        elif ch == '"' or ch == "'":
            &lt;&lt; handle string &gt;&gt;
        elif g.is_c_id(ch):
            if g.match_word(s,i,'g.es'):
                &lt;&lt; handle g.es &gt;&gt;
            else:
                i = g.skip_c_id(s,i)
                result.append(s[j:i])
        else:
            i += 1
            result.append(s[j:i])
        assert(progress &lt; i)
    if count:
        result = ''.join(result)
        if doReplace:
            undoData = u.beforeChangeNodeContents(p)
            p.setBodyStringOrPane(result)
            p.v.t.setDirty()
            u.afterChangeNodeContents(p,'Change Body',undoData)
        else:
            g.trace('result...\n',result)</t>
<t tx="ekr.20060809091749.72">i = g.skip_python_string(s,i)
s2 = s[j:i].strip()
result.append('g._(%s)' % s2)
if trace: g.trace('string:',s2)
count += 1</t>
<t tx="ekr.20060809091749.73">i += 4 ; k1 = i
i = g.skip_ws(s,i)
found = False
if g.match(s,i,'('):
    k2 = i
    k3 = g.skip_parens(s,i)
    if g.match(s,k3,')'):
        # Only translate if there are exactly one string in the parens.
        s2 = s[k2+1:k3]
        if (
            s2 and s2.count(',') == 0 and
            (s2.count('"') == 2 or s2.count("'") == 2)
        ):
            i = k3
            if trace: g.trace('call g.es:',g.get_line(s,i))
            result.append('g.et')
            result.append(s[k1:i])
            count += 1 ; found = True
if not found:
    result.append(s[j:i])</t>
<t tx="ekr.20060809092023"></t>
<t tx="ekr.20060809103738">def test1():
    
    g.es('abc')
    g.es('abc',xyz)
    g.es(xyz)</t>
<t tx="ekr.20060809103738.1">def test2():

    x = 'abc' + 'xyz'
    y = abc</t>
<t tx="ekr.20060809104405">@nocolor
@
0.1 EKR: Initial version.
0.2 EKR: Support doReplace and made script fully undoable.</t>
<t tx="ekr.20060814111542"># Add an editor to the body pane.
c.frame.body.addEditor()</t>
<t tx="ekr.20060904110922"></t>
<t tx="ekr.20060904111037">if hasattr(c,'opmlCommands'):
    c.opmlCommands.readOpmlCommand()
else:
    g.es_print('opml plugin not loaded')</t>
<t tx="ekr.20060904111037.1">if hasattr(c,'opmlCommands'):
    c.opmlCommands.writeOpmlCommand()
else:
    g.es_print('opml plugin not loaded')</t>
<t tx="ekr.20060918083159">put = g.es_print

for p in c.allNodes_iter():

    if hasattr(p.v,"unknownAttributes"):
        put("deleting v.unknownAttributes:",
            p.headString(),
            g.listToString(p.v.unknownAttributes.keys()))
        delattr(p.v,"unknownAttributes")

    if hasattr(p.v.t,"unknownAttributes"):
        put("deleting t.unknownAttributes:",
            p.headString(),
            g.listToString(p.v.t.unknownAttributes.keys()))
        delattr(p.v.t,"unknownAttributes")
           
put('done') 
c.redraw()</t>
<t tx="ekr.20060924180049">@
Ever have a clone that is difficult to understand outside the context of its
original parent? Here's some code to help. It displays the headline of the
current node plus the headlines of all the parents of all the clones of the
current node. Selecting a displayed parent headline moves the current node to
the corresponding clone in the outline.

The idea is to be able to quickly see the context of all the clones of the
current node and to be able to easily navigate from one clone instance to the
next.
@c

@others
c.cn = cloneNavigator(c)
c.cn.displayClones(c)
</t>
<t tx="ekr.20060924180049.1">class cloneNavigator:
    '''
       Displays the headline of the current node plus the headlines of
       all the parents of all the clones of the current node.  Selecting
       a displayed parent headline moves the current node to the
       corresponding clone in the outline.
       
       The idea is to be able to quickly see the context of all the clones
       of the current node and to be able to easily navigate from one clone
       instance to the next.
    '''
    @others</t>
<t tx="ekr.20060924180049.2">def __init__ (self,c):
    self.c = c
    import Tkinter as Tk
    if 0:
        f = Tk.Toplevel()
    else:
        log = c.frame.log
        log.selectTab('Clones')
        f = log.tabFrame
        for w in f.winfo_children():
            w.destroy()
    
    # Create and pack empty label and listbox
    self.title = Tk.Label(f)
    self.title.pack(anchor="nw")
    self.lb = Tk.Listbox(f)
    self.lb.pack(expand=1,fill="both")</t>
<t tx="ekr.20060924180049.3">def getAllClones(self,p):
    c = self.c
    def clonesOf(p,p1=p):
        return p.v.t == p1.v.t
    return filter(clonesOf, c.allNodes_iter(copy=True))</t>
<t tx="ekr.20060924180049.4">def displayClones(self,c):
    '''Displays the parent headline for all the clones of the current position'''
    cp = c.currentPosition()
    
    # "Title" is the headline of the current node
    self.title.configure(text=cp.headString())
    
    # Initialize listbox and clone list
    clones = self.getAllClones(cp)
    self.lb.delete(0,self.lb.size()-1)
    
    &lt;&lt;Fill listbox with clone parent headlines&gt;&gt;    
    &lt;&lt;Goto selected position when listbox selection changes&gt;&gt;
</t>
<t tx="ekr.20060924180049.5"># Add the headlines of all the clone parents to the listbox
for p in clones:
    if p.parent():
        text = p.parent().headString()
    else:
        text = "&lt;root&gt;"
    self.lb.insert(self.lb.size(),text)
    
    # Initial listbox selection corresponds to current position
    if p.v == cp.v:
        self.lb.selection_set(self.lb.size()-1)</t>
<t tx="ekr.20060924180049.6"># Callback for when a listbox entry is selected            
def gotoSelectedPosition(event,lb=self.lb,c=c,positions=clones):
    idx = int(lb.curselection()[0])
    p = positions[idx]
    c.frame.tree.expandAllAncestors(p)
    c.selectPosition(p)
    return
self.lb.bind(g.angleBrackets("ListboxSelect"), gotoSelectedPosition)</t>
<t tx="ekr.20061030041200">import os, sys

if 1: # Executes Iron Python in the console. (But not from the tutorials directory).
    path = r'c:\prog\IronPython-1.0.1\ipy.exe'
    args = ['-i']
        
    if 1: # Use present environment.
        os.spawnv(os.P_NOWAIT, path, args)
    else: # Use a pristine environment.
        os.spawnve(os.P_NOWAIT, path, args, os.environ)</t>
<t tx="ekr.20061030041356"></t>
<t tx="ekr.20061030041450"></t>
<t tx="ekr.20070115092430"># Invoke winpdb for general scripts **not** containing the predefined g, p or d constants.

# This is essentially the same as using the debug command.

import os,subprocess,sys

# Important: scriptFile2 must be different from scriptFile.
filename = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','scriptFile2'))
f = open(filename,'w') 
f.write(p.bodyString()) 
f.close() 
python = sys.executable
pythonDir = g.os_path_dirname(python) 
#winpdb = g.os_path_join(pythonDir,'Scripts','_winpdb.py') # For older versions of winpdb.
winpdb = g.os_path_join(pythonDir,'Lib','site-packages','winpdb.py') # For version 1.1.2 and newer.
os.chdir(g.app.loadDir)
cmdline = '%s %s -t %s' % (python,winpdb,filename) 
subprocess.Popen(cmdline)
</t>
<t tx="ekr.20070127150459"># Execute the body of the node whose headline is 'java-script' with java

import os

javaBat  = r'c:\java\j.bat'
javaTest = r'c:\java\TestApp.java'
p = g.findNodeAnywhere(c,'java-script')

if p:
    script = c.atFileCommands.writeFromString(
        p.copy(),p.bodyString(),
        forcePythonSentinels=False,
        useSentinels=False) # useSentinels=True also works.
    script = script.replace("\r\n","\n") # Use brute force.
    file(javaTest,'w').write(script)
    os.system(javaBat)
else:
    print 'Node not found: java-script'
</t>
<t tx="ekr.20070127150459.1">@language java // Leo directives will be removed.
@others
</t>
<t tx="ekr.20070127152353">public static void main(String[] args) {
    // comments
    System.out.println("main");
}
</t>
<t tx="ekr.20070127154637">class TestApp {
    @others
}
</t>
<t tx="ekr.20070127154855.1"></t>
<t tx="ekr.20070223164126"># An example of running this script:
    
import os

@others

types = (".py",) #,".c",".html",".txt")

dir = r'C:\prog\Notabene'

c.beginUpdate()
try:
    importFiles(dir,types,recursive=True)
finally:
    c.endUpdate()

g.es("done",color="blue")
</t>
<t tx="ekr.20070223164126.1">def importFiles (dir,type=None,kind="@file",recursive=False):
    
    v = c.currentVnode()

    # Check the params.
    if kind != "@file" and kind != "@root":
        g.es("kind must be @file or @root: " + kind)
        return

    if not g.os_path_exists(dir):
        g.es("directory does not exist: " + dir)
        return
    
    c.beginUpdate()
    try:
        root = createLastChildOf(v,"imported files")
        try:
            importDir (dir,type,kind,recursive,root)
            root.contract()
        except:
            g.es_exception()
    finally:
        c.endUpdate()</t>
<t tx="ekr.20070223164126.2">def importDir (dir,types,kind,recursive,root):

    g.es("dir: " + dir,color="blue")
    
    try:
        files = os.listdir(dir)
        files2 = [] ; dirs =[]
        for f in files:
            path = g.os_path_join(dir,f)
            if g.os_path_isfile(path):
                name, ext = g.os_path_splitext(f)
                if not types or ext in types:
                    files2.append(path)
            elif recursive:
                dirs.append(path)
        if len(files2) &gt; 0 or len(dirs) &gt; 0:
            child = createLastChildOf(root,dir)
            c.selectVnode(child)
        if len(files2) &gt; 0:
            c.importCommands.importFilesCommand(files2,kind)
        if len(dirs) &gt; 0:
            dirs.sort()
            for dir in dirs:
                importDir(dir,types,kind,recursive,child)
    except:
        g.es("exception in importFiles script")
        g.es_exception()
</t>
<t tx="ekr.20070223164126.3">def createLastChildOf (v,headline):
    
    child = v.insertAsLastChild()
    child.initHeadString(headline)
    return child
</t>
<t tx="ekr.20070224123943"></t>
<t tx="ekr.20070305085403">For MacOS X (darwin) the following are typical defaults:

vim_cmd = /Applications/gvim.app/Contents/MacOS/gvim --servername LEO
vim_exe = /Applications/gvim.app/Contents/MacOS/gvim
</t>
<t tx="ekr.20070305085403.1"></t>
<t tx="ekr.20070305085403.2"></t>
<t tx="ekr.20070315071830"># Do not remove these nodes.</t>
<t tx="ekr.20070410063214"></t>
<t tx="ekr.20070416075121">g.app.gui.set_focus(c,w)</t>
<t tx="ekr.20070503085527"></t>
<t tx="ekr.20070504064616">import gc,types

def printDict(d):
    keys = d.keys() ; keys.sort()
    print '-' * 30
    for key in keys:
        n = d.get(key)
        print '%+6d %s' % (n,key)

d = {} ; d2 = {}
for obj in gc.get_objects():
    t = type(obj)
    r = repr(t)
    n = d.get(r,0)
    d[r] = n + 1
    if t == types.InstanceType:
        t = obj.__class__
        r = repr(t)
        n = d2.get(r,0)
        d2[r] = n + 1
            
printDict(d)
printDict(d2)

</t>
<t tx="ekr.20070504080933">This option applies to directories specified in filenames in all kinds of @file trees, and to filenames specified in the @path directive.

True:  Leo attempts to create directories if they do not exist.
False: Leo never attempts to create directories.</t>
<t tx="ekr.20070504131950">import gc,types

@others

try:                    d = g.app.idDict
except AttributeError:  d = g.app.idDict = {}

new = {}
for obj in gc.get_objects():
    oldObj = d.get(id(obj))
    if oldObj is None:
        new[id(obj)] = obj
        
keys = new.keys()
print '----- %d new objects' % len(keys)

if len(keys) &lt; 200:
    keys.sort()
    n = 0
    for key in keys:
        n += 1
        obj = new.get(key)
        print '%3d' % (n),key,type(obj),
        if isLargeItem(obj):
            print '***** large item'
        else:
            print repr(obj)
    print '====='
    
for key in keys:
    d[key] = new.get(key)</t>
<t tx="ekr.20070504134219">def isLargeItem (obj):
    
    if (
        type(obj) == types.CodeType or
        type(obj) == types.ListType and len(obj) &gt; 500 or
        type(obj) == types.TupleType and len(obj) &gt; 500
    ):
        return True
    
    if type(obj) == types.DictType:
        n = 0 ; keys = obj.keys()
        if len(keys) &gt; 100: return True
        for key in keys:
            val = obj.get(key)
            # if isLargeItem(val): return True
            n += len(repr(key))
            n += len(repr(val))
            if n &gt; 1000: return True
        return False
            
    return len(repr(obj)) &gt; 1000</t>
<t tx="ekr.20070515073111">print '=' * 50</t>
<t tx="ekr.20070517070854">import leoGui
oldGui = g.app.gui
g.app.gui = leoGui.nullGui(guiName='testGui')
try:
    fileName = g.os_path_abspath(g.os_path_join(
        g.app.loadDir,'..','doc','LeoDocs.leo'))
    ok,frame = g.openWithFileName(fileName,old_c=c)
    if ok:
        c2 = frame.c
        for p in c2.allNodes_iter():
            print '.'*p.level(),p.headString()
        g.app.closeLeoWindow(frame)
finally:
    g.app.gui = oldGui</t>
<t tx="ekr.20070517071510">import leoBridge

path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))

if 0: # This can not be run locally: leoBridge.controller starts a Tk event loop.

    controller = leoBridge.controller(gui='nullGui')
    g = controller.globals()
    c = controller.openLeoFile(path)
    n = 0
    for p in c.allNodes_iter():
        n += 1
    print '%d nodes in %s' % (n,path)
    # g.app.closeLeoWindow(c.frame)</t>
<t tx="ekr.20070517160058.1"></t>
<t tx="ekr.20070528111805"># FrontWindowCapture.pyw
# Version 0.1
# Date    20070526
# Author  Roger Erens (roger AT erens-krekels.net)
"""
        Purpose:
        Capture the image of the front-most window into a fixed-name
        (_front_window), max-size (default MAX_WIDTH is 640 pixels), and
        fixed-format (PNG) file that can easily be used when creating
        documentation for an application on a wiki or in some HTML-docs.
        This script does _not_ copy the captured image to the clipboard (handy
        when creating MS Word or OpenOffice documents) since MS Windows already
        has ALT-PRTSCR to do so.

        Dependencies:
        Fairly recent versions of Python, wxPython, and PIL should be installed

        Start:
        Double click FrontWindowCapture.pyw; an icon appears in the Task Bar (lower right of
        the screen).

        Use:
        Bring a window to the front and then left-click on the
        icon in the Task Bar. A file named '_front_window.png' will be saved
        in the current directory.
        A pictures wider than MAXWIDTH is scaled down in order to make it easily
        used in wikis or HTML-documentation.
        Usually, human intelligence is needed to rename that file; this is also
        why this script does not copy the image to the clipboard.

        End:
        Close the application by right-clicking the icon in the Task Bar.

        Note:
        Make sure that your system is fast enough to find the frontmost
        window. That is, when a virusscanner is running or virtual memory is
        low, this script will choke. You can see what happens by enabling the
        print statements and running this script from a console (change the
        extension from .pyw to .py).
"""
import wx
import sys
import win32ui
import win32gui
import win32con
import time
from PIL import Image, ImageGrab

Image.init()

MAX_WIDTH = 640
BLINK_STATE = 0

class TaskBarApp(wx.Frame):
    def __init__(self, parent, id, title):
        wx.Frame.__init__(self, parent, -1, title, size = (1, 1),
            style=wx.FRAME_NO_TASKBAR| wx.NO_FULL_REPAINT_ON_RESIZE)
        self.tbicon = wx.TaskBarIcon()
        icon = wx.Icon('LeoApp16.ico', wx.BITMAP_TYPE_ICO)
        self.tbicon.SetIcon(icon, 'Click to capture the foremost window')
        self.tbicon.Bind(wx.EVT_TASKBAR_LEFT_UP, self.OnTaskBarLeftClick)
        self.tbicon.Bind(wx.EVT_TASKBAR_RIGHT_UP, self.OnTaskBarRightClick)
        self.Show(True)

    def OnTaskBarLeftClick(self, evt):

        self.FlashIcon(evt)

        def _MyCallback(hwnd, extra ):
            extra.append(hwnd)

        windows = []
        win32gui.EnumWindows(_MyCallback, windows)

        winList = []
        for i in windows:
            if win32gui.IsWindowVisible(i):
                winList.append(i)
                #print i

        win32gui.SetForegroundWindow(winList[1])    # found by trial and error
                                                    # that I need the second
                                                    # window from the list
        time.sleep(0.1)  # give the previous command some time to finish

        fgwindow = win32ui.GetForegroundWindow()
        #print "(C)lick!"

        bbox = fgwindow.GetWindowRect()
        img = ImageGrab.grab( bbox)
        width = bbox[2] - bbox[0]
        if width &gt; MAX_WIDTH:
            coeff = MAX_WIDTH * 1. / width
            height = bbox[3] - bbox[1]
            newHeight = int( coeff * height)
            #print width, height, "scaled down to", MAX_WIDTH, newHeight
            img = img.resize((MAX_WIDTH,newHeight), Image.ANTIALIAS)
        img = img.convert("P", dither=Image.NONE,
                              palette=Image.ADAPTIVE, colors=256)
        img.save("_front_window.png", "PNG", optimize=1)
        #img.show() # show the image in an image viewer

        self.FlashIcon(evt)

    def OnTaskBarRightClick(self, evt):
        #print "Auta..." # that's about it...
        self.tbicon.Destroy()
        self.Close(True)
        wx.GetApp().ProcessIdle()

    def FlashIcon(self, evt):
        global BLINK_STATE
        if BLINK_STATE == 0:
            icon = wx.Icon('LeoApp16lick.ico', wx.BITMAP_TYPE_ICO)
            self.tbicon.SetIcon(icon, 'Window is being captured...')
            BLINK_STATE = 1
            return
        else:
            icon = wx.Icon('LeoApp16.ico', wx.BITMAP_TYPE_ICO)
            self.tbicon.SetIcon(icon, 'Click to capture the foremost window')
            BLINK_STATE = 0
            return

class MyApp(wx.App):
    def OnInit(self):
        frame = TaskBarApp(None, -1, ' ')
        frame.Center(wx.BOTH)
        frame.Show(False)
        return True

def main():
    app = MyApp(0)
    app.MainLoop()

if __name__ == '__main__':
    main()

""" CREDITS

    Thanks to
    Roger Upole:
    http://groups.google.com/group/comp.lang.python/
    browse_thread/thread/ff39ec79f7c3248a/
    e600c892772bf52a?lnk=gst&amp;q=screen+capture&amp;rnum=6#e600c892772bf52a
    for his time.sleep() Aha (This took me a year and a half to note!)

    Christian Wyglendowski, Werner Bruhin, and Xavier Morel for the
    http://wiki.wxpython.org/index.cgi/FlashingTaskbarIcon
    discussion

    'Rob aspn at msolutionsinc.com '
    http://mail.python.org/pipermail/python-win32/2003-June/001129.html
    for his suggestion to find out the foremost window

    and of course the usual suspects that created/maintain
    wxPython,
    PIL,
    pywin32,
    LEO,
    gvim,
    and Python itself.
"""</t>
<t tx="ekr.20070529172620"></t>
<t tx="ekr.20070529173219"></t>
<t tx="ekr.20070529173219.1"></t>
<t tx="ekr.20070530072113">c.chapterController.hideChapters()</t>
<t tx="ekr.20070530072113.1">c.chapterController.showChapters()</t>
<t tx="ekr.20070531102813"></t>
<t tx="ekr.20070531103315">c.abbrevCommands.dynamicExpansion(event=None)</t>
<t tx="ekr.20070531104646">c.abbrevCommands.dynamicCompletion()</t>
<t tx="ekr.20070603175054">cc = c.chapterController
cc.selectChapterByName('abc')</t>
<t tx="ekr.20070603175054.1">cc = c.chapterController
cc.selectChapterByName('main')</t>
<t tx="ekr.20070603190713">cc = c.chapterController
cc.createChapterByName('xyz')</t>
<t tx="ekr.20070603190713.1">cc = c.chapterController
cc.selectChapterByName('xyz')</t>
<t tx="ekr.20070603190944"></t>
<t tx="ekr.20070603190944.1"></t>
<t tx="ekr.20070604095313"></t>
<t tx="ekr.20070604100125"></t>
<t tx="ekr.20070609085533"></t>
<t tx="ekr.20070630142904"></t>
<t tx="ekr.20070630142904.2">@nocolor

To build your module using GCC is a three step process on Unix:

1. Use Pyrex to translate mymodule.pyx to mymodule.c::

    python pyrexc mymodule.pyx

mymodule.pyx is the name of the Pyrex module you are writing.

2. Compile mymodule.c to mymodule.o::

    gcc -c -fPIC -I/usr/include/python2.2/ mymodule.c

-c  Produces a .o file instead of an executable. 
-fPIC Produces position independent code, so we can dynamically link against it later. 
-I/usr/include/python2.2/ is the location of the Python 2.2 include file.
 The location of your Python include file may differ from /usr/include/python2.2/. 

3 Link the mymodule.o into a mymodule.so::
    
    gcc -shared mymodule.o -lxosd -o mymodule.so

-shared produces a shared-object file, instead of an executable. 
-lxosd links against a C-library, with the name of the library given as the argument. 
</t>
<t tx="ekr.20070630142904.3">@nocolor

The pyrexc command supports the following options:

  Short Long              Argument    Description
  ----- ----              --------    -----------
  -v    --version                     Display version number of pyrex compiler
  -l    --create-listing              Write error messages to a .lis file
  -I    --include-dir     &lt;directory&gt; Search for include files in named 
                                      directory (may be repeated)
  -o    --output-file     &lt;filename&gt;  Specify name of generated C file (only
                                      one source file allowed if this is used)

Anything else is taken as the name of a Pyrex source file and compiled
to a C source file. Multiple Pyrex source files can be specified
(unless -o is used), in which case each source file is treated as the
source of a distinct extension module and compiled separately to
produce its own C file.
</t>
<t tx="ekr.20070630142904.4">def spam(int i, char *s):
    if 1:
        print i,s</t>
<t tx="ekr.20070630142904.5"># Use pyrexc to create myModule.c from myModule.pyx.

import os,sys
python = sys.executable
theFile = r'C:\prog\tigris-cvs\leo\test\myModule.pyx'
pyrexc = r'c:\prog\Pyrex-0.9.6.4\pyrexc.py'
os.system(r'%s %s %s' % (python,pyrexc,theFile))

# Use pyrex/Demos/setup.py to create module on Linux.</t>
<t tx="ekr.20070701090143"></t>
<t tx="ekr.20070722102255"></t>
<t tx="ekr.20070723091227">
        
        
        </t>
<t tx="ekr.20070723091227.1"></t>
<t tx="ekr.20070723091227.2"></t>
<t tx="ekr.20070723091227.3"></t>
<t tx="ekr.20070927175908">'''Convert a normal Leo tree to a networkx graph'''
import networkx as nx
import sys

x = nx.Graph()

def node_id(p):
    return '%s: %s' % (id(p.v.t),p.headString())

def addTree(p):
    x.add_node(node_id(p))
    for child in p.children_iter():
        addTree(child)
        x.add_edge(node_id(p),node_id(child))

addTree(p)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')
</t>
<t tx="ekr.20070928095102">@ This is a plain Leo tree.

You can convert it to a networkx graph using the leo2graph button.
</t>
<t tx="ekr.20070928095102.1"></t>
<t tx="ekr.20070928095102.2"></t>
<t tx="ekr.20070929062147">@nocolor

The following scripts convert between Leo trees and NetworkX graphs.

- leo2graph:            convert a normal Leo tree to a NetworkX graph.
- at-graph2graph:       convert an @graph tree to a Networkx graph.
- at-networkx2graph:    convert an @networkx tree to a Networkx graph
- at-networkx2at-graph: create an @graph tree from an @networkx tree.

Not ready yet:

- tree2pict: convert a Leo @graph tree to a picture of the corresponding graph.

@color</t>
<t tx="ekr.20070929062147.1">'''Convert an @graph tree to a networkx graph.'''
import networkx as nx
import sys

x = nx.Graph()

def node_id(p):
    return '%s: %s' % (str(p.v.t.fileIndex),p.headString())

def addTree(p):
    tag = '@link'
    h = p.headString()
    if h.startswith('@graph'):
        for child in p.children_iter():
            addTree(child)
    elif h.startswith('@node'):
        x.add_node(node_id(p))
        for child in p.children_iter():
            h = child.headString()
            if h.startswith(tag):
                link = h[len(tag):].strip()
                if link: x.add_edge(node_id(p),link)
            elif child.headString().startswith('@node'):
                addTree(child)
                x.add_edge(node_id(p),node_id(child))

addTree(p)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')</t>
<t tx="ekr.20070929062147.2">'''Convert an @networkx node to a networkx graph.'''
import networkx as nx
import sys

@others

x = nx.Graph()

edges,nodes = parse(p)

for z in nodes:
    x.add_node(z)

for z in edges:
    a,b = z
    x.add_edge(a,b)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')
</t>
<t tx="ekr.20070929070257">@ This is an @graph tree.

You can convert it to a networkx graph using the at-graph2graph button.</t>
<t tx="ekr.20070929070257.1"></t>
<t tx="ekr.20070929070257.2"></t>
<t tx="ekr.20070929070426">g.es('@link %s: %s' % (str(p.v.t.fileIndex),p.headString()))</t>
<t tx="ekr.20070929070632"></t>
<t tx="ekr.20070929070632.1"></t>
<t tx="ekr.20070929072043">@ This node defines a networkx graph using nodes and edges.

You can create an @graph tree from this node using the graph2at-graph button.
</t>
<t tx="ekr.20070929072506"># Each edge is represented as two lines.

# child1 --&gt; child2
('ekr', '20070929070257', 1): @node child1
('ekr', '20070929070257', 2): @node child2

# child2 --&gt; child1
('ekr', '20070929070257', 2): @node child2
('ekr', '20070929070257', 1): @node child1

</t>
<t tx="ekr.20070929072506.1"># Each node is on a separate line.

('ekr', '20070929070257', 1): @node child1
('ekr', '20070929070257', 2): @node child2
</t>
<t tx="ekr.20070929072506.2">def parseNodes (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(g.listToString(lines))
    return lines
</t>
<t tx="ekr.20070929074830">def parse (p):

    tag = '@networkx'
    if not p.headString().startswith(tag):
        p = g.findNodeAnywhere(c,tag)
        if not p.headString().startswith(tag):
            error('No %s node in the outline' % tag)
            return [],[]

    nodes = []
    for tag in ('@edges','@nodes'):
        node = g.findNodeInTree(c,p,tag)
        if node:
            nodes.append(node)
        else:
            error('No %s node in @networkx tree' % tag)
            return [],[]
    edgesNode,nodesNode = nodes
    edges = parseEdges(edgesNode)
    nodes = parseNodes(nodesNode)
    return edges,nodes
</t>
<t tx="ekr.20070929074830.1">def parseEdges (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(len(lines),lines)
    if (len(lines) % 2) == 0:
        i = 0 ; edges = []
        while i &lt; len(lines):
            data = lines[i],lines[i+1]
            edges.append(data)
            i += 2
        # g.trace(g.listToString(edges))
        return edges
    else:
        error('edges node must have even number of lines')
        return []

</t>
<t tx="ekr.20070929081505">def error (s):

    g.es_print(s,color='red')
</t>
<t tx="ekr.20070929082546">'''Convert an @networkx node to an @graph tree.
Create the tree as the child of the @graph-target node,
or the current position if no such node.'''

import networkx as nx
import sys

@others

print '=' * 10

p,edges,nodes = parse(p)

createTree(p,edges,nodes)
</t>
<t tx="ekr.20070929114410.2">def error (s):

    g.es_print(s,color='red')
</t>
<t tx="ekr.20070929114410.3">def parse (p):

    tag = '@graph-target'
    if not p.headString().startswith(tag):
        p = g.findNodeAnywhere(c,tag)
    if not (p and p.headString().startswith(tag)):
        p = c.currentPosition() # Use the presently selected node.

    nodes = [] ; tag = '@networkx'
    data = g.findNodeAnywhere(c,tag)
    if not data:
        error('No %s tree' % tag)
        return None,[],[]
    for tag in ('@edges','@nodes'):
        node = g.findNodeInTree(c,data,tag)
        if node:
            nodes.append(node)
        else:
            error('No %s node in @networkx tree' % tag)
            return None,[],[]
    edgesNode,nodesNode = nodes
    edges = parseEdges(edgesNode)
    nodes = parseNodes(nodesNode)
    return p,edges,nodes
</t>
<t tx="ekr.20070929114410.4">def parseNodes (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(g.listToString(lines))
    return lines
</t>
<t tx="ekr.20070929114410.5">def parseEdges (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(len(lines),lines)
    if (len(lines) % 2) == 0:
        i = 0 ; edges = []
        while i &lt; len(lines):
            data = lines[i],lines[i+1]
            edges.append(data)
            i += 2
        # g.trace(g.listToString(edges))
        return edges
    else:
        error('edges node must have even number of lines')
        return []

</t>
<t tx="ekr.20070929114617">@ This will be the root node for the @graph tree produced by the at-networkx2at-graph button.</t>
<t tx="ekr.20070929115302">def createTree (parent,edges,nodes):

    if 0:
        g.trace('nodes...\n', g.listToString(nodes,sort=True))
        g.trace('edges...\n', g.listToString(edges,sort=True))

    c.beginUpdate()
    try:
        p = parent.insertAsLastChild()
        p.setHeadString('@graph')
        d = createNodes(p,nodes)
        createEdges(d,edges)
        c.selectPosition(p)
    finally:
        c.endUpdate()
</t>
<t tx="ekr.20070929120541">def createEdges (d,edges):

    for edge in edges:
        a,b = edge
        g.trace('\n%s --&gt; %s' % (a,b))
        p = d.get(a)
        if p:
            p2 = p.insertAsLastChild()
            p2.setHeadString('@link %s' % (b))
        else:
            error('@node not found: %s' % (a))
</t>
<t tx="ekr.20070929120541.1">def createNodes (parent,nodes):

    d = {}

    for node in nodes:
        # g.trace(node)
        p = parent.insertAsLastChild()
        p.setHeadString('@node %s' % (node))
        d[node] = p.copy()

    return d
</t>
<t tx="ekr.20070929122956"></t>
<t tx="ekr.20070929122956.1"></t>
<t tx="ekr.20070929154250"># This code isn't used directly anymore.  Instead we have:
    
jyLeo.bat:
    
cd c:\prog\tigris-cvs\leo\src
c:\jython2.2\jython c:\prog\tigris-cvs\leo\test\jyleo.py

and jyLeo.py:
    
import os, sys

theDir = os.getcwd()
if theDir not in sys.path:
    print 'adding',theDir,'to sys.path'
    sys.path.append(theDir)

import leo
leo.run(jyLeo=True)
</t>
<t tx="ekr.20070929154250.1"># Execute the body of the node whose headline is 'java-script' with java

import os

fileName = r'c:\prog\test\jyleo.py'
command  = r'c:\jython2.2\jython %s' % fileName

p = g.findNodeAnywhere(c,'jyleo-script')

if p:
    script = c.atFileCommands.writeFromString(
        p.copy(),p.bodyString(),
        forcePythonSentinels=False,
        useSentinels=False) # useSentinels=True also works.
    script = script.replace("\r\n","\n") # Use brute force.
    file(fileName,'w').write(script)
    os.chdir(g.app.loadDir)
    os.system(command)
else:
    print 'Node not found: jyleo-script'
</t>
<t tx="ekr.20070930043027"># The first script in Jython Essentials, by Pedroni &amp; Rappin.
import javax.swing as swing
import java.awt as awt
import java.lang as lang

def exit(event):
    lang.System.exit(0)

def onButtonPressed(event):
    field.text=quotes[event.source.text]

def createButton(name):
    return swing.JButton(name,preferredSize=(100,20),
        actionPerformed=onButtonPressed)

names = [ 'Groucho','Chico','Harpo']
quotes = {'Groucho':'Say the secret word','Chico':'Viaduct?','Harpo':'Honk!'}

w = swing.JFrame('Welcome to jython!',size=(200,200),windowClosing=exit)
w.contentPane.layout = awt.FlowLayout()

field = swing.JTextField(preferredSize=(200,20))
w.contentPane.add(field)

buttons = [createButton(name) for name in names]
for button in buttons:
    w.contentPane.add(button)

w.pack()
w.show()</t>
<t tx="ekr.20070930055931">import os, sys

theDir = os.getcwd()

if theDir not in sys.path:
    sys.path.append(theDir)

import leo
leo.run(jyLeo=True)
</t>
<t tx="ekr.20070930183037">import os, sys

theDir = os.getcwd()

if theDir not in sys.path:
    print 'adding',theDir,'to sys.path'
    sys.path.append(theDir)

import leo
leo.run(jyLeo=True)
</t>
<t tx="ekr.20071002150320">log = c.frame.log
tag = 'my-canvas'

w = log.canvasDict.get(tag)
if not w:
    w = log.createCanvas(tag)
    w.configure(bg='yellow')

log.selectTab(tag)
</t>
<t tx="ekr.20071006084354">w = c.frame.body.bodyCtrl
s = w.getAllText()
ins = w.getInsertPoint()
row,col = g.convertPythonIndexToRowCol(s,ins)
print 'row',row,'col',col</t>
<t tx="ekr.20071019073617">@language java
@tabwidth 8
@others

// changed.3

</t>
<t tx="ekr.20071025192258">import leoTest
leoTest.doTests (c,all=False)</t>
<t tx="ekr.20071025193940"># Caution: you will have to disable cursesGui in an external editor
# if you enable the cursesGui plugin it here

plugins_menu.py

# ipython.py
cleo.py
rClick.py
toolbar.py

add_directives.py
color_markup.py
threading_colorizer.py
rst3.py
UNL.py
open_with.py
mod_scripting.py

nav_buttons.py
hoist.py
image.py
leo_to_html.py

# vim.py
</t>
<t tx="ekr.20071026082438">@

** Note **: icons will appear only if they are found on your system.

To do:
    
- Icon menu.
- Left click to delete icons.
- Tree control recomputes height of each line.</t>
<t tx="ekr.20071026082438.1">for p in c.allNodes_iter():

    if hasattr(p.v.t,"unknownAttributes"):
        a = p.v.t.unknownAttributes
        iconsList = a.get("icons")
        if dict:
            a["icons"] = []
            a["lineYOffset"] = 0

c.redraw()
</t>
<t tx="ekr.20071026082438.2">p.v.t.unknownAttributes = {}
a = p.v.t.unknownAttributes

&lt;&lt; define event callbacks &gt;&gt;

path = g.os_path_join(g.app.loadDir,"..","Icons")
icon1 = g.os_path_join(path,"lt_arrow_enabled.gif")
icon2 = g.os_path_join(path,"rt_arrow_enabled.gif")

d1 = {
    "type" : "file", "file" : icon1,
    "where" : "beforeIcon",
    "yoffset" : -3,
    # "yoffset" : 5, "ypad" : -5,
    # "height" : 40, # automatically adjust headline y position.
    "xpad": 2
}

# Classes and functions can only be pickled if they are at the top level of a module.
    #"onClick" : onClick,
    #"onRightClick" : onRightClick,
    #"onDoubleClick" : onDoubleClick }

d2 = {
    "type" : "file", "file" : icon2,
    "where" : "beforeHeadline",
    "yoffset" : -3,
    "xoffset" : 2, "xpad" : -2 }

a["icons"] = [d1,d2]
a["lineYOffset"] = 3

c.redraw()
</t>
<t tx="ekr.20071026082438.3">def onClick(p=p):

    g.trace(p)

def onRightClick(p=p):

    g.trace(p)

def onDoubleClick(p=p):

    g.trace(p)
</t>
<t tx="ekr.20071026082914"></t>
<t tx="ekr.20071026083020">import Tkinter as Tk
import os, sys

tree = c.frame.tree

@others

os.chdir(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons")))

paths = g.app.gui.runOpenFileDialog(
    title='Get Icons',
    filetypes=[('All files','*'),('Gif','*.gif'), ('Bitmap','*.bmp'),('Icon','*.ico'),],
    defaultextension=None,
    multiple=True)

aList = [] ; xoffset = 2
for path in paths:
    path = g.os_path_abspath(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",path)))
    image_height = getImageHeight(path)
    if image_height is None:
        yoffset = 0
    else:
        yoffset = (tree.line_height-image_height)/2

    aList.append ({
        'type' : 'file', 'file' : path,
        'where' : 'beforeHeadline',
        'yoffset' : yoffset, 'xoffset' : xoffset, 'xpad' : -2,
    })
    xoffset += 2

# aList.reverse()

if not hasattr(p.v.t,'unknownAttributes'):
    p.v.t.unknownAttributes = {}

aList2 = p.v.t.unknownAttributes.get('icons',[])
aList2.extend(aList)
p.v.t.unknownAttributes ['icons'] = aList2
p.v.t.unknownAttributes ['lineYOffset'] = 3
c.redraw()

# Classes and functions can only be pickled if they are at the top level of a module.
#"onClick" : onClick,
#"onRightClick" : onRightClick,
#"onDoubleClick" : onDoubleClick }
</t>
<t tx="ekr.20071026084348"></t>
<t tx="ekr.20071026085244">if hasattr(p.v.t,"unknownAttributes"):
    a = p.v.t.unknownAttributes
    iconsList = a.get("icons")
    if dict:
        a["icons"] = []
        a["lineYOffset"] = 0
        c.redraw()</t>
<t tx="ekr.20071026102420"></t>
<t tx="ekr.20071026102420.2"></t>
<t tx="ekr.20071026102420.3"></t>
<t tx="ekr.20071026133046">def getImageHeight (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=tree.canvas,file=path)
        return image.height()
    except Exception:
        return None
</t>
<t tx="ekr.20071026170504"># A script to get the proper height of icons.
# The XP file browser doesn't show or report the correct values.

import glob

@others

for z in ('LargeIcons','MediumIcons','SmallIcons'):
    theDir = g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",'UserIcons',z))
    for name in glob.glob(g.os_path_join(theDir,'*.*')):
        h,w = getImageStats(name)
        if h is not None:
            print h,w,name
</t>
<t tx="ekr.20071026170511.1">def getImageStats (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=c.frame.tree.canvas,file=path)
        return image.height(),image.width()

    except Exception:
        #g.es_exception()
        return None,None
</t>
<t tx="ekr.20071026174231"></t>
<t tx="ekr.20071026174331"></t>
<t tx="ekr.20071026174414"></t>
<t tx="ekr.20071026174414.1"></t>
<t tx="ekr.20071026174414.2"></t>
<t tx="ekr.20071026174655"></t>
<t tx="ekr.20071026174655.1"></t>
<t tx="ekr.20071026174655.2"></t>
<t tx="ekr.20071026174817"></t>
<t tx="ekr.20071026174817.1"></t>
<t tx="ekr.20071026175552">seen = {}
print '----'
for p in c.allNodes_iter():
    if p.v.t not in seen:
        seen[p.v.t] = True
        if hasattr(p.v.t,'unknownAttributes'):
            aList = p.v.t.unknownAttributes.get('icons',[])
            for d in aList:
                name = d.get('file')
                if name: print 'p: %-20s icon: %s' % (p.headString(),g.os_path_abspath(name))</t>
<t tx="ekr.20071030094853">@language java
@tabwidth 8</t>
<t tx="ekr.20071030102858.3">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030103209">@tabwidth -4
@language python

if 0: # List all java files: this was used to create the 'files' node.
    import glob
    for s in glob.glob(r'c:\prog\test\from-victor\*.java'):
        g.es('@auto %s' % (s))

if 0: # Create a child for every line in the 'files' node.
    p = p.firstChild()
    if p:
        s = p.bodyString()
        lines = g.splitLines(s)
        c.beginUpdate()
        try:
            for line in lines:
                if line.strip():
                    p2 = p.v.insertAsNthChild(0)
                    p2.initHeadString(line)
        finally:
            c.endUpdate()

if 1: # Disable all child @auto nodes and delete the children.
    c.beginUpdate()
    try:
        for p in p.siblings_iter():
            h = p.headString()
            if h.startswith('@auto'):
                p.initHeadString('@'+h)
                while p.hasChildren():
                    p.firstChild().doDelete()
    finally:
        c.endUpdate()

if 0: # Enable all child @@auto nodes and delete the children.
    c.beginUpdate()
    try:
        for p in p.siblings_iter():
            h = p.headString()
            if h.startswith('@@auto'):
                p.initHeadString(h[1:])
                while p.hasChildren():
                    p.firstChild().doDelete()
    finally:
        c.endUpdate()
</t>
<t tx="ekr.20071030103258">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030103909">@auto c:\prog\test\from-victor\Bundle.java
@auto c:\prog\test\from-victor\BundleActivator.java
@auto c:\prog\test\from-victor\BundleContext.java
@auto c:\prog\test\from-victor\BundleEvent.java
@auto c:\prog\test\from-victor\BundleListener.java
@auto c:\prog\test\from-victor\BundlePermission.java
@auto c:\prog\test\from-victor\Configurable.java
@auto c:\prog\test\from-victor\Constants.java
@auto c:\prog\test\from-victor\Filter.java
@auto c:\prog\test\from-victor\FrameworkEvent.java
@auto c:\prog\test\from-victor\FrameworkListener.java
@auto c:\prog\test\from-victor\FrameworkUtil.java
@auto c:\prog\test\from-victor\InvalidSyntaxException.java
@auto c:\prog\test\from-victor\PackagePermission.java
@auto c:\prog\test\from-victor\ServiceEvent.java
@auto c:\prog\test\from-victor\ServiceFactory.java
@auto c:\prog\test\from-victor\ServiceListener.java
@auto c:\prog\test\from-victor\ServicePermission.java
@auto c:\prog\test\from-victor\ServiceReference.java
@auto c:\prog\test\from-victor\ServiceRegistration.java
@auto c:\prog\test\from-victor\shortBundleException.java
@auto c:\prog\test\from-victor\SynchronousBundleListener.java
@auto c:\prog\test\from-victor\Version.java</t>
<t tx="ekr.20071030103909.19">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.1">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.2">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.3">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.4">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.5">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.6">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.7">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.8">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.9">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.10">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.11">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.12">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.13">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.14">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.15">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.16">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.17">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.18">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.19">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.20">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.21">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.22">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.23">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071101163934">import leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        controller.processTopTree(p)
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20071105085941"></t>
<t tx="ekr.20071110092702.1"></t>
<t tx="ekr.20071113100456">@@markup wiki

@
__bold__

~~#80ff00:~~~~#80ff80:this is a test~~


actions\add.png {picture file=c:\prog\tigris-cvs\leo\Icons\Tango\16x16\actions\add.png}


The wiki text must be in the range of an @markup wiki directive **and** in a Leo
doc part (starting with '@') **or** a Python triple-quoted string.

File "..\Icons\Tango\16x16\actions\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\animations"
File "..\Icons\Tango\16x16\animations\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\apps"
File "..\Icons\Tango\16x16\apps\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\categories"
File "..\Icons\Tango\16x16\categories\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\devices"
File "..\Icons\Tango\16x16\devices\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\emblems"
File "..\Icons\Tango\16x16\emblems\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\emotes"
File "..\Icons\Tango\16x16\emotes\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\mimetypes"
File "..\Icons\Tango\16x16\mimetypes\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\places"
File "..\Icons\Tango\16x16\places\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\status"
File "..\Icons\Tango\16x16\status\*.*"
</t>
<t tx="ekr.20071114053401"># This is a test.</t>
<t tx="ekr.20071114071901"></t>
<t tx="ekr.20071114084053"></t>
<t tx="ekr.20071114092813">@

** Note **: icons will appear only if they are found on your system.

To do:
    
- Icon menu.
- Left click to delete icons.
- Tree control recomputes height of each line.</t>
<t tx="ekr.20071114092813.1"></t>
<t tx="ekr.20071114092813.2"></t>
<t tx="ekr.20071114092813.3"></t>
<t tx="ekr.20071114092813.4"></t>
<t tx="ekr.20071114092813.5"></t>
<t tx="ekr.20071114092813.6"></t>
<t tx="ekr.20071114092813.7"></t>
<t tx="ekr.20071114092813.8"></t>
<t tx="ekr.20071114092813.9"></t>
<t tx="ekr.20071114092813.10"></t>
<t tx="ekr.20071114092813.11"></t>
<t tx="ekr.20071114092813.12"></t>
<t tx="ekr.20071114092813.13">for p in c.allNodes_iter():

    if hasattr(p.v.t,"unknownAttributes"):
        a = p.v.t.unknownAttributes
        iconsList = a.get("icons")
        if dict:
            a["icons"] = []
            a["lineYOffset"] = 0

c.redraw()
</t>
<t tx="ekr.20071114092813.14">if hasattr(p.v.t,"unknownAttributes"):
    a = p.v.t.unknownAttributes
    iconsList = a.get("icons")
    if dict:
        a["icons"] = []
        a["lineYOffset"] = 0
        c.redraw()</t>
<t tx="ekr.20071114092813.15">p.v.t.unknownAttributes = {}
a = p.v.t.unknownAttributes

&lt;&lt; define event callbacks &gt;&gt;

path = g.os_path_join(g.app.loadDir,"..","Icons")
icon1 = g.os_path_join(path,"lt_arrow_enabled.gif")
icon2 = g.os_path_join(path,"rt_arrow_enabled.gif")

d1 = {
    "type" : "file", "file" : icon1,
    "where" : "beforeIcon",
    "yoffset" : -3,
    # "yoffset" : 5, "ypad" : -5,
    # "height" : 40, # automatically adjust headline y position.
    "xpad": 2
}

# Classes and functions can only be pickled if they are at the top level of a module.
    #"onClick" : onClick,
    #"onRightClick" : onRightClick,
    #"onDoubleClick" : onDoubleClick }

d2 = {
    "type" : "file", "file" : icon2,
    "where" : "beforeHeadline",
    "yoffset" : -3,
    "xoffset" : 2, "xpad" : -2 }

a["icons"] = [d1,d2]
a["lineYOffset"] = 3

c.redraw()
</t>
<t tx="ekr.20071114092813.16">def onClick(p=p):

    g.trace(p)

def onRightClick(p=p):

    g.trace(p)

def onDoubleClick(p=p):

    g.trace(p)
</t>
<t tx="ekr.20071114092813.17">import Tkinter as Tk
import os, sys

tree = c.frame.tree

@others

os.chdir(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons")))

paths = g.app.gui.runOpenFileDialog(
    title='Get Icons',
    filetypes=[('All files','*'),('Gif','*.gif'), ('Bitmap','*.bmp'),('Icon','*.ico'),],
    defaultextension=None,
    multiple=True)

aList = [] ; xoffset = 2
for path in paths:
    path = g.os_path_abspath(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",path)))
    image_height = getImageHeight(path)
    if image_height is None:
        yoffset = 0
    else:
        yoffset = (tree.line_height-image_height)/2

    aList.append ({
        'type' : 'file', 'file' : path,
        'where' : 'beforeHeadline',
        'yoffset' : yoffset, 'xoffset' : xoffset, 'xpad' : -2,
    })
    xoffset += 2

# aList.reverse()

if not hasattr(p.v.t,'unknownAttributes'):
    p.v.t.unknownAttributes = {}

aList2 = p.v.t.unknownAttributes.get('icons',[])
aList2.extend(aList)
p.v.t.unknownAttributes ['icons'] = aList2
p.v.t.unknownAttributes ['lineYOffset'] = 3
c.redraw()

# Classes and functions can only be pickled if they are at the top level of a module.
#"onClick" : onClick,
#"onRightClick" : onRightClick,
#"onDoubleClick" : onDoubleClick }
</t>
<t tx="ekr.20071114092813.18">def getImageHeight (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=tree.canvas,file=path)
        return image.height()
    except Exception:
        return None
</t>
<t tx="ekr.20071114092813.19"># A script to get the proper height of icons.
# The XP file browser doesn't show or report the correct values.

import glob

@others

for z in ('LargeIcons','MediumIcons','SmallIcons'):
    theDir = g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",'UserIcons',z))
    for name in glob.glob(g.os_path_join(theDir,'*.*')):
        h,w = getImageStats(name)
        if h is not None:
            print h,w,name
</t>
<t tx="ekr.20071114092813.20">def getImageStats (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=c.frame.tree.canvas,file=path)
        return image.height(),image.width()

    except Exception:
        #g.es_exception()
        return None,None
</t>
<t tx="ekr.20071114092813.21">seen = {}
print '----'
for p in c.allNodes_iter():
    if p.v.t not in seen:
        seen[p.v.t] = True
        if hasattr(p.v.t,'unknownAttributes'):
            aList = p.v.t.unknownAttributes.get('icons',[])
            for d in aList:
                name = d.get('file')
                if name: print 'p: %-20s icon: %s' % (p.headString(),g.os_path_abspath(name))</t>
<t tx="ekr.20071115061426">@ @rst-options
code_mode=False
generate_rst=True
http_server_support = False
show_organizer_nodes=True
show_headlines=True
show_leo_directives=True
stylesheet_path=..\doc
write_intermediate_file = False
verbose=True
@c

|back| |leo| |next|

##########################################
Chapter 0: Preformat test
##########################################

This is a test of the @rst-preformat option

.. contents::</t>
<t tx="ekr.20071115061426.1">.. Links used in this document...

.. WARNING: image targets may not have upper case letters!

.. |back| image:: arrow_lt.gif
    :target: FAQ.html

.. |leo|   image:: leo.gif
    :target: front.html

.. |next| image:: arrow_rt.gif
    :target: intro.html</t>
<t tx="ekr.20071115061426.2">Before section.</t>
<t tx="ekr.20071115061426.3">def writePreformat (self,p):

    '''Write all p's body text lines as if preformatted.'''

    lines = p.bodyString().split('\n')
    lines = ['\t' + z for z in lines]
    lines.insert(0,'::\n\n')

    s = '\n'.join(lines)
    if s.strip()
        self.write('%s\n\n' % s)
</t>
<t tx="ekr.20071115061426.12">-------------

|back| |leo| |next|</t>
<t tx="ekr.20071115061535.1">This is the following section.</t>
<t tx="ekr.20071116113202"># Enable this @markup wiki directive to see all icons in the Icons/Tango directory.
# The color_markup and add_directives plugins must be enabled.
# Be patient: it may take a while to render all the icons.

@@markup wiki

@

actions
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\add.png} add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\address-book-new.png} address-book-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\appointment-new.png} appointment-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\appointment.png} appointment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\back.png} back.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bookmark-new.png} bookmark-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bookmark_add.png} bookmark_add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bookmarks_list_add.png} bookmarks_list_add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bottom.png} bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\centrejust.png} centrejust.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\contact-new.png} contact-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-new.png} document-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-open.png} document-open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-print-preview.png} document-print-preview.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-print.png} document-print.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-properties.png} document-properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-save-as.png} document-save-as.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-save.png} document-save.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\down.png} down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-clear.png} edit-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-copy.png} edit-copy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-cut.png} edit-cut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-delete.png} edit-delete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-find-replace.png} edit-find-replace.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-find.png} edit-find.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-paste.png} edit-paste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-redo.png} edit-redo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-select-all.png} edit-select-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-undo.png} edit-undo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editclear.png} editclear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editcopy.png} editcopy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editcut.png} editcut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editdelete.png} editdelete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editpaste.png} editpaste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\exit.png} exit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filefind.png} filefind.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filenew.png} filenew.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\fileopen.png} fileopen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\fileprint.png} fileprint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filequickprint.png} filequickprint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filesave.png} filesave.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filesaveas.png} filesaveas.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\find.png} find.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\finish.png} finish.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\folder-new.png} folder-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\folder_new.png} folder_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-indent-less.png} format-indent-less.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-indent-more.png} format-indent-more.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-center.png} format-justify-center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-fill.png} format-justify-fill.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-left.png} format-justify-left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-right.png} format-justify-right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-bold.png} format-text-bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-italic.png} format-text-italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-strikethrough.png} format-text-strikethrough.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-underline.png} format-text-underline.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\forward.png} forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-lockscreen.png} gnome-lockscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-logout.png} gnome-logout.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-searchtool.png} gnome-searchtool.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-session-logout.png} gnome-session-logout.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-mail-fwd.png} gnome-stock-mail-fwd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-mail-new.png} gnome-stock-mail-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-mail-rpl.png} gnome-stock-mail-rpl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-text-indent.png} gnome-stock-text-indent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-text-unindent.png} gnome-stock-text-unindent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-bottom.png} go-bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-down.png} go-down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-first.png} go-first.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-home.png} go-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-jump.png} go-jump.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-last.png} go-last.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-next.png} go-next.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-previous.png} go-previous.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-top.png} go-top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-up.png} go-up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gohome.png} gohome.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-add.png} gtk-add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-bold.png} gtk-bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-cancel.png} gtk-cancel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-clear.png} gtk-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-copy.png} gtk-copy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-cut.png} gtk-cut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-delete.png} gtk-delete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-find-and-replace.png} gtk-find-and-replace.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-find.png} gtk-find.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-fullscreen.png} gtk-fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-back-ltr.png} gtk-go-back-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-back-rtl.png} gtk-go-back-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-down.png} gtk-go-down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-forward-ltr.png} gtk-go-forward-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-forward-rtl.png} gtk-go-forward-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-up.png} gtk-go-up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-bottom.png} gtk-goto-bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-first-ltr.png} gtk-goto-first-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-first-rtl.png} gtk-goto-first-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-last-ltr.png} gtk-goto-last-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-last-rtl.png} gtk-goto-last-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-top.png} gtk-goto-top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-home.png} gtk-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-indent-ltr.png} gtk-indent-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-indent-rtl.png} gtk-indent-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-indent.png} gtk-indent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-italic.png} gtk-italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-jump-to-ltr.png} gtk-jump-to-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-jump-to-rtl.png} gtk-jump-to-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-center.png} gtk-justify-center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-fill.png} gtk-justify-fill.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-left.png} gtk-justify-left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-right.png} gtk-justify-right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-forward-ltr.png} gtk-media-forward-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-forward-rtl.png} gtk-media-forward-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-next-ltr.png} gtk-media-next-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-next-rtl.png} gtk-media-next-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-pause.png} gtk-media-pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-play-ltr.png} gtk-media-play-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-previous-ltr.png} gtk-media-previous-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-previous-rtl.png} gtk-media-previous-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-record.png} gtk-media-record.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-rewind-ltr.png} gtk-media-rewind-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-rewind-rtl.png} gtk-media-rewind-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-stop.png} gtk-media-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-new.png} gtk-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-open.png} gtk-open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-paste.png} gtk-paste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-print-preview.png} gtk-print-preview.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-print.png} gtk-print.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-properties.png} gtk-properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-redo-ltr.png} gtk-redo-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-refresh.png} gtk-refresh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-remove.png} gtk-remove.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-save-as.png} gtk-save-as.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-save.png} gtk-save.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-select-all.png} gtk-select-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-stop.png} gtk-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-strikethrough.png} gtk-strikethrough.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-underline.png} gtk-underline.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-undo-ltr.png} gtk-undo-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-unindent-ltr.png} gtk-unindent-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-unindent-rtl.png} gtk-unindent-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-unindent.png} gtk-unindent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\kfind.png} kfind.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\kfm_home.png} kfm_home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\leftjust.png} leftjust.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\list-add.png} list-add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\list-remove.png} list-remove.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\lock.png} lock.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-forward.png} mail-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-mark-junk.png} mail-mark-junk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-mark-not-junk.png} mail-mark-not-junk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-message-new.png} mail-message-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-reply-all.png} mail-reply-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-reply-sender.png} mail-reply-sender.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-send-receive.png} mail-send-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_forward.png} mail_forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_new.png} mail_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_reply.png} mail_reply.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_replyall.png} mail_replyall.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_spam.png} mail_spam.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-eject.png} media-eject.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-playback-pause.png} media-playback-pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-playback-start.png} media-playback-start.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-playback-stop.png} media-playback-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-record.png} media-record.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-seek-backward.png} media-seek-backward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-seek-forward.png} media-seek-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-skip-backward.png} media-skip-backward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-skip-forward.png} media-skip-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\next.png} next.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_eject.png} player_eject.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_end.png} player_end.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_fwd.png} player_fwd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_pause.png} player_pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_play.png} player_play.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_record.png} player_record.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_rew.png} player_rew.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_start.png} player_start.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_stop.png} player_stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\previous.png} previous.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\process-stop.png} process-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\redhat-home.png} redhat-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\redo.png} redo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload.png} reload.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload3.png} reload3.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload_all_tabs.png} reload_all_tabs.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload_page.png} reload_page.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\remove.png} remove.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\rightjust.png} rightjust.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\search.png} search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\start.png} start.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_add-bookmark.png} stock_add-bookmark.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_bottom.png} stock_bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_copy.png} stock_copy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_cut.png} stock_cut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_delete.png} stock_delete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_down.png} stock_down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_file-properites.png} stock_file-properites.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_first.png} stock_first.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_fullscreen.png} stock_fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_help-add-bookmark.png} stock_help-add-bookmark.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_home.png} stock_home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_last.png} stock_last.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_left.png} stock_left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-compose.png} stock_mail-compose.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-forward.png} stock_mail-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-reply-to-all.png} stock_mail-reply-to-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-reply.png} stock_mail-reply.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-send-receive.png} stock_mail-send-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-fwd.png} stock_media-fwd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-next.png} stock_media-next.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-pause.png} stock_media-pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-play.png} stock_media-play.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-prev.png} stock_media-prev.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-rec.png} stock_media-rec.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-rew.png} stock_media-rew.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-stop.png} stock_media-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-address-book.png} stock_new-address-book.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-appointment.png} stock_new-appointment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-bcard.png} stock_new-bcard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-dir.png} stock_new-dir.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-tab.png} stock_new-tab.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-text.png} stock_new-text.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-window.png} stock_new-window.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_not-spam.png} stock_not-spam.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_paste.png} stock_paste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_print-preview.png} stock_print-preview.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_print.png} stock_print.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_properties.png} stock_properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_redo.png} stock_redo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_refresh.png} stock_refresh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_right.png} stock_right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_save-as.png} stock_save-as.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_save.png} stock_save.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_search-and-replace.png} stock_search-and-replace.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_search.png} stock_search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_select-all.png} stock_select-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_spam.png} stock_spam.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_stop.png} stock_stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text-strikethrough.png} stock_text-strikethrough.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_bold.png} stock_text_bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_center.png} stock_text_center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_indent.png} stock_text_indent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_italic.png} stock_text_italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_justify.png} stock_text_justify.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_left.png} stock_text_left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_right.png} stock_text_right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_underlined.png} stock_text_underlined.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_unindent.png} stock_text_unindent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_top.png} stock_top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_undo.png} stock_undo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_up.png} stock_up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stop.png} stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-lock-screen.png} system-lock-screen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-log-out.png} system-log-out.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-search.png} system-search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-shutdown.png} system-shutdown.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\tab-new.png} tab-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\tab_new.png} tab_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_bold.png} text_bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_italic.png} text_italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_strike.png} text_strike.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_under.png} text_under.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\top.png} top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\undo.png} undo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\up.png} up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\view-fullscreen.png} view-fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\view-refresh.png} view-refresh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\window-new.png} window-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\window_fullscreen.png} window_fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\window_new.png} window_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\xfce-system-lock.png} xfce-system-lock.png

animations
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\animations\\gnome-spinner.png} gnome-spinner.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\animations\\process-working.png} process-working.png

apps
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\access.png} access.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessibility-directory.png} accessibility-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-calculator.png} accessories-calculator.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-character-map.png} accessories-character-map.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-dictionary.png} accessories-dictionary.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-text-editor.png} accessories-text-editor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\amarok.png} amarok.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\background.png} background.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\browser.png} browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\calc.png} calc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\compose.png} compose.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\config-date.png} config-date.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\config-language.png} config-language.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\config-users.png} config-users.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\date.png} date.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\email.png} email.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\file-manager.png} file-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\fonts.png} fonts.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\force-exit.png} force-exit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gaim.png} gaim.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-calculator.png} gnome-calculator.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-character-map.png} gnome-character-map.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-fs-blockdev.png} gnome-fs-blockdev.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-help.png} gnome-help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-keyring-manager.png} gnome-keyring-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-monitor.png} gnome-monitor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-remote-desktop.png} gnome-remote-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-session.png} gnome-session.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-accessibility-technologies.png} gnome-settings-accessibility-techno
logies.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-background.png} gnome-settings-background.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-font.png} gnome-settings-font.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-keybindings.png} gnome-settings-keybindings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-sound.png} gnome-settings-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-theme.png} gnome-settings-theme.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-terminal.png} gnome-terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-window-manager.png} gnome-window-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gtk-help.png} gtk-help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gucharmap.png} gucharmap.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\help-browser.png} help-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\help.png} help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\inkscape.png} inkscape.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-group-chat.png} internet-group-chat.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-mail.png} internet-mail.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-news-reader.png} internet-news-reader.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-web-browser.png} internet-web-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\k3b.png} k3b.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kcalc.png} kcalc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kcharselect.png} kcharselect.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kcmkwm.png} kcmkwm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kedit.png} kedit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\key_bindings.png} key_bindings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kfm.png} kfm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\khelpcenter.png} khelpcenter.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\knotify.png} knotify.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\konqueror.png} konqueror.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\konsole.png} konsole.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kontact.png} kontact.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\konversation.png} konversation.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kopete.png} kopete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\krfb.png} krfb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kscreensaver.png} kscreensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\ksysguard.png} ksysguard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kuser.png} kuser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kwin.png} kwin.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\locale.png} locale.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\mail_generic.png} mail_generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\office-calendar.png} office-calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\openterm.png} openterm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\package_edutainment.png} package_edutainment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-accessibility.png} preferences-desktop-accessibility.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-assistive-technology.png} preferences-desktop-assistive-techno
logy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-font.png} preferences-desktop-font.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-keyboard-shortcuts.png} preferences-desktop-keyboard-shortcuts
.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-locale.png} preferences-desktop-locale.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-multimedia.png} preferences-desktop-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-remote-desktop.png} preferences-desktop-remote-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-screensaver.png} preferences-desktop-screensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-sound.png} preferences-desktop-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-theme.png} preferences-desktop-theme.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-wallpaper.png} preferences-desktop-wallpaper.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-system-network-proxy.png} preferences-system-network-proxy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-system-session.png} preferences-system-session.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-system-windows.png} preferences-system-windows.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\proxy-config.png} proxy-config.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\proxy.png} proxy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\redhat-email.png} redhat-email.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\redhat-filemanager.png} redhat-filemanager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\redhat-web-browser.png} redhat-web-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\screensaver.png} screensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\software-properties.png} software-properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\stock_help.png} stock_help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\stock_proxy.png} stock_proxy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\style.png} style.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\susehelpcenter.png} susehelpcenter.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\synaptic.png} synaptic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-config-users.png} system-config-users.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-file-manager.png} system-file-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-installer.png} system-installer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-software-update.png} system-software-update.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-users.png} system-users.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\terminal.png} terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\text-editor.png} text-editor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\update-manager.png} update-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\user-info.png} user-info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\utilities-system-monitor.png} utilities-system-monitor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\utilities-terminal.png} utilities-terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\wallpaper.png} wallpaper.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\web-browser.png} web-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\wmtweaks.png} wmtweaks.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xchat-gnome.png} xchat-gnome.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfcalendar.png} xfcalendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-edit.png} xfce-edit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-filemanager.png} xfce-filemanager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-mail.png} xfce-mail.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-man.png} xfce-man.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-sound.png} xfce-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-terminal.png} xfce-terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-backdrop.png} xfce4-backdrop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-panel.png} xfce4-panel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-session.png} xfce4-session.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-sound.png} xfce4-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-splash.png} xfce4-splash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-taskbar.png} xfce4-taskbar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-ui.png} xfce4-ui.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-workspaces.png} xfce4-workspaces.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfwm4.png} xfwm4.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\ximian-evolution-calendar.png} ximian-evolution-calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xscreensaver.png} xscreensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\zen-icon.png} zen-icon.png

categories
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-accessories.png} applications-accessories.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-development.png} applications-development.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-games.png} applications-games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-graphics.png} applications-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-internet.png} applications-internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-multimedia.png} applications-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-office.png} applications-office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-other.png} applications-other.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-system.png} applications-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-applications.png} gnome-applications.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-control-center.png} gnome-control-center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-devel.png} gnome-devel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-globe.png} gnome-globe.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-graphics.png} gnome-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-joystick.png} gnome-joystick.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-multimedia.png} gnome-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-other.png} gnome-other.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-settings.png} gnome-settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-system.png} gnome-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-util.png} gnome-util.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gtk-preferences.png} gtk-preferences.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\input_devices_settings.png} input_devices_settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\kcontrol.png} kcontrol.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_development.png} package_development.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_games.png} package_games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_graphics.png} package_graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_multimedia.png} package_multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_network.png} package_network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_office.png} package_office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_settings.png} package_settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_system.png} package_system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_utilities.png} package_utilities.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\preferences-desktop-peripherals.png} preferences-desktop-peripherals.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\preferences-desktop.png} preferences-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\preferences-system.png} preferences-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-accessories.png} redhat-accessories.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-games.png} redhat-games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-graphics.png} redhat-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-internet.png} redhat-internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-office.png} redhat-office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-preferences.png} redhat-preferences.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-programming.png} redhat-programming.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-sound_video.png} redhat-sound_video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-system_settings.png} redhat-system_settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-system_tools.png} redhat-system_tools.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\stock_internet.png} stock_internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-devel.png} xfce-devel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-games.png} xfce-games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-graphics.png} xfce-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-internet.png} xfce-internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-multimedia.png} xfce-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-office.png} xfce-office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-system-settings.png} xfce-system-settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-system.png} xfce-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-utils.png} xfce-utils.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce4-settings.png} xfce4-settings.png

devices
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\3floppy_unmount.png} 3floppy_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\audio-card.png} audio-card.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\audio-input-microphone.png} audio-input-microphone.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\battery.png} battery.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera-photo.png} camera-photo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera-video.png} camera-video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera.png} camera.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera_unmount.png} camera_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\cdrom_unmount.png} cdrom_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\cdwriter_unmount.png} cdwriter_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\chardevice.png} chardevice.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\computer.png} computer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\display.png} display.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-cdrom.png} drive-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-harddisk.png} drive-harddisk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-optical.png} drive-optical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-removable-media.png} drive-removable-media.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\dvd_unmount.png} dvd_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-battery.png} gnome-dev-battery.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-cdrom-audio.png} gnome-dev-cdrom-audio.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-cdrom.png} gnome-dev-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-computer.png} gnome-dev-computer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-cdr.png} gnome-dev-disc-cdr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-cdrw.png} gnome-dev-disc-cdrw.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdr-plus.png} gnome-dev-disc-dvdr-plus.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdr.png} gnome-dev-disc-dvdr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdram.png} gnome-dev-disc-dvdram.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdrom.png} gnome-dev-disc-dvdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdrw.png} gnome-dev-disc-dvdrw.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-dvd.png} gnome-dev-dvd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-ethernet.png} gnome-dev-ethernet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-floppy.png} gnome-dev-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-harddisk-1394.png} gnome-dev-harddisk-1394.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-harddisk-usb.png} gnome-dev-harddisk-usb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-harddisk.png} gnome-dev-harddisk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-ipod.png} gnome-dev-ipod.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-keyboard.png} gnome-dev-keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-cf.png} gnome-dev-media-cf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-ms.png} gnome-dev-media-ms.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-sdmmc.png} gnome-dev-media-sdmmc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-sm.png} gnome-dev-media-sm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-mouse-ball.png} gnome-dev-mouse-ball.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-mouse-optical.png} gnome-dev-mouse-optical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-printer.png} gnome-dev-printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-removable-1394.png} gnome-dev-removable-1394.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-removable-usb.png} gnome-dev-removable-usb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-removable.png} gnome-dev-removable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-wavelan.png} gnome-dev-wavelan.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-fs-client.png} gnome-fs-client.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-stock-mic.png} gnome-stock-mic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gtk-cdrom.png} gtk-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gtk-floppy.png} gtk-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gtk-harddisk.png} gtk-harddisk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\harddrive.png} harddrive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\hdd_unmount.png} hdd_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\input-gaming.png} input-gaming.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\input-keyboard.png} input-keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\input-mouse.png} input-mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\ipod_mount.png} ipod_mount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\joystick.png} joystick.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\keyboard.png} keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\kjobviewer.png} kjobviewer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\kxkb.png} kxkb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-cdrom.png} media-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-flash.png} media-flash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-floppy.png} media-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-optical.png} media-optical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\mouse.png} mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\multimedia-player.png} multimedia-player.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\network-wired.png} network-wired.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\network-wireless.png} network-wireless.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printer-remote.png} printer-remote.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printer.png} printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printer1.png} printer1.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printmgr.png} printmgr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\stock_mic.png} stock_mic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\stock_printers.png} stock_printers.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\system-floppy.png} system-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\system.png} system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\usbpendrive_unmount.png} usbpendrive_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\video-display.png} video-display.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce-printer.png} xfce-printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce4-display.png} xfce4-display.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce4-keyboard.png} xfce4-keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce4-mouse.png} xfce4-mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_HD.png} yast_HD.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_idetude.png} yast_idetude.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_joystick.png} yast_joystick.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_mouse.png} yast_mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_printer.png} yast_printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_soundcard.png} yast_soundcard.png

emblems
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-favorite.png} emblem-favorite.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-important.png} emblem-important.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-noread.png} emblem-noread.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-nowrite.png} emblem-nowrite.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-photos.png} emblem-photos.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-readonly.png} emblem-readonly.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-symbolic-link.png} emblem-symbolic-link.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-system.png} emblem-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-unreadable.png} emblem-unreadable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\stock_mail-priority-high.png} stock_mail-priority-high.png

emotes
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-angel.png} face-angel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-crying.png} face-crying.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-devilish.png} face-devilish.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-glasses.png} face-glasses.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-grin.png} face-grin.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-kiss.png} face-kiss.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-monkey.png} face-monkey.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-plain.png} face-plain.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-sad.png} face-sad.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-smile-big.png} face-smile-big.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-smile.png} face-smile.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-surprise.png} face-surprise.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-wink.png} face-wink.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-1.png} stock_smiley-1.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-11.png} stock_smiley-11.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-13.png} stock_smiley-13.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-18.png} stock_smiley-18.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-2.png} stock_smiley-2.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-22.png} stock_smiley-22.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-3.png} stock_smiley-3.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-4.png} stock_smiley-4.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-5.png} stock_smiley-5.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-6.png} stock_smiley-6.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-7.png} stock_smiley-7.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-8.png} stock_smiley-8.png

mimetypes
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\application-certificate.png} application-certificate.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\application-x-executable.png} application-x-executable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\ascii.png} ascii.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\audio-x-generic.png} audio-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\binary.png} binary.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\contents2.png} contents2.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\deb.png} deb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\document.png} document.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\empty.png} empty.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\exec.png} exec.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\folder_tar.png} folder_tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font-x-generic.png} font-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font.png} font.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font_bitmap.png} font_bitmap.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font_truetype.png} font_truetype.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font_type1.png} font_type1.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-fs-executable.png} gnome-fs-executable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-magicpoint.png} gnome-mime-application-magicpoint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-msword.png} gnome-mime-application-msword.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-ogg.png} gnome-mime-application-ogg.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-pdf.png} gnome-mime-application-pdf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-postscript.png} gnome-mime-application-postscript.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-rtf.png} gnome-mime-application-rtf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.lotus-1-2-3.png} gnome-mime-application-vnd.lotus-
1-2-3.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.ms-excel.png} gnome-mime-application-vnd.ms-excel.
png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.ms-powerpoint.png} gnome-mime-application-vnd.ms-p
owerpoint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.graphics-template.png} gnome-mi
me-application-vnd.oasis.opendocument.graphics-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.graphics.png} gnome-mime-applic
ation-vnd.oasis.opendocument.graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.image.png} gnome-mime-applicati
on-vnd.oasis.opendocument.image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.presentation-template.png} gnom
e-mime-application-vnd.oasis.opendocument.presentation-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.presentation.png} gnome-mime-ap
plication-vnd.oasis.opendocument.presentation.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.spreadsheet-template.png} gnome
-mime-application-vnd.oasis.opendocument.spreadsheet-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.spreadsheet.png} gnome-mime-app
lication-vnd.oasis.opendocument.spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.text-template.png} gnome-mime-a
pplication-vnd.oasis.opendocument.text-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.text-web.png} gnome-mime-applic
ation-vnd.oasis.opendocument.text-web.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.text.png} gnome-mime-applicatio
n-vnd.oasis.opendocument.text.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.rn-realmedia-secure.png} gnome-mime-application-vn
d.rn-realmedia-secure.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.rn-realmedia-vbr.png} gnome-mime-application-vnd.r
n-realmedia-vbr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.rn-realmedia.png} gnome-mime-application-vnd.rn-re
almedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.stardivision.calc.png} gnome-mime-application-vnd.
stardivision.calc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.stardivision.impress.png} gnome-mime-application-v
nd.stardivision.impress.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.stardivision.writer.png} gnome-mime-application-vn
d.stardivision.writer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.calc.png} gnome-mime-application-vnd.sun.x
ml.calc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.calc.template.png} gnome-mime-application-
vnd.sun.xml.calc.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.draw.png} gnome-mime-application-vnd.sun.x
ml.draw.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.draw.template.png} gnome-mime-application-
vnd.sun.xml.draw.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.impress.png} gnome-mime-application-vnd.su
n.xml.impress.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.impress.template.png} gnome-mime-applicati
on-vnd.sun.xml.impress.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.writer.png} gnome-mime-application-vnd.sun
.xml.writer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.writer.template.png} gnome-mime-applicatio
n-vnd.sun.xml.writer.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-wordperfect.png} gnome-mime-application-wordperfect.pn
g
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-7z-compressed.png} gnome-mime-application-x-7z-compr
essed.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-abiword.png} gnome-mime-application-x-abiword.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-applix-spreadsheet.png} gnome-mime-application-x-app
lix-spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-applix-word.png} gnome-mime-application-x-applix-wor
d.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-archive.png} gnome-mime-application-x-archive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-arj.png} gnome-mime-application-x-arj.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-bzip-compressed-tar.png} gnome-mime-application-x-bz
ip-compressed-tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-bzip.png} gnome-mime-application-x-bzip.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-compress.png} gnome-mime-application-x-compress.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-compressed-tar.png} gnome-mime-application-x-compres
sed-tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-cpio-compressed.png} gnome-mime-application-x-cpio-c
ompressed.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-cpio.png} gnome-mime-application-x-cpio.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-deb.png} gnome-mime-application-x-deb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-dvi.png} gnome-mime-application-x-dvi.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-executable.png} gnome-mime-application-x-executable.
png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-afm.png} gnome-mime-application-x-font-afm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-bdf.png} gnome-mime-application-x-font-bdf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-linux-psf.png} gnome-mime-application-x-font-li
nux-psf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-pcf.png} gnome-mime-application-x-font-pcf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-sunos-news.png} gnome-mime-application-x-font-s
unos-news.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-ttf.png} gnome-mime-application-x-font-ttf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-gnumeric.png} gnome-mime-application-x-gnumeric.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-gzip.png} gnome-mime-application-x-gzip.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-gzpostscript.png} gnome-mime-application-x-gzpostscr
ipt.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-jar.png} gnome-mime-application-x-jar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-killustrator.png} gnome-mime-application-x-killustra
tor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-kpresenter.png} gnome-mime-application-x-kpresenter.
png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-kspread.png} gnome-mime-application-x-kspread.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-kword.png} gnome-mime-application-x-kword.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-lha.png} gnome-mime-application-x-lha.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-lhz.png} gnome-mime-application-x-lhz.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-ms-dos-executable.png} gnome-mime-application-x-ms-d
os-executable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-perl.png} gnome-mime-application-x-perl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-php.png} gnome-mime-application-x-php.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-python-bytecode.png} gnome-mime-application-x-python
-bytecode.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-rar.png} gnome-mime-application-x-rar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-rpm.png} gnome-mime-application-x-rpm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-scribus.png} gnome-mime-application-x-scribus.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-shellscript.png} gnome-mime-application-x-shellscrip
t.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-shockwave-flash.png} gnome-mime-application-x-shockw
ave-flash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-stuffit.png} gnome-mime-application-x-stuffit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-tar.png} gnome-mime-application-x-tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-tarz.png} gnome-mime-application-x-tarz.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-tex.png} gnome-mime-application-x-tex.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-xhtml+xml.png} gnome-mime-application-xhtml+xml.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-zip.png} gnome-mime-application-zip.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-audio.png} gnome-mime-audio.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-image.png} gnome-mime-image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-html.png} gnome-mime-text-html.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-vnd.wap.wml.png} gnome-mime-text-vnd.wap.wml.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-csh.png} gnome-mime-text-x-csh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-python.png} gnome-mime-text-x-python.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-sh.png} gnome-mime-text-x-sh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-vcalendar.png} gnome-mime-text-x-vcalendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-vcard.png} gnome-mime-text-x-vcard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-zsh.png} gnome-mime-text-x-zsh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text.png} gnome-mime-text.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-video.png} gnome-mime-video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-x-font-afm.png} gnome-mime-x-font-afm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-package.png} gnome-package.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\html.png} html.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\image-x-generic.png} image-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\image.png} image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\kpresenter_kpr.png} kpresenter_kpr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\mime_ascii.png} mime_ascii.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\misc.png} misc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package-x-generic.png} package-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package.png} package.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package_editors.png} package_editors.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package_wordprocessing.png} package_wordprocessing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\plan.png} plan.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\rpm.png} rpm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\shellscript.png} shellscript.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\sound.png} sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\spreadsheet.png} spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_addressbook.png} stock_addressbook.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_calendar.png} stock_calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_certificate.png} stock_certificate.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_script.png} stock_script.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\tar.png} tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\template_source.png} template_source.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-html.png} text-html.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-x-generic-template.png} text-x-generic-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-x-generic.png} text-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-x-script.png} text-x-script.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\tgz.png} tgz.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\txt.png} txt.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\txt2.png} txt2.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\unknown.png} unknown.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\vcalendar.png} vcalendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\vcard.png} vcard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\video-x-generic.png} video-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\video.png} video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\wordprocessing.png} wordprocessing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\www.png} www.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-address-book.png} x-office-address-book.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-calendar.png} x-office-calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-document-template.png} x-office-document-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-document.png} x-office-document.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-drawing-template.png} x-office-drawing-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-drawing.png} x-office-drawing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-presentation-template.png} x-office-presentation-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-presentation.png} x-office-presentation.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-spreadsheet-template.png} x-office-spreadsheet-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-spreadsheet.png} x-office-spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\zip.png} zip.png

places
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\application-x-gnome-saved-search.png} application-x-gnome-saved-search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\desktop.png} desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\distributor-logo.png} distributor-logo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\emptytrash.png} emptytrash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder-remote.png} folder-remote.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder-saved-search.png} folder-saved-search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder.png} folder.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder_home.png} folder_home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-desktop.png} gnome-fs-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-directory.png} gnome-fs-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-ftp.png} gnome-fs-ftp.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-home.png} gnome-fs-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-network.png} gnome-fs-network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-nfs.png} gnome-fs-nfs.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-server.png} gnome-fs-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-share.png} gnome-fs-share.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-smb.png} gnome-fs-smb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-ssh.png} gnome-fs-ssh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-trash-empty.png} gnome-fs-trash-empty.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-main-menu.png} gnome-main-menu.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-nfs-server.png} gnome-mime-x-directory-nfs-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-smb-server.png} gnome-mime-x-directory-smb-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-smb-share.png} gnome-mime-x-directory-smb-share.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-smb-workgroup.png} gnome-mime-x-directory-smb-workgroup.p
ng
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-stock-trash.png} gnome-stock-trash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gtk-directory.png} gtk-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gtk-network.png} gtk-network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network-server.png} network-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network-workgroup.png} network-workgroup.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network.png} network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network_local.png} network_local.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\novell-button.png} novell-button.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\redhat-network-server.png} redhat-network-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\server.png} server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\start-here.png} start-here.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\stock_folder.png} stock_folder.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\trashcan_empty.png} trashcan_empty.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\user-desktop.png} user-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\user-home.png} user-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\user-trash.png} user-trash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\xfce-trash_empty.png} xfce-trash_empty.png

status
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-high.png} audio-volume-high.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-low.png} audio-volume-low.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-medium.png} audio-volume-medium.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-muted.png} audio-volume-muted.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\battery-caution.png} battery-caution.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\connect_creating.png} connect_creating.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\connect_established.png} connect_established.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\connect_no.png} connect_no.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\dialog-error.png} dialog-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\dialog-information.png} dialog-information.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\dialog-warning.png} dialog-warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\edittrash.png} edittrash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\error.png} error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder-drag-accept.png} folder-drag-accept.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder-open.png} folder-open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder-visiting.png} folder-visiting.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder_open.png} folder_open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-dev-wavelan-encrypted.png} gnome-dev-wavelan-encrypted.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-directory-accept.png} gnome-fs-directory-accept.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-directory-visiting.png} gnome-fs-directory-visiting.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-loading-icon.png} gnome-fs-loading-icon.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-trash-full.png} gnome-fs-trash-full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-disconn.png} gnome-netstatus-disconn.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-error.png} gnome-netstatus-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-idle.png} gnome-netstatus-idle.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-rx.png} gnome-netstatus-rx.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-tx.png} gnome-netstatus-tx.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-txrx.png} gnome-netstatus-txrx.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-stock-trash-full.png} gnome-stock-trash-full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-dialog-error.png} gtk-dialog-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-dialog-info.png} gtk-dialog-info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-dialog-warning.png} gtk-dialog-warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-directory.png} gtk-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-missing-image.png} gtk-missing-image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\image-loading.png} image-loading.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\image-missing.png} image-missing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\important.png} important.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\info.png} info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\mail-attachment.png} mail-attachment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\messagebox_critical.png} messagebox_critical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\messagebox_info.png} messagebox_info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\messagebox_warning.png} messagebox_warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-error.png} network-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-idle.png} network-idle.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-offline.png} network-offline.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-receive.png} network-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-transmit-receive.png} network-transmit-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-transmit.png} network-transmit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-wireless-encrypted.png} network-wireless-encrypted.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-adhoc.png} nm-adhoc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-device-wired.png} nm-device-wired.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-device-wireless.png} nm-device-wireless.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-no-connection.png} nm-no-connection.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\printer-error.png} printer-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\software-update-available.png} software-update-available.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\software-update-urgent.png} software-update-urgent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_attach.png} stock_attach.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_dialog-error.png} stock_dialog-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_dialog-info.png} stock_dialog-info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_dialog-warning.png} stock_dialog-warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_open.png} stock_open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_trash_full.png} stock_trash_full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-0.png} stock_volume-0.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-max.png} stock_volume-max.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-med.png} stock_volume-med.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-min.png} stock_volume-min.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-mute.png} stock_volume-mute.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume.png} stock_volume.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-cloudy.png} stock_weather-cloudy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-few-clouds.png} stock_weather-few-clouds.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-night-clear.png} stock_weather-night-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-night-few-clouds.png} stock_weather-night-few-clouds.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-showers.png} stock_weather-showers.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-snow.png} stock_weather-snow.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-storm.png} stock_weather-storm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-sunny.png} stock_weather-sunny.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\sunny.png} sunny.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\trashcan_full.png} trashcan_full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\user-trash-full.png} user-trash-full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-clear-night.png} weather-clear-night.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-clear.png} weather-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-few-clouds-night.png} weather-few-clouds-night.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-few-clouds.png} weather-few-clouds.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-overcast.png} weather-overcast.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-severe-alert.png} weather-severe-alert.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-showers-scattered.png} weather-showers-scattered.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-showers.png} weather-showers.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-snow.png} weather-snow.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-storm.png} weather-storm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\xfce-trash_full.png} xfce-trash_full.png

</t>
<t tx="ekr.20071117152614">import sys

at = c.atFileCommands

at.outputFile = sys.stdout
print '0123456789' * 2
at.putBuffered('\ta\n    \tb\nc\n')
print ; print 'done'</t>
<t tx="ekr.20071124153244"># A minimal python server for testing.
# To access this server, type this url in a web browser: http://localhost:8080/
# The server will print the contents of the directory from which it was invoked.
# Choose hello.html to see the 'Hello World' test page.

import CGIHTTPServer
import SocketServer

port = 8080

Handler = CGIHTTPServer.CGIHTTPRequestHandler
s = SocketServer.TCPServer(("", port), Handler)

# def myExecutable(path):
#    return True
# SocketServer.executable = myExecutable

s.server_name = '127.0.0.1' # represents local host.
s.server_port = port

# import os ; print 'cwd', os.getcwd()

print "server.py: serving at port", port
s.serve_forever()
</t>
<t tx="ekr.20071124155034">@language html

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;&lt;/title&gt;

&lt;!-- Used by edward.old.py
&lt;script language="JavaScript" type="text/javascript"&gt;
   var openImg = new Image();
   openImg.src = "open.gif";
   var closedImg = new Image();
   closedImg.src = "closed.gif";

   function showNode(node) {
      var objBranch = 
         document.getElementById(node).style;
      if(objBranch.display=="block")
         objBranch.display="none";
      else
         objBranch.display="block";
   }

   function swapFolder(img) {
      objImg = document.getElementById(img);
      if(objImg.src.indexOf('closed.gif')&gt;-1)
         objImg.src = openImg.src;
      else
         objImg.src = closedImg.src;
   }
&lt;/script&gt;
--&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;form action="cgi-bin/edward.py" method="GET"&gt;
&lt;input type="submit" name="George"&gt;
&lt;/form&gt;

&lt;p&gt;This is the hello world test page.
The server in server.py should be running when using this page.

&lt;p&gt;The button (form) above should cause the server to send a "GET" request
to the edward.py script, which will respond with a new page.

&lt;/body&gt;
&lt;/html&gt;
</t>
<t tx="ekr.20071124160243">@first #! c:\python25\python.exe
@first # -*- coding: utf-8 -*-

# To do: use cgi.FieldStorage.

'''This is the cgi script called from hello.html when the user hits the button.'''

@language python
@tabwidth -4
import leoBridge
import cgi
import cgitb ; cgitb.enable()
&lt;&lt; define dhtml stuff &gt;&gt;
@others

path = r'c:\prog\tigris-cvs\leo\test\test.leo'

b = leoBridge.controller(gui='nullGui',loadPlugins=False,readSettings=False,verbose=False)
g = b.globals()
c = b.openLeoFile(path)
p = c.rootPosition()
# import os; print os.getcwd()

# import pdb ; pdb.Pdb() # Doesn't work.
print_all(c)</t>
<t tx="ekr.20071124195608"># The html has been validated by html-tidy: http://tidy.sourceforge.net/
</t>
<t tx="ekr.20071126145358">@

edward.py:
    
How can we get the content of an input form?</t>
<t tx="ekr.20071127232245">#!/usr/bin/env python
from Tkinter import *
root = Tk()
w = Label(root, text="Hello world!")
w.pack()
root.mainloop()
</t>
<t tx="ekr.20071128122043">log = c.frame.log ; tag = 'Shell'
frame1 = log.frameDict.get(tag)
shellKind = 'text' # in ('plain','text','canvas')

if frame1:
    log.selectTab(tag)
elif shellKind == 'plain':
    log.selectTab (tag,createText=False)
    frame = log.frameDict.get(tag)
elif shellKind == 'text':
    log.selectTab (tag,createText=True)
    frame = log.textDict.get(tag)
elif shellKind == 'canvas':
    log.createCanvas(tag)
    log.selectTab(tag)
    frame = log.canvasDict.get(tag)
else:
    frame = None
    g.es('bad shellKind',shellKind)

if frame and not frame1:
    frame.configure(bg='white')
    print 'logFrame',log.frameDict.get(tag)
</t>
<t tx="ekr.20071129090337">@language perl

# comment.

print "abc"

foreach (keys(%entries)) {

    next if ($_ eq '.snapshot' or
        $_ eq '.' or
        $_ eq '..');
}</t>
<t tx="ekr.20071129103842"># A script to create @auto nodes from all .py files in a directory.

import glob,os

reallyCreate = False
baseDir = r'c:\Python25\Lib\site-packages\pubsub'
dirs = ('',) #'Extensions','UserConfig',)
print '-----'

c.beginUpdate()
try:
    for theDir in dirs:
        pattern = g.os_path_join(baseDir,theDir,'*.py')
        files = glob.glob(pattern)
        print pattern
        # print g.listToString(files)
        for name in files:
            h = '@auto %s' % (name[len(baseDir) + 1:].strip())
            print 'creating',h
            if reallyCreate:
                child = p.insertAsLastChild()
                child.initHeadString(h)
finally:
    c.endUpdate()
</t>
<t tx="ekr.20071201065815">@language python
@tabwidth -4
@others
</t>
<t tx="ekr.20071201073632">
class Index: 
    pass 
 
</t>
<t tx="ekr.20071201073632.1">def main(): 
    pass 
</t>
<t tx="ekr.20071205142535">@

LeoToHTML by Dan Rahmel, modified by EKR.

This @button script creates an .htm file containing the contents of the selected tree.
The file is called x.htm, where x is the name of the .leo file containing the script.
This file is written to the leo/test folder.

The script inserts javascript into the page so that nodes can be expanded and contracted.

The script presently works well.  This script may become the basis for a facebook app.

The generated html passes html-tidy: http://www.w3.org/People/Raggett/tidy/
</t>
<t tx="ekr.20071205144151"># def writePreamble(f):

    # '''Write HTML header information.'''

    # header_start = '''\


# &lt;body class="st" onload="format()"&gt;
# '''

    # for s in (header_start,style,javascript,header_end):
        # # f.write(g.adjustTripleString(s,c.tab_width))
        # f.write(s)
</t>
<t tx="ekr.20071205144151.1">def writeContents(f):

    div = "&lt;div class='c' STYLE='margin-left:4em;margin-top:0em; margin-bottom:0em;'&gt;\n&lt;pre&gt;\n%s\n&lt;/pre&gt;\n&lt;/div&gt;"
    end_div = "&lt;/div&gt;\n&lt;/div&gt;\n"
    n = 1 # The node number
    current = c.currentPosition()
    prev_level = current.level()
    open_divs = 0
    for p in current.self_and_subtree_iter():
        h = p.headString()
        while prev_level &gt;= p.level() and open_divs &gt; 0:
            f.write(end_div)
            prev_level -= 1
            open_divs -= 1
        body = p.bodyString().encode( "utf-8" )
        body = body.rstrip().rstrip("\n")
        f.write(division % (n,escape(h),n))
        open_divs += 1
        if body:
            f.write(div % escape(body))
        prev_level = p.level()
        n += 1

    # Close all divisions.
    while open_divs &gt; 0:
        f.write(end_div)
        open_divs -= 1
</t>
<t tx="ekr.20071205152904">division = """
&lt;div STYLE="margin-left:3em;text-indent:0em;margin-top:0em; margin-bottom:0em;"&gt;
&lt;h3 onClick="expandcontent('sc%d')" style="cursor:hand; cursor:pointer; margin-top:0em; margin-bottom:0em"&gt;+ %s&lt;/h3&gt;
    &lt;div id="sc%d" class="switchcontent" style="margin-top:0em; margin-bottom:0em;"&gt;
"""

javascript  = """
&lt;script src="cgi-bin/leo.js" type="text/javascript"&gt;&lt;/script&gt;
"""

style = '''
&lt;STYLE type="text/css"&gt;
    BODY {font:x-medium 'Verdana'; margin-right:1.5em}
    PRE {margin:0px; display:inline}
&lt;/STYLE&gt;
'''
</t>
<t tx="ekr.20071205160026">def escape (s):

    return s.replace('&amp;','&amp;amp;').replace('&lt;','&amp;lt;').replace('&gt;','&amp;gt;')
</t>
<t tx="ekr.20071206070207"></t>
<t tx="ekr.20071207164625"># def writePostamble (f):

    # pass

</t>
<t tx="ekr.20071210125008"></t>
<t tx="ekr.20071210145720">def print_all(c):

    # This line is required (with extra newline), but does not show on the page.
    print "Content-type:text/html\n"

    print '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt;'
    print '&lt;html&gt;'
    print_head(c)
    print_body(c)
    print '&lt;/html&gt;'
</t>
<t tx="ekr.20071210145720.1">def print_body(c):

    print '&lt;body class="st" onload="format()"&gt;'

    form = cgi.FieldStorage()
    print repr(form)
    # if form.has_key('name'):
        # print 'name',form['name'].value
    # else:
        # print 'no name'
    print_tree(c)
    print '&lt;/body&gt;'
</t>
<t tx="ekr.20071210145720.2">def print_head(c):

    print '&lt;head&gt;'

    if 1: # Copy the entire leo.js file into the page.
        print '&lt;script type="text/javascript"&gt;'
        print_leo_dot_js(c)
        print '&lt;/script&gt;'

    else: # Possible bug in the python server??
        # The Python says leo.js is not executable(!)
        print '&lt;script src="leo.js" type="text/javascript"&gt;&lt;/script&gt;'

    print '&lt;title&gt;%s&lt;/title&gt;' % (c.shortFileName())
    print '&lt;/head&gt;'
</t>
<t tx="ekr.20071210150314.2">division = """
&lt;div STYLE="margin-left:3em;text-indent:0em;margin-top:0em; margin-bottom:0em;"&gt;
&lt;h3 onClick="expandcontent('sc%d')" style="cursor:hand; cursor:pointer; margin-top:0em; margin-bottom:0em"&gt;+ %s&lt;/h3&gt;
    &lt;div id="sc%d" class="switchcontent" style="margin-top:0em; margin-bottom:0em;"&gt;
"""

style = """
&lt;STYLE type="text/css"&gt;
    BODY {font:x-medium 'Verdana'; margin-right:1.5em}
    PRE {margin:0px; display:inline}
&lt;/STYLE&gt;
"""</t>
<t tx="ekr.20071210150314.6">def escape (s):

    return s.replace('&amp;','&amp;amp;').replace('&lt;','&amp;lt;').replace('&gt;','&amp;gt;')
</t>
<t tx="ekr.20071210150314.7">def print_tree(c):

    div = "&lt;div class='c' STYLE='margin-left:4em;margin-top:0em; margin-bottom:0em;'&gt;\n&lt;pre&gt;\n%s\n&lt;/pre&gt;\n&lt;/div&gt;"
    end_div = "&lt;/div&gt;\n&lt;/div&gt;\n"
    n = 1 # The node number
    prev_level = 0
    open_divs = 0
    for p in c.allNodes_iter():
        h = p.headString()
        while prev_level &gt;= p.level() and open_divs &gt; 0:
            print end_div
            prev_level -= 1
            open_divs -= 1
        body = p.bodyString().encode( "utf-8" )
        body = body.rstrip().rstrip("\n")
        print division % (n,escape(h),n)
        open_divs += 1
        if body: print div % escape(body)
        prev_level = p.level()
        n += 1

    # Close all divisions.
    while open_divs &gt; 0:
        print end_div
        open_divs -= 1
</t>
<t tx="ekr.20071210155555">def print_leo_dot_js(c):

    path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','cgi-bin','leo.js'))

    try:
        f = file(path)
    except IOError:
        print 'can not open',path
        return

    for line in f.readlines():
        print line,

    f.close()
</t>
<t tx="ekr.20071210181436">def writeAll(f):

    f.write('&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt;')
    f.write('&lt;html&gt;')
    writeHead(f)
    writeBody(f)
    f.write("&lt;/html&gt;")
</t>
<t tx="ekr.20071210181436.1">def writeBody(f):

    f.write('&lt;body class="st" onload="format()"&gt;')
    writeContents(f)
    f.write("&lt;/body&gt;")
</t>
<t tx="ekr.20071210181436.2">def writeHead(f):

    f.write('&lt;head&gt;')
    f.write(style)
    f.write(javascript)
    f.write('&lt;title&gt;%s&lt;/title&gt;' % c.shortFileName())
    f.write('&lt;/head&gt;')
</t>
<t tx="ekr.20080105115712"># This hangs Leo while pylint is running.
import pylint.lint as lint
import sys

rcFile = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','pylint-leo-rc.txt'))
rcArg = '--rcfile=%s' % rcFile
&lt;&lt; define data &gt;&gt;

# We expect only one W104 error, in leoGlobals.py
print ; print '=' * 40
for name,s in data:
    name2 = g.os_path_abspath(g.os_path_join(g.app.loadDir,name))
    args = [name2,rcArg]
    if s.strip():
        args.append('--disable-msg=%s' % s)
    print name,s
    lint.Run(args)
print ; print 'End of pylint run'</t>
<t tx="ekr.20080105120559">data = (
    ('leoAtFile.py',''), 
    ('leoChapters.py',''),
    ('leoCommands.py',''), 
    ('leoEditCommands.py','E1101'),
    ('leoFileCommands.py',''), 
    ('leoFind.py',''),
    ('leoFrame.py',''),
    ('leoGlobals.py','E0602,E1101'),
    ('leoGui.py',''),
    ('leoImport.py',''),
    ('leoMenu.py',''),
    ('leoNodes.py',''),
    ('leoPlugins.py',''),
    ('leoTangle.py',''),
    ('leoUndo.py','W0102'),
    ('leoTkinterDialog.py',''),
    ('leoTkinterFind.py',''),
    ('leoTkinterGui.py',''),
    ('leoTkinterFrame.py','W0221'),
    ('leoTkinterKeys.py',''), 
    ('leoTkinterMenu.py',''), 
    ('leoTkinterTree.py',''),
)
</t>
<t tx="ekr.20080105130903">@nocolor
@
C0111 Missing docstring
C0301 Line too long
C0311 Bad indentation
C0321 More than one statement on a single line
C0322 Operator not preceded by a space
C0323 Operator not followed by a space
C0324 Comma not followed by a space

R0201 Method could be a function.
R0903 Too few public methods (0/1)

W0102 Dangerous default value [] as argument
W0104 Statement seems to have no effect
W0106 Unnecessary semicolon
W0107 Unnecessary pass statement
W0122 Use of the exec statement
W0141 Used builtin function 'map'
W0142 Used * or * magic*
W0201 Attribute defined outside __init__
W0212 Access to a protected member of a client class
W0231 __init__ method from base class is not called
W0232 Class has no __init__ method
W0401 Wildcard import (pychecker)
W0402 Uses of a deprecated module (like string)
W0404 Reimport &lt;module&gt;: let pychecker do this.
W0406 Module import itself
W0602 Using global for x but no assigment is done (leoEditCommands defines classList after all classes).
W0603 Using the global statement
W0612 Unused variable
W0613 Unused argument (sometimes used for debugging)
W0621 Redefining &lt;name&gt; from outer scope: especially __pychecker__
W0622 Redefining built-in
W0631 Using possibly undefined loop variable
W0702 No exception type specified
W0703 Catch "Exception"
W0704 Except doesn't do anything (Except: pass)
W1111 Assigning to a function call that only returns None</t>
<t tx="ekr.20080108091619"></t>
<t tx="ekr.20080108092210"># Inserts the icon in the presently selected node.
# path is an absolute path or a path relative to the leo/Icons folder.

path = 'rt_arrow_disabled.gif'
c.editCommands.insertIconFromFile(path)</t>
<t tx="ekr.20080108092210.1"># Deletes all icons from the presently selected node.
c.editCommands.deleteNodeIcons()</t>
<t tx="ekr.20080115085447">@nocolor
@

************* Module leoGlobals
W0104:3871: Statement seems to have no effect
</t>
<t tx="ekr.20080118100049">#!/usr/bin/env python
"""/cairo-demo/cairo_snippets/gradient.cairo translated to Python
"""

import math
import cairo

WIDTH, HEIGHT  = 256, 256

surface = cairo.ImageSurface(cairo.FORMAT_ARGB32, WIDTH, HEIGHT)
ctx = cairo.Context(surface)

ctx.scale (WIDTH/1.0, HEIGHT/1.0)

pat = cairo.LinearGradient (0.0, 0.0, 0.0, 1.0)
pat.add_color_stop_rgba (1, 0, 0, 0, 1)
pat.add_color_stop_rgba (0, 1, 1, 1, 1)

ctx.rectangle (0,0,1,1)
ctx.set_source (pat)
ctx.fill ()

pat = cairo.RadialGradient (0.45, 0.4, 0.1,
                            0.4,  0.4, 0.5)
pat.add_color_stop_rgba (0, 1, 1, 1, 1)
pat.add_color_stop_rgba (1, 0, 0, 0, 1)

ctx.set_source (pat)
ctx.arc (0.5, 0.5, 0.3, 0, 2 * math.pi)
ctx.fill ()

surface.write_to_png('gradient.png')

g.es_print('wrote leo/test/gradient.png',color='blue')
</t>
<t tx="ekr.20080127215337">pat1 = 'import leo'
pat2 = 'import leo.core.' # use 'import leo.plugins.' for plugins.
pat3 = 'import leo.core.leo'
replace = False
print '=' * 20

for p in c.allNodes_iter():
    s = p.bodyString() ; h = p.headString()
    lines = g.splitLines(s)
    result = [] ; changed = False
    for line in lines:
        s2 = line.strip()
        if s2.startswith(pat1):
            changed = True
            if s2 == pat1:
                z = line.replace(pat1,pat3)
            else:
                i = line.find(pat1)
                n = i + len(pat1)
                line2 = line[:n] + line[n:n+1].lower() + line[n+1:]
                z = line2.replace(pat1,pat2)
            result.append(z)
            # print ('%35s: %s' % (h,line)),
            print ('%35s: %s' % (h,z)),
        else:
            result.append(line)
    result = ''.join(result)
    if replace and changed:
        c.setBodyString(p,result)
</t>
<t tx="ekr.20080128143841">import sys
# for z in sys.path: print z

from pkg_resources import require
require("ekrProj&gt;=0.0.1")

import ekrProj
print ekrProj</t>
<t tx="ekr.20080206055658">print 'settings...'
for z in ('body','button','headline','log','menu','outline'):
    for z2 in ('family','size','slant','weight',):
        setting = '%s_text_font_%s' % (z,z2)
        print setting,c.config.get(setting,z2)

print 'default sizes...'
for z in ('Body','Log','Menu','Tree'):
    setting = 'default%sFontSize' % z
    print setting,getattr(c.config,setting)

print 'actual fonts...'
for z in ('body','button','headline','log','menu','outline'):
    kind = ('family','size','slant','weight')
    arg0,arg1,arg2,arg3 = args = ['%s_text_font_%s' % (z,z2) for z2 in kind]
    setting = '%s_text_font' % (z)
    print '%20s' % (setting),c.config.getFontFromParams(arg0,arg1,arg2,arg3,defaultSize=12)
</t>
<t tx="ekr.20080210201921">@language pascal
@tabwidth -4
@others
</t>
<t tx="ekr.20080211085709">aList = range(10)

def isEven(x): return (x%2) == 0
def plusOne(x): return x + 1
def larger(x,y): return g.choose(x&gt;y,x,y)
def add(x,y): return x+y

# print filter(isEven,aList)

# print map(plusOne,aList)

print reduce(add,aList)

print [z for z in filter(isEven,aList)]</t>
<t tx="ekr.20080211090819"></t>
<t tx="ekr.20080211172530">unit Unit1;

</t>
<t tx="ekr.20080211172530.1">interface

uses
Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls,
Forms,
Dialogs;

type
TForm1 = class(TForm)
procedure FormCreate(Sender: TObject);
private
{ Private declarations }
public
{ Public declarations }
end;

var
Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
var
x,y: double;
begin
x:= 4;
Y := x/2;
end;

end.
</t>
<t tx="ekr.20080212035042">@language python
@tabwidth -4
@others
</t>
<t tx="ekr.20080212114457"># -*- coding: utf-8 -*-
r"""
changed ekr
&gt;&gt;&gt; import os
&gt;&gt;&gt; from django import newforms as forms
&gt;&gt;&gt; from tagging.forms import TagField
&gt;&gt;&gt; from tagging import settings
&gt;&gt;&gt; from tagging.models import Tag, TaggedItem
&gt;&gt;&gt; from tagging.tests.models import Article, Link, Perch, Parrot, FormTest
&gt;&gt;&gt; from tagging.utils import calculate_cloud, get_tag_list, get_tag, parse_tag_input
&gt;&gt;&gt; from tagging.utils import LINEAR
&gt;&gt;&gt; from tagging.validators import isTagList, isTag

#############
# Utilities #
#############

# Tag input ###################################################################

# Simple space-delimited tags
&gt;&gt;&gt; parse_tag_input('one')
[u'one']
&gt;&gt;&gt; parse_tag_input('one two')
[u'one', u'two']
&gt;&gt;&gt; parse_tag_input('one two three')
[u'one', u'three', u'two']
&gt;&gt;&gt; parse_tag_input('one one two two')
[u'one', u'two']

# Comma-delimited multiple words - an unquoted comma in the input will trigger
# this.
&gt;&gt;&gt; parse_tag_input(',one')
[u'one']
&gt;&gt;&gt; parse_tag_input(',one two')
[u'one two']
&gt;&gt;&gt; parse_tag_input(',one two three')
[u'one two three']
&gt;&gt;&gt; parse_tag_input('a-one, a-two and a-three')
[u'a-one', u'a-two and a-three']

# Double-quoted multiple words - a completed quote will trigger this.
# Unclosed quotes are ignored.
&gt;&gt;&gt; parse_tag_input('"one')
[u'one']
&gt;&gt;&gt; parse_tag_input('"one two')
[u'one', u'two']
&gt;&gt;&gt; parse_tag_input('"one two three')
[u'one', u'three', u'two']
&gt;&gt;&gt; parse_tag_input('"one two"')
[u'one two']
&gt;&gt;&gt; parse_tag_input('a-one "a-two and a-three"')
[u'a-one', u'a-two and a-three']

# No loose commas - split on spaces
&gt;&gt;&gt; parse_tag_input('one two "thr,ee"')
[u'one', u'thr,ee', u'two']

# Loose commas - split on commas
&gt;&gt;&gt; parse_tag_input('"one", two three')
[u'one', u'two three']

# Double quotes can contain commas
&gt;&gt;&gt; parse_tag_input('a-one "a-two, and a-three"')
[u'a-one', u'a-two, and a-three']
&gt;&gt;&gt; parse_tag_input('"two", one, one, two, "one"')
[u'one', u'two']

# Bad users! Naughty users!
&gt;&gt;&gt; parse_tag_input(None)
[]
&gt;&gt;&gt; parse_tag_input('')
[]
&gt;&gt;&gt; parse_tag_input('"')
[]
&gt;&gt;&gt; parse_tag_input('""')
[]
&gt;&gt;&gt; parse_tag_input('"' * 7)
[]
&gt;&gt;&gt; parse_tag_input(',,,,,,')
[]
&gt;&gt;&gt; parse_tag_input('",",",",",",","')
[u',']
&gt;&gt;&gt; parse_tag_input('a-one "a-two" and "a-three')
[u'a-one', u'a-three', u'a-two', u'and']

# Normalised Tag list input ###################################################
&gt;&gt;&gt; cheese = Tag.objects.create(name='cheese')
&gt;&gt;&gt; toast = Tag.objects.create(name='toast')
&gt;&gt;&gt; get_tag_list(cheese)
[&lt;Tag: cheese&gt;]
&gt;&gt;&gt; get_tag_list('cheese toast')
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list('cheese,toast')
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list([])
[]
&gt;&gt;&gt; get_tag_list(['cheese', 'toast'])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list([cheese.id, toast.id])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list(['cheese', 'toast', 'ŠĐĆŽćžšđ'])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list([cheese, toast])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list((cheese, toast))
(&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;)
&gt;&gt;&gt; get_tag_list(Tag.objects.filter(name__in=['cheese', 'toast']))
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list(['cheese', toast])
Traceback (most recent call last):
    ...
ValueError: If a list or tuple of tags is provided, they must all be tag names, Tag objects or Tag ids.
&gt;&gt;&gt; get_tag_list(29)
Traceback (most recent call last):
    ...
ValueError: The tag input given was invalid.

# Normalised Tag input
&gt;&gt;&gt; get_tag(cheese)
&lt;Tag: cheese&gt;
&gt;&gt;&gt; get_tag('cheese')
&lt;Tag: cheese&gt;
&gt;&gt;&gt; get_tag(cheese.id)
&lt;Tag: cheese&gt;
&gt;&gt;&gt; get_tag('mouse')

# Tag clouds ##################################################################
&gt;&gt;&gt; tags = []
&gt;&gt;&gt; for line in open(os.path.join(os.path.dirname(__file__), 'tags.txt')).readlines():
...     name, count = line.rstrip().split()
...     tag = Tag(name=name)
...     tag.count = int(count)
...     tags.append(tag)

&gt;&gt;&gt; sizes = {}
&gt;&gt;&gt; for tag in calculate_cloud(tags, steps=5):
...     sizes[tag.font_size] = sizes.get(tag.font_size, 0) + 1

# This isn't a pre-calculated test, just making sure it's consistent
&gt;&gt;&gt; sizes
{1: 48, 2: 30, 3: 19, 4: 15, 5: 10}

&gt;&gt;&gt; sizes = {}
&gt;&gt;&gt; for tag in calculate_cloud(tags, steps=5, distribution=LINEAR):
...     sizes[tag.font_size] = sizes.get(tag.font_size, 0) + 1

# This isn't a pre-calculated test, just making sure it's consistent
&gt;&gt;&gt; sizes
{1: 97, 2: 12, 3: 7, 4: 2, 5: 4}

&gt;&gt;&gt; calculate_cloud(tags, steps=5, distribution='cheese')
Traceback (most recent call last):
    ...
ValueError: Invalid distribution algorithm specified: cheese.

# Validators ##################################################################

&gt;&gt;&gt; isTagList('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbn bar', {})
Traceback (most recent call last):
    ...
ValidationError: [u'Each tag may be no more than 50 characters long.']

&gt;&gt;&gt; isTag('"test"', {})
&gt;&gt;&gt; isTag(',test', {})
&gt;&gt;&gt; isTag('f o o', {})
Traceback (most recent call last):
    ...
ValidationError: [u'Multiple tags were given.']
&gt;&gt;&gt; isTagList('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbn bar', {})
Traceback (most recent call last):
    ...
ValidationError: [u'Each tag may be no more than 50 characters long.']

###########
# Tagging #
###########

# Basic tagging ###############################################################

&gt;&gt;&gt; dead = Parrot.objects.create(state='dead')
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'foo,bar,"ter"')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: foo&gt;, &lt;Tag: ter&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(dead, '"foo" bar "baz"')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'foo')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'zip')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;, &lt;Tag: zip&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, '    ')
Traceback (most recent call last):
    ...
AttributeError: No tags were given: "    ".
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'one two')
Traceback (most recent call last):
    ...
AttributeError: Multiple tags were given: "one two".

# Note that doctest in Python 2.4 (and maybe 2.5?) doesn't support non-ascii
# characters in output, so we're displaying the repr() here.
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'ŠĐĆŽćžšđ')
&gt;&gt;&gt; repr(Tag.objects.get_for_object(dead))
'[&lt;Tag: \xc5\xa0\xc4\x90\xc4\x86\xc5\xbd\xc4\x87\xc5\xbe\xc5\xa1\xc4\x91&gt;]'

&gt;&gt;&gt; Tag.objects.update_tags(dead, None)
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[]

# Using a model's TagField
&gt;&gt;&gt; f1 = FormTest.objects.create(tags=u'test3 test2 test1')
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[&lt;Tag: test1&gt;, &lt;Tag: test2&gt;, &lt;Tag: test3&gt;]
&gt;&gt;&gt; f1.tags = u'test4'
&gt;&gt;&gt; f1.save()
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[&lt;Tag: test4&gt;]
&gt;&gt;&gt; f1.tags = ''
&gt;&gt;&gt; f1.save()
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[]

# Forcing tags to lowercase
&gt;&gt;&gt; settings.FORCE_LOWERCASE_TAGS = True
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'foO bAr Ter')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: foo&gt;, &lt;Tag: ter&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'foO bAr baZ')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'FOO')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'Zip')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;, &lt;Tag: zip&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(dead, None)
&gt;&gt;&gt; f1.tags = u'TEST5'
&gt;&gt;&gt; f1.save()
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[&lt;Tag: test5&gt;]
&gt;&gt;&gt; f1.tags
u'test5'

# Retrieving tags by Model ####################################################

&gt;&gt;&gt; Tag.objects.usage_for_model(Parrot)
[]
&gt;&gt;&gt; parrot_details = (
...     ('pining for the fjords', 9, True,  'foo bar'),
...     ('passed on',             6, False, 'bar baz ter'),
...     ('no more',               4, True,  'foo ter'),
...     ('late',                  2, False, 'bar ter'),
... )

&gt;&gt;&gt; for state, perch_size, perch_smelly, tags in parrot_details:
...     perch = Perch.objects.create(size=perch_size, smelly=perch_smelly)
...     parrot = Parrot.objects.create(state=state, perch=perch)
...     Tag.objects.update_tags(parrot, tags)

&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True)]
[(u'bar', 3), (u'baz', 1), (u'foo', 2), (u'ter', 3)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, min_count=2)]
[(u'bar', 3), (u'foo', 2), (u'ter', 3)]

# Limiting results to a subset of the model
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(state='no more'))]
[(u'foo', 1), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(state__startswith='p'))]
[(u'bar', 2), (u'baz', 1), (u'foo', 1), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(perch__size__gt=4))]
[(u'bar', 2), (u'baz', 1), (u'foo', 1), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(perch__smelly=True))]
[(u'bar', 1), (u'foo', 2), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, min_count=2, filters=dict(perch__smelly=True))]
[(u'foo', 2)]
&gt;&gt;&gt; [(tag.name, hasattr(tag, 'counts')) for tag in Tag.objects.usage_for_model(Parrot, filters=dict(perch__size__gt=4))]
[(u'bar', False), (u'baz', False), (u'foo', False), (u'ter', False)]
&gt;&gt;&gt; [(tag.name, hasattr(tag, 'counts')) for tag in Tag.objects.usage_for_model(Parrot, filters=dict(perch__size__gt=99))]
[]

# Related tags
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar']), Parrot, counts=True)]
[(u'baz', 1), (u'foo', 1), (u'ter', 2)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar']), Parrot, min_count=2)]
[(u'ter', 2)]
&gt;&gt;&gt; [tag.name for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar']), Parrot, counts=False)]
[u'baz', u'foo', u'ter']
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar', 'ter']), Parrot, counts=True)]
[(u'baz', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar', 'ter', 'baz']), Parrot, counts=True)]
[]

# Once again, with feeling (strings)
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model('bar', Parrot, counts=True)]
[(u'baz', 1), (u'foo', 1), (u'ter', 2)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model('bar', Parrot, min_count=2)]
[(u'ter', 2)]
&gt;&gt;&gt; [tag.name for tag in Tag.objects.related_for_model('bar', Parrot, counts=False)]
[u'baz', u'foo', u'ter']
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(['bar', 'ter'], Parrot, counts=True)]
[(u'baz', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(['bar', 'ter', 'baz'], Parrot, counts=True)]
[]

# Retrieving tagged objects by Model ##########################################

&gt;&gt;&gt; foo = Tag.objects.get(name='foo')
&gt;&gt;&gt; bar = Tag.objects.get(name='bar')
&gt;&gt;&gt; baz = Tag.objects.get(name='baz')
&gt;&gt;&gt; ter = Tag.objects.get(name='ter')
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, foo)
[&lt;Parrot: no more&gt;, &lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, bar)
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;, &lt;Parrot: pining for the fjords&gt;]

# Intersections are supported
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, [foo, baz])
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, [foo, bar])
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, [bar, ter])
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]

# You can also pass Tag QuerySets
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, Tag.objects.filter(name__in=['foo', 'baz']))
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, Tag.objects.filter(name__in=['foo', 'bar']))
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, Tag.objects.filter(name__in=['bar', 'ter']))
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]

# You can also pass strings and lists of strings
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'foo baz')
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'foo bar')
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'bar ter')
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, ['foo', 'baz'])
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, ['foo', 'bar'])
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, ['bar', 'ter'])
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]

# Issue 50 - Get by non-existent tag
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'argatrons')
[]

# Unions
&gt;&gt;&gt; TaggedItem.objects.get_union_by_model(Parrot, ['foo', 'ter'])
[&lt;Parrot: late&gt;, &lt;Parrot: no more&gt;, &lt;Parrot: passed on&gt;, &lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_union_by_model(Parrot, ['bar', 'baz'])
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;, &lt;Parrot: pining for the fjords&gt;]

# Retrieving related objects by Model #########################################

# Related instances of the same Model
&gt;&gt;&gt; l1 = Link.objects.create(name='link 1')
&gt;&gt;&gt; Tag.objects.update_tags(l1, 'tag1 tag2 tag3 tag4 tag5')
&gt;&gt;&gt; l2 = Link.objects.create(name='link 2')
&gt;&gt;&gt; Tag.objects.update_tags(l2, 'tag1 tag2 tag3')
&gt;&gt;&gt; l3 = Link.objects.create(name='link 3')
&gt;&gt;&gt; Tag.objects.update_tags(l3, 'tag1')
&gt;&gt;&gt; l4 = Link.objects.create(name='link 4')
&gt;&gt;&gt; TaggedItem.objects.get_related(l1, Link)
[&lt;Link: link 2&gt;, &lt;Link: link 3&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_related(l1, Link, num=1)
[&lt;Link: link 2&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_related(l4, Link)
[]

# Related instance of a different Model
&gt;&gt;&gt; a1 = Article.objects.create(name='article 1')
&gt;&gt;&gt; Tag.objects.update_tags(a1, 'tag1 tag2 tag3 tag4')
&gt;&gt;&gt; TaggedItem.objects.get_related(a1, Link)
[&lt;Link: link 1&gt;, &lt;Link: link 2&gt;, &lt;Link: link 3&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(a1, 'tag6')
&gt;&gt;&gt; TaggedItem.objects.get_related(a1, Link)
[]

################
# Model Fields #
################

# TagField ####################################################################

# Ensure that automatically created forms use TagField
&gt;&gt;&gt; class TestForm(forms.ModelForm):
...     class Meta:
...         model = FormTest
&gt;&gt;&gt; form = TestForm()
&gt;&gt;&gt; form.fields['tags'].__class__.__name__
'TagField'

# Recreating string representaions of tag lists ###############################
&gt;&gt;&gt; plain = Tag.objects.create(name='plain')
&gt;&gt;&gt; spaces = Tag.objects.create(name='spa ces')
&gt;&gt;&gt; comma = Tag.objects.create(name='com,ma')

&gt;&gt;&gt; from tagging.utils import edit_string_for_tags
&gt;&gt;&gt; edit_string_for_tags([plain])
u'plain'
&gt;&gt;&gt; edit_string_for_tags([plain, spaces])
u'plain, spa ces'
&gt;&gt;&gt; edit_string_for_tags([plain, spaces, comma])
u'plain, spa ces, "com,ma"'
&gt;&gt;&gt; edit_string_for_tags([plain, comma])
u'plain "com,ma"'
&gt;&gt;&gt; edit_string_for_tags([comma, spaces])
u'"com,ma", spa ces'

###############
# Form Fields #
###############

&gt;&gt;&gt; t = TagField()
&gt;&gt;&gt; t.clean('foo')
u'foo'
&gt;&gt;&gt; t.clean('foo bar baz')
u'foo bar baz'
&gt;&gt;&gt; t.clean('foo,bar,baz')
u'foo,bar,baz'
&gt;&gt;&gt; t.clean('foo, bar, baz')
u'foo, bar, baz'
&gt;&gt;&gt; t.clean('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvb bar')
u'foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvb bar'
&gt;&gt;&gt; t.clean('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbn bar')
Traceback (most recent call last):
    ...
ValidationError: [u'Each tag may be no more than 50 characters long.']
"""
</t>
<t tx="ekr.20080214091706.2">print 'hello from ekr'</t>
<t tx="ekr.20080223084414">def test (s,color='red',*args,**keys):
    g.es(args,keys)

test('s',color='red',newline=False)

test('s',newline=False,color='red')

# This fails, illustrating that we can't reliably mix keyword args with *args.
test('a','b',color='red',newline=False)
</t>
<t tx="ekr.20080229140820">if 0: # passed
    c.k.simulateCommand('about-leo')
elif 0: # passed.
    fileName = r'c:\prog\test\test2.leo'
    c.k.simulateCommand('save-file-as %s' % fileName)
elif 0: # passed
    fileName = r'c:\prog\test\test2.leo'
    c.k.simulateCommand('save-file-to %s' % fileName)
elif 0: # passed
    fileName = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))
    c.k.simulateCommand('open-outline %s' % fileName)
else: # passed
    fileName = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))
    c.k.simulateCommand('open-outline-by-name %s' % fileName)</t>
<t tx="ekr.20080310111916.1">def myTranslateString (s):

    i = s.lower().find('can not')
    if i == -1:
        return s
    else:
        return s[:i+1] + "an't" + s[i+7:]

g.translateString = myTranslateString

</t>
<t tx="ekr.20080412082246.1"></t>
<t tx="ekr.20080413195706.1">import pydispatch
g.es(pydispatch)
g.es(g.listToString(dir(pydispatch)))
</t>
<t tx="ekr.20080502120646.1">&lt;?php /*Cascade Style Sheet style1.css*/
?&gt;
&lt;link href="../stex.css" rel="stylesheet" type="text/css" /&gt;

&lt;?php
/*
Choice of language for website yes/no
*/
$ADD_LANGUAGE_CHOICE = 'yes';
/*
If 'Yes' you need to create images based on content/filename.htm
ex: /imgs/bttns_index.jpg
$NAV_IMAGES ='yes';
*/

?&gt;

&lt;?php /* Contact information */
$domain = "domain.com";

?&gt;

&lt;?php /* Content Script; reads .htm files in Content Directory */

//-- first section ends, second section begins

include('language.php');

$mycontentdir = "content"."/".$mylanguage;
if ($main_page == "") $main_page = "index";


$pagename = $main_page;
$ptitle = $company . " " . $main_page . " page " . $tel ." " . $city .
" " . $state . " " . $zip;

$main_page = "" . $main_page . ".htm";

/* if (is_file("$mycontentdir/$main_page")) {
$open = fopen("$mycontentdir/$main_page", "r");
$size = filesize("$mycontentdir/$main_page");
$content = fread($open, $size); */
//}
?&gt;

&lt;?php
/*Echo's Website*/
function hpo(){
echo '&lt;div class="hpo"&gt;whatever text goes here&lt;/a&gt; &lt;/div&gt;';
}
?&gt;
</t>
<t tx="ekr.20080503195928.1"></t>
<t tx="ekr.20080503202744.3">import rope.base.project
import rope.contrib.codeassist as codeassist
import leoGlobals as g
import leoCommands
c2 = leoCommands.Commands(frame=c.frame,fileName='xyz-file')

class leoFSCommands (object):
    def create_file(self,path):         g.trace(path)
    def create_folder(self,path):       g.trace(path)
    def move (self,path,new_location):  g.trace(path,new_location)
    def remove (self,path):             g.trace(path)
    def write (self,path,data):         g.trace(path,data)

path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','..'))
    # Make the trunk folder a project
project = rope.base.project.Project(path,fscommands=leoFSCommands)
s = p.bodyString() # Could simulate a write to allow @others.

print '*' * 40
for pattern in (
    # 'g.', # works.
    # 'g.trace(', # weird.
    # 'rope.base.', # works.
    'g.list', # works: gives g.listToString
    'c2.de', # works.
):
    i = s.find(pattern)
    if i &gt; -1:
        proposals = codeassist.code_assist(project,s,i+len(pattern))
        print '-' * 20
        print 'pattern:',pattern
        print g.listToString(proposals)</t>
<t tx="ekr.20080529111617.1"></t>
<t tx="ekr.20080529111617.2"></t>
<t tx="ekr.20080529111617.3">The colour used instead of green in progress bars</t>
<t tx="ekr.20080529111617.4">The colour used instead of red in progress bars</t>
<t tx="ekr.20080529111617.5"># list of @file node types to color.
# Uncomment these to enable coloring for these kinds of nodes.
# @asis
# @file
# @auto
# @thin
@auto</t>
<t tx="ekr.20080529111617.6">The base width of progress bars, in pixels.</t>
<t tx="ekr.20080529111617.7">The default number of time units.</t>
<t tx="ekr.20080529111617.8">0: no progress bars
1: unscaled progress bars
2: scaled progress bars</t>
<t tx="ekr.20080529111617.9">pixels per time unit to add to width of scaled progress bars</t>
<t tx="ekr.20080529111617.10">The name of time unit (e.g. days, weeks, hours)</t>
<t tx="ekr.20080531080812.1">def eggs():
    g.trace()

def spam():
    g.trace()
    eggs()

t = g.startTracer()
spam()
t.stop()
</t>
<t tx="ekr.20080531113507.1">import mx.TextTools as tt

&lt;&lt; define TextTools stuff &gt;&gt;
&lt;&lt; define s &gt;&gt;

@others

print '-' * 40
ok,taglist,nextindex = tt.tag(s,htmltable)
# print g.listToString(taglist)
for z in taglist:
    printItem(z,level=0)
print 'ok:',ok
</t>
<t tx="ekr.20080531113507.2">from mx.TextTools import * # Required for tags.
# Error tag object
error = '*syntax error'
# Character sets
tagname_charset = CharSet(alpha+'\-'+number)
tagattrname_charset = CharSet(alpha+'\-'+number)
tagvalue_charset = CharSet('^"\'&gt; ')
white_charset = CharSet(' \r\n\t')
tagname_charset = CharSet(alpha+'\-'+number)
tagattrname_charset = CharSet(alpha+'\-'+number)
tagvalue_charset = CharSet('^"\'&gt; ')
white_charset = CharSet(' \r\n\t')
# Tag attributes
tagattr = (
    # name
    ('name',AllInCharSet,tagattrname_charset),
    # with value ?
    (None,Is,'=',MatchOk),
    # skip junk
    (None,AllInCharSet,white_charset,+1),
    # unquoted value
    ('value',AllInCharSet,tagvalue_charset,+1,MatchOk),
    # double quoted value
    (None,Is,'"',+5),
    ('value',AllNotIn,'"',+1,+2),
    ('value',Skip,0),
    (None,Is,'"'),
    (None,Jump,To,MatchOk),
    # single quoted value
    (None,Is,'\''),
    ('value',AllNotIn,'\'',+1,+2),
    ('value',Skip,0),
    (None,Is,'\''),
)
# Tag values
valuetable = (
    # ignore whitespace + '='
    (None,AllInCharSet,CharSet(' \r\n\t='),+1),
    # unquoted value
    ('value',AllInCharSet,tagvalue_charset,+1,MatchOk),
    # double quoted value
    (None,Is,'"',+5),
    ('value',AllNotIn,'"',+1,+2),
    ('value',Skip,0),
    (None,Is,'"'),
    (None,Jump,To,MatchOk),
    # single quoted value
    (None,Is,'\''),
    ('value',AllNotIn,'\'',+1,+2),
    ('value',Skip,0),
    (None,Is,'\''),
)
# Parse all attributes of a tag
allattrs = (
    # look for attributes
    (None,AllInCharSet,white_charset,+4),
    (None,Is,'&gt;',+1,MatchOk),
    ('tagattr',Table,tagattr),
    (None,Jump,To,-3),
    (None,Is,'&gt;',+1,MatchOk),
    # handle incorrect attributes
    (error,AllNotIn,'&gt; \r\n\t'),
    (None,Jump,To,-6),
)
# NOTE: The htmltag tag table assumes that the input text is given
# in upper case letters (see &lt;XMP&gt; handling).
# Parse an HTML tag
htmltag = (
    (None,Is,'&lt;'),
    # is this a closing tag ?
    ('closetag',Is,'/',+1),
    # a coment ?
    ('comment',Is,'!',+8),
    (None,Word,'--',+4),
    ('text',WordStart,'--&gt;',+1),
    (None,Skip,3),
    (None,Jump,To,MatchOk),
    # a SGML-Tag ?
    ('other',AllNotIn,'&gt;',+1),
    (None,Is,'&gt;'),
    (None,Jump,To,MatchOk),
    # XMP-Tag ?
    ('tagname',Word,'XMP',+5),
    (None,Is,'&gt;'),
    ('text',WordStart,'&lt;/XMP&gt;'),
    (None,Skip,len('&lt;/XMP&gt;')),
    (None,Jump,To,MatchOk),
    # get the tag name
    ('tagname',AllInCharSet,tagname_charset),
    # look for attributes
    (None,AllInCharSet,white_charset,+4),
    (None,Is,'&gt;',+1,MatchOk),
    ('tagattr',Table,tagattr),
    (None,Jump,To,-3),
    (None,Is,'&gt;',+1,MatchOk),
    # handle incorrect attributes
    (error,AllNotIn,'&gt; \n\r\t'),
    (None,Jump,To,-6),
)
# Parse HTML tags &amp; text
htmltable = (# HTML-Tag
    ('htmltag',Table,htmltag,+1,+4),
    # not HTML, but still using this syntax: error or
    # inside XMP-tag !
    (error,Is,'&lt;',+3),
    (error,AllNotIn,'&gt;',+1),
    (error,Is,'&gt;'),
    # normal text
    ('text',AllNotIn,'&lt;',+1),
    # end of file
    ('eof',EOF,Here,-5),
)</t>
<t tx="ekr.20080531113507.3">s = '''
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;!--@+leo-ver=4-thin--&gt;
&lt;!--@+node:ekr.20080301071818.1:@thin html/front.html--&gt;
&lt;!--@@first--&gt;
&lt;!--@@first--&gt;

&lt;!--@@language html--&gt;
&lt;!--@@tabwidth -4--&gt;

&lt;!-- Last Modified: March 1, 2008 --&gt;
&lt;!-- Author: Edward K. Ream, edreamleo@gmail.com --&gt;

&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
&lt;head&gt;
&lt;!--@&lt;&lt;head&gt;&gt;--&gt;
&lt;!--@+node:ekr.20080301075734.1:&lt;&lt;head&gt;&gt;--&gt;

&lt;title&gt;Leo's Home Page&lt;/title&gt;

&lt;meta name="description" content="This page describes Leo, a programmer's outliner." /&gt;

&lt;meta name="keywords" content="LEO, LITERATE PROGRAMMING, OUTLINES, CWEB,
NOWEB, EDWARD K. REAM, DONALD E. KNUTH, SILVIO LEVY, OPEN SOFTWARE" /&gt;

&lt;!-- for GeoUrl --&gt;
&lt;meta name="ICBM" content="43.0713768, -89.4188004" /&gt;
&lt;meta name="DC.title" content="Leo's Home Page" /&gt;
&lt;!--@-node:ekr.20080301075734.1:&lt;&lt;head&gt;&gt;--&gt;
&lt;!--@nl--&gt;
&lt;/head&gt;

&lt;body bgcolor="#fffbdc"&gt;
&lt;!--@&lt;&lt; main table &gt;&gt;--&gt;
&lt;!--@+node:ekr.20080301075734.4:&lt;&lt; main table &gt;&gt;--&gt;

&lt;table border="0" bgcolor="#FFFBDC"&gt;
    &lt;tr&gt;
        &lt;td width="22%" height="21" align="center" bgcolor="#FFFBDC" valign="middle"&gt;
            &lt;b&gt;&lt;font size="4"&gt;Leo's Home&lt;/font&gt;&lt;/b&gt;
        &lt;/td&gt;

        &lt;td bgcolor="#F0E68C" width="78%" height="21" align="center"&gt;
            &lt;!--@            &lt;&lt; upper table &gt;&gt;--&gt;
            &lt;!--@+node:ekr.20080301080758:&lt;&lt; upper table&gt;&gt;--&gt;

            &lt;table border="0" width="100%"&gt;
                &lt;tr&gt;
                    &lt;td width="25%" align="center"&gt;
                        &lt;a href="http://www.python.org/"&gt;
                            &lt;img border="0" src="PythonPowered.gif" width="110" height="44" /&gt;&lt;/a&gt;
                    &lt;/td&gt;

                    &lt;td width="50%" align="center"&gt;
                        &lt;a href="http://groups.google.com/group/leo-editor"&gt;Leo at Google Groups&lt;/a&gt;

                    &lt;/td&gt;

                    &lt;td width="25%" align="center"&gt;
                        &lt;a href="http://www.mind-mapping.org/"&gt;mind-mapping.org&lt;/a&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/table&gt;
            &lt;!--@nonl--&gt;
            &lt;!--@-node:ekr.20080301080758:&lt;&lt; upper table&gt;&gt;--&gt;

            &lt;!--@nl--&gt;
        &lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
        &lt;td bgcolor="#F0E68C" width="22%" height="143" valign="top"&gt;
            &lt;!--@            &lt;&lt; left table &gt;&gt;--&gt;
            &lt;!--@+node:ekr.20080301075734.6:&lt;&lt; left table &gt;&gt;--&gt;
            &lt;table border="0" width="100%"&gt;

                &lt;tr&gt;&lt;td width="50%" bgcolor="#DAA520"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;
                        &lt;a href="http://sourceforge.net/project/screenshots.php?group_id=3458"&gt;Screen Shots&lt;/a&gt;
                &lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="intro.html"&gt;Beginners Guide&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="leo_TOC.html#anchor964914"&gt;Users Guide&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="FAQ.html"&gt;FAQ&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;

                &lt;tr&gt;&lt;td width="50%"&gt;
                    &lt;a href="http://www.3dtree.com/ev/e/sbooks/leo/sbframetoc_ie.htm"&gt;Online tutorial&lt;/a&gt;
                &lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="testimonials.html"&gt;Quotes&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%" bgcolor="#DAA520"&gt;&lt;b&gt;Links&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;
                    &lt;!--@        &lt;&lt; download ref &gt;&gt;--&gt;

                    &lt;!--@+node:ekr.20080306071848:&lt;&lt; download ref &gt;&gt; (contains version number)--&gt;
                    &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=3458&amp;amp;package_id=29106"&gt;
                        Download Leo[4.4.8 final]&lt;/a&gt;
                    &lt;!--@nonl--&gt;
                    &lt;!--@-node:ekr.20080306071848:&lt;&lt; download ref &gt;&gt; (contains version number)--&gt;
                    &lt;!--@nl--&gt;
                &lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="http://sourceforge.net/project/?group_id=3458"&gt; Leo at SourceForge&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;

                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="http://groups.google.com/group/leo-editor"&gt;Leo at Google Groups&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="http://launchpad.net/leo-editor"&gt;Leo at launchpad&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="http://leo.tigris.org/source/browse/leo/"&gt;Leo's cvs repository&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;Leo's &lt;a href="http://leo.zwiki.org"&gt;Wiki&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="leoLinks.html"&gt;More links&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%" bgcolor="#DAA520"&gt;&lt;b&gt;Edward K. Ream&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;

                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="index.html"&gt;Home&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td width="50%"&gt;&lt;a href="mailto:edreamleo@charter.net"&gt;Contact&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
            &lt;/table&gt;
            &lt;!--@-node:ekr.20080301075734.6:&lt;&lt; left table &gt;&gt;--&gt;
            &lt;!--@nl--&gt;
        &lt;/td&gt;

        &lt;td width="78%" height="143" bgcolor="#FFFBDC"&gt;

            &lt;!--@            &lt;&lt; center area &gt;&gt;--&gt;
            &lt;!--@+node:ekr.20080301082848:&lt;&lt; center area &gt;&gt;--&gt;
            &lt;h2&gt; Leo is...&lt;/h2&gt;

            &lt;ul&gt;
            &lt;!--@&lt;&lt; what is Leo list &gt;&gt;--&gt;
            &lt;!--@+node:ekr.20080301083325:&lt;&lt; what is Leo list &gt;&gt;--&gt;
            &lt;li&gt;

                A &lt;i&gt;general data management environment&lt;/i&gt;.&lt;br/&gt;
                Leo shows &lt;b&gt;user-created&lt;/b&gt; relationships among any kind of data:&lt;br /&gt;
                computer programs, web sites, etc.&lt;br /&gt;
                Leo shows multiple views of data within a single outline.
            &lt;/li&gt;

            &lt;li&gt;
                An &lt;i&gt;outlining editor for programmers&lt;/i&gt;.&lt;br /&gt;
                Leo supports &lt;i&gt;optional&lt;/i&gt; &lt;a HREF="http://www.eecs.harvard.edu/~nr/noweb/"&gt;noweb&lt;/a&gt;
                and &lt;a HREF="http://www-cs-faculty.stanford.edu/~knuth/cweb.html"&gt;CWEB&lt;/a&gt; markup.
            &lt;/li&gt;

            &lt;li&gt;A flexible &lt;i&gt;browser&lt;/i&gt; for projects, programs, classes or any other data.&lt;/li&gt;
            &lt;li&gt;A &lt;i&gt;project manager&lt;/i&gt;.&lt;/li&gt;
            &lt;li&gt;&lt;i&gt;Portable&lt;/i&gt;. Leo runs on Windows, Linux and MacOS X.&lt;/li&gt;
            &lt;li&gt;&lt;i&gt;100% pure&lt;/i&gt; &lt;a HREF="http://www.python.org/"&gt;&lt;i&gt;Python&lt;/i&gt;&lt;/a&gt;.&lt;/li&gt;

            &lt;li&gt;
                &lt;i&gt;Fully scriptable using&lt;/i&gt;
                &lt;a HREF="http://www.python.org/"&gt;&lt;i&gt;Python&lt;/i&gt;&lt;/a&gt;
                Leo's outline files are &lt;a HREF="http://www.w3.org/XML/"&gt;XML&lt;/a&gt;  format.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;a href="http://www.opensource.org/"&gt;&lt;i&gt;Open Software&lt;/i&gt;&lt;/a&gt;,
                distributed under the &lt;a href="http://www.python.org/psf/license/"&gt;Python License&lt;/a&gt;.
            &lt;/li&gt;

            &lt;!--@nonl--&gt;
            &lt;!--@-node:ekr.20080301083325:&lt;&lt; what is Leo list &gt;&gt;--&gt;
            &lt;!--@nl--&gt;
            &lt;/ul&gt;

            &lt;p&gt;
            Please use &lt;a href="http://groups.google.com/group/leo-editor"&gt;leo-editor&lt;/a&gt;
            to ask questions and make suggestions.
            &lt;/p&gt;

            &lt;p&gt;
            Leo's author is &lt;a HREF="index.html"&gt;Edward K. Ream&lt;/a&gt;
            &lt;/p&gt;
            &lt;!--@nonl--&gt;
            &lt;!--@-node:ekr.20080301082848:&lt;&lt; center area &gt;&gt;--&gt;
            &lt;!--@nl--&gt;
        &lt;/td&gt;

    &lt;/tr&gt;
&lt;/table&gt;
&lt;!--@-node:ekr.20080301075734.4:&lt;&lt; main table &gt;&gt;--&gt;
&lt;!--@nl--&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;!--@-node:ekr.20080301071818.1:@thin html/front.html--&gt;
&lt;!--@-leo--&gt;
'''</t>
<t tx="ekr.20080531113507.4">def printItem(aList,level):

    obj,lt_index,rt_index,subtag = aList
    print '  '*level,obj,s[lt_index:rt_index]
    if subtag:
        for z in subtag:
            printItem(z,level+1)
</t>
<t tx="ekr.20080531120008.1">----------------------------------------
 text

 *syntax error &lt;
 *syntax error ?xml version="1.0" encoding="utf-8" ?
 *syntax error &gt;
 text

 htmltag &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
   comment !
   other DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"
 text

 htmltag &lt;!--@+leo-ver=4-thin--&gt;
   comment !
   text @+leo-ver=4-thin
 text

 htmltag &lt;!--@+node:ekr.20080301071818.1:@thin html/front.html--&gt;
   comment !
   text @+node:ekr.20080301071818.1:@thin html/front.html
 text

 htmltag &lt;!--@@first--&gt;
   comment !
   text @@first
 text

 htmltag &lt;!--@@first--&gt;
   comment !
   text @@first
 text


 htmltag &lt;!--@@language html--&gt;
   comment !
   text @@language html
 text

 htmltag &lt;!--@@tabwidth -4--&gt;
   comment !
   text @@tabwidth -4
 text


 htmltag &lt;!-- Last Modified: March 1, 2008 --&gt;
   comment !
   text  Last Modified: March 1, 2008
 text

 htmltag &lt;!-- Author: Edward K. Ream, edreamleo@gmail.com --&gt;
   comment !
   text  Author: Edward K. Ream, edreamleo@gmail.com
 text


 htmltag &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
   tagname html
   tagattr xmlns="http://www.w3.org/1999/xhtml"
     name xmlns
     value http://www.w3.org/1999/xhtml
   tagattr xml
     name xml
   *syntax error :lang="en"
   tagattr lang="en"
     name lang
     value en
 text

 htmltag &lt;head&gt;
   tagname head
 text


 htmltag &lt;title&gt;
   tagname title
 text Leo's Home Page
 htmltag &lt;/title&gt;
   closetag /
   tagname title
 text


 *syntax error &lt;
 *syntax error meta name="description" content="This page describes Leo, a programmer's outliner." /
 *syntax error &gt;
 text


 *syntax error &lt;
 *syntax error meta name="keywords" content="LEO, LITERATE PROGRAMMING, OUTLINES, CWEB,
NOWEB, EDWARD K. REAM, DONALD E. KNUTH, SILVIO LEVY, OPEN SOFTWARE" /
 *syntax error &gt;
 text


 htmltag &lt;!-- for GeoUrl --&gt;
   comment !
   text  for GeoUrl
 text

 *syntax error &lt;
 *syntax error meta name="ICBM" content="43.0713768, -89.4188004" /
 *syntax error &gt;
 text

 *syntax error &lt;
 *syntax error meta name="DC.title" content="Leo's Home Page" /
 *syntax error &gt;
 text

 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/head&gt;
   closetag /
   tagname head
 text


 htmltag &lt;body bgcolor="#fffbdc"&gt;
   tagname body
   tagattr bgcolor="#fffbdc"
     name bgcolor
     value #fffbdc
 text


 htmltag &lt;table border="0" bgcolor="#FFFBDC"&gt;
   tagname table
   tagattr border="0"
     name border
     value 0
   tagattr bgcolor="#FFFBDC"
     name bgcolor
     value #FFFBDC
 text

 htmltag &lt;tr&gt;
   tagname tr
 text

 htmltag &lt;td width="22%" height="21" align="center" bgcolor="#FFFBDC" valign="middle"&gt;
   tagname td
   tagattr width="22%"
     name width
     value 22%
   tagattr height="21"
     name height
     value 21
   tagattr align="center"
     name align
     value center
   tagattr bgcolor="#FFFBDC"
     name bgcolor
     value #FFFBDC
   tagattr valign="middle"
     name valign
     value middle
 text

 htmltag &lt;b&gt;
   tagname b
 htmltag &lt;font size="4"&gt;
   tagname font
   tagattr size="4"
     name size
     value 4
 text Leo's Home
 htmltag &lt;/font&gt;
   closetag /
   tagname font
 htmltag &lt;/b&gt;
   closetag /
   tagname b
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text


 htmltag &lt;td bgcolor="#F0E68C" width="78%" height="21" align="center"&gt;
   tagname td
   tagattr bgcolor="#F0E68C"
     name bgcolor
     value #F0E68C
   tagattr width="78%"
     name width
     value 78%
   tagattr height="21"
     name height
     value 21
   tagattr align="center"
     name align
     value center
 text


 htmltag &lt;table border="0" width="100%"&gt;
   tagname table
   tagattr border="0"
     name border
     value 0
   tagattr width="100%"
     name width
     value 100%
 text

 htmltag &lt;tr&gt;
   tagname tr
 text

 htmltag &lt;td width="25%" align="center"&gt;
   tagname td
   tagattr width="25%"
     name width
     value 25%
   tagattr align="center"
     name align
     value center
 text

 htmltag &lt;a href="http://www.python.org/"&gt;
   tagname a
   tagattr href="http://www.python.org/"
     name href
     value http://www.python.org/
 text

 *syntax error &lt;
 *syntax error img border="0" src="PythonPowered.gif" width="110" height="44" /
 *syntax error &gt;
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text


 htmltag &lt;td width="50%" align="center"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
   tagattr align="center"
     name align
     value center
 text

 htmltag &lt;a href="http://groups.google.com/group/leo-editor"&gt;
   tagname a
   tagattr href="http://groups.google.com/group/leo-editor"
     name href
     value http://groups.google.com/group/leo-editor
 text Leo at Google Groups
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text


 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text


 htmltag &lt;td width="25%" align="center"&gt;
   tagname td
   tagattr width="25%"
     name width
     value 25%
   tagattr align="center"
     name align
     value center
 text

 htmltag &lt;a href="http://www.mind-mapping.org/"&gt;
   tagname a
   tagattr href="http://www.mind-mapping.org/"
     name href
     value http://www.mind-mapping.org/
 text mind-mapping.org
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text

 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;/table&gt;
   closetag /
   tagname table
 text

 htmltag &lt;!--@nonl--&gt;
   comment !
   text @nonl
 text


 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text

 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text


 htmltag &lt;tr&gt;
   tagname tr
 text

 htmltag &lt;td bgcolor="#F0E68C" width="22%" height="143" valign="top"&gt;
   tagname td
   tagattr bgcolor="#F0E68C"
     name bgcolor
     value #F0E68C
   tagattr width="22%"
     name width
     value 22%
   tagattr height="143"
     name height
     value 143
   tagattr valign="top"
     name valign
     value top
 text

 htmltag &lt;table border="0" width="100%"&gt;
   tagname table
   tagattr border="0"
     name border
     value 0
   tagattr width="100%"
     name width
     value 100%
 text


 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%" bgcolor="#DAA520"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
   tagattr bgcolor="#DAA520"
     name bgcolor
     value #DAA520
 htmltag &lt;b&gt;
   tagname b
 text Documentation
 htmltag &lt;/b&gt;
   closetag /
   tagname b
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 text

 htmltag &lt;a href="http://sourceforge.net/project/screenshots.php?group_id=3458"&gt;
   tagname a
   tagattr href="http://sourceforge.net/project/screenshots.php?group_id=3458"
     name href
     value http://sourceforge.net/project/screenshots.php?group_id=3458
 text Screen Shots
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="intro.html"&gt;
   tagname a
   tagattr href="intro.html"
     name href
     value intro.html
 text Beginners Guide
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="leo_TOC.html#anchor964914"&gt;
   tagname a
   tagattr href="leo_TOC.html#anchor964914"
     name href
     value leo_TOC.html#anchor964914
 text Users Guide
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="FAQ.html"&gt;
   tagname a
   tagattr href="FAQ.html"
     name href
     value FAQ.html
 text FAQ
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text


 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 text

 htmltag &lt;a href="http://www.3dtree.com/ev/e/sbooks/leo/sbframetoc_ie.htm"&gt;
   tagname a
   tagattr href="http://www.3dtree.com/ev/e/sbooks/leo/sbframetoc_ie.htm"
     name href
     value http://www.3dtree.com/ev/e/sbooks/leo/sbframetoc_ie.htm
 text Online tutorial
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="testimonials.html"&gt;
   tagname a
   tagattr href="testimonials.html"
     name href
     value testimonials.html
 text Quotes
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%" bgcolor="#DAA520"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
   tagattr bgcolor="#DAA520"
     name bgcolor
     value #DAA520
 htmltag &lt;b&gt;
   tagname b
 text Links
 htmltag &lt;/b&gt;
   closetag /
   tagname b
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 text


 htmltag &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=3458&amp;amp;package_id=29106"&gt;
   tagname a
   tagattr href="http://sourceforge.net/project/showfiles.php?group_id=3458&amp;amp;package_id=29106"
     name href
     value http://sourceforge.net/project/showfiles.php?group_id=3458&amp;amp;package_id=29106
 text
                        Download Leo[4.4.8 final]
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text

 htmltag &lt;!--@nonl--&gt;
   comment !
   text @nonl
 text

 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="http://sourceforge.net/project/?group_id=3458"&gt;
   tagname a
   tagattr href="http://sourceforge.net/project/?group_id=3458"
     name href
     value http://sourceforge.net/project/?group_id=3458
 text  Leo at SourceForge
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text


 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="http://groups.google.com/group/leo-editor"&gt;
   tagname a
   tagattr href="http://groups.google.com/group/leo-editor"
     name href
     value http://groups.google.com/group/leo-editor
 text Leo at Google Groups
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="http://launchpad.net/leo-editor"&gt;
   tagname a
   tagattr href="http://launchpad.net/leo-editor"
     name href
     value http://launchpad.net/leo-editor
 text Leo at launchpad
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="http://leo.tigris.org/source/browse/leo/"&gt;
   tagname a
   tagattr href="http://leo.tigris.org/source/browse/leo/"
     name href
     value http://leo.tigris.org/source/browse/leo/
 text Leo's cvs repository
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 text Leo's
 htmltag &lt;a href="http://leo.zwiki.org"&gt;
   tagname a
   tagattr href="http://leo.zwiki.org"
     name href
     value http://leo.zwiki.org
 text Wiki
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="leoLinks.html"&gt;
   tagname a
   tagattr href="leoLinks.html"
     name href
     value leoLinks.html
 text More links
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%" bgcolor="#DAA520"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
   tagattr bgcolor="#DAA520"
     name bgcolor
     value #DAA520
 htmltag &lt;b&gt;
   tagname b
 text Edward K. Ream
 htmltag &lt;/b&gt;
   closetag /
   tagname b
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text


 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="index.html"&gt;
   tagname a
   tagattr href="index.html"
     name href
     value index.html
 text Home
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;tr&gt;
   tagname tr
 htmltag &lt;td width="50%"&gt;
   tagname td
   tagattr width="50%"
     name width
     value 50%
 htmltag &lt;a href="mailto:edreamleo@charter.net"&gt;
   tagname a
   tagattr href="mailto:edreamleo@charter.net"
     name href
     value mailto:edreamleo@charter.net
 text Contact
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 htmltag &lt;/td&gt;
   closetag /
   tagname td
 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;/table&gt;
   closetag /
   tagname table
 text

 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text


 htmltag &lt;td width="78%" height="143" bgcolor="#FFFBDC"&gt;
   tagname td
   tagattr width="78%"
     name width
     value 78%
   tagattr height="143"
     name height
     value 143
   tagattr bgcolor="#FFFBDC"
     name bgcolor
     value #FFFBDC
 text


 htmltag &lt;h2&gt;
   tagname h2
 text  Leo is...
 htmltag &lt;/h2&gt;
   closetag /
   tagname h2
 text


 htmltag &lt;ul&gt;
   tagname ul
 text

 htmltag &lt;li&gt;
   tagname li
 text

                A
 htmltag &lt;i&gt;
   tagname i
 text general data management environment
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text .
 htmltag &lt;br/&gt;
   tagname br
   *syntax error /
 text
                Leo shows
 htmltag &lt;b&gt;
   tagname b
 text user-created
 htmltag &lt;/b&gt;
   closetag /
   tagname b
 text  relationships among any kind of data:
 *syntax error &lt;
 *syntax error br /
 *syntax error &gt;
 text
                computer programs, web sites, etc.
 *syntax error &lt;
 *syntax error br /
 *syntax error &gt;
 text
                Leo shows multiple views of data within a single outline.

 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text


 htmltag &lt;li&gt;
   tagname li
 text
                An
 htmltag &lt;i&gt;
   tagname i
 text outlining editor for programmers
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text .
 *syntax error &lt;
 *syntax error br /
 *syntax error &gt;
 text
                Leo supports
 htmltag &lt;i&gt;
   tagname i
 text optional
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text
 htmltag &lt;a HREF="http://www.eecs.harvard.edu/~nr/noweb/"&gt;
   tagname a
   tagattr HREF="http://www.eecs.harvard.edu/~nr/noweb/"
     name HREF
     value http://www.eecs.harvard.edu/~nr/noweb/
 text noweb
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text
                and
 htmltag &lt;a HREF="http://www-cs-faculty.stanford.edu/~knuth/cweb.html"&gt;
   tagname a
   tagattr HREF="http://www-cs-faculty.stanford.edu/~knuth/cweb.html"
     name HREF
     value http://www-cs-faculty.stanford.edu/~knuth/cweb.html
 text CWEB
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text  markup.

 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text


 htmltag &lt;li&gt;
   tagname li
 text A flexible
 htmltag &lt;i&gt;
   tagname i
 text browser
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text  for projects, programs, classes or any other data.
 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text

 htmltag &lt;li&gt;
   tagname li
 text A
 htmltag &lt;i&gt;
   tagname i
 text project manager
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text .
 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text

 htmltag &lt;li&gt;
   tagname li
 htmltag &lt;i&gt;
   tagname i
 text Portable
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text . Leo runs on Windows, Linux and MacOS X.
 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text

 htmltag &lt;li&gt;
   tagname li
 htmltag &lt;i&gt;
   tagname i
 text 100% pure
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text
 htmltag &lt;a HREF="http://www.python.org/"&gt;
   tagname a
   tagattr HREF="http://www.python.org/"
     name HREF
     value http://www.python.org/
 htmltag &lt;i&gt;
   tagname i
 text Python
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text .
 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text


 htmltag &lt;li&gt;
   tagname li
 text

 htmltag &lt;i&gt;
   tagname i
 text Fully scriptable using
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 text

 htmltag &lt;a HREF="http://www.python.org/"&gt;
   tagname a
   tagattr HREF="http://www.python.org/"
     name HREF
     value http://www.python.org/
 htmltag &lt;i&gt;
   tagname i
 text Python
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text
                Leo's outline files are
 htmltag &lt;a HREF="http://www.w3.org/XML/"&gt;
   tagname a
   tagattr HREF="http://www.w3.org/XML/"
     name HREF
     value http://www.w3.org/XML/
 text XML
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text   format.

 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text

 htmltag &lt;li&gt;
   tagname li
 text

 htmltag &lt;a href="http://www.opensource.org/"&gt;
   tagname a
   tagattr href="http://www.opensource.org/"
     name href
     value http://www.opensource.org/
 htmltag &lt;i&gt;
   tagname i
 text Open Software
 htmltag &lt;/i&gt;
   closetag /
   tagname i
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text ,
                distributed under the
 htmltag &lt;a href="http://www.python.org/psf/license/"&gt;
   tagname a
   tagattr href="http://www.python.org/psf/license/"
     name href
     value http://www.python.org/psf/license/
 text Python License
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text .

 htmltag &lt;/li&gt;
   closetag /
   tagname li
 text


 htmltag &lt;!--@nonl--&gt;
   comment !
   text @nonl
 text

 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/ul&gt;
   closetag /
   tagname ul
 text


 htmltag &lt;p&gt;
   tagname p
 text
            Please use
 htmltag &lt;a href="http://groups.google.com/group/leo-editor"&gt;
   tagname a
   tagattr href="http://groups.google.com/group/leo-editor"
     name href
     value http://groups.google.com/group/leo-editor
 text leo-editor
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text
            to ask questions and make suggestions.

 htmltag &lt;/p&gt;
   closetag /
   tagname p
 text


 htmltag &lt;p&gt;
   tagname p
 text
            Leo's author is
 htmltag &lt;a HREF="index.html"&gt;
   tagname a
   tagattr HREF="index.html"
     name HREF
     value index.html
 text Edward K. Ream
 htmltag &lt;/a&gt;
   closetag /
   tagname a
 text

 htmltag &lt;/p&gt;
   closetag /
   tagname p
 text

 htmltag &lt;!--@nonl--&gt;
   comment !
   text @nonl
 text

 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/td&gt;
   closetag /
   tagname td
 text


 htmltag &lt;/tr&gt;
   closetag /
   tagname tr
 text

 htmltag &lt;/table&gt;
   closetag /
   tagname table
 text

 htmltag &lt;!--@nl--&gt;
   comment !
   text @nl
 text

 htmltag &lt;/body&gt;
   closetag /
   tagname body
 text

 htmltag &lt;/html&gt;
   closetag /
   tagname html
 text


 htmltag &lt;!--@-node:ekr.20080301071818.1:@thin html/front.html--&gt;
   comment !
   text @-node:ekr.20080301071818.1:@thin html/front.html
 text

 htmltag &lt;!--@-leo--&gt;
   comment !
   text @-leo
 text

 eof
ok: 1
</t>
<t tx="ekr.20080531131542.1">import mx.TextTools as tt

&lt;&lt; define scan4 tables &gt;&gt;
&lt;&lt; define s &gt;&gt;

@others

print '*' * 60
ok,taglist,nextindex = tt.tag(s,linetable)
# print g.listToString(taglist)
for z in taglist:
    printItem(z,level=0)
print 'ok:',ok
</t>
<t tx="ekr.20080531131542.2">from mx.TextTools import * # Required for tags.

ws_charset = CharSet(' \t')

linetable = (
    # Start of another line.
    # Skip ws.
    ('leading-ws',AllInCharSet,ws_charset,+1),
    # Sentinel
    ('sentinel',Word,'#@',+2),
    ('sentinel-val',AllNotIn,'\n',+2,+2),
    # Normal line
    ('line',AllNotIn,'\n',+1),
    ('nl',Is,'\n',+1),
    ('eof',EOF,Here,-5),
)
</t>
<t tx="ekr.20080531131542.3"># runLeo.py
s = """#! /usr/bin/env python
#@+leo-ver=4-thin
#@+node:ekr.20031218072017.2605:@thin runLeo.py 
#@@first

'''Entry point for Leo in Python.'''

#@@language python
#@@tabwidth -4

#@&lt; &lt; Import pychecker &gt;&gt;
#@+node:ekr.20031218072017.2606:&lt; &lt; Import pychecker &gt;&gt;
#@@color

# __pychecker__ = '--no-argsused'

# See pycheckrc file in leoDist.leo for a list of erroneous warnings to be suppressed.

# New in Leo 4.4.5: use pylint instead of pychecker.

# if 0: # Set to 1 for lint-like testing.
      # # Use t23.bat: only on Python 2.3.

    # try:
        # import pychecker.checker
        # # This works.  We may want to set options here...
        # # from pychecker import Config 
        # # print pychecker
        # print ; print "Warning (in leo.py): pychecker.checker running..." ; print
    # except Exception:
        # print ; print 'Can not import pychecker' ; print
#@-node:ekr.20031218072017.2606:&lt; &lt; Import pychecker &gt;&gt;
#@nl

# __pychecker__ = '--no-import --no-reimportself --no-reimport'
    # Suppress import errors: this module must do strange things with imports.

# Warning: do not import any Leo modules here!
# Doing so would make g.app invalid in the imported files.
import os
import sys
import Tkinter ; Tkinter.wantobjects = 0
    # An ugly hack for Tk/Tkinter 8.5
    # See http://sourceforge.net/forum/message.php?msg_id=4078577

#@+others
#@+node:ekr.20031218072017.1934:run
def run(fileName=None,pymacs=None,jyLeo=False,*args,**keywords):

    '''Initialize and run Leo'''

    # __pychecker__ = '--no-argsused' # keywords not used.

    import pdb ; pdb = pdb.set_trace

    if fileName and fileName.startswith('--'):
        fileName = None
    # print 'leo.py:run','fileName',fileName
    #@    &lt; &lt; import leoGlobals and leoApp &gt;&gt;
    #@+node:ekr.20041219072112:&lt; &lt; import leoGlobals and leoApp &gt;&gt;
    if jyLeo:
        print '*** starting jyLeo',sys.platform # will be something like java1.6.0_02

    # Add the current directory to sys.path *before* importing g.
    # This will fail if the current directory contains unicode characters...
    path = os.getcwd()
    if path not in sys.path:
        # print 'appending %s to sys.path' % path
        sys.path.append(path)

    # Import leoGlobals, but do NOT set g.
    import leo.core.leoGlobals as leoGlobals

    # Set leoGlobals.g, rather than in leoGlobals.py.
    leoGlobals.g = leoGlobals

    import leo.core.leoApp as leoApp

    # Create the app.
    leoGlobals.app = leoApp.LeoApp()

    # **now** we can set g.
    g = leoGlobals
    assert(g.app)

    if jyLeo:
        startJyleo(g)
    #@-node:ekr.20041219072112:&lt; &lt; import leoGlobals and leoApp &gt;&gt;
    #@nl
    if not jyLeo and not isValidPython(): return
    g.computeStandardDirectories()
    adjustSysPath(g)
    if pymacs:
        script = windowFlag = False
    else:
        script, windowFlag = getBatchScript() # Do early so we can compute verbose next.
    verbose = script is None
    g.app.batchMode = script is not None
    g.app.silentMode = '-silent' in sys.argv or '--silent' in sys.argv
    g.app.setLeoID(verbose=verbose) # Force the user to set g.app.leoID.
    scanForOneConfigOption(g)
    #@    &lt; &lt; import other early files &gt;&gt;
    #@+node:ekr.20041219072416.1:&lt; &lt; import other early files&gt;&gt;
    import leo.core.leoNodes as leoNodes
    import leo.core.leoConfig as leoConfig

    # There is a circular dependency between leoCommands and leoEditCommands.
    import leo.core.leoCommands as leoCommands

    # try:
        # import leo.core.leoNodes as leoNodes
    # except ImportError:
        # print "Error importing leoNodes.py"
        # import traceback ; traceback.print_exc()

    # try:
        # import leo.core.leoConfig as leoConfig
    # except ImportError:
        # print "Error importing leoConfig.py"
        # import traceback ; traceback.print_exc()
    #@-node:ekr.20041219072416.1:&lt; &lt; import other early files&gt;&gt;
    #@nl
    g.app.nodeIndices = leoNodes.nodeIndices(g.app.leoID)
    g.app.config = leoConfig.configClass()
    fileName,relativeFileName = completeFileName(fileName)
    reportDirectories(verbose)
    # Read settings *after* setting g.app.config.
    # Read settings *before* opening plugins.  This means if-gui has effect only in per-file settings.
    g.app.config.readSettingsFiles(fileName,verbose)
    g.app.setEncoding()
    if pymacs:
        createNullGuiWithScript(None)
    elif jyLeo:
        import leo.core.leoSwingGui as leoSwingGui
        g.app.gui = leoSwingGui.swingGui()
    elif script:
        if windowFlag:
            g.app.createTkGui() # Creates global windows.
            g.app.gui.setScript(script)
            sys.args = []
        else:
            createNullGuiWithScript(script)
        fileName = None
    # Load plugins. Plugins may create g.app.gui.
    g.doHook("start1")
    if g.app.killed: return # Support for g.app.forceShutdown.
    # Create the default gui if needed.
    if g.app.gui == None: g.app.createTkGui() # Creates global windows.
    # Initialize tracing and statistics.
    g.init_sherlock(args)
    if g.app and g.app.use_psyco: startPsyco()
    # Clear g.app.initing _before_ creating the frame.
    g.app.initing = False # "idle" hooks may now call g.app.forceShutdown.
    # Create the main frame.  Show it and all queued messages.
    c,frame = createFrame(fileName,relativeFileName)
    if not frame: return
    g.app.trace_gc          = c.config.getBool('trace_gc')
    g.app.trace_gc_calls    = c.config.getBool('trace_gc_calls')
    g.app.trace_gc_verbose  = c.config.getBool('trace_gc_verbose')
    if g.app.disableSave:
        g.es("disabling save commands",color="red")
    g.app.writeWaitingLog()
    if g.app.oneConfigFilename: g.es_print('--one-config option in effect',color='red')
    p = c.currentPosition()
    g.doHook("start2",c=c,p=p,v=p,fileName=fileName)
    if c.config.getBool('allow_idle_time_hook'):
        g.enableIdleTimeHook()
    if not fileName:
        c.redraw_now()
    # Respect c's focus wishes if posssible.
    w = g.app.gui.get_focus(c)
    if w != c.frame.body.bodyCtrl and w != c.frame.tree.canvas:
        c.bodyWantsFocus()
        c.k.showStateAndMode(w)
    c.outerUpdate()
    g.app.gui.runMainLoop()
#@-node:ekr.20031218072017.1934:run
#@+node:ekr.20070930060755:utils
#@+node:ekr.20070306085724:adjustSysPath
def adjustSysPath (g):

    '''Adjust sys.path to enable imports as usual with Leo.'''

    #g.trace('loadDir',g.app.loadDir)

    leoDirs = ('config','doc','extensions','modes','plugins','core','test')

    for theDir in leoDirs:
        path = g.os_path_abspath(
            g.os_path_join(g.app.loadDir,'..',theDir))
        if path not in sys.path:
            sys.path.append(path)
#@-node:ekr.20070306085724:adjustSysPath
#@+node:ekr.20041124083125:completeFileName (leo.py)
def completeFileName (fileName):

    import leo.core.leoGlobals as g

    if not (fileName and fileName.strip()):
        return None,None

    # This does not depend on config settings.
    try:
        if sys.platform.lower().startswith('win'):
            fileName = g.toUnicode(fileName,'mbcs')
        else:
            fileName = g.toUnicode(fileName,'utf-8')
    except Exception: pass

    relativeFileName = fileName
    fileName = g.os_path_join(os.getcwd(),fileName)

    junk,ext = g.os_path_splitext(fileName)
    if not ext:
        fileName = fileName + ".leo"
        relativeFileName = relativeFileName + ".leo"

    return fileName,relativeFileName
#@-node:ekr.20041124083125:completeFileName (leo.py)
#@+node:ekr.20031218072017.1624:createFrame (leo.py)
def createFrame (fileName,relativeFileName):

    '''Create a LeoFrame during Leo's startup process.'''

    import leo.core.leoGlobals as g

    # Try to create a frame for the file.
    if fileName and g.os_path_exists(fileName):
        ok, frame = g.openWithFileName(relativeFileName or fileName,None)
        if ok: return frame.c,frame

    # Create a _new_ frame &amp; indicate it is the startup window.
    c,frame = g.app.newLeoCommanderAndFrame(
        fileName=fileName,
        relativeFileName=relativeFileName,
        initEditCommanders=True)
    assert frame.c == c and c.frame == frame
    frame.setInitialWindowGeometry()
    frame.resizePanesToRatio(frame.ratio,frame.secondary_ratio)
    frame.startupWindow = True
    if c.chapterController:
        c.chapterController.finishCreate()
        c.setChanged(False) # Clear the changed flag set when creating the @chapters node.
    # Call the 'new' hook for compatibility with plugins.
    g.doHook("new",old_c=None,c=c,new_c=c)

    # New in Leo 4.4.8: create the menu as late as possible so it can use user commands.
    p = c.currentPosition()
    if not g.doHook("menu1",c=frame.c,p=p,v=p):
        frame.menu.createMenuBar(frame)
        c.updateRecentFiles(relativeFileName or fileName)
        g.doHook("menu2",c=frame.c,p=p,v=p)
        g.doHook("after-create-leo-frame",c=c)

    # Report the failure to open the file.
    if fileName:
        g.es("file not found:",fileName)

    return c,frame
#@-node:ekr.20031218072017.1624:createFrame (leo.py)
#@+node:ekr.20031218072017.1938:createNullGuiWithScript (leo.py)
def createNullGuiWithScript (script):

    import leo.core.leoGlobals as g
    import leo.core.leoGui as leoGui

    g.app.batchMode = True
    g.app.gui = leoGui.nullGui("nullGui")
    g.app.gui.setScript(script)
#@-node:ekr.20031218072017.1938:createNullGuiWithScript (leo.py)
#@+node:ekr.20031218072017.1939:getBatchScript
def getBatchScript ():

    import leo.core.leoGlobals as g
    windowFlag = False

    name = None ; i = 1 # Skip the dummy first arg.
    while i + 1 &lt; len(sys.argv):
        arg = sys.argv[i].strip().lower()
        if arg in ("--script","-script"):
            name = sys.argv[i+1].strip() ; break
        if arg in ("--script-window","-script-window"):
            name = sys.argv[i+1].strip() ; windowFlag = True ; break
        i += 1

    if not name:
        return None, windowFlag
    name = g.os_path_join(g.app.loadDir,name)
    try:
        f = None
        try:
            f = open(name,'r')
            script = f.read()
            # g.trace("script",script)
        except IOError:
            g.es_print("can not open script file:",name, color="red")
            script = None
    finally:
        if f: f.close()

    # Bug fix 4/27/07: Don't put a return in a finally clause.
    return script, windowFlag
#@-node:ekr.20031218072017.1939:getBatchScript
#@+node:ekr.20071117060958:getFileName
def getFileName ():

    '''Return the filename.

    This is a hack for when Leo is started from a script that also starts IPython.'''

    # No imports here.
    # print 'leo.py:getFileName',sys.argv

    i = 1
    while i &lt; len(sys.argv) and sys.argv[i].endswith('.py'):
        i += 1

    if sys.platform=="win32": # Windows
        result = ' '.join(sys.argv[i:])
    else:
        result = sys.argv[i]

    return result
#@-node:ekr.20071117060958:getFileName
#@+node:ekr.20031218072017.1936:isValidPython
def isValidPython():

    import traceback

    if sys.platform == 'cli':
        return True

    message = '''\
Leo requires Python 2.2.1 or higher.
You may download Python from http://python.org/download/
'''
    try:
        # This will fail if True/False are not defined.
        import leo.core.leoGlobals as g
    except ImportError:
        print "isValidPython: can not import leo.core.leoGlobals"
        return 0
    except:
        print "isValidPytyhon: unexpected exception: import leo.core.leoGlobals"
        traceback.print_exc()
        return 0
    try:
        version = '.'.join([str(sys.version_info[i]) for i in (0,1,2)])
        ok = g.CheckVersion(version,'2.2.1')
        if not ok:
            print message
            g.app.gui.runAskOkDialog(None,"Python version error",message=message,text="Exit")
        return ok
    except Exception:
        print "isValidPython: unexpected exception: g.CheckVersion"
        traceback.print_exc()
        return 0
#@-node:ekr.20031218072017.1936:isValidPython
#@+node:ekr.20031218072017.2607:profile_leo
#@+at 
#@nonl
# To gather statistics, do the following in a Python window, not idle:
# 
#     import leo
#     import leo.core.runLeo as runLeo
#     runLeo.profile_leo()  (this runs leo)
#     load leoDocs.leo (it is very slow)
#     quit Leo.
#@-at
#@@c

def profile_leo ():

    '''Gather and print statistics about Leo'''

    import cProfile as profile
    import pstats
    import leo.core.leoGlobals as g

    name = r"c:\leo.repo\trunk\leo\test\leoProfile.txt"
    # name = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','leoProfile.txt'))

    profile.run('leo.run()',name)

    p = pstats.Stats(name)
    p.strip_dirs()
    p.sort_stats('module','calls','time','name')
    reFiles='leoAtFile.py:|leoFileCommands.py:|leoGlobals.py|leoNodes.py:'
    p.print_stats(reFiles)
#@-node:ekr.20031218072017.2607:profile_leo
#@+node:ekr.20041130093254:reportDirectories
def reportDirectories(verbose):

    import leo.core.leoGlobals as g

    if verbose:
        for kind,theDir in (
            ("load",g.app.loadDir),
            ("global config",g.app.globalConfigDir),
            ("home",g.app.homeDir),
        ):
            g.es("%s dir:" % (kind),theDir,color="blue")
#@-node:ekr.20041130093254:reportDirectories
#@+node:ekr.20080521132317.2:scanForOneConfigOption
def scanForOneConfigOption(g):

    '''Set g.app.oneConfigFilename if "--one-config=&lt;path&gt;" appears in sys.argv.'''

    tag = '--one-config=' ; n = len(tag)

    for s in sys.argv:
        if s.startswith(tag):
            path = s[n:]
            path = g.os_path_abspath(g.os_path_join(os.getcwd(),path))
            if g.os_path_exists(path):
                g.app.oneConfigFilename = path
                sys.argv.remove(s)
                break
            else:
                g.es_print('Invalid option: file not found:',s,color='red')
                break
#@nonl
#@-node:ekr.20080521132317.2:scanForOneConfigOption
#@+node:ekr.20070930194949:startJyleo (leo.py)
def startJyleo (g):

    import leo.core.leoSwingFrame as leoSwingFrame
    import leo.core.leoSwingUtils as leoSwingUtils
    import java.awt as awt

    if 1:
        g.app.splash = None
    else:
        g.app.splash = splash = leoSwingFrame.leoSplash()
        awt.EventQueue.invokeAndWait(splash)

    gct = leoSwingUtils.GCEveryOneMinute()
    gct.run()

    tk = awt.Toolkit.getDefaultToolkit()
    tk.setDynamicLayout(True)
#@-node:ekr.20070930194949:startJyleo (leo.py)
#@+node:ekr.20040411081633:startPsyco
def startPsyco ():

    import leo.core.leoGlobals as g

    try:
        import psyco
        if 0:
            theFile = r"c:\prog\test\psycoLog.txt"
            g.es("psyco now logging to:",theFile,color="blue")
            psyco.log(theFile)
            psyco.profile()
        psyco.full()
        g.es("psyco now running",color="blue")
    except ImportError:
        g.app.use_psyco = False
    except:
        print "unexpected exception importing psyco"
        g.es_exception()
        g.app.use_psyco = False
#@-node:ekr.20040411081633:startPsyco
#@-node:ekr.20070930060755:utils
#@-others

def main():
    if len(sys.argv) &gt; 1:
        run(getFileName())
    else:
        run()

if __name__ == "__main__":
    main()

#@-node:ekr.20031218072017.2605:@thin runLeo.py 
#@-leo
"""</t>
<t tx="ekr.20080531131542.4">def printItem(aList,level):

    obj,lt_index,rt_index,subtag = aList
    print '  '*level,obj,repr(s[lt_index:rt_index])
    if subtag:
        for z in subtag:
            printItem(z,level+1)
</t>
<t tx="ekr.20080531140301.1"> line '#! /usr/bin/env python'
 nl '\n'
 sentinel '#@'
 sentinel-val '+leo-ver=4-thin'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.2605:@thin runLeo.py '
 nl '\n'
 sentinel '#@'
 sentinel-val '@first'
 nl '\n'
 nl '\n'
 line '"""Entry point for Leo in Python."""'
 nl '\n'
 nl '\n'
 sentinel '#@'
 sentinel-val '@language python'
 nl '\n'
 sentinel '#@'
 sentinel-val '@tabwidth -4'
 nl '\n'
 nl '\n'
 sentinel '#@'
 sentinel-val '&lt;&lt; Import pychecker &gt;&gt;'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.2606:&lt;&lt; Import pychecker &gt;&gt;'
 nl '\n'
 sentinel '#@'
 sentinel-val '@color'
 nl '\n'
 nl '\n'
 line "# __pychecker__ = '--no-argsused'"
 nl '\n'
 nl '\n'
 line '# See pycheckrc file in leoDist.leo for a list of erroneous warnings to be suppressed.'
 nl '\n'
 nl '\n'
 line '# New in Leo 4.4.5: use pylint instead of pychecker.'
 nl '\n'
 nl '\n'
 line '# if 0: # Set to 1 for lint-like testing.'
 nl '\n'
 leading-ws '      '
 line '# # Use t23.bat: only on Python 2.3.'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# try:'
 nl '\n'
 leading-ws '        '
 line '# import pychecker.checker'
 nl '\n'
 leading-ws '        '
 line '# # This works.  We may want to set options here...'
 nl '\n'
 leading-ws '        '
 line '# # from pychecker import Config '
 nl '\n'
 leading-ws '        '
 line '# # print pychecker'
 nl '\n'
 leading-ws '        '
 line '# print ; print "Warning (in leo.py): pychecker.checker running..." ; print'
 nl '\n'
 leading-ws '    '
 line '# except Exception:'
 nl '\n'
 leading-ws '        '
 line "# print ; print 'Can not import pychecker' ; print"
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.2606:&lt;&lt; Import pychecker &gt;&gt;'
 nl '\n'
 sentinel '#@'
 sentinel-val 'nl'
 nl '\n'
 nl '\n'
 line "# __pychecker__ = '--no-import --no-reimportself --no-reimport'"
 nl '\n'
 leading-ws '    '
 line '# Suppress import errors: this module must do strange things with imports.'
 nl '\n'
 nl '\n'
 line '# Warning: do not import any Leo modules here!'
 nl '\n'
 line '# Doing so would make g.app invalid in the imported files.'
 nl '\n'
 line 'import os'
 nl '\n'
 line 'import sys'
 nl '\n'
 line 'import Tkinter ; Tkinter.wantobjects = 0'
 nl '\n'
 leading-ws '    '
 line '# An ugly hack for Tk/Tkinter 8.5'
 nl '\n'
 leading-ws '    '
 line '# See http://sourceforge.net/forum/message.php?msg_id=4078577'
 nl '\n'
 nl '\n'
 sentinel '#@'
 sentinel-val '+others'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.1934:run'
 nl '\n'
 line 'def run(fileName=None,pymacs=None,jyLeo=False,*args,**keywords):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '"""Initialize and run Leo"""'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "# __pychecker__ = '--no-argsused' # keywords not used."
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import pdb ; pdb = pdb.set_trace'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "if fileName and fileName.startswith('--'):"
 nl '\n'
 leading-ws '        '
 line 'fileName = None'
 nl '\n'
 leading-ws '    '
 line "# print 'leo.py:run','fileName',fileName"
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val '    &lt;&lt; import leoGlobals and leoApp &gt;&gt;'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val '+node:ekr.20041219072112:&lt;&lt; import leoGlobals and leoApp &gt;&gt;'
 nl '\n'
 leading-ws '    '
 line 'if jyLeo:'
 nl '\n'
 leading-ws '        '
 line "print '*** starting jyLeo',sys.platform # will be something like java1.6.0_02"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Add the current directory to sys.path *before* importing g.'
 nl '\n'
 leading-ws '    '
 line '# This will fail if the current directory contains unicode characters...'
 nl '\n'
 leading-ws '    '
 line 'path = os.getcwd()'
 nl '\n'
 leading-ws '    '
 line 'if path not in sys.path:'
 nl '\n'
 leading-ws '        '
 line "# print 'appending %s to sys.path' % path"
 nl '\n'
 leading-ws '        '
 line 'sys.path.append(path)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Import leoGlobals, but do NOT set g.'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as leoGlobals'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Set leoGlobals.g, rather than in leoGlobals.py.'
 nl '\n'
 leading-ws '    '
 line 'leoGlobals.g = leoGlobals'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoApp as leoApp'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Create the app.'
 nl '\n'
 leading-ws '    '
 line 'leoGlobals.app = leoApp.LeoApp()'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# **now** we can set g.'
 nl '\n'
 leading-ws '    '
 line 'g = leoGlobals'
 nl '\n'
 leading-ws '    '
 line 'assert(g.app)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'if jyLeo:'
 nl '\n'
 leading-ws '        '
 line 'startJyleo(g)'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val '-node:ekr.20041219072112:&lt;&lt; import leoGlobals and leoApp &gt;&gt;'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val 'nl'
 nl '\n'
 leading-ws '    '
 line 'if not jyLeo and not isValidPython(): return'
 nl '\n'
 leading-ws '    '
 line 'g.computeStandardDirectories()'
 nl '\n'
 leading-ws '    '
 line 'adjustSysPath(g)'
 nl '\n'
 leading-ws '    '
 line 'if pymacs:'
 nl '\n'
 leading-ws '        '
 line 'script = windowFlag = False'
 nl '\n'
 leading-ws '    '
 line 'else:'
 nl '\n'
 leading-ws '        '
 line 'script, windowFlag = getBatchScript() # Do early so we can compute verbose next.'
 nl '\n'
 leading-ws '    '
 line 'verbose = script is None'
 nl '\n'
 leading-ws '    '
 line 'g.app.batchMode = script is not None'
 nl '\n'
 leading-ws '    '
 line "g.app.silentMode = '-silent' in sys.argv or '--silent' in sys.argv"
 nl '\n'
 leading-ws '    '
 line 'g.app.setLeoID(verbose=verbose) # Force the user to set g.app.leoID.'
 nl '\n'
 leading-ws '    '
 line 'scanForOneConfigOption(g)'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val '    &lt;&lt; import other early files &gt;&gt;'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val '+node:ekr.20041219072416.1:&lt;&lt; import other early files&gt;&gt;'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoNodes as leoNodes'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoConfig as leoConfig'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# There is a circular dependency between leoCommands and leoEditCommands.'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoCommands as leoCommands'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# try:'
 nl '\n'
 leading-ws '        '
 line '# import leo.core.leoNodes as leoNodes'
 nl '\n'
 leading-ws '    '
 line '# except ImportError:'
 nl '\n'
 leading-ws '        '
 line '# print "Error importing leoNodes.py"'
 nl '\n'
 leading-ws '        '
 line '# import traceback ; traceback.print_exc()'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# try:'
 nl '\n'
 leading-ws '        '
 line '# import leo.core.leoConfig as leoConfig'
 nl '\n'
 leading-ws '    '
 line '# except ImportError:'
 nl '\n'
 leading-ws '        '
 line '# print "Error importing leoConfig.py"'
 nl '\n'
 leading-ws '        '
 line '# import traceback ; traceback.print_exc()'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val '-node:ekr.20041219072416.1:&lt;&lt; import other early files&gt;&gt;'
 nl '\n'
 leading-ws '    '
 sentinel '#@'
 sentinel-val 'nl'
 nl '\n'
 leading-ws '    '
 line 'g.app.nodeIndices = leoNodes.nodeIndices(g.app.leoID)'
 nl '\n'
 leading-ws '    '
 line 'g.app.config = leoConfig.configClass()'
 nl '\n'
 leading-ws '    '
 line 'fileName,relativeFileName = completeFileName(fileName)'
 nl '\n'
 leading-ws '    '
 line 'reportDirectories(verbose)'
 nl '\n'
 leading-ws '    '
 line '# Read settings *after* setting g.app.config.'
 nl '\n'
 leading-ws '    '
 line '# Read settings *before* opening plugins.  This means if-gui has effect only in per-file settings.'
 nl '\n'
 leading-ws '    '
 line 'g.app.config.readSettingsFiles(fileName,verbose)'
 nl '\n'
 leading-ws '    '
 line 'g.app.setEncoding()'
 nl '\n'
 leading-ws '    '
 line 'if pymacs:'
 nl '\n'
 leading-ws '        '
 line 'createNullGuiWithScript(None)'
 nl '\n'
 leading-ws '    '
 line 'elif jyLeo:'
 nl '\n'
 leading-ws '        '
 line 'import leo.core.leoSwingGui as leoSwingGui'
 nl '\n'
 leading-ws '        '
 line 'g.app.gui = leoSwingGui.swingGui()'
 nl '\n'
 leading-ws '    '
 line 'elif script:'
 nl '\n'
 leading-ws '        '
 line 'if windowFlag:'
 nl '\n'
 leading-ws '            '
 line 'g.app.createTkGui() # Creates global windows.'
 nl '\n'
 leading-ws '            '
 line 'g.app.gui.setScript(script)'
 nl '\n'
 leading-ws '            '
 line 'sys.args = []'
 nl '\n'
 leading-ws '        '
 line 'else:'
 nl '\n'
 leading-ws '            '
 line 'createNullGuiWithScript(script)'
 nl '\n'
 leading-ws '        '
 line 'fileName = None'
 nl '\n'
 leading-ws '    '
 line '# Load plugins. Plugins may create g.app.gui.'
 nl '\n'
 leading-ws '    '
 line 'g.doHook("start1")'
 nl '\n'
 leading-ws '    '
 line 'if g.app.killed: return # Support for g.app.forceShutdown.'
 nl '\n'
 leading-ws '    '
 line '# Create the default gui if needed.'
 nl '\n'
 leading-ws '    '
 line 'if g.app.gui == None: g.app.createTkGui() # Creates global windows.'
 nl '\n'
 leading-ws '    '
 line '# Initialize tracing and statistics.'
 nl '\n'
 leading-ws '    '
 line 'g.init_sherlock(args)'
 nl '\n'
 leading-ws '    '
 line 'if g.app and g.app.use_psyco: startPsyco()'
 nl '\n'
 leading-ws '    '
 line '# Clear g.app.initing _before_ creating the frame.'
 nl '\n'
 leading-ws '    '
 line 'g.app.initing = False # "idle" hooks may now call g.app.forceShutdown.'
 nl '\n'
 leading-ws '    '
 line '# Create the main frame.  Show it and all queued messages.'
 nl '\n'
 leading-ws '    '
 line 'c,frame = createFrame(fileName,relativeFileName)'
 nl '\n'
 leading-ws '    '
 line 'if not frame: return'
 nl '\n'
 leading-ws '    '
 line "g.app.trace_gc          = c.config.getBool('trace_gc')"
 nl '\n'
 leading-ws '    '
 line "g.app.trace_gc_calls    = c.config.getBool('trace_gc_calls')"
 nl '\n'
 leading-ws '    '
 line "g.app.trace_gc_verbose  = c.config.getBool('trace_gc_verbose')"
 nl '\n'
 leading-ws '    '
 line 'if g.app.disableSave:'
 nl '\n'
 leading-ws '        '
 line 'g.es("disabling save commands",color="red")'
 nl '\n'
 leading-ws '    '
 line 'g.app.writeWaitingLog()'
 nl '\n'
 leading-ws '    '
 line "if g.app.oneConfigFilename: g.es_print('--one-config option in effect',color='red')"
 nl '\n'
 leading-ws '    '
 line 'p = c.currentPosition()'
 nl '\n'
 leading-ws '    '
 line 'g.doHook("start2",c=c,p=p,v=p,fileName=fileName)'
 nl '\n'
 leading-ws '    '
 line "if c.config.getBool('allow_idle_time_hook'):"
 nl '\n'
 leading-ws '        '
 line 'g.enableIdleTimeHook()'
 nl '\n'
 leading-ws '    '
 line 'if not fileName:'
 nl '\n'
 leading-ws '        '
 line 'c.redraw_now()'
 nl '\n'
 leading-ws '    '
 line "# Respect c's focus wishes if posssible."
 nl '\n'
 leading-ws '    '
 line 'w = g.app.gui.get_focus(c)'
 nl '\n'
 leading-ws '    '
 line 'if w != c.frame.body.bodyCtrl and w != c.frame.tree.canvas:'
 nl '\n'
 leading-ws '        '
 line 'c.bodyWantsFocus()'
 nl '\n'
 leading-ws '        '
 line 'c.k.showStateAndMode(w)'
 nl '\n'
 leading-ws '    '
 line 'c.outerUpdate()'
 nl '\n'
 leading-ws '    '
 line 'g.app.gui.runMainLoop()'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.1934:run'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20070930060755:utils'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20070306085724:adjustSysPath'
 nl '\n'
 line 'def adjustSysPath (g):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "'''Adjust sys.path to enable imports as usual with Leo.'''"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "#g.trace('loadDir',g.app.loadDir)"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "leoDirs = ('config','doc','extensions','modes','plugins','core','test')"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'for theDir in leoDirs:'
 nl '\n'
 leading-ws '        '
 line 'path = g.os_path_abspath('
 nl '\n'
 leading-ws '            '
 line "g.os_path_join(g.app.loadDir,'..',theDir))"
 nl '\n'
 leading-ws '        '
 line 'if path not in sys.path:'
 nl '\n'
 leading-ws '            '
 line 'sys.path.append(path)'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20070306085724:adjustSysPath'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20041124083125:completeFileName (leo.py)'
 nl '\n'
 line 'def completeFileName (fileName):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'if not (fileName and fileName.strip()):'
 nl '\n'
 leading-ws '        '
 line 'return None,None'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# This does not depend on config settings.'
 nl '\n'
 leading-ws '    '
 line 'try:'
 nl '\n'
 leading-ws '        '
 line "if sys.platform.lower().startswith('win'):"
 nl '\n'
 leading-ws '            '
 line "fileName = g.toUnicode(fileName,'mbcs')"
 nl '\n'
 leading-ws '        '
 line 'else:'
 nl '\n'
 leading-ws '            '
 line "fileName = g.toUnicode(fileName,'utf-8')"
 nl '\n'
 leading-ws '    '
 line 'except Exception: pass'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'relativeFileName = fileName'
 nl '\n'
 leading-ws '    '
 line 'fileName = g.os_path_join(os.getcwd(),fileName)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'junk,ext = g.os_path_splitext(fileName)'
 nl '\n'
 leading-ws '    '
 line 'if not ext:'
 nl '\n'
 leading-ws '        '
 line 'fileName = fileName + ".leo"'
 nl '\n'
 leading-ws '        '
 line 'relativeFileName = relativeFileName + ".leo"'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'return fileName,relativeFileName'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20041124083125:completeFileName (leo.py)'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.1624:createFrame (leo.py)'
 nl '\n'
 line 'def createFrame (fileName,relativeFileName):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '"""Create a LeoFrame during Leo\'s startup process."""'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Try to create a frame for the file.'
 nl '\n'
 leading-ws '    '
 line 'if fileName and g.os_path_exists(fileName):'
 nl '\n'
 leading-ws '        '
 line 'ok, frame = g.openWithFileName(relativeFileName or fileName,None)'
 nl '\n'
 leading-ws '        '
 line 'if ok: return frame.c,frame'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Create a _new_ frame &amp; indicate it is the startup window.'
 nl '\n'
 leading-ws '    '
 line 'c,frame = g.app.newLeoCommanderAndFrame('
 nl '\n'
 leading-ws '        '
 line 'fileName=fileName,'
 nl '\n'
 leading-ws '        '
 line 'relativeFileName=relativeFileName,'
 nl '\n'
 leading-ws '        '
 line 'initEditCommanders=True)'
 nl '\n'
 leading-ws '    '
 line 'assert frame.c == c and c.frame == frame'
 nl '\n'
 leading-ws '    '
 line 'frame.setInitialWindowGeometry()'
 nl '\n'
 leading-ws '    '
 line 'frame.resizePanesToRatio(frame.ratio,frame.secondary_ratio)'
 nl '\n'
 leading-ws '    '
 line 'frame.startupWindow = True'
 nl '\n'
 leading-ws '    '
 line 'if c.chapterController:'
 nl '\n'
 leading-ws '        '
 line 'c.chapterController.finishCreate()'
 nl '\n'
 leading-ws '        '
 line 'c.setChanged(False) # Clear the changed flag set when creating the @chapters node.'
 nl '\n'
 leading-ws '    '
 line "# Call the 'new' hook for compatibility with plugins."
 nl '\n'
 leading-ws '    '
 line 'g.doHook("new",old_c=None,c=c,new_c=c)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# New in Leo 4.4.8: create the menu as late as possible so it can use user commands.'
 nl '\n'
 leading-ws '    '
 line 'p = c.currentPosition()'
 nl '\n'
 leading-ws '    '
 line 'if not g.doHook("menu1",c=frame.c,p=p,v=p):'
 nl '\n'
 leading-ws '        '
 line 'frame.menu.createMenuBar(frame)'
 nl '\n'
 leading-ws '        '
 line 'c.updateRecentFiles(relativeFileName or fileName)'
 nl '\n'
 leading-ws '        '
 line 'g.doHook("menu2",c=frame.c,p=p,v=p)'
 nl '\n'
 leading-ws '        '
 line 'g.doHook("after-create-leo-frame",c=c)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# Report the failure to open the file.'
 nl '\n'
 leading-ws '    '
 line 'if fileName:'
 nl '\n'
 leading-ws '        '
 line 'g.es("file not found:",fileName)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'return c,frame'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.1624:createFrame (leo.py)'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.1938:createNullGuiWithScript (leo.py)'
 nl '\n'
 line 'def createNullGuiWithScript (script):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGui as leoGui'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'g.app.batchMode = True'
 nl '\n'
 leading-ws '    '
 line 'g.app.gui = leoGui.nullGui("nullGui")'
 nl '\n'
 leading-ws '    '
 line 'g.app.gui.setScript(script)'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.1938:createNullGuiWithScript (leo.py)'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.1939:getBatchScript'
 nl '\n'
 line 'def getBatchScript ():'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 leading-ws '    '
 line 'windowFlag = False'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'name = None ; i = 1 # Skip the dummy first arg.'
 nl '\n'
 leading-ws '    '
 line 'while i + 1 &lt; len(sys.argv):'
 nl '\n'
 leading-ws '        '
 line 'arg = sys.argv[i].strip().lower()'
 nl '\n'
 leading-ws '        '
 line 'if arg in ("--script","-script"):'
 nl '\n'
 leading-ws '            '
 line 'name = sys.argv[i+1].strip() ; break'
 nl '\n'
 leading-ws '        '
 line 'if arg in ("--script-window","-script-window"):'
 nl '\n'
 leading-ws '            '
 line 'name = sys.argv[i+1].strip() ; windowFlag = True ; break'
 nl '\n'
 leading-ws '        '
 line 'i += 1'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'if not name:'
 nl '\n'
 leading-ws '        '
 line 'return None, windowFlag'
 nl '\n'
 leading-ws '    '
 line 'name = g.os_path_join(g.app.loadDir,name)'
 nl '\n'
 leading-ws '    '
 line 'try:'
 nl '\n'
 leading-ws '        '
 line 'f = None'
 nl '\n'
 leading-ws '        '
 line 'try:'
 nl '\n'
 leading-ws '            '
 line "f = open(name,'r')"
 nl '\n'
 leading-ws '            '
 line 'script = f.read()'
 nl '\n'
 leading-ws '            '
 line '# g.trace("script",script)'
 nl '\n'
 leading-ws '        '
 line 'except IOError:'
 nl '\n'
 leading-ws '            '
 line 'g.es_print("can not open script file:",name, color="red")'
 nl '\n'
 leading-ws '            '
 line 'script = None'
 nl '\n'
 leading-ws '    '
 line 'finally:'
 nl '\n'
 leading-ws '        '
 line 'if f: f.close()'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "# Bug fix 4/27/07: Don't put a return in a finally clause."
 nl '\n'
 leading-ws '    '
 line 'return script, windowFlag'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.1939:getBatchScript'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20071117060958:getFileName'
 nl '\n'
 line 'def getFileName ():'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "'''Return the filename."
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "This is a hack for when Leo is started from a script that also starts IPython.'''"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '# No imports here.'
 nl '\n'
 leading-ws '    '
 line "# print 'leo.py:getFileName',sys.argv"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'i = 1'
 nl '\n'
 leading-ws '    '
 line "while i &lt; len(sys.argv) and sys.argv[i].endswith('.py'):"
 nl '\n'
 leading-ws '        '
 line 'i += 1'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'if sys.platform=="win32": # Windows'
 nl '\n'
 leading-ws '        '
 line "result = ' '.join(sys.argv[i:])"
 nl '\n'
 leading-ws '    '
 line 'else:'
 nl '\n'
 leading-ws '        '
 line 'result = sys.argv[i]'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'return result'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20071117060958:getFileName'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.1936:isValidPython'
 nl '\n'
 line 'def isValidPython():'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import traceback'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "if sys.platform == 'cli':"
 nl '\n'
 leading-ws '        '
 line 'return True'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'message = """\\'
 nl '\n'
 line 'Leo requires Python 2.2.1 or higher.'
 nl '\n'
 line 'You may download Python from http://python.org/download/'
 nl '\n'
 line '"""'
 nl '\n'
 leading-ws '    '
 line 'try:'
 nl '\n'
 leading-ws '        '
 line '# This will fail if True/False are not defined.'
 nl '\n'
 leading-ws '        '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 leading-ws '    '
 line 'except ImportError:'
 nl '\n'
 leading-ws '        '
 line 'print "isValidPython: can not import leo.core.leoGlobals"'
 nl '\n'
 leading-ws '        '
 line 'return 0'
 nl '\n'
 leading-ws '    '
 line 'except:'
 nl '\n'
 leading-ws '        '
 line 'print "isValidPytyhon: unexpected exception: import leo.core.leoGlobals"'
 nl '\n'
 leading-ws '        '
 line 'traceback.print_exc()'
 nl '\n'
 leading-ws '        '
 line 'return 0'
 nl '\n'
 leading-ws '    '
 line 'try:'
 nl '\n'
 leading-ws '        '
 line "version = '.'.join([str(sys.version_info[i]) for i in (0,1,2)])"
 nl '\n'
 leading-ws '        '
 line "ok = g.CheckVersion(version,'2.2.1')"
 nl '\n'
 leading-ws '        '
 line 'if not ok:'
 nl '\n'
 leading-ws '            '
 line 'print message'
 nl '\n'
 leading-ws '            '
 line 'g.app.gui.runAskOkDialog(None,"Python version error",message=message,text="Exit")'
 nl '\n'
 leading-ws '        '
 line 'return ok'
 nl '\n'
 leading-ws '    '
 line 'except Exception:'
 nl '\n'
 leading-ws '        '
 line 'print "isValidPython: unexpected exception: g.CheckVersion"'
 nl '\n'
 leading-ws '        '
 line 'traceback.print_exc()'
 nl '\n'
 leading-ws '        '
 line 'return 0'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.1936:isValidPython'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20031218072017.2607:profile_leo'
 nl '\n'
 sentinel '#@'
 sentinel-val '+at '
 nl '\n'
 sentinel '#@'
 sentinel-val 'nonl'
 nl '\n'
 line '# To gather statistics, do the following in a Python window, not idle:'
 nl '\n'
 line '# '
 nl '\n'
 line '#     import leo'
 nl '\n'
 line '#     import leo.core.runLeo as runLeo'
 nl '\n'
 line '#     runLeo.profile_leo()  (this runs leo)'
 nl '\n'
 line '#     load leoDocs.leo (it is very slow)'
 nl '\n'
 line '#     quit Leo.'
 nl '\n'
 sentinel '#@'
 sentinel-val '-at'
 nl '\n'
 sentinel '#@'
 sentinel-val '@c'
 nl '\n'
 nl '\n'
 line 'def profile_leo ():'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '"""Gather and print statistics about Leo"""'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import cProfile as profile'
 nl '\n'
 leading-ws '    '
 line 'import pstats'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'name = r"c:\\leo.repo\\trunk\\leo\\test\\leoProfile.txt"'
 nl '\n'
 leading-ws '    '
 line "# name = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','leoProfile.txt'))"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "profile.run('leo.run()',name)"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'p = pstats.Stats(name)'
 nl '\n'
 leading-ws '    '
 line 'p.strip_dirs()'
 nl '\n'
 leading-ws '    '
 line "p.sort_stats('module','calls','time','name')"
 nl '\n'
 leading-ws '    '
 line "reFiles='leoAtFile.py:|leoFileCommands.py:|leoGlobals.py|leoNodes.py:'"
 nl '\n'
 leading-ws '    '
 line 'p.print_stats(reFiles)'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.2607:profile_leo'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20041130093254:reportDirectories'
 nl '\n'
 line 'def reportDirectories(verbose):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'if verbose:'
 nl '\n'
 leading-ws '        '
 line 'for kind,theDir in ('
 nl '\n'
 leading-ws '            '
 line '("load",g.app.loadDir),'
 nl '\n'
 leading-ws '            '
 line '("global config",g.app.globalConfigDir),'
 nl '\n'
 leading-ws '            '
 line '("home",g.app.homeDir),'
 nl '\n'
 leading-ws '        '
 line '):'
 nl '\n'
 leading-ws '            '
 line 'g.es("%s dir:" % (kind),theDir,color="blue")'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20041130093254:reportDirectories'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20080521132317.2:scanForOneConfigOption'
 nl '\n'
 line 'def scanForOneConfigOption(g):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line '\'\'\'Set g.app.oneConfigFilename if "--one-config=&lt;path&gt;" appears in sys.argv.\'\'\''
 nl '\n'
 nl '\n'
 leading-ws '    '
 line "tag = '--one-config=' ; n = len(tag)"
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'for s in sys.argv:'
 nl '\n'
 leading-ws '        '
 line 'if s.startswith(tag):'
 nl '\n'
 leading-ws '            '
 line 'path = s[n:]'
 nl '\n'
 leading-ws '            '
 line 'path = g.os_path_abspath(g.os_path_join(os.getcwd(),path))'
 nl '\n'
 leading-ws '            '
 line 'if g.os_path_exists(path):'
 nl '\n'
 leading-ws '                '
 line 'g.app.oneConfigFilename = path'
 nl '\n'
 leading-ws '                '
 line 'sys.argv.remove(s)'
 nl '\n'
 leading-ws '                '
 line 'break'
 nl '\n'
 leading-ws '            '
 line 'else:'
 nl '\n'
 leading-ws '                '
 line "g.es_print('Invalid option: file not found:',s,color='red')"
 nl '\n'
 leading-ws '                '
 line 'break'
 nl '\n'
 sentinel '#@'
 sentinel-val 'nonl'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20080521132317.2:scanForOneConfigOption'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20070930194949:startJyleo (leo.py)'
 nl '\n'
 line 'def startJyleo (g):'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoSwingFrame as leoSwingFrame'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoSwingUtils as leoSwingUtils'
 nl '\n'
 leading-ws '    '
 line 'import java.awt as awt'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'if 1:'
 nl '\n'
 leading-ws '        '
 line 'g.app.splash = None'
 nl '\n'
 leading-ws '    '
 line 'else:'
 nl '\n'
 leading-ws '        '
 line 'g.app.splash = splash = leoSwingFrame.leoSplash()'
 nl '\n'
 leading-ws '        '
 line 'awt.EventQueue.invokeAndWait(splash)'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'gct = leoSwingUtils.GCEveryOneMinute()'
 nl '\n'
 leading-ws '    '
 line 'gct.run()'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'tk = awt.Toolkit.getDefaultToolkit()'
 nl '\n'
 leading-ws '    '
 line 'tk.setDynamicLayout(True)'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20070930194949:startJyleo (leo.py)'
 nl '\n'
 sentinel '#@'
 sentinel-val '+node:ekr.20040411081633:startPsyco'
 nl '\n'
 line 'def startPsyco ():'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'import leo.core.leoGlobals as g'
 nl '\n'
 nl '\n'
 leading-ws '    '
 line 'try:'
 nl '\n'
 leading-ws '        '
 line 'import psyco'
 nl '\n'
 leading-ws '        '
 line 'if 0:'
 nl '\n'
 leading-ws '            '
 line 'theFile = r"c:\\prog\\test\\psycoLog.txt"'
 nl '\n'
 leading-ws '            '
 line 'g.es("psyco now logging to:",theFile,color="blue")'
 nl '\n'
 leading-ws '            '
 line 'psyco.log(theFile)'
 nl '\n'
 leading-ws '            '
 line 'psyco.profile()'
 nl '\n'
 leading-ws '        '
 line 'psyco.full()'
 nl '\n'
 leading-ws '        '
 line 'g.es("psyco now running",color="blue")'
 nl '\n'
 leading-ws '    '
 line 'except ImportError:'
 nl '\n'
 leading-ws '        '
 line 'g.app.use_psyco = False'
 nl '\n'
 leading-ws '    '
 line 'except:'
 nl '\n'
 leading-ws '        '
 line 'print "unexpected exception importing psyco"'
 nl '\n'
 leading-ws '        '
 line 'g.es_exception()'
 nl '\n'
 leading-ws '        '
 line 'g.app.use_psyco = False'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20040411081633:startPsyco'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20070930060755:utils'
 nl '\n'
 sentinel '#@'
 sentinel-val '-others'
 nl '\n'
 nl '\n'
 line 'def main():'
 nl '\n'
 leading-ws '    '
 line 'if len(sys.argv) &gt; 1:'
 nl '\n'
 leading-ws '        '
 line 'run(getFileName())'
 nl '\n'
 leading-ws '    '
 line 'else:'
 nl '\n'
 leading-ws '        '
 line 'run()'
 nl '\n'
 nl '\n'
 line 'if __name__ == "__main__":'
 nl '\n'
 leading-ws '    '
 line 'main()'
 nl '\n'
 nl '\n'
 sentinel '#@'
 sentinel-val '-node:ekr.20031218072017.2605:@thin runLeo.py '
 nl '\n'
 sentinel '#@'
 sentinel-val '-leo'
 nl '\n'
 eof ''
ok: 1
</t>
<t tx="ekr.20080531141227.1">path = r'c:\leo.repo\trunk\leo\core\runLeo.py'
f = file(path)
s = f.read()
f.close()</t>
<t tx="mcrowe.20060823083143.7">@first # -*- coding: utf-8 -*-
@language python
@tabwidth -4

&lt;&lt; about LeoToHTML &gt;&gt;
import leoGlobals as g
&lt;&lt; define dhtml stuff &gt;&gt;
@others

fileName = c.frame.shortFileName() # Get current outline file name
if fileName.endswith('.leo'): fileName = fileName[:-4] # Remove .leo suffix
path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test',fileName)) + '.htm'

# Write the file.
f=open(path, 'w')
writeAll(f)
f.close() 
g.es('wrote: %s' % (path),color="turquoise4") 
</t>
</tnodes>
</leo_file>
