<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet ekr_test?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.571052631579">
	<global_window_position top="10" left="289" height="950" width="907"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20070416075121"><vh>Startup</vh>
<v t="ekr.20070529172620"><vh>@chapters</vh>
<v t="ekr.20070529173219"><vh>@chapter abc</vh>
<v t="ekr.20070529173219.1"><vh>abc node 1</vh></v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
</v>
<v t="ekr.20070603190944"><vh>@chapter xyz</vh>
<v t="ekr.20070603190944.1"><vh>xyz node 1</vh></v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
</v>
</v>
<v t="ekr.20070224123943" a="E"><vh>@settings</vh>
<v t="ekr.20071025193940"><vh>@enabled-plugins</vh></v>
<v t="ekr.20070305085403"><vh>vim plugin</vh>
<v t="ekr.20070305085403.1"><vh>@string vim_cmd = c:\vim\vim63\gvim --servername LEO</vh></v>
<v t="ekr.20070305085403.2"><vh>@string vim_exe = c:\vim\vim63\gvim</vh></v>
</v>
<v t="ekr.20070723091227"><vh>http plugin</vh>
<v t="ekr.20070723091227.1"><vh>@bool http_active = True</vh></v>
<v t="ekr.20070723091227.2"><vh>@int  port = 8080</vh></v>
<v t="ekr.20070723091227.3"><vh>@string rst_http_attributename = 'rst_http_attribute'</vh></v>
</v>
<v t="ekr.20070503085527"><vh>@bool use_chapters = True</vh></v>
<v t="ekr.20070604100125"><vh>@bool use_chapter_tabs = True</vh></v>
<v t="ekr.20070503120403"><vh>@bool trace_tree_gc = False</vh></v>
<v t="ekr.20070504100715"><vh>@bool trace_tree_alloc = False</vh></v>
<v t="ekr.20070504080933"><vh>@bool create_nonexistent_directories = True</vh></v>
<v t="ekr.20070701090143"><vh>@@bool force_newlines_in_at_nosent_bodies = False</vh></v>
<v t="ekr.20080310164329.2"><vh>@@menus</vh>
<v t="ekr.20080310164329.3"><vh>@menu &amp;File</vh>
<v t="ekr.20080310164329.4"><vh>@item *&amp;new</vh></v>
<v t="ekr.20080310164329.5"><vh>@item open-outline</vh></v>
<v t="ekr.20080310164329.6"><vh>@menu Open &amp;With...</vh></v>
<v t="ekr.20080310164329.7"><vh>@item -</vh></v>
<v t="ekr.20080310164329.8"><vh>@item close-window</vh></v>
<v t="ekr.20080310164329.9"><vh>@item save-file</vh></v>
<v t="ekr.20080310164329.10"><vh>@item save-file-as</vh></v>
<v t="ekr.20080310164329.11"><vh>@item save-file-as-unzipped</vh></v>
<v t="ekr.20080310164329.12"><vh>@item save-file-as-zipped</vh></v>
<v t="ekr.20080310164329.13"><vh>@item save-file-to</vh></v>
<v t="ekr.20080310164329.14"><vh>@item revert</vh></v>
<v t="ekr.20080310164329.15"><vh>@menu Recent &amp;Files</vh></v>
<v t="ekr.20080310164329.16"><vh>@item -</vh></v>
<v t="ekr.20080310164329.17"><vh>@menu &amp;Read/Write...</vh>
<v t="ekr.20080310164329.18"><vh>@item *&amp;check-derived-file</vh></v>
<v t="ekr.20080310164329.19"><vh>@item *check-le&amp;o-file</vh></v>
<v t="ekr.20080310164329.20"><vh>@item *compare-leo-file&amp;s</vh></v>
<v t="ekr.20080310164329.21"><vh>@item -</vh></v>
<v t="ekr.20080310164329.22"><vh>@item *&amp;read-outline-only</vh></v>
<v t="ekr.20080310164329.23"><vh>@item *write-&amp;outline-only</vh></v>
<v t="ekr.20080310164329.24"><vh>@item -</vh></v>
<v t="ekr.20080310164329.25"><vh>@item *read-&amp;file-into-node</vh></v>
<v t="ekr.20080310164329.26"><vh>@item *writ&amp;e-file-from-node</vh></v>
<v t="ekr.20080310164329.27"><vh>@item -</vh></v>
<v t="ekr.20080310164329.28"><vh>@item read-at-auto-nodes</vh></v>
<v t="ekr.20080310164329.29"><vh>@item write-at-auto-nodes</vh></v>
<v t="ekr.20080310164329.30"><vh>@item write-dirty-at-auto-nodes</vh></v>
<v t="ekr.20080310164329.31"><vh>@item -</vh></v>
<v t="ekr.20080310164329.32"><vh>@item read-at-file-nodes</vh></v>
<v t="ekr.20080310164329.33"><vh>@item write-dirty-at-file-nodes</vh></v>
<v t="ekr.20080310164329.34"><vh>@item write-missing-at-file-nodes</vh></v>
<v t="ekr.20080310164329.35"><vh>@item write-at-file-nodes</vh></v>
</v>
<v t="ekr.20080310164329.36"><vh>@menu Tan&amp;gle...</vh>
<v t="ekr.20080310164329.37"><vh>@item *tangle-&amp;all</vh></v>
<v t="ekr.20080310164329.38"><vh>@item *tangle-&amp;marked</vh></v>
<v t="ekr.20080310164329.39"><vh>@item *&amp;tangle</vh></v>
</v>
<v t="ekr.20080310164329.40"><vh>@menu &amp;Untangle...</vh>
<v t="ekr.20080310164329.41"><vh>@item *untangle-&amp;all</vh></v>
<v t="ekr.20080310164329.42"><vh>@item *untangle-&amp;marked</vh></v>
<v t="ekr.20080310164329.43"><vh>@item *&amp;untangle</vh></v>
</v>
<v t="ekr.20080310164329.44"><vh>@menu &amp;Import...</vh>
<v t="ekr.20080310164329.45"><vh>@item *import-&amp;derived-file</vh></v>
<v t="ekr.20080310164329.46"><vh>@item import-at-file</vh></v>
<v t="ekr.20080310164329.47"><vh>@item import-at-root</vh></v>
<v t="ekr.20080310164329.48"><vh>@item *import-&amp;cweb-files</vh></v>
<v t="ekr.20080310164329.49"><vh>@item *import-&amp;noweb-files</vh></v>
<v t="ekr.20080310164329.50"><vh>@item *import-flattened-&amp;outline</vh></v>
</v>
<v t="ekr.20080310164329.51"><vh>@menu &amp;Export...</vh>
<v t="ekr.20080310164329.52"><vh>@item *export-&amp;headlines</vh></v>
<v t="ekr.20080310164329.53"><vh>@item *outline-to-&amp;cweb</vh></v>
<v t="ekr.20080310164329.54"><vh>@item *outline-to-&amp;noweb</vh></v>
<v t="ekr.20080310164329.55"><vh>@item *&amp;flatten-outline</vh></v>
<v t="ekr.20080310164329.56"><vh>@item *&amp;remove-sentinels</vh></v>
<v t="ekr.20080310164329.57"><vh>@item *&amp;weave</vh></v>
</v>
<v t="ekr.20080310164329.58"><vh>@item -</vh></v>
<v t="ekr.20080310164329.59"><vh>@item exit-leo</vh></v>
</v>
<v t="ekr.20080310164329.60"><vh>@menu &amp;Edit</vh>
<v t="ekr.20080310164329.61"><vh>@item undo</vh></v>
<v t="ekr.20080310164329.62"><vh>@item redo</vh></v>
<v t="ekr.20080310164329.63"><vh>@item -</vh></v>
<v t="ekr.20080310164329.64"><vh>@item cut-text</vh></v>
<v t="ekr.20080310164329.65"><vh>@item copy-text</vh></v>
<v t="ekr.20080310164329.66"><vh>@item paste-text</vh></v>
<v t="ekr.20080310164329.67"><vh>@item backward-delete-char</vh></v>
<v t="ekr.20080310164329.68"><vh>@item select-all</vh></v>
<v t="ekr.20080310164329.69"><vh>@item -</vh></v>
<v t="ekr.20080310164329.70"><vh>@menu Edit &amp;Body...</vh>
<v t="ekr.20080310164329.71"><vh>@item *extract-&amp;section</vh></v>
<v t="ekr.20080310164329.72"><vh>@item *extract-&amp;names</vh></v>
<v t="ekr.20080310164329.73"><vh>@item *&amp;extract</vh></v>
<v t="ekr.20080310164329.74"><vh>@item -</vh></v>
<v t="ekr.20080310164329.75"><vh>@item *convert-all-b&amp;lanks</vh></v>
<v t="ekr.20080310164329.76"><vh>@item *convert-all-t&amp;abs</vh></v>
<v t="ekr.20080310164329.77"><vh>@item *convert-&amp;blanks</vh></v>
<v t="ekr.20080310164329.78"><vh>@item *convert-&amp;tabs</vh></v>
<v t="ekr.20080310164329.79"><vh>@item *insert-body-&amp;time</vh></v>
<v t="ekr.20080310164329.80"><vh>@item *&amp;reformat-paragraph</vh></v>
<v t="ekr.20080310164329.81"><vh>@item -</vh></v>
<v t="ekr.20080310164329.82"><vh>@item *&amp;indent-region</vh></v>
<v t="ekr.20080310164329.83"><vh>@item *&amp;unindent-region</vh></v>
<v t="ekr.20080310164329.84"><vh>@item *&amp;match-brackets</vh></v>
<v t="ekr.20080310164329.85"><vh>@item *add-comments</vh></v>
<v t="ekr.20080310164329.86"><vh>@item *delete-comments</vh></v>
</v>
<v t="ekr.20080310164329.87"><vh>@menu Edit &amp;Headline...</vh>
<v t="ekr.20080310164329.88"><vh>@item *edit-&amp;headline</vh></v>
<v t="ekr.20080310164329.89"><vh>@item *&amp;end-edit-headline</vh></v>
<v t="ekr.20080310164329.90"><vh>@item *&amp;abort-edit-headline</vh></v>
<v t="ekr.20080310164329.91"><vh>@item *insert-headline-&amp;time</vh></v>
<v t="ekr.20080310164329.92"><vh>@item *toggle-&amp;angle-brackets</vh></v>
</v>
<v t="ekr.20080310164329.93"><vh>@menu &amp;Find...</vh>
<v t="ekr.20080310164329.94"><vh>@item *&amp;open-find-tab</vh></v>
<v t="ekr.20080310164329.95"><vh>@item *&amp;hide-find-tab</vh></v>
<v t="ekr.20080310164329.96"><vh>@item *search-&amp;with-present-options</vh></v>
<v t="ekr.20080310164329.97"><vh>@item -</vh></v>
<v t="ekr.20080310164329.98"><vh>@item *find-&amp;next</vh></v>
<v t="ekr.20080310164329.99"><vh>@item *find-&amp;prev</vh></v>
<v t="ekr.20080310164329.100"><vh>@item *&amp;change</vh></v>
<v t="ekr.20080310164329.101"><vh>@item *find-&amp;all</vh></v>
<v t="ekr.20080310164329.102"><vh>@item *clone-fi&amp;nd-all</vh></v>
<v t="ekr.20080310164329.103"><vh>@item *change-a&amp;ll</vh></v>
<v t="ekr.20080310164329.104"><vh>@item -</vh></v>
<v t="ekr.20080310164329.105"><vh>@item *&amp;find-character</vh></v>
<v t="ekr.20080310164329.106"><vh>@item *find-character-extend-&amp;selection</vh></v>
<v t="ekr.20080310164329.107"><vh>@item *&amp;backward-find-character</vh></v>
<v t="ekr.20080310164329.108"><vh>@item *backward-find-character-&amp;extend-selection</vh></v>
<v t="ekr.20080310164329.109"><vh>@item -</vh></v>
<v t="ekr.20080310164329.110"><vh>@item *&amp;isearch-forward</vh></v>
<v t="ekr.20080310164329.111"><vh>@item *isea&amp;rch-backward</vh></v>
<v t="ekr.20080310164329.112"><vh>@item *isearch-forward-rege&amp;xp</vh></v>
<v t="ekr.20080310164329.113"><vh>@item *isearch-backward-regex&amp;p</vh></v>
<v t="ekr.20080310164329.114"><vh>@item -</vh></v>
<v t="ekr.20080310164329.115"><vh>@item *&amp;query-replace</vh></v>
<v t="ekr.20080310164329.116"><vh>@item *q&amp;uery-replace-regex</vh></v>
</v>
<v t="ekr.20080310164329.117"><vh>@item *&amp;goto-global-line</vh></v>
<v t="ekr.20080310164329.118"><vh>@item *&amp;execute-script</vh></v>
<v t="ekr.20080310164329.119"><vh>@item toggle-invisibles</vh></v>
<v t="ekr.20080310164329.120"><vh>@item open-leoSettings-leo</vh></v>
</v>
<v t="ekr.20080310164329.121"><vh>@menu &amp;Outline</vh>
<v t="ekr.20080310164329.122"><vh>@item *c&amp;ut-node</vh></v>
<v t="ekr.20080310164329.123"><vh>@item *c&amp;opy-node</vh></v>
<v t="ekr.20080310164329.124"><vh>@item *&amp;paste-node</vh></v>
<v t="ekr.20080310164329.125"><vh>@item paste-retaining-clones</vh></v>
<v t="ekr.20080310164329.126"><vh>@item *&amp;delete-node</vh></v>
<v t="ekr.20080310164329.127"><vh>@item -</vh></v>
<v t="ekr.20080310164329.128"><vh>@item *&amp;insert-node</vh></v>
<v t="ekr.20080310164329.129"><vh>@item *insert-child</vh></v>
<v t="ekr.20080310164329.130"><vh>@item *&amp;clone-node</vh></v>
<v t="ekr.20080310164329.131"><vh>@item *sort-childre&amp;n</vh></v>
<v t="ekr.20080310164329.132"><vh>@item *&amp;sort-siblings</vh></v>
<v t="ekr.20080310164329.133"><vh>@item -</vh></v>
<v t="ekr.20080310164329.134"><vh>@item *&amp;hoist</vh></v>
<v t="ekr.20080310164329.135"><vh>@item de-hoist</vh></v>
<v t="ekr.20080310164329.136"><vh>@item -</vh></v>
<v t="ekr.20080310164329.137"><vh>@menu Chec&amp;k...</vh>
<v t="ekr.20080310164329.138"><vh>@item *check-&amp;outline</vh></v>
<v t="ekr.20080310164329.139"><vh>@item *&amp;dump-outline</vh></v>
<v t="ekr.20080310164329.140"><vh>@item -</vh></v>
<v t="ekr.20080310164329.141"><vh>@item *check-&amp;all-python-code</vh></v>
<v t="ekr.20080310164329.142"><vh>@item *&amp;check-python-code</vh></v>
</v>
<v t="ekr.20080310164329.143"><vh>@menu E&amp;xpand/Contract...</vh>
<v t="ekr.20080310164329.144"><vh>@item *&amp;contract-all</vh></v>
<v t="ekr.20080310164329.145"><vh>@item *contract-&amp;node</vh></v>
<v t="ekr.20080310164329.146"><vh>@item *contract-&amp;parent</vh></v>
<v t="ekr.20080310164329.147"><vh>@item *contract-or-go-&amp;left</vh></v>
<v t="ekr.20080310164329.148"><vh>@item -</vh></v>
<v t="ekr.20080310164329.149"><vh>@item *expand-p&amp;rev-level</vh></v>
<v t="ekr.20080310164329.150"><vh>@item *expand-n&amp;ext-level</vh></v>
<v t="ekr.20080310164329.151"><vh>@item *expand-and-go-right</vh></v>
<v t="ekr.20080310164329.152"><vh>@item *expand-or-go-right</vh></v>
<v t="ekr.20080310164329.153"><vh>@item -</vh></v>
<v t="ekr.20080310164329.154"><vh>@item *expand-to-level-&amp;1</vh></v>
<v t="ekr.20080310164329.155"><vh>@item *expand-to-level-&amp;2</vh></v>
<v t="ekr.20080310164329.156"><vh>@item *expand-to-level-&amp;3</vh></v>
<v t="ekr.20080310164329.157"><vh>@item *expand-to-level-&amp;4</vh></v>
<v t="ekr.20080310164329.158"><vh>@item *expand-to-level-&amp;5</vh></v>
<v t="ekr.20080310164329.159"><vh>@item *expand-to-level-&amp;6</vh></v>
<v t="ekr.20080310164329.160"><vh>@item *expand-to-level-&amp;7</vh></v>
<v t="ekr.20080310164329.161"><vh>@item *expand-to-level-&amp;8</vh></v>
<v t="ekr.20080310164329.162"><vh>@item -</vh></v>
<v t="ekr.20080310164329.163"><vh>@item *expand-&amp;all</vh></v>
<v t="ekr.20080310164329.164"><vh>@item *expand-n&amp;ode</vh></v>
</v>
<v t="ekr.20080310164329.165"><vh>@menu &amp;Move...</vh>
<v t="ekr.20080310164329.166"><vh>@item move-outline-down</vh></v>
<v t="ekr.20080310164329.167"><vh>@item move-outline-left</vh></v>
<v t="ekr.20080310164329.168"><vh>@item move-outline-right</vh></v>
<v t="ekr.20080310164329.169"><vh>@item move-outline-up</vh></v>
<v t="ekr.20080310164329.170"><vh>@item -</vh></v>
<v t="ekr.20080310164329.171"><vh>@item *&amp;promote</vh></v>
<v t="ekr.20080310164329.172"><vh>@item *&amp;demote</vh></v>
</v>
<v t="ekr.20080310164329.173"><vh>@menu M&amp;ark...</vh>
<v t="ekr.20080310164329.174"><vh>@item *&amp;mark</vh></v>
<v t="ekr.20080310164329.175"><vh>@item *mark-&amp;subheads</vh></v>
<v t="ekr.20080310164329.176"><vh>@item *mark-changed-&amp;items</vh></v>
<v t="ekr.20080310164329.177"><vh>@item *mark-changed-&amp;roots</vh></v>
<v t="ekr.20080310164329.178"><vh>@item *mark-&amp;clones</vh></v>
<v t="ekr.20080310164329.179"><vh>@item *&amp;unmark-all</vh></v>
</v>
<v t="ekr.20080310164329.180"><vh>@menu &amp;Go To...</vh>
<v t="ekr.20080310164329.181"><vh>@item find-next-clone</vh></v>
<v t="ekr.20080310164329.182"><vh>@item goto-first-node</vh></v>
<v t="ekr.20080310164329.183"><vh>@item goto-first-visible-node</vh></v>
<v t="ekr.20080310164329.184"><vh>@item goto-first-sibling</vh></v>
<v t="ekr.20080310164329.185"><vh>@item -</vh></v>
<v t="ekr.20080310164329.186"><vh>@item goto-next-changed</vh></v>
<v t="ekr.20080310164329.187"><vh>@item goto-next-clone</vh></v>
<v t="ekr.20080310164329.188"><vh>@item goto-next-marked</vh></v>
<v t="ekr.20080310164329.189"><vh>@item goto-next-node</vh></v>
<v t="ekr.20080310164329.190"><vh>@item goto-next-sibling</vh></v>
<v t="ekr.20080310164329.191"><vh>@item goto-next-visible</vh></v>
<v t="ekr.20080310164329.192"><vh>@item go-forward</vh></v>
<v t="ekr.20080310164329.193"><vh>@item -</vh></v>
<v t="ekr.20080310164329.194"><vh>@item goto-parent</vh></v>
<v t="ekr.20080310164329.195"><vh>@item -</vh></v>
<v t="ekr.20080310164329.196"><vh>@item goto-prev-node</vh></v>
<v t="ekr.20080310164329.197"><vh>@item goto-prev-sibling</vh></v>
<v t="ekr.20080310164329.198"><vh>@item goto-prev-visible</vh></v>
<v t="ekr.20080310164329.199"><vh>@item go-back</vh></v>
<v t="ekr.20080310164329.200"><vh>@item -</vh></v>
<v t="ekr.20080310164329.201"><vh>@item goto-last-node</vh></v>
<v t="ekr.20080310164329.202"><vh>@item goto-last-sibling</vh></v>
<v t="ekr.20080310164329.203"><vh>@item goto-last-visible-node</vh></v>
</v>
</v>
<v t="ekr.20080310164329.204"><vh>@menu &amp;Plugins</vh></v>
<v t="ekr.20080310164329.205"><vh>@menu &amp;Cmds</vh>
<v t="ekr.20080310164329.206"><vh>@menu &amp;Abbrev...</vh>
<v t="ekr.20080310164329.207"><vh>@item abbre&amp;v-mode</vh></v>
<v t="ekr.20080310164329.208"><vh>@item -</vh></v>
<v t="ekr.20080310164329.209"><vh>@item &amp;list-abbrevs</vh></v>
<v t="ekr.20080310164329.210"><vh>@item &amp;read-abbrev-file</vh></v>
<v t="ekr.20080310164329.211"><vh>@item &amp;write-abbrev-file</vh></v>
<v t="ekr.20080310164329.212"><vh>@item -</vh></v>
<v t="ekr.20080310164329.213"><vh>@item &amp;add-global-abbrev</vh></v>
<v t="ekr.20080310164329.214"><vh>@item &amp;inverse-add-global-abbrev</vh></v>
<v t="ekr.20080310164329.215"><vh>@item &amp;kill-all-abbrevs</vh></v>
<v t="ekr.20080310164329.216"><vh>@@item -</vh></v>
<v t="ekr.20080310164329.217"><vh>@@item &amp;expand-region-abbrevs</vh></v>
</v>
<v t="ekr.20080310164329.218"><vh>@menu &amp;Body Editors...</vh>
<v t="ekr.20080310164329.219"><vh>@item &amp;add-editor</vh></v>
<v t="ekr.20080310164329.220"><vh>@item &amp;cycle-editor-focus</vh></v>
<v t="ekr.20080310164329.221"><vh>@item &amp;delete-editor</vh></v>
</v>
<v t="ekr.20080310164329.222"><vh>@menu Buffers...</vh>
<v t="ekr.20080310164329.223"><vh>@item &amp;append-to-buffer</vh></v>
<v t="ekr.20080310164329.224"><vh>@item &amp;kill-buffer</vh></v>
<v t="ekr.20080310164329.225"><vh>@item list-&amp;buffers</vh></v>
<v t="ekr.20080310164329.226"><vh>@item &amp;list-buffers-alphabetically</vh></v>
<v t="ekr.20080310164329.227"><vh>@item &amp;prepend-to-buffer</vh></v>
<v t="ekr.20080310164329.228"><vh>@item &amp;rename-buffer</vh></v>
<v t="ekr.20080310164329.229"><vh>@item &amp;switch-to-buffer</vh></v>
</v>
<v t="ekr.20080310164329.230"><vh>@menu &amp;Chapters...</vh>
<v t="ekr.20080310164329.231"><vh>@item &amp;clone-node-to-chapter</vh></v>
<v t="ekr.20080310164329.232"><vh>@item c&amp;opy-node-to-chapter</vh></v>
<v t="ekr.20080310164329.233"><vh>@item c&amp;reate-chapter</vh></v>
<v t="ekr.20080310164329.234"><vh>@item &amp;move-node-to-chapter</vh></v>
<v t="ekr.20080310164329.235"><vh>@item &amp;remove-chapter</vh></v>
<v t="ekr.20080310164329.236"><vh>@item &amp;select-chapter</vh></v>
</v>
<v t="ekr.20080310164329.237"><vh>@menu Cursor/Selection...</vh>
<v t="ekr.20080310164329.238"><vh>@menu Cursor &amp;Back...</vh>
<v t="ekr.20080310164329.239"><vh>@item back-&amp;char</vh></v>
<v t="ekr.20080310164329.240"><vh>@item back-&amp;paragraph</vh></v>
<v t="ekr.20080310164329.241"><vh>@item back-&amp;sentence</vh></v>
<v t="ekr.20080310164329.242"><vh>@item back-&amp;word</vh></v>
<v t="ekr.20080310164329.243"><vh>@item -</vh></v>
<v t="ekr.20080310164329.244"><vh>@item beginning-of-&amp;buffer</vh></v>
<v t="ekr.20080310164329.245"><vh>@item beginning-of-&amp;line</vh></v>
<v t="ekr.20080310164329.246"><vh>@item -</vh></v>
<v t="ekr.20080310164329.247"><vh>@item pre&amp;vious-line</vh></v>
</v>
<v t="ekr.20080310164329.248"><vh>@menu Cursor Back &amp;Extend Selection...</vh>
<v t="ekr.20080310164329.249"><vh>@item back-&amp;char-extend-selection</vh></v>
<v t="ekr.20080310164329.250"><vh>@item back-&amp;paragraph-extend-selection</vh></v>
<v t="ekr.20080310164329.251"><vh>@item back-&amp;sentence-extend-selection</vh></v>
<v t="ekr.20080310164329.252"><vh>@item back-&amp;word-extend-selection</vh></v>
<v t="ekr.20080310164329.253"><vh>@item -</vh></v>
<v t="ekr.20080310164329.254"><vh>@item beginning-of-&amp;buffer-extend-selection</vh></v>
<v t="ekr.20080310164329.255"><vh>@item beginning-of-&amp;line-extend-selection</vh></v>
<v t="ekr.20080310164329.256"><vh>@item -</vh></v>
<v t="ekr.20080310164329.257"><vh>@item pre&amp;vious-line-extend-selection</vh></v>
</v>
<v t="ekr.20080310164329.258"><vh>@menu Cursor Back Extend &amp;to...</vh>
<v t="ekr.20080310164329.259"><vh>@item extend-to-&amp;line</vh></v>
<v t="ekr.20080310164329.260"><vh>@item extend-to-&amp;paragraph</vh></v>
<v t="ekr.20080310164329.261"><vh>@item extend-to-&amp;sentence</vh></v>
<v t="ekr.20080310164329.262"><vh>@item extend-to-&amp;word</vh></v>
</v>
<v t="ekr.20080310164329.263"><vh>@menu Cursor &amp;Forward...</vh>
<v t="ekr.20080310164329.264"><vh>@item end-of-&amp;buffer</vh></v>
<v t="ekr.20080310164329.265"><vh>@item end-of-&amp;line</vh></v>
<v t="ekr.20080310164329.266"><vh>@item -</vh></v>
<v t="ekr.20080310164329.267"><vh>@item forward-&amp;char</vh></v>
<v t="ekr.20080310164329.268"><vh>@item forward-&amp;paragraph</vh></v>
<v t="ekr.20080310164329.269"><vh>@item forward-&amp;sentence</vh></v>
<v t="ekr.20080310164329.270"><vh>@item forward-&amp;end-word</vh></v>
<v t="ekr.20080310164329.271"><vh>@item forward-&amp;word</vh></v>
<v t="ekr.20080310164329.272"><vh>@item -</vh></v>
<v t="ekr.20080310164329.273"><vh>@item &amp;next-line</vh></v>
</v>
<v t="ekr.20080310164329.274"><vh>@menu Cursor Forward E&amp;xtend Selection...</vh>
<v t="ekr.20080310164329.275"><vh>@item end-of-&amp;buffer-extend-selection</vh></v>
<v t="ekr.20080310164329.276"><vh>@item end-of-&amp;line-extend-selection</vh></v>
<v t="ekr.20080310164329.277"><vh>@item -</vh></v>
<v t="ekr.20080310164329.278"><vh>@item forward-&amp;char-extend-selection</vh></v>
<v t="ekr.20080310164329.279"><vh>@item forward-&amp;paragraph-extend-selection</vh></v>
<v t="ekr.20080310164329.280"><vh>@item forward-&amp;sentence-extend-selection</vh></v>
<v t="ekr.20080310164329.281"><vh>@item forward-&amp;end-word-extend-selection</vh></v>
<v t="ekr.20080310164329.282"><vh>@item forward-&amp;word-extend-selection</vh></v>
<v t="ekr.20080310164329.283"><vh>@item -</vh></v>
<v t="ekr.20080310164329.284"><vh>@item &amp;next-line-extend-selection</vh></v>
</v>
</v>
<v t="ekr.20080310164329.285"><vh>@menu &amp;Focus...</vh>
<v t="ekr.20080310164329.286"><vh>@item &amp;cycle-all-focus</vh></v>
<v t="ekr.20080310164329.287"><vh>@item focus-to-&amp;body</vh></v>
<v t="ekr.20080310164329.288"><vh>@item focus-to-&amp;log</vh></v>
<v t="ekr.20080310164329.289"><vh>@item focus-to-&amp;minibuffer</vh></v>
<v t="ekr.20080310164329.290"><vh>@item focus-to-&amp;tree</vh></v>
</v>
<v t="ekr.20080310164329.291"><vh>@menu &amp;Icons...</vh>
<v t="ekr.20080310164329.292"><vh>@item delete-&amp;first-icon</vh></v>
<v t="ekr.20080310164329.293"><vh>@item delete-&amp;last-icon</vh></v>
<v t="ekr.20080310164329.294"><vh>@item delete-&amp;node-icons</vh></v>
<v t="ekr.20080310164329.295"><vh>@item -</vh></v>
<v t="ekr.20080310164329.296"><vh>@item &amp;insert-icon</vh></v>
</v>
<v t="ekr.20080310164329.297"><vh>@menu &amp;Macro...</vh>
<v t="ekr.20080310164329.298"><vh>@item &amp;load-file</vh></v>
<v t="ekr.20080310164329.299"><vh>@item -</vh></v>
<v t="ekr.20080310164329.300"><vh>@item &amp;start-kbd-macro</vh></v>
<v t="ekr.20080310164329.301"><vh>@item &amp;end-kbd-macro</vh></v>
<v t="ekr.20080310164329.302"><vh>@item &amp;name-last-kbd-macro</vh></v>
<v t="ekr.20080310164329.303"><vh>@item -</vh></v>
<v t="ekr.20080310164329.304"><vh>@item &amp;call-last-keyboard-macro</vh></v>
<v t="ekr.20080310164329.305"><vh>@item &amp;insert-keyboard-macro</vh></v>
</v>
<v t="ekr.20080310164329.306"><vh>@menu Minibuffer...</vh>
<v t="ekr.20080310164329.307"><vh>@item &amp;full-command</vh></v>
<v t="ekr.20080310164329.308"><vh>@item keyboard-&amp;quit</vh></v>
<v t="ekr.20080310164329.309"><vh>@item &amp;repeat-complex-command</vh></v>
<v t="ekr.20080310164329.310"><vh>@item &amp;view-lossage</vh></v>
<v t="ekr.20080310164329.311"><vh>@item -</vh></v>
<v t="ekr.20080310164329.312"><vh>@item &amp;show-mini-buffer</vh></v>
<v t="ekr.20080310164329.313"><vh>@item h&amp;ide-mini-buffer</vh></v>
<v t="ekr.20080310164329.314"><vh>@item -</vh></v>
<v t="ekr.20080310164329.315"><vh>@item &amp;help-for-minibuffer</vh></v>
</v>
<v t="ekr.20080310164329.316"><vh>@menu &amp;Pickers...</vh>
<v t="ekr.20080310164329.317"><vh>@item show-&amp;colors</vh></v>
<v t="ekr.20080310164329.318"><vh>@item show-find-&amp;options</vh></v>
<v t="ekr.20080310164329.319"><vh>@item show-&amp;fonts</vh></v>
</v>
<v t="ekr.20080310164329.320"><vh>@menu &amp;Rectangles...</vh>
<v t="ekr.20080310164329.321"><vh>@item &amp;clear-rectangle</vh></v>
<v t="ekr.20080310164329.322"><vh>@item c&amp;lose-rectangle</vh></v>
<v t="ekr.20080310164329.323"><vh>@item &amp;delete-rectangle</vh></v>
<v t="ekr.20080310164329.324"><vh>@item &amp;kill-rectangle</vh></v>
<v t="ekr.20080310164329.325"><vh>@item &amp;open-rectangle</vh></v>
<v t="ekr.20080310164329.326"><vh>@item &amp;string-rectangle</vh></v>
<v t="ekr.20080310164329.327"><vh>@item &amp;yank-rectangle</vh></v>
</v>
<v t="ekr.20080310164329.328"><vh>@menu Registers...</vh>
<v t="ekr.20080310164329.329"><vh>@item &amp;append-to-register</vh></v>
<v t="ekr.20080310164329.330"><vh>@item copy-r&amp;ectangle-to-register</vh></v>
<v t="ekr.20080310164329.331"><vh>@item &amp;copy-to-register</vh></v>
<v t="ekr.20080310164329.332"><vh>@item i&amp;ncrement-register</vh></v>
<v t="ekr.20080310164329.333"><vh>@item &amp;insert-register</vh></v>
<v t="ekr.20080310164329.334"><vh>@item &amp;jump-to-register</vh></v>
<v t="ekr.20080310164329.335"><vh>@item &amp;point-to-register</vh></v>
<v t="ekr.20080310164329.336"><vh>@item p&amp;repend-to-register</vh></v>
<v t="ekr.20080310164329.337"><vh>@item &amp;view-register</vh></v>
</v>
<v t="ekr.20080310164329.338"><vh>@menu Run Script/Tests...</vh>
<v t="ekr.20080310164329.339"><vh>@item &amp;execute-script</vh></v>
<v t="ekr.20080310164329.340"><vh>@item &amp;run-unit-tests</vh></v>
</v>
<v t="ekr.20080310164329.341"><vh>@menu &amp;Scrolling...</vh>
<v t="ekr.20080310164329.342"><vh>@item scroll-outline-down-&amp;line</vh></v>
<v t="ekr.20080310164329.343"><vh>@item scroll-outline-down-&amp;page</vh></v>
<v t="ekr.20080310164329.344"><vh>@item scroll-outline-le&amp;ft</vh></v>
<v t="ekr.20080310164329.345"><vh>@item scroll-outline-&amp;right</vh></v>
<v t="ekr.20080310164329.346"><vh>@item s&amp;croll-outline-up-line</vh></v>
<v t="ekr.20080310164329.347"><vh>@item scr&amp;oll-outline-up-page</vh></v>
<v t="ekr.20080310164329.348"><vh>@item -</vh></v>
<v t="ekr.20080310164329.349"><vh>@item scroll-&amp;down</vh></v>
<v t="ekr.20080310164329.350"><vh>@item scroll-&amp;up</vh></v>
<v t="ekr.20080310164329.351"><vh>@item -</vh></v>
<v t="ekr.20080310164329.352"><vh>@item scroll-down-&amp;extend-selection</vh></v>
<v t="ekr.20080310164329.353"><vh>@item scroll-up-e&amp;xtend-selection</vh></v>
</v>
<v t="ekr.20080310164329.354"><vh>@menu Spell C&amp;heck...</vh>
<v t="ekr.20080310164329.355"><vh>@item &amp;open-spell-tab</vh></v>
<v t="ekr.20080310164329.356"><vh>@item spell-&amp;change</vh></v>
<v t="ekr.20080310164329.357"><vh>@item spell-change-&amp;then-find</vh></v>
<v t="ekr.20080310164329.358"><vh>@item spell-&amp;find</vh></v>
<v t="ekr.20080310164329.359"><vh>@item spell-&amp;ignore</vh></v>
</v>
<v t="ekr.20080310164329.360"><vh>@menu &amp;Text Commands...</vh>
<v t="ekr.20080310164329.361"><vh>@item &amp;beautify</vh></v>
<v t="ekr.20080310164329.362"><vh>@item beautify-&amp;all</vh></v>
<v t="ekr.20080310164329.363"><vh>@item -</vh></v>
<v t="ekr.20080310164329.364"><vh>@item center-&amp;line</vh></v>
<v t="ekr.20080310164329.365"><vh>@item center-&amp;region</vh></v>
<v t="ekr.20080310164329.366"><vh>@item -</vh></v>
<v t="ekr.20080310164329.367"><vh>@item &amp;capitalize-word</vh></v>
<v t="ekr.20080310164329.368"><vh>@item &amp;downcase-word</vh></v>
<v t="ekr.20080310164329.369"><vh>@item &amp;upcase-word</vh></v>
<v t="ekr.20080310164329.370"><vh>@item -</vh></v>
<v t="ekr.20080310164329.371"><vh>@item d&amp;owncase-region</vh></v>
<v t="ekr.20080310164329.372"><vh>@item u&amp;pcase-region</vh></v>
<v t="ekr.20080310164329.373"><vh>@item -</vh></v>
<v t="ekr.20080310164329.374"><vh>@item &amp;indent-region</vh></v>
<v t="ekr.20080310164329.375"><vh>@item indent-r&amp;elative</vh></v>
<v t="ekr.20080310164329.376"><vh>@item indent-ri&amp;gidly</vh></v>
<v t="ekr.20080310164329.377"><vh>@item u&amp;nindent-region</vh></v>
<v t="ekr.20080310164329.378"><vh>@item -</vh></v>
<v t="ekr.20080310164329.379"><vh>@item sort-colu&amp;mns</vh></v>
<v t="ekr.20080310164329.380"><vh>@item sort-&amp;fields</vh></v>
<v t="ekr.20080310164329.381"><vh>@item &amp;sort-lines</vh></v>
</v>
<v t="ekr.20080310164329.382"><vh>@menu Toggle Settings...</vh>
<v t="ekr.20080310164329.383"><vh>@item toggle-a&amp;utocompleter</vh></v>
<v t="ekr.20080310164329.384"><vh>@item toggle-call&amp;tips</vh></v>
<v t="ekr.20080310164329.385"><vh>@item toggle-&amp;extend-mode</vh></v>
<v t="ekr.20080310164329.386"><vh>@item toggle-input-&amp;state</vh></v>
<v t="ekr.20080310164329.387"><vh>@item toggle-in&amp;visibles</vh></v>
<v t="ekr.20080310164329.388"><vh>@item toggle-&amp;mini-buffer</vh></v>
<v t="ekr.20080310164329.389"><vh>@item toggle-split-&amp;direction</vh></v>
<v t="ekr.20080310164329.390"><vh>@item -</vh></v>
<v t="ekr.20080310164329.391"><vh>@item toggle-find-&amp;ignore-case-option</vh></v>
<v t="ekr.20080310164329.392"><vh>@item toggle-find-in-&amp;body-option</vh></v>
<v t="ekr.20080310164329.393"><vh>@item toggle-find-in-&amp;headline-option</vh></v>
<v t="ekr.20080310164329.394"><vh>@item toggle-find-mark-&amp;changes-option</vh></v>
<v t="ekr.20080310164329.395"><vh>@item toggle-find-mark-&amp;finds-option</vh></v>
<v t="ekr.20080310164329.396"><vh>@item toggle-find-rege&amp;x-option</vh></v>
<v t="ekr.20080310164329.397"><vh>@item toggle-find-&amp;reverse-option</vh></v>
<v t="ekr.20080310164329.398"><vh>@item toggle-find-&amp;word-option</vh></v>
<v t="ekr.20080310164329.399"><vh>@item toggle-find-wrap-&amp;around-option</vh></v>
<v t="ekr.20080310164329.400"><vh>@item toggle-s&amp;parce-move</vh></v>
</v>
<v t="ekr.20080310164329.401"><vh>@menu &amp;Yank And Kill</vh>
<v t="ekr.20080310164329.402"><vh>@item kill-&amp;buffer</vh></v>
<v t="ekr.20080310164329.403"><vh>@item kill-&amp;line</vh></v>
<v t="ekr.20080310164329.404"><vh>@item kill-&amp;rectangle</vh></v>
<v t="ekr.20080310164329.405"><vh>@item kill-re&amp;gion</vh></v>
<v t="ekr.20080310164329.406"><vh>@item kill-region-s&amp;ave</vh></v>
<v t="ekr.20080310164329.407"><vh>@item kill-&amp;sentence</vh></v>
<v t="ekr.20080310164329.408"><vh>@item kill-ws</vh></v>
<v t="ekr.20080310164329.409"><vh>@item kill-&amp;word</vh></v>
<v t="ekr.20080310164329.410"><vh>@item -</vh></v>
<v t="ekr.20080310164329.411"><vh>@item &amp;yank</vh></v>
<v t="ekr.20080310164329.412"><vh>@item yank-&amp;pop</vh></v>
<v t="ekr.20080310164329.413"><vh>@item yank-r&amp;ectangle</vh></v>
</v>
</v>
<v t="ekr.20080310164329.414"><vh>@menu &amp;Window</vh>
<v t="ekr.20080310164329.415"><vh>@item *&amp;equal-sized-panes</vh></v>
<v t="ekr.20080310164329.416"><vh>@item *&amp;toggle-active-pane</vh></v>
<v t="ekr.20080310164329.417"><vh>@item *toggle-&amp;split-direction</vh></v>
<v t="ekr.20080310164329.418"><vh>@item -</vh></v>
<v t="ekr.20080310164329.419"><vh>@item *contract-&amp;body-pane</vh></v>
<v t="ekr.20080310164329.420"><vh>@item *contract-&amp;log-pane</vh></v>
<v t="ekr.20080310164329.421"><vh>@item *contract-&amp;outline-pane</vh></v>
<v t="ekr.20080310164329.422"><vh>@item *contract-&amp;pane</vh></v>
<v t="ekr.20080310164329.423"><vh>@item -</vh></v>
<v t="ekr.20080310164329.424"><vh>@item *expand-bo&amp;dy-pane</vh></v>
<v t="ekr.20080310164329.425"><vh>@item *expand-lo&amp;g-pane</vh></v>
<v t="ekr.20080310164329.426"><vh>@item *expand-o&amp;utline-pane</vh></v>
<v t="ekr.20080310164329.427"><vh>@item *expand-pa&amp;ne</vh></v>
<v t="ekr.20080310164329.428"><vh>@item -</vh></v>
<v t="ekr.20080310164329.429"><vh>@item *&amp;fully-expand-body-pane</vh></v>
<v t="ekr.20080310164329.430"><vh>@item *full&amp;y-expand-log-pane</vh></v>
<v t="ekr.20080310164329.431"><vh>@item *fully-e&amp;xpand-outline-pane</vh></v>
<v t="ekr.20080310164329.432"><vh>@item *fully-exp&amp;and-pane</vh></v>
<v t="ekr.20080310164329.433"><vh>@item -</vh></v>
<v t="ekr.20080310164329.434"><vh>@item *&amp;resize-to-screen</vh></v>
<v t="ekr.20080310164329.435"><vh>@item *&amp;cascade-windows</vh></v>
<v t="ekr.20080310164329.436"><vh>@item *&amp;minimize-all</vh></v>
<v t="ekr.20080310164329.437"><vh>@item -</vh></v>
<v t="ekr.20080310164329.438"><vh>@item *open-compare-window</vh></v>
<v t="ekr.20080310164329.439"><vh>@item *open-python-&amp;window</vh></v>
</v>
<v t="ekr.20080310164329.440"><vh>@menu &amp;Help</vh>
<v t="ekr.20080310164329.441"><vh>@item about-leo</vh></v>
<v t="ekr.20080310164329.442"><vh>@item open-online-home</vh></v>
<v t="ekr.20080310164329.443"><vh>@item *open-online-&amp;tutorial</vh></v>
<v t="ekr.20080310164329.444"><vh>@item *open-&amp;users-guide</vh></v>
<v t="ekr.20080310164329.445"><vh>@item -</vh></v>
<v t="ekr.20080310164329.446"><vh>@item open-leoDocs-leo</vh></v>
<v t="ekr.20080310164329.447"><vh>@item open-leoPlugins-leo</vh></v>
<v t="ekr.20080310164329.448"><vh>@item open-leoSettings-leo</vh></v>
<v t="ekr.20080310164329.449"><vh>@item open-myLeoSettings-leo</vh></v>
<v t="ekr.20080310164329.450"><vh>@item open-scripts-leo</vh></v>
<v t="ekr.20080310164329.451"><vh>@item -</vh></v>
<v t="ekr.20080310164329.452"><vh>@item *he&amp;lp-for-minibuffer</vh></v>
<v t="ekr.20080310164329.453"><vh>@item *help-for-&amp;command</vh></v>
<v t="ekr.20080310164329.454"><vh>@item -</vh></v>
<v t="ekr.20080310164329.455"><vh>@item *&amp;apropos-autocompletion</vh></v>
<v t="ekr.20080310164329.456"><vh>@item *apropos-&amp;bindings</vh></v>
<v t="ekr.20080310164329.457"><vh>@item *apropos-&amp;debugging-commands</vh></v>
<v t="ekr.20080310164329.458"><vh>@item *apropos-&amp;find-commands</vh></v>
<v t="ekr.20080310164329.459"><vh>@item -</vh></v>
<v t="ekr.20080310164329.460"><vh>@item *pri&amp;nt-bindings</vh></v>
<v t="ekr.20080310164329.461"><vh>@item *print-c&amp;ommands</vh></v>
</v>
<v t="ekr.20080310164329.465"><vh>@menu &amp;IPython</vh>
<v t="ekr.20080310164329.466"><vh>@item start-ipython</vh></v>
<v t="ekr.20080310164329.467"><vh>@item push-to-ipython</vh></v>
<v t="ekr.20080310164713.2"><vh>@item clones-tab</vh></v>
</v>
</v>
</v>
<v t="ekr.20041001211817" str_leo_pos="9"><vh>Buttons</vh>
<v t="ekr.20070115092430"><vh>@@button winpdb</vh></v>
<v t="ekr.20071025192258"><vh>@@button local-tests @key=Alt+4</vh></v>
<v t="ekr.20071101163934"><vh>@@command rst3</vh></v>
<v t="ekr.20080105115712"><vh>@@button pylint</vh>
<v t="ekr.20080115085447"><vh>harmless warnings, errors</vh></v>
<v t="ekr.20080105130903"><vh>warnings</vh></v>
<v t="ekr.20080105120559"><vh>&lt;&lt; define data &gt;&gt;</vh></v>
</v>
<v t="ekr.20061030041450"><vh>Run Iron Python scripts</vh>
<v t="ekr.20061030041200"><vh>@@button iron-py @key=Alt-5</vh></v>
<v t="ekr.20061030041356"><vh>@url c:\prog\IronPython-1.0.1\Doc\IronPythonApiReference.chm</vh></v>
</v>
</v>
<v t="ekr.20070410063214"><vh>Commands</vh>
<v t="ekr.20060924180049"><vh>@@command clones-tab</vh>
<v t="ekr.20060924180049.1"><vh>class cloneNavigator</vh>
<v t="ekr.20060924180049.2"><vh>init</vh></v>
<v t="ekr.20060924180049.3"><vh>getAllClones</vh></v>
<v t="ekr.20060924180049.4"><vh>displayClones</vh>
<v t="ekr.20060924180049.5"><vh>&lt;&lt;Fill listbox with clone parent headlines&gt;&gt;</vh></v>
<v t="ekr.20060924180049.6"><vh>&lt;&lt;Goto selected position when listbox selection changes&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ekr.20080214091706.2"><vh>@@command ekr-command</vh></v>
</v>
<v t="ekr.20070531102813"><vh>Disabled buttons</vh>
<v t="ekr.20060814111542"><vh>@@button add-e</vh></v>
<v t="ekr.20060918083159"><vh>@@button Clear uAs</vh></v>
<v t="ekr.20071002150320"><vh>@@button create-canvas</vh></v>
<v t="ekr.20060809084033"><vh>@@button cvt to g.et</vh>
<v t="ekr.20060809104405"><vh>&lt;&lt; version history &gt;&gt;</vh></v>
<v t="ekr.20060809092023"><vh>test</vh>
<v t="ekr.20060809103738"><vh>test1</vh></v>
<v t="ekr.20060809103738.1"><vh>test2</vh></v>
</v>
<v t="ekr.20060809090508"><vh>replace</vh>
<v t="ekr.20060809091749.72"><vh>&lt;&lt; handle string &gt;&gt;</vh></v>
<v t="ekr.20060809091749.73"><vh>&lt;&lt; handle g.es &gt;&gt;</vh></v>
</v>
</v>
<v t="ekr.20070531104646"><vh>@@button da-comp</vh></v>
<v t="ekr.20070531103315"><vh>@@button da-expand</vh></v>
<v t="ekr.20070530072113"><vh>@@button hide-ch</vh></v>
<v t="ekr.20071006084354"><vh>@@button print tk line number</vh></v>
<v t="ekr.20070515073111"><vh>@@button sep</vh></v>
<v t="ekr.20060427103457"><vh>@@button settings.leo</vh></v>
<v t="ekr.20070604095313"><vh>Chapter buttons</vh>
<v t="ekr.20070530072113.1"><vh>@@button show-ch</vh></v>
<v t="ekr.20070603175054.1"><vh>@@button ch-main</vh></v>
<v t="ekr.20070603175054"><vh>@@button ch-abc</vh></v>
<v t="ekr.20070603190713.1"><vh>@@button ch-xyz</vh></v>
<v t="ekr.20070603190713"><vh>@@button ch-add-xyz</vh></v>
</v>
<v t="ekr.20060904110922"><vh>OPML buttons</vh>
<v t="ekr.20060904111037.1"><vh>@@button opml-write</vh></v>
<v t="ekr.20060904111037" a="M"><vh>@@button opml-read</vh></v>
</v>
<v t="ekr.20071128122043"><vh>@@command create-shell-tab @key = Alt+5</vh></v>
<v t="ekr.20080310111916.1"><vh>@@button Translate "can not" to "can't"</vh></v>
</v>
<v t="ekr.20071026102420.3"><vh>Scripts</vh>
<v t="ekr.20071129103842"><vh>create-at-auto-nodes</vh></v>
<v t="ekr.20070223164126"><vh>Recursive import script</vh>
<v t="ekr.20070223164126.1"><vh>importFiles</vh></v>
<v t="ekr.20070223164126.2"><vh>importDir</vh></v>
<v t="ekr.20070223164126.3"><vh>createLastChildOf</vh></v>
</v>
<v t="ekr.20070517070854"><vh>run script in nullGui</vh></v>
<v t="ekr.20070517071510"><vh>run script with leoBridge</vh></v>
<v t="ekr.20080206055658"><vh>Script to print font settings</vh></v>
</v>
</v>
<v t="ekr.20071025193940" a="TV"><vh>@enabled-plugins</vh></v>
<v t="ekr.20070517160058.1"><vh>Prototypes</vh>
<v t="ekr.20071026102420"><vh>Garbage collection</vh>
<v t="ekr.20070504064616"><vh>gc.get_objects</vh></v>
<v t="ekr.20070504131950"><vh>getNewObjects</vh>
<v t="ekr.20070504134219"><vh>isLargeItem</vh></v>
</v>
</v>
<v t="ekr.20070127154855.1"><vh>Prototype of Java</vh>
<v t="ekr.20070127150459"><vh>@@button java</vh></v>
<v t="ekr.20070127150459.1"><vh>java-script</vh>
<v t="ekr.20070127154637"><vh>class TestApp</vh>
<v t="ekr.20070127152353"><vh>main</vh></v>
</v>
</v>
</v>
<v t="ekr.20070929154250"><vh>Prototype of jyleo </vh>
<v t="ekr.20070929154250.1"><vh>@@command jyleo @key=Alt+Key+7</vh></v>
<v t="ekr.20070930043027"><vh>first-jyleo-script</vh></v>
<v t="ekr.20070930055931"><vh>jyleo-script</vh></v>
<v t="ekr.20070930183037"><vh>@@thin jyleo.py</vh></v>
</v>
<v t="ekr.20070929062147"><vh>Prototype of networkx graph tools</vh>
<v t="ekr.20070929122956"><vh>Data trees</vh>
<v t="ekr.20070929114617"><vh>@graph-target</vh></v>
<v t="ekr.20070929072043"><vh>@networkx</vh>
<v t="ekr.20070929072506.1"><vh>@nodes</vh></v>
<v t="ekr.20070929072506"><vh>@edges</vh></v>
</v>
<v t="ekr.20070929070257"><vh>@graph</vh>
<v t="ekr.20070929070257.1"><vh>@node child1</vh>
<v t="ekr.20070929070632"><vh>@link ('ekr', '20070929070257', 2): @node child2</vh></v>
</v>
<v t="ekr.20070929070257.2"><vh>@node child2</vh>
<v t="ekr.20070929070632.1"><vh>@link ('ekr', '20070929070257', 1): @node child1</vh></v>
</v>
</v>
<v t="ekr.20070928095102"><vh>root-node</vh>
<v t="ekr.20070928095102.1"><vh>child1</vh></v>
<v t="ekr.20070928095102.2"><vh>child2</vh></v>
</v>
</v>
<v t="ekr.20070929122956.1"><vh>buttons</vh>
<v t="ekr.20070929070426"><vh>@@button print link</vh></v>
<v t="ekr.20070927175908"><vh>@@button leo2graph</vh></v>
<v t="ekr.20070929062147.1"><vh>@@button at-graph2graph</vh></v>
<v t="ekr.20070929062147.2"><vh>@@button at-networkx2graph</vh>
<v t="ekr.20070929081505"><vh>error</vh></v>
<v t="ekr.20070929074830"><vh>parse</vh></v>
<v t="ekr.20070929072506.2"><vh>parseNodes</vh></v>
<v t="ekr.20070929074830.1"><vh>parseEdges</vh></v>
</v>
<v t="ekr.20070929082546"><vh>@@button at-networkx2at-graph</vh>
<v t="ekr.20070929120541"><vh>createEdges</vh></v>
<v t="ekr.20070929120541.1"><vh>createNodes</vh></v>
<v t="ekr.20070929115302"><vh>createTree</vh></v>
<v t="ekr.20070929114410.2"><vh>error</vh></v>
<v t="ekr.20070929114410.3"><vh>parse</vh></v>
<v t="ekr.20070929114410.5"><vh>parseEdges</vh></v>
<v t="ekr.20070929114410.4"><vh>parseNodes</vh></v>
</v>
</v>
</v>
<v t="ekr.20070630142904"><vh>Prototype of pyrex</vh>
<v t="ekr.20070630142904.2"><vh>gcc build docs</vh></v>
<v t="ekr.20070630142904.3"><vh>pyrexc command-line options</vh></v>
<v t="ekr.20070630142904.4"><vh>@@file myModule.pyx</vh></v>
<v t="ekr.20070630142904.5"><vh>Make myModule.c</vh></v>
</v>
<v t="ekr.20071026102420.1"><vh>Prototype of text clones</vh>
<v t="ekr.20071018103231"><vh>@textclone prototype</vh>
<v t="ekr.20071018102040"><vh>test node 1</vh></v>
<v t="ekr.20071022210854"><vh>a</vh></v>
<v t="ekr.20071022194901"><vh>test node 2</vh></v>
<v t="ekr.20071022210854.1"><vh>b</vh></v>
<v t="ekr.20071022195015"><vh>test node 3</vh></v>
<v t="ekr.20071022152159"><vh>@test textclone</vh></v>
<v t="ekr.20071018101008"><vh>@@button textclone @key = Alt+7</vh>
<v t="ekr.20071022190459"><vh>onEvent (module level)</vh></v>
<v t="ekr.20071022185842"><vh>class textCloneManager</vh>
<v t="ekr.20071022185842.1"><vh>ctor</vh></v>
<v t="ekr.20071022164806"><vh>error</vh></v>
<v t="ekr.20071022184417"><vh>findAllCloneText &amp; helper</vh>
<v t="ekr.20071022170213"><vh>findEndCloneText</vh></v>
</v>
<v t="ekr.20071022193326"><vh>scanAllNodes</vh></v>
<v t="ekr.20071022152159.2"><vh>updateBody &amp; helper</vh>
<v t="ekr.20071022162551"><vh>upateName</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="ekr.20071026082438"><vh>Prototype of user icons</vh>
<v t="ekr.20071026082914"><vh>Arrow target</vh></v>
<v t="ekr.20071026084348"><vh>Icon target</vh></v>
<v t="ekr.20071026174655"><vh>Small icons</vh>
<v t="ekr.20071026174231"><vh>small icons</vh></v>
</v>
<v t="ekr.20071026174414"><vh>Medium icons</vh>
<v t="ekr.20071026174331"><vh>medium icons 1</vh></v>
<v t="ekr.20071026174414.1"><vh></vh></v>
<v t="ekr.20071026174414.2"><vh>medium icons 2</vh></v>
</v>
<v t="ekr.20071026174655.1"><vh>Large icons</vh>
<v t="ekr.20071026174817"><vh></vh></v>
<v t="ekr.20071026174817.1"><vh></vh></v>
<v t="ekr.20071026174655.2"><vh>large icons 1</vh></v>
</v>
<v t="ekr.20071026082438.1"><vh>@@button delete all icons</vh></v>
<v t="ekr.20071026085244"><vh>@@button delete icons</vh></v>
<v t="ekr.20071026082438.2"><vh>@@button insert arrows</vh>
<v t="ekr.20071026082438.3"><vh>&lt;&lt; define event callbacks &gt;&gt;</vh></v>
</v>
<v t="ekr.20071026083020"><vh>@@button insert icons @key=Alt+5</vh>
<v t="ekr.20071026133046"><vh>getImageHeight</vh></v>
</v>
<v t="ekr.20071026170504"><vh>print sizes of all icons in various directories</vh>
<v t="ekr.20071026170511.1"><vh>getImageStats</vh></v>
</v>
<v t="ekr.20071026175552"><vh>print icon paths</vh></v>
</v>
<v t="ekr.20071026102420.2"><vh>Screen capture</vh>
<v t="ekr.20070528111805"><vh>FrontWindowCapture.pyw</vh></v>
<v t="ekr.20070609085533"><vh>@@url c:\prog\wink\ChangeViewMenu.htm</vh></v>
</v>
<v t="edreamleo.20080110083531"><vh>gtk stuff</vh>
<v t="edreamleo.20080110130828"><vh>createWindow</vh></v>
<v t="bob.20080111200056"><vh>@thin gtkOutlineDemo.py</vh></v>
</v>
<v t="ekr.20071124195608"><vh>Prototype of Leo in Ajax</vh>
<v t="ekr.20071126145358"><vh>To do</vh></v>
<v t="mcrowe.20060823083143.7"><vh>@@button Leo2DHTML</vh>
<v t="ekr.20071205142535"><vh>&lt;&lt; about LeoToHTML &gt;&gt;</vh></v>
<v t="ekr.20071205152904"><vh>&lt;&lt; define dhtml stuff &gt;&gt;</vh></v>
<v t="ekr.20071205160026"><vh>escape</vh></v>
<v t="ekr.20071210181436"><vh>writeAll</vh></v>
<v t="ekr.20071210181436.1"><vh>writeBody</vh></v>
<v t="ekr.20071210181436.2"><vh>writeHead</vh></v>
<v t="ekr.20071205144151.1"><vh>writeContents</vh></v>
<v t="ekr.20071205144151"><vh>writePreamble</vh></v>
<v t="ekr.20071207164625"><vh>writePostamble</vh></v>
</v>
<v t="ekr.20071124153244" tnodeList="ekr.20071124153244"><vh>@file server.py</vh></v>
<v t="ekr.20071124155034" tnodeList="ekr.20071124155034"><vh>@file hello.html</vh></v>
<v t="ekr.20071124160243" tnodeList="ekr.20071124160243,ekr.20071210150314.2,ekr.20071210150314.6,ekr.20071210145720,ekr.20071210145720.1,ekr.20071210145720.2,ekr.20071210155555,ekr.20071210150314.7"><vh>@file cgi-bin/edward.py</vh>
<v t="ekr.20071210150314.2"><vh>&lt;&lt; define dhtml stuff &gt;&gt;</vh></v>
<v t="ekr.20071210150314.6"><vh>escape</vh></v>
<v t="ekr.20071210145720"><vh>print_all</vh></v>
<v t="ekr.20071210145720.1"><vh>print_body</vh></v>
<v t="ekr.20071210145720.2"><vh>print_head</vh></v>
<v t="ekr.20071210155555"><vh>print_leo_dot_js</vh></v>
<v t="ekr.20071210150314.7"><vh>print_tree</vh></v>
</v>
<v t="ekr.20071210102626"><vh>@thin cgi-bin/leo.js</vh></v>
<v t="ekr.20071210125008"><vh>@@thin jqueryTest.html</vh></v>
</v>
<v t="ekr.20080118100049"><vh>cairo</vh></v>
<v t="ekr.20080128143841"><vh>test of ekrProj</vh></v>
<v t="ekr.20080127215337"><vh>package-script</vh></v>
</v>
<v t="ekr.20070315071830"><vh>Test files (do not delete)</vh>
<v t="ekr.20070227104713"><vh>@thin leoBridgeTest.py</vh></v>
<v t="ekr.20070626153912"><vh>@thin leoDynamicTest.py</vh></v>
</v>
<v t="ekr.20071105085941"><vh>Tests</vh>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
<v t="ekr.20071027111751"><vh>@test javaScript import</vh>
<v t="ekr.20071027111751.1"><vh>functions</vh></v>
</v>
<v t="ekr.20071027090115"><vh>tiddlyWiki sources</vh>
<v t="ekr.20071027092301"><vh>&lt;&lt; pre-shadow area &gt;&gt;</vh>
<v t="ekr.20071027090929"><vh>backstage</vh></v>
<v t="ekr.20071027090704"><vh>StyleSheetColors</vh></v>
<v t="ekr.20071027090704.1"><vh>StyleSheetLayout</vh></v>
<v t="ekr.20071027090704.2"><vh>StyleSheetLocale</vh></v>
<v t="ekr.20071027090929.1"><vh>StyleSheetPrint</vh></v>
<v t="ekr.20071027090929.2"><vh>PageTemplate</vh></v>
<v t="ekr.20071027090929.3"><vh>ViewTemplate</vh></v>
<v t="ekr.20071027090929.4"><vh>EditTemplate</vh></v>
<v t="ekr.20071027090929.5"><vh>GettingStarted</vh></v>
<v t="ekr.20071027090929.6"><vh>OptionsPanel</vh></v>
</v>
<v t="ekr.20071027092301.2"><vh>&lt;&lt;storearea&gt;&gt;</vh></v>
<v t="ekr.20071027092301.3"><vh>&lt;&lt; javascript &gt;&gt;</vh>
<v t="ekr.20071027092301.4"><vh>&lt;&lt; data &gt;&gt;</vh></v>
<v t="ekr.20071027092301.5"><vh>main</vh></v>
<v t="ekr.20071027092301.6"><vh>functions</vh></v>
</v>
</v>
<v t="ekr.20070722102255"><vh>@image C:\prog\tigris-cvs\leo\Icons\leo_inst.ico</vh></v>
<v t="ekr.20071030094853"><vh>Java import tests</vh>
<v t="ekr.20071030103209"><vh>Scripts: print/add/disable all java files in the from-victor directory</vh>
<v t="ekr.20071030103909"><vh>files</vh></v>
</v>
<v t="ekr.20071110092702.1"><vh>@@auto c:\prog\tigris-cvs\leo\test\r-41-framework\adminPermission.java</vh></v>
<v t="ekr.20071030103258"><vh>@@auto c:\prog\test\from-victor\AdminPermission.java</vh></v>
<v t="ekr.20071030103909.19"><vh>@@auto c:\prog\test\from-victor\AllServiceListener.java</vh></v>
<v t="ekr.20071030104140.23"><vh>@@auto c:\prog\test\from-victor\Bundle.java</vh></v>
<v t="ekr.20071030104140.22"><vh>@@auto c:\prog\test\from-victor\BundleActivator.java</vh></v>
<v t="ekr.20071030104140.21"><vh>@@auto c:\prog\test\from-victor\BundleContext.java</vh></v>
<v t="ekr.20071030104140.20"><vh>@@auto c:\prog\test\from-victor\BundleEvent.java</vh></v>
<v t="ekr.20071030104140.19"><vh>@@auto c:\prog\test\from-victor\BundleListener.java</vh></v>
<v t="ekr.20071030104140.18"><vh>@@auto c:\prog\test\from-victor\BundlePermission.java</vh></v>
<v t="ekr.20071030104140.17"><vh>@@auto c:\prog\test\from-victor\Configurable.java</vh></v>
<v t="ekr.20071030104140.16"><vh>@@auto c:\prog\test\from-victor\Constants.java</vh></v>
<v t="ekr.20071030104140.15"><vh>@@auto c:\prog\test\from-victor\Filter.java</vh></v>
<v t="ekr.20071030104140.14"><vh>@@auto c:\prog\test\from-victor\FrameworkEvent.java</vh></v>
<v t="ekr.20071030104140.13"><vh>@@auto c:\prog\test\from-victor\FrameworkListener.java</vh></v>
<v t="ekr.20071030104140.12"><vh>@@auto c:\prog\test\from-victor\FrameworkUtil.java</vh></v>
<v t="ekr.20071030104140.11"><vh>@@auto c:\prog\test\from-victor\InvalidSyntaxException.java</vh></v>
<v t="ekr.20071030104140.10"><vh>@@auto c:\prog\test\from-victor\PackagePermission.java</vh></v>
<v t="ekr.20071030104140.9"><vh>@@auto c:\prog\test\from-victor\ServiceEvent.java</vh></v>
<v t="ekr.20071030104140.8"><vh>@@auto c:\prog\test\from-victor\ServiceFactory.java</vh></v>
<v t="ekr.20071030104140.7"><vh>@@auto c:\prog\test\from-victor\ServiceListener.java</vh></v>
<v t="ekr.20071030104140.6"><vh>@@auto c:\prog\test\from-victor\ServicePermission.java</vh></v>
<v t="ekr.20071030104140.5"><vh>@@auto c:\prog\test\from-victor\ServiceReference.java</vh></v>
<v t="ekr.20071030104140.4"><vh>@@auto c:\prog\test\from-victor\ServiceRegistration.java</vh></v>
<v t="ekr.20071030102858.3"><vh>@@auto c:\prog\test\from-victor\shortBundleException.java</vh></v>
<v t="ekr.20071030104140.3"><vh>@@auto c:\prog\test\from-victor\shortBundleException.java</vh></v>
<v t="ekr.20071030104140.2"><vh>@@auto c:\prog\test\from-victor\SynchronousBundleListener.java</vh></v>
<v t="ekr.20071030104140.1"><vh>@@auto c:\prog\test\from-victor\Version.java</vh></v>
<v t="ekr.20071019073617"><vh>@@auto AdminPermission.java</vh></v>
</v>
<v t="ekr.20071114053401"><vh>@@file minimimal-at-thin-test.py</vh></v>
<v t="ekr.20071113100456"><vh>color_markup test</vh></v>
<v t="ekr.20071114071901"><vh>@url http://webpages.charter.net/edreamleo/front.html</vh></v>
<v t="ekr.20071115061426"><vh>@rst preformat-test.html</vh>
<v t="ekr.20071115061426.1"><vh>@rst-no-head links</vh></v>
<v t="ekr.20071115061426.2"><vh>Before section</vh></v>
<v t="ekr.20071115061426.3"><vh>@rst-preformat</vh></v>
<v t="ekr.20071115061535.1"><vh>After section</vh></v>
<v t="ekr.20071115061426.12"><vh>@rst-no-head end stuff</vh></v>
</v>
<v t="ekr.20071117152614"><vh>Mini test of at.putBuffered</vh></v>
<v t="ekr.20071127232245"><vh>lockout test</vh></v>
<v t="ekr.20071129090337"><vh>perl problem</vh></v>
<v t="ekr.20071201065815"><vh>@@auto at-auto-test.py</vh>
<v t="ekr.20071201073632"><vh>class Index</vh></v>
<v t="ekr.20071201073632.1"><vh>main</vh></v>
</v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
<v t="ekr.20080108091619"><vh>Convenience methods for icons</vh>
<v t="ekr.20080108092210"><vh>@@button insert-icon</vh></v>
<v t="ekr.20080108092210.1"><vh>@@button delete-icons</vh></v>
</v>
<v t="ekr.20071114092813"><vh>Tests of user icons</vh>
<v t="ekr.20071114092813.1"><vh>Arrow target</vh></v>
<v t="ekr.20071114092813.2"><vh>Icon target</vh></v>
<v t="ekr.20071114092813.3"><vh>Small icons</vh>
<v t="ekr.20071114092813.4"><vh>small icons</vh></v>
</v>
<v t="ekr.20071114092813.5"><vh>Medium icons</vh>
<v t="ekr.20071114092813.6"><vh>medium icons 1</vh></v>
<v t="ekr.20071114092813.7"><vh></vh></v>
<v t="ekr.20071114092813.8"><vh>medium icons 2</vh></v>
</v>
<v t="ekr.20071114092813.9"><vh>Large icons</vh>
<v t="ekr.20071114092813.10"><vh></vh></v>
<v t="ekr.20071114092813.11"><vh></vh></v>
<v t="ekr.20071114092813.12"><vh>large icons 1</vh></v>
</v>
<v t="ekr.20071114092813.13"><vh>@@button delete all icons</vh></v>
<v t="ekr.20071114092813.14"><vh>@@button delete icons</vh></v>
<v t="ekr.20071114092813.15"><vh>@@button insert arrows</vh>
<v t="ekr.20071114092813.16"><vh>&lt;&lt; define event callbacks &gt;&gt;</vh></v>
</v>
<v t="ekr.20071114092813.17"><vh>@@button insert icons @key=Alt+5</vh>
<v t="ekr.20071114092813.18"><vh>getImageHeight</vh></v>
</v>
<v t="ekr.20071114092813.19"><vh>print sizes of all icons in various directories</vh>
<v t="ekr.20071114092813.20"><vh>getImageStats</vh></v>
</v>
<v t="ekr.20071114092813.21"><vh>print icon paths</vh></v>
<v t="ekr.20071114084053"><vh>From Icons/Tango/16x16/emotes</vh></v>
<v t="ekr.20071116113202"><vh>Body text contains all icons in Icons/Tango</vh></v>
</v>
<v t="ekr.20080211085709"><vh>filter</vh></v>
<v t="ekr.20080211090819"><vh>@path c:\prog\test</vh>
<v t="ekr.20080210201921"><vh>@@auto pascalTest.pas</vh>
<v t="ekr.20080211172530"><vh>pascalTest declarations</vh></v>
<v t="ekr.20080211172530.1"><vh>interface</vh></v>
</v>
</v>
<v t="ekr.20080212035042"><vh>@@auto c:\prog\test\django-tests.py</vh>
<v t="ekr.20080212114457"><vh>django-tests declarations</vh></v>
</v>
<v t="ekr.20080223084414"><vh>testing mixture of keyword args and *args arg</vh></v>
<v t="ekr.20080229140820"><vh>test minibuffer command with args</vh></v>
</v>
</vnodes>
<tnodes>
<t tx="edreamleo.20080110083531">import gtk

@others

createWindow()

gtk.main()</t>
<t tx="edreamleo.20080110130828">def createWindow():

    def onKeyUp(w,event):
        g.trace(event.state,event.keyval,event.string)

    window = gtk.Window()
    window.set_title("Hello World")

    # button = gtk.Button("-----Press me-----")
    # button.connect("clicked",onButtonPressed)
    # window.add(button)

    splitter1 = gtk.VPaned()
    window.add(splitter1)

    tree = gtk.TextView()
    buf1 = tree.get_buffer()
    buf1.set_text("tree")

    body = gtk.TextView()
    buf2 = body.get_buffer()
    buf2.set_text("body")
    body.connect("key_release_event",onKeyUp)

    splitter1.add(tree)
    splitter1.add2(body)

    window.connect("delete-event",gtk.main_quit)
    window.show_all()
    return window
</t>
<t tx="ekr.20041001211817">import os

print os.path.exists(os.path.normpath("C:\\Progra~1\\Eclipse"))</t>
<t tx="ekr.20060427103457"># Open leoSettings.leo
c.openLeoSettings()</t>
<t tx="ekr.20060809084033">'''A script to convert calls to g.es to g.et, and raw strings s to g._(s)'''

__version__ = 0.2
&lt;&lt; version history &gt;&gt;

@others

trace = False # For debugging.
doReplace = True # True: actually replace the body text.

if not doReplace: g.es_print('-' * 40)
c.beginUpdate()
try:
    u = c.undoer
    undoType = 'Convert g.es'
    u.beforeChangeGroup (p,undoType)
    for p in c.currentPosition().self_and_subtree_iter():
        replace(p)
    u.afterChangeGroup(p,undoType,reportFlag=True)
finally:
    c.endUpdate()</t>
<t tx="ekr.20060809090508"># Based on leoImport.scanPythonText.
def replace(p):
    '''Replace g.es by g.et and strings s by g._(s)'''
    s = p.bodyString()
    if not s.strip(): return
    result = [] ;  i = 0 ; count = 0
    while i &lt; len(s):
        progress = j = i
        ch = s[i]
        if ch == '\n' or ch == '\r':
            i = g.skip_nl(s,i)
            result.append(s[j:i])
        elif ch == '#':
            i = g.skip_to_end_of_line(s,i)
            result.append(s[j:i])
        elif ch == '"' or ch == "'":
            &lt;&lt; handle string &gt;&gt;
        elif g.is_c_id(ch):
            if g.match_word(s,i,'g.es'):
                &lt;&lt; handle g.es &gt;&gt;
            else:
                i = g.skip_c_id(s,i)
                result.append(s[j:i])
        else:
            i += 1
            result.append(s[j:i])
        assert(progress &lt; i)
    if count:
        result = ''.join(result)
        if doReplace:
            undoData = u.beforeChangeNodeContents(p)
            p.setBodyStringOrPane(result)
            p.v.t.setDirty()
            u.afterChangeNodeContents(p,'Change Body',undoData)
        else:
            g.trace('result...\n',result)</t>
<t tx="ekr.20060809091749.72">i = g.skip_python_string(s,i)
s2 = s[j:i].strip()
result.append('g._(%s)' % s2)
if trace: g.trace('string:',s2)
count += 1</t>
<t tx="ekr.20060809091749.73">i += 4 ; k1 = i
i = g.skip_ws(s,i)
found = False
if g.match(s,i,'('):
    k2 = i
    k3 = g.skip_parens(s,i)
    if g.match(s,k3,')'):
        # Only translate if there are exactly one string in the parens.
        s2 = s[k2+1:k3]
        if (
            s2 and s2.count(',') == 0 and
            (s2.count('"') == 2 or s2.count("'") == 2)
        ):
            i = k3
            if trace: g.trace('call g.es:',g.get_line(s,i))
            result.append('g.et')
            result.append(s[k1:i])
            count += 1 ; found = True
if not found:
    result.append(s[j:i])</t>
<t tx="ekr.20060809092023"></t>
<t tx="ekr.20060809103738">def test1():
    
    g.es('abc')
    g.es('abc',xyz)
    g.es(xyz)</t>
<t tx="ekr.20060809103738.1">def test2():

    x = 'abc' + 'xyz'
    y = abc</t>
<t tx="ekr.20060809104405">@nocolor
@
0.1 EKR: Initial version.
0.2 EKR: Support doReplace and made script fully undoable.</t>
<t tx="ekr.20060814111542"># Add an editor to the body pane.
c.frame.body.addEditor()</t>
<t tx="ekr.20060904110922"></t>
<t tx="ekr.20060904111037">if hasattr(c,'opmlCommands'):
    c.opmlCommands.readOpmlCommand()
else:
    g.es_print('opml plugin not loaded')</t>
<t tx="ekr.20060904111037.1">if hasattr(c,'opmlCommands'):
    c.opmlCommands.writeOpmlCommand()
else:
    g.es_print('opml plugin not loaded')</t>
<t tx="ekr.20060918083159">put = g.es_print

for p in c.allNodes_iter():

    if hasattr(p.v,"unknownAttributes"):
        put("deleting v.unknownAttributes:",
            p.headString(),
            g.listToString(p.v.unknownAttributes.keys()))
        delattr(p.v,"unknownAttributes")

    if hasattr(p.v.t,"unknownAttributes"):
        put("deleting t.unknownAttributes:",
            p.headString(),
            g.listToString(p.v.t.unknownAttributes.keys()))
        delattr(p.v.t,"unknownAttributes")
           
put('done') 
c.redraw()</t>
<t tx="ekr.20060924180049">@
Ever have a clone that is difficult to understand outside the context of its
original parent? Here's some code to help. It displays the headline of the
current node plus the headlines of all the parents of all the clones of the
current node. Selecting a displayed parent headline moves the current node to
the corresponding clone in the outline.

The idea is to be able to quickly see the context of all the clones of the
current node and to be able to easily navigate from one clone instance to the
next.
@c

@others
c.cn = cloneNavigator(c)
c.cn.displayClones(c)
</t>
<t tx="ekr.20060924180049.1">class cloneNavigator:
    '''
       Displays the headline of the current node plus the headlines of
       all the parents of all the clones of the current node.  Selecting
       a displayed parent headline moves the current node to the
       corresponding clone in the outline.
       
       The idea is to be able to quickly see the context of all the clones
       of the current node and to be able to easily navigate from one clone
       instance to the next.
    '''
    @others</t>
<t tx="ekr.20060924180049.2">def __init__ (self,c):
    self.c = c
    import Tkinter as Tk
    if 0:
        f = Tk.Toplevel()
    else:
        log = c.frame.log
        log.selectTab('Clones')
        f = log.tabFrame
        for w in f.winfo_children():
            w.destroy()
    
    # Create and pack empty label and listbox
    self.title = Tk.Label(f)
    self.title.pack(anchor="nw")
    self.lb = Tk.Listbox(f)
    self.lb.pack(expand=1,fill="both")</t>
<t tx="ekr.20060924180049.3">def getAllClones(self,p):
    c = self.c
    def clonesOf(p,p1=p):
        return p.v.t == p1.v.t
    return filter(clonesOf, c.allNodes_iter(copy=True))</t>
<t tx="ekr.20060924180049.4">def displayClones(self,c):
    '''Displays the parent headline for all the clones of the current position'''
    cp = c.currentPosition()
    
    # "Title" is the headline of the current node
    self.title.configure(text=cp.headString())
    
    # Initialize listbox and clone list
    clones = self.getAllClones(cp)
    self.lb.delete(0,self.lb.size()-1)
    
    &lt;&lt;Fill listbox with clone parent headlines&gt;&gt;    
    &lt;&lt;Goto selected position when listbox selection changes&gt;&gt;
</t>
<t tx="ekr.20060924180049.5"># Add the headlines of all the clone parents to the listbox
for p in clones:
    if p.parent():
        text = p.parent().headString()
    else:
        text = "&lt;root&gt;"
    self.lb.insert(self.lb.size(),text)
    
    # Initial listbox selection corresponds to current position
    if p.v == cp.v:
        self.lb.selection_set(self.lb.size()-1)</t>
<t tx="ekr.20060924180049.6"># Callback for when a listbox entry is selected            
def gotoSelectedPosition(event,lb=self.lb,c=c,positions=clones):
    idx = int(lb.curselection()[0])
    p = positions[idx]
    c.frame.tree.expandAllAncestors(p)
    c.selectPosition(p)
    return
self.lb.bind(g.angleBrackets("ListboxSelect"), gotoSelectedPosition)</t>
<t tx="ekr.20061030041200">import os, sys

if 1: # Executes Iron Python in the console. (But not from the tutorials directory).
    path = r'c:\prog\IronPython-1.0.1\ipy.exe'
    args = ['-i']
        
    if 1: # Use present environment.
        os.spawnv(os.P_NOWAIT, path, args)
    else: # Use a pristine environment.
        os.spawnve(os.P_NOWAIT, path, args, os.environ)</t>
<t tx="ekr.20061030041356"></t>
<t tx="ekr.20061030041450"></t>
<t tx="ekr.20070115092430"># Invoke winpdb for general scripts **not** containing the predefined g, p or d constants.

# This is essentially the same as using the debug command.

import os,subprocess,sys

# Important: scriptFile2 must be different from scriptFile.
filename = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','scriptFile2'))
f = open(filename,'w') 
f.write(p.bodyString()) 
f.close() 
python = sys.executable
pythonDir = g.os_path_dirname(python) 
#winpdb = g.os_path_join(pythonDir,'Scripts','_winpdb.py') # For older versions of winpdb.
winpdb = g.os_path_join(pythonDir,'Lib','site-packages','winpdb.py') # For version 1.1.2 and newer.
os.chdir(g.app.loadDir)
cmdline = '%s %s -t %s' % (python,winpdb,filename) 
subprocess.Popen(cmdline)
</t>
<t tx="ekr.20070127150459"># Execute the body of the node whose headline is 'java-script' with java

import os

javaBat  = r'c:\java\j.bat'
javaTest = r'c:\java\TestApp.java'
p = g.findNodeAnywhere(c,'java-script')

if p:
    script = c.atFileCommands.writeFromString(
        p.copy(),p.bodyString(),
        forcePythonSentinels=False,
        useSentinels=False) # useSentinels=True also works.
    script = script.replace("\r\n","\n") # Use brute force.
    file(javaTest,'w').write(script)
    os.system(javaBat)
else:
    print 'Node not found: java-script'
</t>
<t tx="ekr.20070127150459.1">@language java // Leo directives will be removed.
@others
</t>
<t tx="ekr.20070127152353">public static void main(String[] args) {
    // comments
    System.out.println("main");
}
</t>
<t tx="ekr.20070127154637">class TestApp {
    @others
}
</t>
<t tx="ekr.20070127154855.1"></t>
<t tx="ekr.20070223164126"># An example of running this script:
    
import os

@others

types = (".py",) #,".c",".html",".txt")

dir = r'C:\prog\Notabene'

c.beginUpdate()
try:
    importFiles(dir,types,recursive=True)
finally:
    c.endUpdate()

g.es("done",color="blue")
</t>
<t tx="ekr.20070223164126.1">def importFiles (dir,type=None,kind="@file",recursive=False):
    
    v = c.currentVnode()

    # Check the params.
    if kind != "@file" and kind != "@root":
        g.es("kind must be @file or @root: " + kind)
        return

    if not g.os_path_exists(dir):
        g.es("directory does not exist: " + dir)
        return
    
    c.beginUpdate()
    try:
        root = createLastChildOf(v,"imported files")
        try:
            importDir (dir,type,kind,recursive,root)
            root.contract()
        except:
            g.es_exception()
    finally:
        c.endUpdate()</t>
<t tx="ekr.20070223164126.2">def importDir (dir,types,kind,recursive,root):

    g.es("dir: " + dir,color="blue")
    
    try:
        files = os.listdir(dir)
        files2 = [] ; dirs =[]
        for f in files:
            path = g.os_path_join(dir,f)
            if g.os_path_isfile(path):
                name, ext = g.os_path_splitext(f)
                if not types or ext in types:
                    files2.append(path)
            elif recursive:
                dirs.append(path)
        if len(files2) &gt; 0 or len(dirs) &gt; 0:
            child = createLastChildOf(root,dir)
            c.selectVnode(child)
        if len(files2) &gt; 0:
            c.importCommands.importFilesCommand(files2,kind)
        if len(dirs) &gt; 0:
            dirs.sort()
            for dir in dirs:
                importDir(dir,types,kind,recursive,child)
    except:
        g.es("exception in importFiles script")
        g.es_exception()
</t>
<t tx="ekr.20070223164126.3">def createLastChildOf (v,headline):
    
    child = v.insertAsLastChild()
    child.initHeadString(headline)
    return child
</t>
<t tx="ekr.20070224123943"></t>
<t tx="ekr.20070305085403">For MacOS X (darwin) the following are typical defaults:

vim_cmd = /Applications/gvim.app/Contents/MacOS/gvim --servername LEO
vim_exe = /Applications/gvim.app/Contents/MacOS/gvim
</t>
<t tx="ekr.20070305085403.1"></t>
<t tx="ekr.20070305085403.2"></t>
<t tx="ekr.20070315071830"># Do not remove these nodes.</t>
<t tx="ekr.20070410063214"></t>
<t tx="ekr.20070416075121"></t>
<t tx="ekr.20070503085527"></t>
<t tx="ekr.20070503120403">True: trace storage allocation in Leo's tree.</t>
<t tx="ekr.20070504064616">import gc,types

def printDict(d):
    keys = d.keys() ; keys.sort()
    print '-' * 30
    for key in keys:
        n = d.get(key)
        print '%+6d %s' % (n,key)

d = {} ; d2 = {}
for obj in gc.get_objects():
    t = type(obj)
    r = repr(t)
    n = d.get(r,0)
    d[r] = n + 1
    if t == types.InstanceType:
        t = obj.__class__
        r = repr(t)
        n = d2.get(r,0)
        d2[r] = n + 1
            
printDict(d)
printDict(d2)

</t>
<t tx="ekr.20070504080933">This option applies to directories specified in filenames in all kinds of @file trees, and to filenames specified in the @path directive.

True:  Leo attempts to create directories if they do not exist.
False: Leo never attempts to create directories.</t>
<t tx="ekr.20070504100715"></t>
<t tx="ekr.20070504131950">import gc,types

@others

try:                    d = g.app.idDict
except AttributeError:  d = g.app.idDict = {}

new = {}
for obj in gc.get_objects():
    oldObj = d.get(id(obj))
    if oldObj is None:
        new[id(obj)] = obj
        
keys = new.keys()
print '----- %d new objects' % len(keys)

if len(keys) &lt; 200:
    keys.sort()
    n = 0
    for key in keys:
        n += 1
        obj = new.get(key)
        print '%3d' % (n),key,type(obj),
        if isLargeItem(obj):
            print '***** large item'
        else:
            print repr(obj)
    print '====='
    
for key in keys:
    d[key] = new.get(key)</t>
<t tx="ekr.20070504134219">def isLargeItem (obj):
    
    if (
        type(obj) == types.CodeType or
        type(obj) == types.ListType and len(obj) &gt; 500 or
        type(obj) == types.TupleType and len(obj) &gt; 500
    ):
        return True
    
    if type(obj) == types.DictType:
        n = 0 ; keys = obj.keys()
        if len(keys) &gt; 100: return True
        for key in keys:
            val = obj.get(key)
            # if isLargeItem(val): return True
            n += len(repr(key))
            n += len(repr(val))
            if n &gt; 1000: return True
        return False
            
    return len(repr(obj)) &gt; 1000</t>
<t tx="ekr.20070515073111">print '=' * 50</t>
<t tx="ekr.20070517070854">import leoGui
oldGui = g.app.gui
g.app.gui = leoGui.nullGui(guiName='testGui')
try:
    fileName = g.os_path_abspath(g.os_path_join(
        g.app.loadDir,'..','doc','LeoDocs.leo'))
    ok,frame = g.openWithFileName(fileName,old_c=c)
    if ok:
        c2 = frame.c
        for p in c2.allNodes_iter():
            print '.'*p.level(),p.headString()
        g.app.closeLeoWindow(frame)
finally:
    g.app.gui = oldGui</t>
<t tx="ekr.20070517071510">import leoBridge

path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))

if 0: # This can not be run locally: leoBridge.controller starts a Tk event loop.

    controller = leoBridge.controller(gui='nullGui')
    g = controller.globals()
    c = controller.openLeoFile(path)
    n = 0
    for p in c.allNodes_iter():
        n += 1
    print '%d nodes in %s' % (n,path)
    # g.app.closeLeoWindow(c.frame)</t>
<t tx="ekr.20070517160058.1"></t>
<t tx="ekr.20070528111805"># FrontWindowCapture.pyw
# Version 0.1
# Date    20070526
# Author  Roger Erens (roger AT erens-krekels.net)
"""
        Purpose:
        Capture the image of the front-most window into a fixed-name
        (_front_window), max-size (default MAX_WIDTH is 640 pixels), and
        fixed-format (PNG) file that can easily be used when creating
        documentation for an application on a wiki or in some HTML-docs.
        This script does _not_ copy the captured image to the clipboard (handy
        when creating MS Word or OpenOffice documents) since MS Windows already
        has ALT-PRTSCR to do so.

        Dependencies:
        Fairly recent versions of Python, wxPython, and PIL should be installed

        Start:
        Double click FrontWindowCapture.pyw; an icon appears in the Task Bar (lower right of
        the screen).

        Use:
        Bring a window to the front and then left-click on the
        icon in the Task Bar. A file named '_front_window.png' will be saved
        in the current directory.
        A pictures wider than MAXWIDTH is scaled down in order to make it easily
        used in wikis or HTML-documentation.
        Usually, human intelligence is needed to rename that file; this is also
        why this script does not copy the image to the clipboard.

        End:
        Close the application by right-clicking the icon in the Task Bar.

        Note:
        Make sure that your system is fast enough to find the frontmost
        window. That is, when a virusscanner is running or virtual memory is
        low, this script will choke. You can see what happens by enabling the
        print statements and running this script from a console (change the
        extension from .pyw to .py).
"""
import wx
import sys
import win32ui
import win32gui
import win32con
import time
from PIL import Image, ImageGrab

Image.init()

MAX_WIDTH = 640
BLINK_STATE = 0

class TaskBarApp(wx.Frame):
    def __init__(self, parent, id, title):
        wx.Frame.__init__(self, parent, -1, title, size = (1, 1),
            style=wx.FRAME_NO_TASKBAR| wx.NO_FULL_REPAINT_ON_RESIZE)
        self.tbicon = wx.TaskBarIcon()
        icon = wx.Icon('LeoApp16.ico', wx.BITMAP_TYPE_ICO)
        self.tbicon.SetIcon(icon, 'Click to capture the foremost window')
        self.tbicon.Bind(wx.EVT_TASKBAR_LEFT_UP, self.OnTaskBarLeftClick)
        self.tbicon.Bind(wx.EVT_TASKBAR_RIGHT_UP, self.OnTaskBarRightClick)
        self.Show(True)

    def OnTaskBarLeftClick(self, evt):

        self.FlashIcon(evt)

        def _MyCallback(hwnd, extra ):
            extra.append(hwnd)

        windows = []
        win32gui.EnumWindows(_MyCallback, windows)

        winList = []
        for i in windows:
            if win32gui.IsWindowVisible(i):
                winList.append(i)
                #print i

        win32gui.SetForegroundWindow(winList[1])    # found by trial and error
                                                    # that I need the second
                                                    # window from the list
        time.sleep(0.1)  # give the previous command some time to finish

        fgwindow = win32ui.GetForegroundWindow()
        #print "(C)lick!"

        bbox = fgwindow.GetWindowRect()
        img = ImageGrab.grab( bbox)
        width = bbox[2] - bbox[0]
        if width &gt; MAX_WIDTH:
            coeff = MAX_WIDTH * 1. / width
            height = bbox[3] - bbox[1]
            newHeight = int( coeff * height)
            #print width, height, "scaled down to", MAX_WIDTH, newHeight
            img = img.resize((MAX_WIDTH,newHeight), Image.ANTIALIAS)
        img = img.convert("P", dither=Image.NONE,
                              palette=Image.ADAPTIVE, colors=256)
        img.save("_front_window.png", "PNG", optimize=1)
        #img.show() # show the image in an image viewer

        self.FlashIcon(evt)

    def OnTaskBarRightClick(self, evt):
        #print "Auta..." # that's about it...
        self.tbicon.Destroy()
        self.Close(True)
        wx.GetApp().ProcessIdle()

    def FlashIcon(self, evt):
        global BLINK_STATE
        if BLINK_STATE == 0:
            icon = wx.Icon('LeoApp16lick.ico', wx.BITMAP_TYPE_ICO)
            self.tbicon.SetIcon(icon, 'Window is being captured...')
            BLINK_STATE = 1
            return
        else:
            icon = wx.Icon('LeoApp16.ico', wx.BITMAP_TYPE_ICO)
            self.tbicon.SetIcon(icon, 'Click to capture the foremost window')
            BLINK_STATE = 0
            return

class MyApp(wx.App):
    def OnInit(self):
        frame = TaskBarApp(None, -1, ' ')
        frame.Center(wx.BOTH)
        frame.Show(False)
        return True

def main():
    app = MyApp(0)
    app.MainLoop()

if __name__ == '__main__':
    main()

""" CREDITS

    Thanks to
    Roger Upole:
    http://groups.google.com/group/comp.lang.python/
    browse_thread/thread/ff39ec79f7c3248a/
    e600c892772bf52a?lnk=gst&amp;q=screen+capture&amp;rnum=6#e600c892772bf52a
    for his time.sleep() Aha (This took me a year and a half to note!)

    Christian Wyglendowski, Werner Bruhin, and Xavier Morel for the
    http://wiki.wxpython.org/index.cgi/FlashingTaskbarIcon
    discussion

    'Rob aspn at msolutionsinc.com '
    http://mail.python.org/pipermail/python-win32/2003-June/001129.html
    for his suggestion to find out the foremost window

    and of course the usual suspects that created/maintain
    wxPython,
    PIL,
    pywin32,
    LEO,
    gvim,
    and Python itself.
"""</t>
<t tx="ekr.20070529172620"></t>
<t tx="ekr.20070529173219"></t>
<t tx="ekr.20070529173219.1"></t>
<t tx="ekr.20070530072113">c.chapterController.hideChapters()</t>
<t tx="ekr.20070530072113.1">c.chapterController.showChapters()</t>
<t tx="ekr.20070531102813"></t>
<t tx="ekr.20070531103315">c.abbrevCommands.dynamicExpansion(event=None)</t>
<t tx="ekr.20070531104646">c.abbrevCommands.dynamicCompletion()</t>
<t tx="ekr.20070603175054">cc = c.chapterController
cc.selectChapterByName('abc')</t>
<t tx="ekr.20070603175054.1">cc = c.chapterController
cc.selectChapterByName('main')</t>
<t tx="ekr.20070603190713">cc = c.chapterController
cc.createChapterByName('xyz')</t>
<t tx="ekr.20070603190713.1">cc = c.chapterController
cc.selectChapterByName('xyz')</t>
<t tx="ekr.20070603190944"></t>
<t tx="ekr.20070603190944.1"></t>
<t tx="ekr.20070604095313"></t>
<t tx="ekr.20070604100125"></t>
<t tx="ekr.20070609085533"></t>
<t tx="ekr.20070630142904"></t>
<t tx="ekr.20070630142904.2">@nocolor

To build your module using GCC is a three step process on Unix:

1. Use Pyrex to translate mymodule.pyx to mymodule.c::

    python pyrexc mymodule.pyx

mymodule.pyx is the name of the Pyrex module you are writing.

2. Compile mymodule.c to mymodule.o::

    gcc -c -fPIC -I/usr/include/python2.2/ mymodule.c

-c  Produces a .o file instead of an executable. 
-fPIC Produces position independent code, so we can dynamically link against it later. 
-I/usr/include/python2.2/ is the location of the Python 2.2 include file.
 The location of your Python include file may differ from /usr/include/python2.2/. 

3 Link the mymodule.o into a mymodule.so::
    
    gcc -shared mymodule.o -lxosd -o mymodule.so

-shared produces a shared-object file, instead of an executable. 
-lxosd links against a C-library, with the name of the library given as the argument. 
</t>
<t tx="ekr.20070630142904.3">@nocolor

The pyrexc command supports the following options:

  Short Long              Argument    Description
  ----- ----              --------    -----------
  -v    --version                     Display version number of pyrex compiler
  -l    --create-listing              Write error messages to a .lis file
  -I    --include-dir     &lt;directory&gt; Search for include files in named 
                                      directory (may be repeated)
  -o    --output-file     &lt;filename&gt;  Specify name of generated C file (only
                                      one source file allowed if this is used)

Anything else is taken as the name of a Pyrex source file and compiled
to a C source file. Multiple Pyrex source files can be specified
(unless -o is used), in which case each source file is treated as the
source of a distinct extension module and compiled separately to
produce its own C file.
</t>
<t tx="ekr.20070630142904.4">def spam(int i, char *s):
    if 1:
        print i,s</t>
<t tx="ekr.20070630142904.5"># Use pyrexc to create myModule.c from myModule.pyx.

import os,sys
python = sys.executable
theFile = r'C:\prog\tigris-cvs\leo\test\myModule.pyx'
pyrexc = r'c:\prog\Pyrex-0.9.6.4\pyrexc.py'
os.system(r'%s %s %s' % (python,pyrexc,theFile))

# Use pyrex/Demos/setup.py to create module on Linux.</t>
<t tx="ekr.20070701090143"></t>
<t tx="ekr.20070722102255"></t>
<t tx="ekr.20070723091227">
        
        
        </t>
<t tx="ekr.20070723091227.1"></t>
<t tx="ekr.20070723091227.2"></t>
<t tx="ekr.20070723091227.3"></t>
<t tx="ekr.20070927175908">'''Convert a normal Leo tree to a networkx graph'''
import networkx as nx
import sys

x = nx.Graph()

def node_id(p):
    return '%s: %s' % (id(p.v.t),p.headString())

def addTree(p):
    x.add_node(node_id(p))
    for child in p.children_iter():
        addTree(child)
        x.add_edge(node_id(p),node_id(child))

addTree(p)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')
</t>
<t tx="ekr.20070928095102">@ This is a plain Leo tree.

You can convert it to a networkx graph using the leo2graph button.
</t>
<t tx="ekr.20070928095102.1"></t>
<t tx="ekr.20070928095102.2"></t>
<t tx="ekr.20070929062147">@nocolor

The following scripts convert between Leo trees and NetworkX graphs.

- leo2graph:            convert a normal Leo tree to a NetworkX graph.
- at-graph2graph:       convert an @graph tree to a Networkx graph.
- at-networkx2graph:    convert an @networkx tree to a Networkx graph
- at-networkx2at-graph: create an @graph tree from an @networkx tree.

Not ready yet:

- tree2pict: convert a Leo @graph tree to a picture of the corresponding graph.

@color</t>
<t tx="ekr.20070929062147.1">'''Convert an @graph tree to a networkx graph.'''
import networkx as nx
import sys

x = nx.Graph()

def node_id(p):
    return '%s: %s' % (str(p.v.t.fileIndex),p.headString())

def addTree(p):
    tag = '@link'
    h = p.headString()
    if h.startswith('@graph'):
        for child in p.children_iter():
            addTree(child)
    elif h.startswith('@node'):
        x.add_node(node_id(p))
        for child in p.children_iter():
            h = child.headString()
            if h.startswith(tag):
                link = h[len(tag):].strip()
                if link: x.add_edge(node_id(p),link)
            elif child.headString().startswith('@node'):
                addTree(child)
                x.add_edge(node_id(p),node_id(child))

addTree(p)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')</t>
<t tx="ekr.20070929062147.2">'''Convert an @networkx node to a networkx graph.'''
import networkx as nx
import sys

@others

x = nx.Graph()

edges,nodes = parse(p)

for z in nodes:
    x.add_node(z)

for z in edges:
    a,b = z
    x.add_edge(a,b)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')
</t>
<t tx="ekr.20070929070257">@ This is an @graph tree.

You can convert it to a networkx graph using the at-graph2graph button.</t>
<t tx="ekr.20070929070257.1"></t>
<t tx="ekr.20070929070257.2"></t>
<t tx="ekr.20070929070426">g.es('@link %s: %s' % (str(p.v.t.fileIndex),p.headString()))</t>
<t tx="ekr.20070929070632"></t>
<t tx="ekr.20070929070632.1"></t>
<t tx="ekr.20070929072043">@ This node defines a networkx graph using nodes and edges.

You can create an @graph tree from this node using the graph2at-graph button.
</t>
<t tx="ekr.20070929072506"># Each edge is represented as two lines.

# child1 --&gt; child2
('ekr', '20070929070257', 1): @node child1
('ekr', '20070929070257', 2): @node child2

# child2 --&gt; child1
('ekr', '20070929070257', 2): @node child2
('ekr', '20070929070257', 1): @node child1

</t>
<t tx="ekr.20070929072506.1"># Each node is on a separate line.

('ekr', '20070929070257', 1): @node child1
('ekr', '20070929070257', 2): @node child2
</t>
<t tx="ekr.20070929072506.2">def parseNodes (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(g.listToString(lines))
    return lines
</t>
<t tx="ekr.20070929074830">def parse (p):

    tag = '@networkx'
    if not p.headString().startswith(tag):
        p = g.findNodeAnywhere(c,tag)
        if not p.headString().startswith(tag):
            error('No %s node in the outline' % tag)
            return [],[]

    nodes = []
    for tag in ('@edges','@nodes'):
        node = g.findNodeInTree(c,p,tag)
        if node:
            nodes.append(node)
        else:
            error('No %s node in @networkx tree' % tag)
            return [],[]
    edgesNode,nodesNode = nodes
    edges = parseEdges(edgesNode)
    nodes = parseNodes(nodesNode)
    return edges,nodes
</t>
<t tx="ekr.20070929074830.1">def parseEdges (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(len(lines),lines)
    if (len(lines) % 2) == 0:
        i = 0 ; edges = []
        while i &lt; len(lines):
            data = lines[i],lines[i+1]
            edges.append(data)
            i += 2
        # g.trace(g.listToString(edges))
        return edges
    else:
        error('edges node must have even number of lines')
        return []

</t>
<t tx="ekr.20070929081505">def error (s):

    g.es_print(s,color='red')
</t>
<t tx="ekr.20070929082546">'''Convert an @networkx node to an @graph tree.
Create the tree as the child of the @graph-target node,
or the current position if no such node.'''

import networkx as nx
import sys

@others

print '=' * 10

p,edges,nodes = parse(p)

createTree(p,edges,nodes)
</t>
<t tx="ekr.20070929114410.2">def error (s):

    g.es_print(s,color='red')
</t>
<t tx="ekr.20070929114410.3">def parse (p):

    tag = '@graph-target'
    if not p.headString().startswith(tag):
        p = g.findNodeAnywhere(c,tag)
    if not (p and p.headString().startswith(tag)):
        p = c.currentPosition() # Use the presently selected node.

    nodes = [] ; tag = '@networkx'
    data = g.findNodeAnywhere(c,tag)
    if not data:
        error('No %s tree' % tag)
        return None,[],[]
    for tag in ('@edges','@nodes'):
        node = g.findNodeInTree(c,data,tag)
        if node:
            nodes.append(node)
        else:
            error('No %s node in @networkx tree' % tag)
            return None,[],[]
    edgesNode,nodesNode = nodes
    edges = parseEdges(edgesNode)
    nodes = parseNodes(nodesNode)
    return p,edges,nodes
</t>
<t tx="ekr.20070929114410.4">def parseNodes (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(g.listToString(lines))
    return lines
</t>
<t tx="ekr.20070929114410.5">def parseEdges (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(len(lines),lines)
    if (len(lines) % 2) == 0:
        i = 0 ; edges = []
        while i &lt; len(lines):
            data = lines[i],lines[i+1]
            edges.append(data)
            i += 2
        # g.trace(g.listToString(edges))
        return edges
    else:
        error('edges node must have even number of lines')
        return []

</t>
<t tx="ekr.20070929114617">@ This will be the root node for the @graph tree produced by the at-networkx2at-graph button.</t>
<t tx="ekr.20070929115302">def createTree (parent,edges,nodes):

    if 0:
        g.trace('nodes...\n', g.listToString(nodes,sort=True))
        g.trace('edges...\n', g.listToString(edges,sort=True))

    c.beginUpdate()
    try:
        p = parent.insertAsLastChild()
        p.setHeadString('@graph')
        d = createNodes(p,nodes)
        createEdges(d,edges)
        c.selectPosition(p)
    finally:
        c.endUpdate()
</t>
<t tx="ekr.20070929120541">def createEdges (d,edges):

    for edge in edges:
        a,b = edge
        g.trace('\n%s --&gt; %s' % (a,b))
        p = d.get(a)
        if p:
            p2 = p.insertAsLastChild()
            p2.setHeadString('@link %s' % (b))
        else:
            error('@node not found: %s' % (a))
</t>
<t tx="ekr.20070929120541.1">def createNodes (parent,nodes):

    d = {}

    for node in nodes:
        # g.trace(node)
        p = parent.insertAsLastChild()
        p.setHeadString('@node %s' % (node))
        d[node] = p.copy()

    return d
</t>
<t tx="ekr.20070929122956"></t>
<t tx="ekr.20070929122956.1"></t>
<t tx="ekr.20070929154250"># This code isn't used directly anymore.  Instead we have:
    
jyLeo.bat:
    
cd c:\prog\tigris-cvs\leo\src
c:\jython2.2\jython c:\prog\tigris-cvs\leo\test\jyleo.py

and jyLeo.py:
    
import os, sys

theDir = os.getcwd()
if theDir not in sys.path:
    print 'adding',theDir,'to sys.path'
    sys.path.append(theDir)

import leo
leo.run(jyLeo=True)
</t>
<t tx="ekr.20070929154250.1"># Execute the body of the node whose headline is 'java-script' with java

import os

fileName = r'c:\prog\test\jyleo.py'
command  = r'c:\jython2.2\jython %s' % fileName

p = g.findNodeAnywhere(c,'jyleo-script')

if p:
    script = c.atFileCommands.writeFromString(
        p.copy(),p.bodyString(),
        forcePythonSentinels=False,
        useSentinels=False) # useSentinels=True also works.
    script = script.replace("\r\n","\n") # Use brute force.
    file(fileName,'w').write(script)
    os.chdir(g.app.loadDir)
    os.system(command)
else:
    print 'Node not found: jyleo-script'
</t>
<t tx="ekr.20070930043027"># The first script in Jython Essentials, by Pedroni &amp; Rappin.
import javax.swing as swing
import java.awt as awt
import java.lang as lang

def exit(event):
    lang.System.exit(0)

def onButtonPressed(event):
    field.text=quotes[event.source.text]

def createButton(name):
    return swing.JButton(name,preferredSize=(100,20),
        actionPerformed=onButtonPressed)

names = [ 'Groucho','Chico','Harpo']
quotes = {'Groucho':'Say the secret word','Chico':'Viaduct?','Harpo':'Honk!'}

w = swing.JFrame('Welcome to jython!',size=(200,200),windowClosing=exit)
w.contentPane.layout = awt.FlowLayout()

field = swing.JTextField(preferredSize=(200,20))
w.contentPane.add(field)

buttons = [createButton(name) for name in names]
for button in buttons:
    w.contentPane.add(button)

w.pack()
w.show()</t>
<t tx="ekr.20070930055931">import os, sys

theDir = os.getcwd()

if theDir not in sys.path:
    sys.path.append(theDir)

import leo
leo.run(jyLeo=True)
</t>
<t tx="ekr.20070930183037">import os, sys

theDir = os.getcwd()

if theDir not in sys.path:
    print 'adding',theDir,'to sys.path'
    sys.path.append(theDir)

import leo
leo.run(jyLeo=True)
</t>
<t tx="ekr.20071002150320">log = c.frame.log
tag = 'my-canvas'

w = log.canvasDict.get(tag)
if not w:
    w = log.createCanvas(tag)
    w.configure(bg='yellow')

log.selectTab(tag)
</t>
<t tx="ekr.20071006084354">w = c.frame.body.bodyCtrl
s = w.getAllText()
ins = w.getInsertPoint()
row,col = g.convertPythonIndexToRowCol(s,ins)
print 'row',row,'col',col</t>
<t tx="ekr.20071018101008"># Execute this script to create a prototype for @textclone in body text.

import leoPlugins

textCloneManagers = {} # Keys are commanders, values are textCloneClass instances.

@others

leoPlugins.registerHandler(('after-create-leo-frame','select2','save1'),onEvent)

g.es_print('registered update')

# This kludge would not be needed in a plugin.
onEvent(tag='after-create-leo-frame',keywords={'c':c,'p':p})

</t>
<t tx="ekr.20071018102040">Node 1

@textcloneON John Doe info -2007-10-17-
LastName:Doe 
Firstname:John W.
Gender:Male
@textcloneOFF

End node 1</t>
<t tx="ekr.20071018103231"></t>
<t tx="ekr.20071019073617">@language java
@tabwidth 8
@others

// changed.3

</t>
<t tx="ekr.20071022152159">if g.unitTesting:
    
    # This code assumes that @button textclone exists, i.e., that the update method has been registered.
    
    g.app.unitTestDict = {}

    import leoPlugins
    
    aList = leoPlugins.getHandlersForOneTag('select1')
    aList = [z.fn.__name__ for z in aList]

    if 'textCloneUpdate' not in aList:
        # print 'aList',aList
        c.keyHandler.simulateCommand('textclone')
    
    c.frame.tree.select(p)
    tag = g.app.unitTestDict.get('update:tag')
    assert tag == 'select2', 'expected %s, got %s' % ('select2',tag)
</t>
<t tx="ekr.20071022152159.2">def updateBody (self,p,redrawFlag=True):

    '''Call updateName for all textclone ranges in p's body text.'''

    newNames = []
    aList = self.findAllCloneText(p)

    # if aList: g.trace(aList)

    for bunch in aList:
        name = bunch.name ; s = bunch.s
        if name in newNames:
            self.error('&lt;%s %s&gt; defined multiple times in %s' % (
                self.tag1,name,p.headString()))
        else:
            newNames.append(name)
            self.updateName(p,name,s)

    if redrawFlag and self.shouldRedraw:
        self.c.redraw_now()
    self.shouldRedraw = False
</t>
<t tx="ekr.20071022162551">def updateName (self,p,name,s):

    '''Update all nodes containing the given textclone name.'''

    c = self.c
    if self.trace:
        g.trace('node:&lt;%s&gt;, key:&lt;%s&gt;' % (p.headString(),name))
        # g.trace('s:...\n',s,'\n')

    # Get the list of tnodes containing the textclone name.
    aList = self.textCloneNameDict.get(name,[])
    newTnodes = [p.v.t] ; changed = False
    for t in aList:
        if t in newTnodes: continue
        newTnodes.append(t)
        aList2 = self.findAllCloneText(p=None,t=t)
        for bunch in aList2:
            name2 = bunch.name ; s2 = bunch.s
            if name == name2 and s != s2:
                i,j = bunch.i,bunch.j
                lines = g.splitLines(t.bodyString)
                lines2 = lines[:i]
                lines2.extend(g.splitLines(s))
                lines2.extend(lines[j:])
                s3 = ''.join(lines2)
                t.setTnodeText(s3)
                if self.trace: g.trace('New text for %s in %s=%s...\n%s\n[end]\n' % (
                    name,t,t.headString,s3))
                changed = True
                t.setDirty()

    self.textCloneNameDict[name]=newTnodes
    if changed:
        self.shouldRedraw = True # Request a redraw in the select3 event handler.</t>
<t tx="ekr.20071022164806">def error (self,message):

    g.es_print(message,color='red')
</t>
<t tx="ekr.20071022170213">def findEndCloneText (self,lines,i,name,headline):

    '''Find the matching tag. Return (True,i) if found.'''

    j = i
    while i &lt; len(lines):
        line = lines[i] ; i += 1

        if g.match_word(line.lower(),0,self.tag2):
            name2 = line[len(self.tag2):].strip()
            if self.trace: g.trace(self.tag2,name2)

            # It's not an error for these not to match.
            if name == name2 or not self.allowNested:
                return True,i-1
            else:
                self.error('expecting &lt;%s %s&gt;, got &lt;%s %s&gt; in %s' % (
                    self.tag2,name,self.tag2,name2,headline))

    self.error('no matching %s for %s %s at node %s' % (self.tag2,self.tag1,name,headline))
    return False,i
</t>
<t tx="ekr.20071022184417">def findAllCloneText (self,p,t=None):

    if p:
        s = p.bodyString() ; headline = p.headString()
    else:
        s = t.bodyString ; headline = t.headString

    lines = g.splitLines(s)

    result = [] ; i = 0
    while i &lt; len(lines):
        line = lines[i] ; i += 1

        if g.match_word(line.lower(),0,self.tag1):
            name = line[len(self.tag1):].strip()
            if self.trace: g.trace('found',self.tag1,name)

            ok,j = self.findEndCloneText(lines,i,name,headline)
            if ok:
                result.append(g.Bunch(name=name,i=i,j=j,s=''.join(lines[i:j])))

    return result


</t>
<t tx="ekr.20071022185842">class textCloneManager:

    @others
</t>
<t tx="ekr.20071022185842.1">def __init__ (self,c):

    self.allowNested = False
    self.c = c
    self.shouldRedraw = False
    self.tag1 = '@textcloneon'
    self.tag2 = '@textcloneoff'
    self.textCloneNameDict = {}
        # Keys are textclone names, values are list of tnodes containing the textclone name.
    self.trace = False
</t>
<t tx="ekr.20071022190459">def onEvent (tag,keywords):

    trace = False

    c = keywords.get('c')
    if c:
        manager = textCloneManagers.get(c)
        if not manager:
            manager = textCloneManager(c)
            textCloneManagers[c] = manager
            manager.scanAllNodes()
    else:
        g.es_print('textclone:onEvent: no c',color=red)
        return

    if tag.startswith('select'):
        p = keywords.get('old_p')
    else:
        p = keywords.get('p')

    if g.unitTesting:
        g.app.unitTestDict['update:tag']=tag
    else:
       if trace: g.trace(tag,p and p.headString() or '&lt;None&gt;')

    if tag == 'select3':
        manager.onSelect3(p)
    else:
        manager.updateBody(p)
</t>
<t tx="ekr.20071022193326">def scanAllNodes (self):

    seen = {}
    for p in c.allNodes_iter():
        if not seen.get(p.v.t):
            seen[p.v.t] = True
            self.updateBody(p,redrawFlag=False)

    if self.trace:
        g.trace('textCloneNameDict...\n',
            g.dictToString(self.textCloneNameDict))
</t>
<t tx="ekr.20071022194901">Node 2

@textcloneON Mr. Spam info -2007-10-17-
LastName:Spam 
Firstname:Mr.
Gender:M
@textcloneOFF


@textcloneON John Doe info -2007-10-17-
LastName:Doe 
Firstname:John W.
Gender:Male
@textcloneOFF

End node 2</t>
<t tx="ekr.20071022195015">Node 3

@textcloneON Mr. Spam info -2007-10-17-
LastName:Spam 
Firstname:Mr.
Gender:M
@textcloneOFF

End node 3</t>
<t tx="ekr.20071022210854"></t>
<t tx="ekr.20071022210854.1"></t>
<t tx="ekr.20071025192258">import leoTest
leoTest.doTests (c,all=False)</t>
<t tx="ekr.20071025193940"># Caution: you will have to disable cursesGui in an external editor
# if you enable the cursesGui plugin it here

# ipython.py

add_directives.py
color_markup.py
threading_colorizer.py
rst3.py
UNL.py
open_with.py
mod_scripting.py
plugins_menu.py
nav_buttons.py
hoist.py
image.py
leo_to_html.py

# vim.py
</t>
<t tx="ekr.20071026082438" lineYOffset="4b002e" icons="5d71002e">@

** Note **: icons will appear only if they are found on your system.

To do:
    
- Icon menu.
- Left click to delete icons.
- Tree control recomputes height of each line.</t>
<t tx="ekr.20071026082438.1">for p in c.allNodes_iter():

    if hasattr(p.v.t,"unknownAttributes"):
        a = p.v.t.unknownAttributes
        iconsList = a.get("icons")
        if dict:
            a["icons"] = []
            a["lineYOffset"] = 0

c.redraw()
</t>
<t tx="ekr.20071026082438.2" lineYOffset="4b002e" icons="5d71002e">p.v.t.unknownAttributes = {}
a = p.v.t.unknownAttributes

&lt;&lt; define event callbacks &gt;&gt;

path = g.os_path_join(g.app.loadDir,"..","Icons")
icon1 = g.os_path_join(path,"lt_arrow_enabled.gif")
icon2 = g.os_path_join(path,"rt_arrow_enabled.gif")

d1 = {
    "type" : "file", "file" : icon1,
    "where" : "beforeIcon",
    "yoffset" : -3,
    # "yoffset" : 5, "ypad" : -5,
    # "height" : 40, # automatically adjust headline y position.
    "xpad": 2
}

# Classes and functions can only be pickled if they are at the top level of a module.
    #"onClick" : onClick,
    #"onRightClick" : onRightClick,
    #"onDoubleClick" : onDoubleClick }

d2 = {
    "type" : "file", "file" : icon2,
    "where" : "beforeHeadline",
    "yoffset" : -3,
    "xoffset" : 2, "xpad" : -2 }

a["icons"] = [d1,d2]
a["lineYOffset"] = 3

c.redraw()
</t>
<t tx="ekr.20071026082438.3">def onClick(p=p):

    g.trace(p)

def onRightClick(p=p):

    g.trace(p)

def onDoubleClick(p=p):

    g.trace(p)
</t>
<t tx="ekr.20071026082914" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071026083020" lineYOffset="4b002e" icons="5d71002e">import Tkinter as Tk
import os, sys

tree = c.frame.tree

@others

os.chdir(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons")))

paths = g.app.gui.runOpenFileDialog(
    title='Get Icons',
    filetypes=[('All files','*'),('Gif','*.gif'), ('Bitmap','*.bmp'),('Icon','*.ico'),],
    defaultextension=None,
    multiple=True)

aList = [] ; xoffset = 2
for path in paths:
    path = g.os_path_abspath(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",path)))
    image_height = getImageHeight(path)
    if image_height is None:
        yoffset = 0
    else:
        yoffset = (tree.line_height-image_height)/2

    aList.append ({
        'type' : 'file', 'file' : path,
        'where' : 'beforeHeadline',
        'yoffset' : yoffset, 'xoffset' : xoffset, 'xpad' : -2,
    })
    xoffset += 2

# aList.reverse()

if not hasattr(p.v.t,'unknownAttributes'):
    p.v.t.unknownAttributes = {}

aList2 = p.v.t.unknownAttributes.get('icons',[])
aList2.extend(aList)
p.v.t.unknownAttributes ['icons'] = aList2
p.v.t.unknownAttributes ['lineYOffset'] = 3
c.redraw()

# Classes and functions can only be pickled if they are at the top level of a module.
#"onClick" : onClick,
#"onRightClick" : onRightClick,
#"onDoubleClick" : onDoubleClick }
</t>
<t tx="ekr.20071026084348" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071026085244">if hasattr(p.v.t,"unknownAttributes"):
    a = p.v.t.unknownAttributes
    iconsList = a.get("icons")
    if dict:
        a["icons"] = []
        a["lineYOffset"] = 0
        c.redraw()</t>
<t tx="ekr.20071026102420"></t>
<t tx="ekr.20071026102420.1"></t>
<t tx="ekr.20071026102420.2"></t>
<t tx="ekr.20071026102420.3"></t>
<t tx="ekr.20071026133046">def getImageHeight (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=tree.canvas,file=path)
        return image.height()
    except Exception:
        return None
</t>
<t tx="ekr.20071026170504"># A script to get the proper height of icons.
# The XP file browser doesn't show or report the correct values.

import glob

@others

for z in ('LargeIcons','MediumIcons','SmallIcons'):
    theDir = g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",'UserIcons',z))
    for name in glob.glob(g.os_path_join(theDir,'*.*')):
        h,w = getImageStats(name)
        if h is not None:
            print h,w,name
</t>
<t tx="ekr.20071026170511.1">def getImageStats (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=c.frame.tree.canvas,file=path)
        return image.height(),image.width()

    except Exception:
        #g.es_exception()
        return None,None
</t>
<t tx="ekr.20071026174231" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071026174331" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071026174414"></t>
<t tx="ekr.20071026174414.1"></t>
<t tx="ekr.20071026174414.2" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071026174655"></t>
<t tx="ekr.20071026174655.1"></t>
<t tx="ekr.20071026174655.2" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071026174817"></t>
<t tx="ekr.20071026174817.1"></t>
<t tx="ekr.20071026175552">seen = {}
print '----'
for p in c.allNodes_iter():
    if p.v.t not in seen:
        seen[p.v.t] = True
        if hasattr(p.v.t,'unknownAttributes'):
            aList = p.v.t.unknownAttributes.get('icons',[])
            for d in aList:
                name = d.get('file')
                if name: print 'p: %-20s icon: %s' % (p.headString(),g.os_path_abspath(name))</t>
<t tx="ekr.20071027090115">@language html

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
&lt;head&gt;
&lt;script type="text/javascript"&gt;
//&lt;![CDATA[
var version = {title: "TiddlyWiki", major: 2, minor: 2, revision: 6, date: new Date("Oct 18, 2007"), extensions: {}};
//]]&gt;
&lt;/script&gt;

&lt;!--
TiddlyWiki created by Jeremy Ruston, (jeremy [at] osmosoft [dot] com)

Copyright (c) UnaMesa Association 2004-2007

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright notice, this
list of conditions and the following disclaimer in the documentation and/or other
materials provided with the distribution.

Neither the name of the UnaMesa Association nor the names of its contributors may be
used to endorse or promote products derived from this software without specific
prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.
--&gt;
&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"/&gt;
&lt;!--PRE-HEAD-START--&gt;
&lt;!--{{{--&gt;
&lt;link rel='alternate' type='application/rss+xml' title='RSS' href='index.xml'/&gt;
&lt;!--}}}--&gt;
&lt;!--PRE-HEAD-END--&gt;
&lt;title&gt; Edward K. Ream's wiki - A wiki about Leo &lt;/title&gt;
&lt;style type="text/css"&gt;
#saveTest {display:none;}
#messageArea {display:none;}
#copyright {display:none;}
#storeArea {display:none;}
#storeArea div {padding:0.5em; margin:1em 0em 0em 0em; border-color:#fff #666 #444 #ddd; border-style:solid; border-width:2px; overflow:auto;}
#shadowArea {display:none;}
#javascriptWarning {width:100%; text-align:center; font-weight:bold; background-color:#dd1100; color:#fff; padding:1em 0em;}
&lt;/style&gt;
&lt;!--POST-HEAD-START--&gt;

&lt;!--POST-HEAD-END--&gt;
&lt;/head&gt;
&lt;body onload="main();" onunload="if(window.checkUnsavedChanges) checkUnsavedChanges(); if(window.scrubNodes) scrubNodes(document.body);"&gt;
&lt;!--PRE-BODY-START--&gt;

&lt;!--PRE-BODY-END--&gt;
&lt;div id="copyright"&gt;
Welcome to TiddlyWiki created by Jeremy Ruston, Copyright &amp;copy; 2007 UnaMesa Association
&lt;/div&gt;

&lt;noscript&gt;
	&lt;div id="javascriptWarning"&gt;This page requires JavaScript to function properly.&lt;br /&gt;&lt;br /&gt;If you are using Microsoft Internet Explorer you may need to click on the yellow bar above and select 'Allow Blocked Content'. You must then click 'Yes' on the following security warning.&lt;/div&gt;
&lt;/noscript&gt;

&lt;div id="saveTest"&gt;&lt;/div&gt;
&lt;div id="backstageCloak"&gt;&lt;/div&gt;
&lt;div id="backstageButton"&gt;&lt;/div&gt;
&lt;div id="backstageArea"&gt;&lt;div id="backstageToolbar"&gt;&lt;/div&gt;&lt;/div&gt;

&lt;&lt; pre-shadow area &gt;&gt;

&lt;/div&gt;

&lt;!--POST-SHADOWAREA--&gt;
&lt;&lt; storeArea&gt;&gt;
&lt;!--POST-STOREAREA--&gt;

&lt;!--POST-BODY-START--&gt;
&lt;!--POST-BODY-END--&gt;

&lt;&lt; javascript &gt;&gt;

&lt;!--POST-SCRIPT-START--&gt;
&lt;!--POST-SCRIPT-END--&gt;
&lt;/body&gt;

&lt;/html&gt;
</t>
<t tx="ekr.20071027090704">&lt;div title="StyleSheetColors"&gt;
&lt;pre&gt;/*{{{*/
body {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}

a {color:[[ColorPalette::PrimaryMid]];}
a:hover {background-color:[[ColorPalette::PrimaryMid]]; color:[[ColorPalette::Background]];}
a img {border:0;}

h1,h2,h3,h4,h5,h6 {color:[[ColorPalette::SecondaryDark]]; background:transparent;}
h1 {border-bottom:2px solid [[ColorPalette::TertiaryLight]];}
h2,h3 {border-bottom:1px solid [[ColorPalette::TertiaryLight]];}

.button {color:[[ColorPalette::PrimaryDark]]; border:1px solid [[ColorPalette::Background]];}
.button:hover {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::SecondaryLight]]; border-color:[[ColorPalette::SecondaryMid]];}
.button:active {color:[[ColorPalette::Background]]; background:[[ColorPalette::SecondaryMid]]; border:1px solid [[ColorPalette::SecondaryDark]];}

.header {background:[[ColorPalette::PrimaryMid]];}
.headerShadow {color:[[ColorPalette::Foreground]];}
.headerShadow a {font-weight:normal; color:[[ColorPalette::Foreground]];}
.headerForeground {color:[[ColorPalette::Background]];}
.headerForeground a {font-weight:normal; color:[[ColorPalette::PrimaryPale]];}

.tabSelected{color:[[ColorPalette::PrimaryDark]];
	background:[[ColorPalette::TertiaryPale]];
	border-left:1px solid [[ColorPalette::TertiaryLight]];
	border-top:1px solid [[ColorPalette::TertiaryLight]];
	border-right:1px solid [[ColorPalette::TertiaryLight]];
}
.tabUnselected {color:[[ColorPalette::Background]]; background:[[ColorPalette::TertiaryMid]];}
.tabContents {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::TertiaryPale]]; border:1px solid [[ColorPalette::TertiaryLight]];}
.tabContents .button {border:0;}

#sidebar {}
#sidebarOptions input {border:1px solid [[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel {background:[[ColorPalette::PrimaryPale]];}
#sidebarOptions .sliderPanel a {border:none;color:[[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel a:hover {color:[[ColorPalette::Background]]; background:[[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel a:active {color:[[ColorPalette::PrimaryMid]]; background:[[ColorPalette::Background]];}

.wizard {background:[[ColorPalette::PrimaryPale]]; border:1px solid [[ColorPalette::PrimaryMid]];}
.wizard h1 {color:[[ColorPalette::PrimaryDark]]; border:none;}
.wizard h2 {color:[[ColorPalette::Foreground]]; border:none;}
.wizardStep {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];
	border:1px solid [[ColorPalette::PrimaryMid]];}
.wizardStep.wizardStepDone {background:[[ColorPalette::TertiaryLight]];}
.wizardFooter {background:[[ColorPalette::PrimaryPale]];}
.wizardFooter .status {background:[[ColorPalette::PrimaryDark]]; color:[[ColorPalette::Background]];}
.wizard .button {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::SecondaryLight]]; border: 1px solid;
	border-color:[[ColorPalette::SecondaryPale]] [[ColorPalette::SecondaryDark]] [[ColorPalette::SecondaryDark]] [[ColorPalette::SecondaryPale]];}
.wizard .button:hover {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::Background]];}
.wizard .button&lt;div title="StyleSheetColors"&gt;
&lt;pre&gt;/*{{{*/
body {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}

a {color:[[ColorPalette::PrimaryMid]];}
a:hover {background-color:[[ColorPalette::PrimaryMid]]; color:[[ColorPalette::Background]];}
a img {border:0;}

h1,h2,h3,h4,h5,h6 {color:[[ColorPalette::SecondaryDark]]; background:transparent;}
h1 {border-bottom:2px solid [[ColorPalette::TertiaryLight]];}
h2,h3 {border-bottom:1px solid [[ColorPalette::TertiaryLight]];}

.button {color:[[ColorPalette::PrimaryDark]]; border:1px solid [[ColorPalette::Background]];}
.button:hover {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::SecondaryLight]]; border-color:[[ColorPalette::SecondaryMid]];}
.button:active {color:[[ColorPalette::Background]]; background:[[ColorPalette::SecondaryMid]]; border:1px solid [[ColorPalette::SecondaryDark]];}

.header {background:[[ColorPalette::PrimaryMid]];}
.headerShadow {color:[[ColorPalette::Foreground]];}
.headerShadow a {font-weight:normal; color:[[ColorPalette::Foreground]];}
.headerForeground {color:[[ColorPalette::Background]];}
.headerForeground a {font-weight:normal; color:[[ColorPalette::PrimaryPale]];}

.tabSelected{color:[[ColorPalette::PrimaryDark]];
	background:[[ColorPalette::TertiaryPale]];
	border-left:1px solid [[ColorPalette::TertiaryLight]];
	border-top:1px solid [[ColorPalette::TertiaryLight]];
	border-right:1px solid [[ColorPalette::TertiaryLight]];
}
.tabUnselected {color:[[ColorPalette::Background]]; background:[[ColorPalette::TertiaryMid]];}
.tabContents {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::TertiaryPale]]; border:1px solid [[ColorPalette::TertiaryLight]];}
.tabContents .button {border:0;}

#sidebar {}
#sidebarOptions input {border:1px solid [[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel {background:[[ColorPalette::PrimaryPale]];}
#sidebarOptions .sliderPanel a {border:none;color:[[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel a:hover {color:[[ColorPalette::Background]]; background:[[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel a:active {color:[[ColorPalette::PrimaryMid]]; background:[[ColorPalette::Background]];}

.wizard {background:[[ColorPalette::PrimaryPale]]; border:1px solid [[ColorPalette::PrimaryMid]];}
.wizard h1 {color:[[ColorPalette::PrimaryDark]]; border:none;}
.wizard h2 {color:[[ColorPalette::Foreground]]; border:none;}
.wizardStep {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];
	border:1px solid [[ColorPalette::PrimaryMid]];}
.wizardStep.wizardStepDone {background:[[ColorPalette::TertiaryLight]];}
.wizardFooter {background:[[ColorPalette::PrimaryPale]];}
.wizardFooter .status {background:[[ColorPalette::PrimaryDark]]; color:[[ColorPalette::Background]];}
.wizard .button {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::SecondaryLight]]; border: 1px solid;
	border-color:[[ColorPalette::SecondaryPale]] [[ColorPalette::SecondaryDark]] [[ColorPalette::SecondaryDark]] [[ColorPalette::SecondaryPale]];}
.wizard .button:hover {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::Background]];}
.wizard .button:active {color:[[ColorPalette::Background]]; background:[[ColorPalette::Foreground]]; border: 1px solid;
	borde:active {color:[[ColorPalette::Background]]; background:[[ColorPalette::Foreground]]; border: 1px solid;
	border-color:[[ColorPalette::PrimaryDark]] [[ColorPalette::PrimaryPale]] [[ColorPalette::PrimaryPale]] [[ColorPalette::PrimaryDark]];}

#messageArea {border:1px solid [[ColorPalette::SecondaryMid]]; background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]];}
#messageArea .button {color:[[ColorPalette::PrimaryMid]]; background:[[ColorPalette::SecondaryPale]]; border:none;}
&lt;!--
TiddlyWiki created by Jeremy Ruston, (jeremy [at] osmosoft [dot] com)

Copyright (c) UnaMesa Association 2004-2007

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright notice, this
list of conditions and the following disclaimer in the documentation and/or other
materials provided with the distribution.

Neither the name of the UnaMesa Association nor the names of its contributors may be
used to endorse or promote products derived from this software without specific
prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.
--&gt;
.popupTiddler {background:[[ColorPalette::TertiaryPale]]; border:2px solid [[ColorPalette::TertiaryMid]];}

.popup {background:[[ColorPalette::TertiaryPale]]; color:[[ColorPalette::TertiaryDark]]; border-left:1px solid [[ColorPalette::TertiaryMid]]; border-top:1px solid [[ColorPalette::TertiaryMid]]; border-right:2px solid [[ColorPalette::TertiaryDark]]; border-bottom:2px solid [[ColorPalette::TertiaryDark]];}
.popup hr {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::PrimaryDark]]; border-bottom:1px;}
.popup li.disabled {color:[[ColorPalette::TertiaryMid]];}
.popup li a, .popup li a:visited {color:[[ColorPalette::Foreground]]; border: none;}
.popup li a:hover {background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]]; border: none;}
.popup li a:active {background:[[ColorPalette::SecondaryPale]]; color:[[ColorPalette::Foreground]]; border: none;}
.popupHighlight {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}
.listBreak div {border-bottom:1px solid [[ColorPalette::TertiaryDark]];}

.tiddler .defaultCommand {font-weight:bold;}

.shadow .title {color:[[ColorPalette::TertiaryDark]];}

.title {color:[[ColorPalette::SecondaryDark]];}
.subtitle {color:[[ColorPalette::TertiaryDark]];}

.toolbar {color:[[ColorPalette::PrimaryMid]];}
.toolbar a {color:[[ColorPalette::TertiaryLight]];}
.selected .toolbar a {color:[[ColorPalette::TertiaryMid]];}
.selected .toolbar a:hover {color:[[ColorPalette::Foreground]];}

.tagging, .tagged {border:1px solid [[ColorPalette::TertiaryPale]]; background-color:[[ColorPalette::TertiaryPale]];}
.selected .tagging, .selected .tagged {background-color:[[ColorPalette::TertiaryLight]]; border:1px solid [[ColorPalette::TertiaryMid]];}
.tagging .listTitle, .tagged .listTitle {color:[[ColorPalette::PrimaryDark]];}
.tagging .button, .tagged .button {border:none;}

.footer {color:[[ColorPalette::TertiaryLight]];}
.selected .footer {color:[[ColorPalette::TertiaryMid]];}

.sparkline {background:[[ColorPalette::PrimaryPale]]; border:0;}
.sparktick {background:[[ColorPalette::PrimaryDark]];}

.error, .errorButton {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::Error]];}
.warning {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::SecondaryPale]];}
.lowlight {background:[[ColorPalette::TertiaryLight]];}

.zoomer {background:none; color:[[ColorPalette::TertiaryMid]]; border:3px solid [[ColorPalette::TertiaryMid]];}

.imageLink, #displayArea .imageLink {background:transparent;}

.annotation {background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]]; border:2px solid [[ColorPalette::SecondaryMid]];}

.viewer .listTitle {list-style-type:none; margin-left:-2em;}
.viewer .button {border:1px solid [[ColorPalette::SecondaryMid]];}
.viewer blockquote {border-left:3px solid [[ColorPalette::TertiaryDark]];}

.viewer table, table.twtable {border:2px solid [[ColorPalette::TertiaryDark]];}
.viewer th, .viewer thead td, .twtable th, .twtable thead td {background:[[ColorPalette::SecondaryMid]]; border:1px solid [[ColorPalette::TertiaryDark]]; color:[[ColorPalette::Background]];}
.viewer td, .viewer tr, .twtable td, .twtable tr {border:1px solid [[ColorPalette::TertiaryDark]];}

.viewer pre {border:1px solid [[ColorPalette::SecondaryLight]]; background:[[ColorPalette::SecondaryPale]];}
.viewer code {color:[[ColorPalette::SecondaryDark]];}
.viewer hr {border:0; border-top:dashed 1px [[ColorPalette::TertiaryDark]]; color:[[ColorPalette::TertiaryDark]];}

.highlight, .marked {background:[[ColorPalette::SecondaryLight]];}

.editor input {border:1px solid [[ColorPalette::PrimaryMid]];}
.editor textarea {border:1px solid [[ColorPalette::PrimaryMid]]; width:100%;}
.editorFooter {color:[[ColorPalette::TertiaryMid]];}

#backstageArea {background:[[ColorPalette::Foreground]]; color:[[ColorPalette::TertiaryMid]];}
#backstageArea a {background:[[ColorPalette::Foreground]]; color:[[ColorPalette::Background]]; border:none;}
#backstageArea a:hover {background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]]; }
#backstageArea a.backstageSelTab {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}
#backstageButton a {background:none; color:[[ColorPalette::Background]]; border:none;}
#backstageButton a:hover {background:[[ColorPalette::Foreground]]; color:[[ColorPalette::Background]]; border:none;}
#backstagePanel {background:[[ColorPalette::Background]]; border-color: [[ColorPalette::Background]] [[ColorPalette::TertiaryDark]] [[ColorPalette::TertiaryDark]] [[ColorPalette::TertiaryDark]];}
.backstagePanelFooter .button {border:none; color:[[ColorPalette::Background]];}
.backstagePanelFooter .button:hover {color:[[ColorPalette::Foreground]];}
#backstageCloak {background:[[ColorPalette::Foreground]]; opacity:0.6; filter:'alpha(opacity:60)';}
/*}}}*/&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090704.1">&lt;div title="StyleSheetLayout"&gt;

&lt;pre&gt;/*{{{*/
* html .tiddler {height:1%;}

body {font-size:.75em; font-family:arial,helvetica; margin:0; padding:0;}

h1,h2,h3,h4,h5,h6 {font-weight:bold; text-decoration:none;}
h1,h2,h3 {padding-bottom:1px; margin-top:1.2em;margin-bottom:0.3em;}
h4,h5,h6 {margin-top:1em;}
h1 {font-size:1.35em;}
h2 {font-size:1.25em;}
h3 {font-size:1.1em;}
h4 {font-size:1em;}
h5 {font-size:.9em;}

hr {height:1px;}

a {text-decoration:none;}

dt {font-weight:bold;}

ol {list-style-type:decimal;}
ol ol {list-style-type:lower-alpha;}
ol ol ol {list-style-type:lower-roman;}
ol ol ol ol {list-style-type:decimal;}
ol ol ol ol ol {list-style-type:lower-alpha;}
ol ol ol ol ol ol {list-style-type:lower-roman;}
ol ol ol ol ol ol ol {list-style-type:decimal;}

.txtOptionInput {width:11em;}

#contentWrapper .chkOptionInput {border:0;}

.externalLink {text-decoration:underline;}

.indent {margin-left:3em;}
.outdent {margin-left:3em; text-indent:-3em;}
code.escaped {white-space:nowrap;}

.tiddlyLinkExisting {font-weight:bold;}
.tiddlyLinkNonExisting {font-style:italic;}

/* the 'a' is required for IE, otherwise it renders the whole tiddler in bold */
a.tiddlyLinkNonExisting.shadow {font-weight:bold;}

#mainMenu .tiddlyLinkExisting,
	#mainMenu .tiddlyLinkNonExisting,
	#sidebarTabs .tiddlyLinkNonExisting {font-weight:normal; font-style:normal;}
#sidebarTabs .tiddlyLinkExisting {font-weight:bold; font-style:normal;}

.header {position:relative;}
.header a:hover {background:transparent;}
.headerShadow {position:relative; padding:4.5em 0em 1em 1em; left:-1px; top:-1px;}
.headerForeground {position:absolute; padding:4.5em 0em 1em 1em; left:0px; top:0px;}

.siteTitle {font-size:3em;}
.siteSubtitle {font-size:1.2em;}

#mainMenu {position:absolute; left:0; width:10em; text-align:right; line-height:1.6em; padding:1.5em 0.5em 0.5em 0.5em; font-size:1.1em;}

#sidebar {position:absolute; right:3px; width:16em; font-size:.9em;}
#sidebarOptions {padding-top:0.3em;}
#sidebarOptions a {margin:0em 0.2em; padding:0.2em 0.3em; display:block;}
#sidebarOptions input {margin:0.4em 0.5em;}
#sidebarOptions .sliderPanel {margin-left:1em; padding:0.5em; font-size:.85em;}
#sidebarOptions .sliderPanel a {font-weight:bold; display:inline; padding:0;}
#sidebarOptions .sliderPanel input {margin:0 0 .3em 0;}
#sidebarTabs .tabContents {width:15em; overflow:hidden;}

.wizard {padding:0.1em 1em 0em 2em;}
.wizard h1 {font-size:2em; font-weight:bold; background:none; padding:0em 0em 0em 0em; margin:0.4em 0em 0.2em 0em;}
.wizard h2 {font-size:1.2em; font-weight:bold; background:none; padding:0em 0em 0em 0em; margin:0.4em 0em 0.2em 0em;}
.wizardStep {padding:1em 1em 1em 1em;}
.wizard .button {margin:0.5em 0em 0em 0em; font-size:1.2em;}
.wizardFooter {padding:0.8em 0.4em 0.8em 0em;}
.wizardFooter .status {padding:0em 0.4em 0em 0.4em; margin-left:1em;}
.wizard .button {padding:0.1em 0.2em 0.1em 0.2em;}

#messageArea {position:fixed; top:2em; right:0em; margin:0.5em; padding:0.5em; z-index:2000; _position:absolute;}
.messageToolbar {display:block; text-align:right; padding:0.2em 0.2em 0.2em 0.2em;}
#messageArea a {text-decoration:underline;}

.tiddlerPopupButton {padding:0.2em 0.2em 0.2em 0.2em;}
.popupTiddler {position: absolute; z-index:300; padding:1em 1em 1em 1em; margin:0;}

.popup {position:absolute; z-index:300; font-size:.9em; padding:0; list-style:none; margin:0;}
.popup .popupMessage {padding:0.4em;}
.popup hr {display:block; height:1px; width:auto; padding:0; margin:0.2em 0em;}
.popup li.disabled {padding:0.4em;}
.popup li a {display:block; padding:0.4em; font-weight:normal; cursor:pointer;}
.listBreak {font-size:1px; line-height:1px;}
.listBreak div {margin:2px 0;}

.tabset {padding:1em 0em 0em 0.5em;}
.tab {margin:0em 0em 0em 0.25em; padding:2px;}
.tabContents {padding:0.5em;}
.tabContents ul, .tabContents ol {margin:0; padding:0;}
.txtMainTab .tabContents li {list-style:none;}
.tabContents li.listLink { margin-left:.75em;}

#contentWrapper {display:block;}
#splashScreen {display:none;}

#displayArea {margin:1em 17em 0em 14em;}

.toolbar {text-align:right; font-size:.9em;}

.tiddler {padding:1em 1em 0em 1em;}

.missing .viewer,.missing .title {font-style:italic;}

.title {font-size:1.6em; font-weight:bold;}

.missing .subtitle {display:none;}
.subtitle {font-size:1.1em;}

.tiddler .button {padding:0.2em 0.4em;}

.tagging {margin:0.5em 0.5em 0.5em 0; float:left; display:none;}
.isTag .tagging {display:block;}
.tagged {margin:0.5em; float:right;}
.tagging, .tagged {font-size:0.9em; padding:0.25em;}
.tagging ul, .tagged ul {list-style:none; margin:0.25em; padding:0;}
.tagClear {clear:both;}

.footer {font-size:.9em;}
.footer li {display:inline;}

.annotation {padding:0.5em; margin:0.5em;}

* html .viewer pre {width:99%; padding:0 0 1em 0;}
.viewer {line-height:1.4em; padding-top:0.5em;}
.viewer .button {margin:0em 0.25em; padding:0em 0.25em;}
.viewer blockquote {line-height:1.5em; padding-left:0.8em;margin-left:2.5em;}
.viewer ul, .viewer ol {margin-left:0.5em; padding-left:1.5em;}

.viewer table, table.twtable {border-collapse:collapse; margin:0.8em 1.0em;}
.viewer th, .viewer td, .viewer tr,.viewer caption,.twtable th, .twtable td, .twtable tr,.twtable caption {padding:3px;}
table.listView {font-size:0.85em; margin:0.8em 1.0em;}
table.listView th, table.listView td, table.listView tr {padding:0px 3px 0px 3px;}

.viewer pre {padding:0.5em; margin-left:0.5em; font-size:1.2em; line-height:1.4em; overflow:auto;}
.viewer code {font-size:1.2em; line-height:1.4em;}

.editor {font-size:1.1em;}
.editor input, .editor textarea {display:block; width:100%; font:inherit;}
.editorFooter {padding:0.25em 0em; font-size:.9em;}
.editorFooter .button {padding-top:0px; padding-bottom:0px;}

.fieldsetFix {border:0; padding:0; margin:1px 0px 1px 0px;}

.sparkline {line-height:1em;}
.sparktick {outline:0;}

.zoomer {font-size:1.1em; position:absolute; overflow:hidden;}
.zoomer div {padding:1em;}

* html #backstage {width:99%;}
* html #backstageArea {width:99%;}
#backstageArea {display:none; position:relative; overflow: hidden; z-index:150; padding:0.3em 0.5em 0.3em 0.5em;}
#backstageToolbar {position:relative;}
#backstageArea a {font-weight:bold; margin-left:0.5em; padding:0.3em 0.5em 0.3em 0.5em;}
#backstageButton {display:none; position:absolute; z-index:175; top:0em; right:0em;}
#backstageButton a {padding:0.1em 0.4em 0.1em 0.4em; margin:0.1em 0.1em 0.1em 0.1em;}
#backstage {position:relative; width:100%; z-index:50;}
#backstagePanel {display:none; z-index:100; position:absolute; margin:0em 3em 0em 3em; padding:1em 1em 1em 1em;}
.backstagePanelFooter {padding-top:0.2em; float:right;}
.backstagePanelFooter a {padding:0.2em 0.4em 0.2em 0.4em;}
#backstageCloak {display:none; z-index:20; position:absolute; width:100%; height:100px;}

.whenBackstage {display:none;}
.backstageVisible .whenBackstage {display:block;}
/*}}}*/&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090704.2">&lt;div title="StyleSheetLocale"&gt;
&lt;pre&gt;/***
StyleSheet for use when a translation requires any css style changes.
This StyleSheet can be used directly by languages such as Chinese, Japanese and Korean which use a logographic writing system and need larger font sizes.
***/

/*{{{*/
body {font-size:0.8em;}

#sidebarOptions {font-size:1.05em;}
#sidebarOptions a {font-style:normal;}
#sidebarOptions .sliderPanel {font-size:0.95em;}

.subtitle {font-size:0.8em;}

.viewer table.listView {font-size:0.95em;}

.htmlarea .toolbarHA table {border:1px solid ButtonFace; margin:0em 0em;}
/*}}}*/&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929">&lt;div id="backstage"&gt;
	&lt;div id="backstagePanel"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="contentWrapper"&gt;&lt;/div&gt;
&lt;div id="contentStash"&gt;&lt;/div&gt;
&lt;div id="shadowArea"&gt;

&lt;div title="ColorPalette"&gt;
&lt;pre&gt;Background: #fff
Foreground: #000
PrimaryPale: #8cf
PrimaryLight: #18f
PrimaryMid: #04b
PrimaryDark: #014
SecondaryPale: #ffc
SecondaryLight: #fe8
SecondaryMid: #db4
SecondaryDark: #841
TertiaryPale: #eee
TertiaryLight: #ccc
TertiaryMid: #999
TertiaryDark: #666
Error: #f88&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929.1">&lt;div title="StyleSheetPrint"&gt;
&lt;pre&gt;/*{{{*/
@media print {
#mainMenu, #sidebar, #messageArea, .toolbar, #backstageButton, #backstageArea {display: none ! important;}
#displayArea {margin: 1em 1em 0em 1em;}
/* Fixes a feature in Firefox 1.5.0.2 where print preview displays the noscript content */
noscript {display:none;}
}
/*}}}*/&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929.2">&lt;div title="PageTemplate"&gt;
&lt;pre&gt;&amp;lt;!--{{{--&amp;gt;
&amp;lt;div class='header' macro='gradient vert [[ColorPalette::PrimaryLight]] [[ColorPalette::PrimaryMid]]'&amp;gt;
&amp;lt;div class='headerShadow'&amp;gt;

&amp;lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;
&amp;lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class='headerForeground'&amp;gt;
&amp;lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;
&amp;lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&amp;lt;div id='mainMenu' refresh='content' tiddler='MainMenu'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id='sidebar'&amp;gt;
&amp;lt;div id='sidebarOptions' refresh='content' tiddler='SideBarOptions'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id='sidebarTabs' refresh='content' force='true' tiddler='SideBarTabs'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div id='displayArea'&amp;gt;

&amp;lt;div id='messageArea'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id='tiddlerDisplay'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--}}}--&amp;gt;&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929.3">&lt;div title="ViewTemplate"&gt;
&lt;pre&gt;&amp;lt;!--{{{--&amp;gt;
&amp;lt;div class='toolbar' macro='toolbar closeTiddler closeOthers +editTiddler &amp;gt; fields syncing permalink references jump'&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;div class='title' macro='view title'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='subtitle'&amp;gt;&amp;lt;span macro='view modifier link'&amp;gt;&amp;lt;/span&amp;gt;, &amp;lt;span macro='view modified date'&amp;gt;&amp;lt;/span&amp;gt; (&amp;lt;span macro='message views.wikified.createdPrompt'&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span macro='view created date'&amp;gt;&amp;lt;/span&amp;gt;)&amp;lt;/div&amp;gt;

&amp;lt;div class='tagging' macro='tagging'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='tagged' macro='tags'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='viewer' macro='view text wikified'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='tagClear'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;!--}}}--&amp;gt;&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929.4">&lt;div title="EditTemplate"&gt;
&lt;pre&gt;&amp;lt;!--{{{--&amp;gt;

&amp;lt;div class='toolbar' macro='toolbar +saveTiddler -cancelTiddler deleteTiddler'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='title' macro='view title'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='editor' macro='edit title'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div macro='annotations'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='editor' macro='edit text'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='editor' macro='edit tags'&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='editorFooter'&amp;gt;&amp;lt;span macro='message views.editor.tagPrompt'&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span macro='tagChooser'&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;!--}}}--&amp;gt;&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929.5">&lt;div title="GettingStarted"&gt;
&lt;pre&gt;To get started with this blank TiddlyWiki, you'll need to modify the following tiddlers:
* SiteTitle &amp;amp; SiteSubtitle: The title and subtitle of the site, as shown above (after saving, they will also appear in the browser title bar)
* MainMenu: The menu (usually on the left)
* DefaultTiddlers: Contains the names of the tiddlers that you want to appear when the TiddlyWiki is opened
You'll also need to enter your username for signing your edits: &amp;lt;&amp;lt;option txtUserName&amp;gt;&amp;gt;&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027090929.6">&lt;div title="OptionsPanel"&gt;
&lt;pre&gt;These InterfaceOptions for customising TiddlyWiki are saved in your browser

Your username for signing your edits. Write it as a WikiWord (eg JoeBloggs)

&amp;lt;&amp;lt;option txtUserName&amp;gt;&amp;gt;
&amp;lt;&amp;lt;option chkSaveBackups&amp;gt;&amp;gt; SaveBackups

&amp;lt;&amp;lt;option chkAutoSave&amp;gt;&amp;gt; AutoSave
&amp;lt;&amp;lt;option chkRegExpSearch&amp;gt;&amp;gt; RegExpSearch
&amp;lt;&amp;lt;option chkCaseSensitiveSearch&amp;gt;&amp;gt; CaseSensitiveSearch
&amp;lt;&amp;lt;option chkAnimate&amp;gt;&amp;gt; EnableAnimations

----
Also see AdvancedOptions&lt;/pre&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027092301"></t>
<t tx="ekr.20071027092301.2">&lt;div id="storeArea"&gt;

&lt;div title="(built-in shadow tiddler)" modifier="Edward K Ream" created="200710270931" changecount="1"&gt;
&lt;pre&gt;This is the built-in shadow tiddler.&lt;/pre&gt;
&lt;/div&gt;

&lt;div title="DefaultTiddlers" modifier="Edward K Ream" modified="200710270940" created="200710270932" changecount="8"&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div title="IntroductionToLeo" modifier="Edward K Ream" created="200710270935" changecount="1"&gt;
&lt;pre&gt;This is the introduction to Leo.&lt;/pre&gt;
&lt;/div&gt;

&lt;div title="MainMenu" modifier="Edward K Ream" created="200710270940" changecount="1"&gt;
&lt;pre&gt;GettingStarted
IntroductionToLeo&lt;/pre&gt;
&lt;/div&gt;

&lt;div title="SiteSubtitle" modifier="Edward K Ream" created="200710270934" changecount="1"&gt;
&lt;pre&gt;A wiki about Leo&lt;/pre&gt;

&lt;/div&gt;
&lt;div title="SiteTitle" modifier="Edward K Ream" created="200710270933" changecount="1"&gt;
&lt;pre&gt;Edward K. Ream's wiki&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</t>
<t tx="ekr.20071027092301.3">&lt;script type="text/javascript"&gt;
//&lt;![CDATA[
&lt;&lt; data &gt;&gt;
@others
//]]&gt;
&lt;/script&gt;

&lt;script type="text/javascript"&gt;
//&lt;![CDATA[
if(useJavaSaver)
	document.write("&lt;applet style='position:absolute;left:-1px' name='TiddlySaver' code='TiddlySaver.class' archive='TiddlySaver.jar' width='1' height='1'&gt;&lt;/applet&gt;");
//]]&gt;
&lt;/script&gt;</t>
<t tx="ekr.20071027092301.4">//
// Please note:
// 
// * This code is designed to be readable but for compactness it only includes brief comments. You can see fuller comments
//   in the project Subversion repository at http://svn.tiddlywiki.org/Trunk/core/
//
// * You should never need to modify this source code directly. TiddlyWiki is carefully designed to allow deep customisation
//   without changing the core code. Please consult the development group at http://groups.google.com/group/TiddlyWikiDev
// 

//--
//-- Configuration repository
//--

// Miscellaneous options
var config = {
	numRssItems: 20, // Number of items in the RSS feed
	animDuration: 400, // Duration of UI animations in milliseconds
	cascadeFast: 20, // Speed for cascade animations (higher == slower)
	cascadeSlow: 60, // Speed for EasterEgg cascade animations
	cascadeDepth: 5 // Depth of cascade animation
};

// Adaptors
config.adaptors = {};

// Backstage tasks
config.tasks = {};

// Annotations
config.annotations = {};

// Custom fields to be automatically added to new tiddlers
config.defaultCustomFields = {};

// Messages
config.messages = {
	messageClose: {},
	dates: {},
	tiddlerPopup: {}
};

// Options that can be set in the options panel and/or cookies
config.options = {
	chkRegExpSearch: false,
	chkCaseSensitiveSearch: false,
	chkAnimate: true,
	chkSaveBackups: true,
	chkAutoSave: false,
	chkGenerateAnRssFeed: false,
	chkSaveEmptyTemplate: false,
	chkOpenInNewWindow: true,
	chkToggleLinks: false,
	chkHttpReadOnly: true,
	chkForceMinorUpdate: false,
	chkConfirmDelete: true,
	chkInsertTabs: false,
	chkUsePreForStorage: true, // Whether to use &lt;pre&gt; format for storage
	chkDisplayStartupTime: false,
	txtBackupFolder: "",
	txtMainTab: "tabTimeline",
	txtMoreTab: "moreTabAll",
	txtMaxEditRows: "30",
	txtFileSystemCharSet: "UTF-8"
	};
config.optionsDesc = {};

// List of notification functions to be called when certain tiddlers are changed or deleted
config.notifyTiddlers = [
	{name: "StyleSheetLayout", notify: refreshStyles},
	{name: "StyleSheetColors", notify: refreshStyles},
	{name: "StyleSheet", notify: refreshStyles},
	{name: "StyleSheetPrint", notify: refreshStyles},
	{name: "PageTemplate", notify: refreshPageTemplate},
	{name: "SiteTitle", notify: refreshPageTitle},
	{name: "SiteSubtitle", notify: refreshPageTitle},
	{name: "ColorPalette", notify: refreshColorPalette},
	{name: null, notify: refreshDisplay}
];

// Default tiddler templates
var DEFAULT_VIEW_TEMPLATE = 1;
var DEFAULT_EDIT_TEMPLATE = 2;
config.tiddlerTemplates = {
	1: "ViewTemplate",
	2: "EditTemplate"
};

// More messages (rather a legacy layout that shouldn't really be like this)
config.views = {
	wikified: {
		tag: {}
	},
	editor: {
		tagChooser: {}
	}
};

// Backstage tasks
config.backstageTasks = ["save","sync","importTask","tweak","plugins"];

// Macros; each has a 'handler' member that is inserted later
config.macros = {
	today: {},
	version: {},
	search: {sizeTextbox: 15},
	tiddler: {},
	tag: {},
	tags: {},
	tagging: {},
	timeline: {},
	allTags: {},
	list: {
		all: {},
		missing: {},
		orphans: {},
		shadowed: {},
		touched: {},
		filter: {}
	},
	closeAll: {},
	permaview: {},
	saveChanges: {},
	slider: {},
	option: {},
	options: {},
	newTiddler: {},
	newJournal: {},
	tabs: {},
	gradient: {},
	message: {},
	view: {},
	edit: {},
	tagChooser: {},
	toolbar: {},
	plugins: {},
	refreshDisplay: {},
	importTiddlers: {},
	sync: {},
	annotations: {}
};

// Commands supported by the toolbar macro
config.commands = {
	closeTiddler: {},
	closeOthers: {},
	editTiddler: {},
	saveTiddler: {hideReadOnly: true},
	cancelTiddler: {},
	deleteTiddler: {hideReadOnly: true},
	permalink: {},
	references: {type: "popup"},
	jump: {type: "popup"},
	syncing: {type: "popup"},
	fields: {type: "popup"}
};

// Browser detection... In a very few places, there's nothing else for it but to know what browser we're using.
config.userAgent = navigator.userAgent.toLowerCase();
config.browser = {
	isIE: config.userAgent.indexOf("msie") != -1 &amp;&amp; config.userAgent.indexOf("opera") == -1,
	isGecko: config.userAgent.indexOf("gecko") != -1,
	ieVersion: /MSIE (\d.\d)/i.exec(config.userAgent), // config.browser.ieVersion[1], if it exists, will be the IE version string, eg "6.0"
	isSafari: config.userAgent.indexOf("applewebkit") != -1,
	isBadSafari: !((new RegExp("[\u0150\u0170]","g")).test("\u0150")),
	firefoxDate: /gecko\/(\d{8})/i.exec(config.userAgent), // config.browser.firefoxDate[1], if it exists, will be Firefox release date as "YYYYMMDD"
	isOpera: config.userAgent.indexOf("opera") != -1,
	isLinux: config.userAgent.indexOf("linux") != -1,
	isUnix: config.userAgent.indexOf("x11") != -1,
	isMac: config.userAgent.indexOf("mac") != -1,
	isWindows: config.userAgent.indexOf("win") != -1
};

// Basic regular expressions
config.textPrimitives = {
	upperLetter: "[A-Z\u00c0-\u00de\u0150\u0170]",
	lowerLetter: "[a-z0-9_\\-\u00df-\u00ff\u0151\u0171]",
	anyLetter:   "[A-Za-z0-9_\\-\u00c0-\u00de\u00df-\u00ff\u0150\u0170\u0151\u0171]",
	anyLetterStrict: "[A-Za-z0-9\u00c0-\u00de\u00df-\u00ff\u0150\u0170\u0151\u0171]"
};
if(config.browser.isBadSafari) {
	config.textPrimitives = {
		upperLetter: "[A-Z\u00c0-\u00de]",
		lowerLetter: "[a-z0-9_\\-\u00df-\u00ff]",
		anyLetter:   "[A-Za-z0-9_\\-\u00c0-\u00de\u00df-\u00ff]",
		anyLetterStrict: "[A-Za-z0-9\u00c0-\u00de\u00df-\u00ff]"
	};
}
config.textPrimitives.sliceSeparator = "::";
config.textPrimitives.urlPattern = "(?:file|http|https|mailto|ftp|irc|news|data):[^\\s'\"]+(?:/|\\b)";
config.textPrimitives.unWikiLink = "~";
config.textPrimitives.wikiLink = "(?:(?:" + config.textPrimitives.upperLetter + "+" +
	config.textPrimitives.lowerLetter + "+" +
	config.textPrimitives.upperLetter +
	config.textPrimitives.anyLetter + "*)|(?:" +
	config.textPrimitives.upperLetter + "{2,}" +
	config.textPrimitives.lowerLetter + "+))";

config.textPrimitives.cssLookahead = "(?:(" + config.textPrimitives.anyLetter + "+)\\(([^\\)\\|\\n]+)(?:\\):))|(?:(" + config.textPrimitives.anyLetter + "+):([^;\\|\\n]+);)";
config.textPrimitives.cssLookaheadRegExp = new RegExp(config.textPrimitives.cssLookahead,"mg");

config.textPrimitives.brackettedLink = "\\[\\[([^\\]]+)\\]\\]";
config.textPrimitives.titledBrackettedLink = "\\[\\[([^\\[\\]\\|]+)\\|([^\\[\\]\\|]+)\\]\\]";
config.textPrimitives.tiddlerForcedLinkRegExp = new RegExp("(?:" + config.textPrimitives.titledBrackettedLink + ")|(?:" +
	config.textPrimitives.brackettedLink + ")|(?:" +
	config.textPrimitives.urlPattern + ")","mg");
config.textPrimitives.tiddlerAnyLinkRegExp = new RegExp("("+ config.textPrimitives.wikiLink + ")|(?:" +
	config.textPrimitives.titledBrackettedLink + ")|(?:" +
	config.textPrimitives.brackettedLink + ")|(?:" +
	config.textPrimitives.urlPattern + ")","mg");

config.glyphs = {
	browsers: [
		function() {return config.browser.isIE;},
		function() {return true;}
	],
	currBrowser: null,
	codes: {
		downTriangle: ["\u25BC","\u25BE"],
		downArrow: ["\u2193","\u2193"],
		bentArrowLeft: ["\u2190","\u21A9"],
		bentArrowRight: ["\u2192","\u21AA"]
	}
};

//--
//-- Shadow tiddlers
//--

config.shadowTiddlers = {
	StyleSheet: "",
	MarkupPreHead: "&lt;!--{{{--&gt;\n&lt;link rel='alternate' type='application/rss+xml' title='RSS' href='index.xml'/&gt;\n&lt;!--}}}--&gt;",
	MarkupPostHead: "",
	MarkupPreBody: "",
	MarkupPostBody: "",
	TabTimeline: '&lt;&lt;timeline&gt;&gt;',
	TabAll: '&lt;&lt;list all&gt;&gt;',
	TabTags: '&lt;&lt;allTags excludeLists&gt;&gt;',
	TabMoreMissing: '&lt;&lt;list missing&gt;&gt;',
	TabMoreOrphans: '&lt;&lt;list orphans&gt;&gt;',
	TabMoreShadowed: '&lt;&lt;list shadowed&gt;&gt;',
	AdvancedOptions: '&lt;&lt;options&gt;&gt;',
	PluginManager: '&lt;&lt;plugins&gt;&gt;',
	ImportTiddlers: '&lt;&lt;importTiddlers&gt;&gt;'
};

//--
//-- Translateable strings
//--

// Strings in "double quotes" should be translated; strings in 'single quotes' should be left alone

merge(config.options,{
	txtUserName: "YourName"});

merge(config.tasks,{
	save: {text: "save", tooltip: "Save your changes to this TiddlyWiki", action: saveChanges},
	sync: {text: "sync", tooltip: "Synchronise changes with other TiddlyWiki files and servers", content: '&lt;&lt;sync&gt;&gt;'},
	importTask: {text: "import", tooltip: "Import tiddlers and plugins from other TiddlyWiki files and servers", content: '&lt;&lt;importTiddlers&gt;&gt;'},
	tweak: {text: "tweak", tooltip: "Tweak the appearance and behaviour of TiddlyWiki", content: '&lt;&lt;options&gt;&gt;'},
	plugins: {text: "plugins", tooltip: "Manage installed plugins", content: '&lt;&lt;plugins&gt;&gt;'}
});

// Options that can be set in the options panel and/or cookies
merge(config.optionsDesc,{
	txtUserName: "Username for signing your edits",
	chkRegExpSearch: "Enable regular expressions for searches",
	chkCaseSensitiveSearch: "Case-sensitive searching",
	chkAnimate: "Enable animations",
	chkSaveBackups: "Keep backup file when saving changes",
	chkAutoSave: "Automatically save changes",
	chkGenerateAnRssFeed: "Generate an RSS feed when saving changes",
	chkSaveEmptyTemplate: "Generate an empty template when saving changes",
	chkOpenInNewWindow: "Open external links in a new window",
	chkToggleLinks: "Clicking on links to open tiddlers causes them to close",
	chkHttpReadOnly: "Hide editing features when viewed over HTTP",
	chkForceMinorUpdate: "Don't update modifier username and date when editing tiddlers",
	chkConfirmDelete: "Require confirmation before deleting tiddlers",
	chkInsertTabs: "Use the tab key to insert tab characters instead of moving between fields",
	txtBackupFolder: "Name of folder to use for backups",
	txtMaxEditRows: "Maximum number of rows in edit boxes",
	txtFileSystemCharSet: "Default character set for saving changes (Firefox/Mozilla only)"});

merge(config.messages,{
	customConfigError: "Problems were encountered loading plugins. See PluginManager for details",
	pluginError: "Error: %0",
	pluginDisabled: "Not executed because disabled via 'systemConfigDisable' tag",
	pluginForced: "Executed because forced via 'systemConfigForce' tag",
	pluginVersionError: "Not executed because this plugin needs a newer version of TiddlyWiki",
	nothingSelected: "Nothing is selected. You must select one or more items first",
	savedSnapshotError: "It appears that this TiddlyWiki has been incorrectly saved. Please see http://www.tiddlywiki.com/#DownloadSoftware for details",
	subtitleUnknown: "(unknown)",
	undefinedTiddlerToolTip: "The tiddler '%0' doesn't yet exist",
	shadowedTiddlerToolTip: "The tiddler '%0' doesn't yet exist, but has a pre-defined shadow value",
	tiddlerLinkTooltip: "%0 - %1, %2",
	externalLinkTooltip: "External link to %0",
	noTags: "There are no tagged tiddlers",
	notFileUrlError: "You need to save this TiddlyWiki to a file before you can save changes",
	cantSaveError: "It's not possible to save changes. Possible reasons include:\n- your browser doesn't support saving (Firefox, Internet Explorer, Safari and Opera all work if properly configured)\n- the pathname to your TiddlyWiki file contains illegal characters\n- the TiddlyWiki HTML file has been moved or renamed",
	invalidFileError: "The original file '%0' does not appear to be a valid TiddlyWiki",
	backupSaved: "Backup saved",
	backupFailed: "Failed to save backup file",
	rssSaved: "RSS feed saved",
	rssFailed: "Failed to save RSS feed file",
	emptySaved: "Empty template saved",
	emptyFailed: "Failed to save empty template file",
	mainSaved: "Main TiddlyWiki file saved",
	mainFailed: "Failed to save main TiddlyWiki file. Your changes have not been saved",
	macroError: "Error in macro &lt;&lt;\%0&gt;&gt;",
	macroErrorDetails: "Error while executing macro &lt;&lt;\%0&gt;&gt;:\n%1",
	missingMacro: "No such macro",
	overwriteWarning: "A tiddler named '%0' already exists. Choose OK to overwrite it",
	unsavedChangesWarning: "WARNING! There are unsaved changes in TiddlyWiki\n\nChoose OK to save\nChoose CANCEL to discard",
	confirmExit: "--------------------------------\n\nThere are unsaved changes in TiddlyWiki. If you continue you will lose those changes\n\n--------------------------------",
	saveInstructions: "SaveChanges",
	unsupportedTWFormat: "Unsupported TiddlyWiki format '%0'",
	tiddlerSaveError: "Error when saving tiddler '%0'",
	tiddlerLoadError: "Error when loading tiddler '%0'",
	wrongSaveFormat: "Cannot save with storage format '%0'. Using standard format for save.",
	invalidFieldName: "Invalid field name %0",
	fieldCannotBeChanged: "Field '%0' cannot be changed",
	loadingMissingTiddler: "Attempting to retrieve the tiddler '%0' from the '%1' server at:\n\n'%2' in the workspace '%3'"});

merge(config.messages.messageClose,{
	text: "close",
	tooltip: "close this message area"});

config.messages.backstage = {
	open: {text: "backstage", tooltip: "Open the backstage area to perform authoring and editing tasks"},
	close: {text: "close", tooltip: "Close the backstage area"},
	prompt: "backstage: ",
	decal: {
		edit: {text: "edit", tooltip: "Edit the tiddler '%0'"}
	}
};

config.messages.listView = {
	tiddlerTooltip: "Click for the full text of this tiddler",
	previewUnavailable: "(preview not available)"
};

config.messages.dates.months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November","December"];
config.messages.dates.days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
config.messages.dates.shortMonths = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
config.messages.dates.shortDays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
// suffixes for dates, eg "1st","2nd","3rd"..."30th","31st"
config.messages.dates.daySuffixes = ["st","nd","rd","th","th","th","th","th","th","th",
		"th","th","th","th","th","th","th","th","th","th",
		"st","nd","rd","th","th","th","th","th","th","th",
		"st"];
config.messages.dates.am = "am";
config.messages.dates.pm = "pm";

merge(config.messages.tiddlerPopup,{
	});

merge(config.views.wikified.tag,{
	labelNoTags: "no tags",
	labelTags: "tags: ",
	openTag: "Open tag '%0'",
	tooltip: "Show tiddlers tagged with '%0'",
	openAllText: "Open all",
	openAllTooltip: "Open all of these tiddlers",
	popupNone: "No other tiddlers tagged with '%0'"});

merge(config.views.wikified,{
	defaultText: "The tiddler '%0' doesn't yet exist. Double-click to create it",
	defaultModifier: "(missing)",
	shadowModifier: "(built-in shadow tiddler)",
	dateFormat: "DD MMM YYYY",
	createdPrompt: "created"});

merge(config.views.editor,{
	tagPrompt: "Type tags separated with spaces, [[use double square brackets]] if necessary, or add existing",
	defaultText: "Type the text for '%0'"});

merge(config.views.editor.tagChooser,{
	text: "tags",
	tooltip: "Choose existing tags to add to this tiddler",
	popupNone: "There are no tags defined",
	tagTooltip: "Add the tag '%0'"});

merge(config.messages,{
	sizeTemplates:
		[
		{unit: 1024*1024*1024, template: "%0\u00a0GB"},
		{unit: 1024*1024, template: "%0\u00a0MB"},
		{unit: 1024, template: "%0\u00a0KB"},
		{unit: 1, template: "%0\u00a0B"}
		]});

merge(config.macros.search,{
	label: "search",
	prompt: "Search this TiddlyWiki",
	accessKey: "F",
	successMsg: "%0 tiddlers found matching %1",
	failureMsg: "No tiddlers found matching %0"});

merge(config.macros.tagging,{
	label: "tagging: ",
	labelNotTag: "not tagging",
	tooltip: "List of tiddlers tagged with '%0'"});

merge(config.macros.timeline,{
	dateFormat: "DD MMM YYYY"});

merge(config.macros.allTags,{
	tooltip: "Show tiddlers tagged with '%0'",
	noTags: "There are no tagged tiddlers"});

config.macros.list.all.prompt = "All tiddlers in alphabetical order";
config.macros.list.missing.prompt = "Tiddlers that have links to them but are not defined";
config.macros.list.orphans.prompt = "Tiddlers that are not linked to from any other tiddlers";
config.macros.list.shadowed.prompt = "Tiddlers shadowed with default contents";
config.macros.list.touched.prompt = "Tiddlers that have been modified locally";

merge(config.macros.closeAll,{
	label: "close all",
	prompt: "Close all displayed tiddlers (except any that are being edited)"});

merge(config.macros.permaview,{
	label: "permaview",
	prompt: "Link to an URL that retrieves all the currently displayed tiddlers"});

merge(config.macros.saveChanges,{
	label: "save changes",
	prompt: "Save all tiddlers to create a new TiddlyWiki",
	accessKey: "S"});

merge(config.macros.newTiddler,{
	label: "new tiddler",
	prompt: "Create a new tiddler",
	title: "New Tiddler",
	accessKey: "N"});

merge(config.macros.newJournal,{
	label: "new journal",
	prompt: "Create a new tiddler from the current date and time",
	accessKey: "J"});

merge(config.macros.options,{
	wizardTitle: "Tweak advanced options",
	step1Title: "These options are saved in cookies in your browser",
	step1Html: "&lt;input type='hidden' name='markList'&gt;&lt;/input&gt;&lt;br&gt;&lt;input type='checkbox' checked='false' name='chkUnknown'&gt;Show unknown options&lt;/input&gt;",
	unknownDescription: "//(unknown)//",
	listViewTemplate: {
		columns: [
			{name: 'Option', field: 'option', title: "Option", type: 'String'},
			{name: 'Description', field: 'description', title: "Description", type: 'WikiText'},
			{name: 'Name', field: 'name', title: "Name", type: 'String'}
			],
		rowClasses: [
			{className: 'lowlight', field: 'lowlight'}
			]}
	});

merge(config.macros.plugins,{
	wizardTitle: "Manage plugins",
	step1Title: "Currently loaded plugins",
	step1Html: "&lt;input type='hidden' name='markList'&gt;&lt;/input&gt;", // DO NOT TRANSLATE
	skippedText: "(This plugin has not been executed because it was added since startup)",
	noPluginText: "There are no plugins installed",
	confirmDeleteText: "Are you sure you want to delete these plugins:\n\n%0",
	removeLabel: "remove systemConfig tag",
	removePrompt: "Remove systemConfig tag",
	deleteLabel: "delete",
	deletePrompt: "Delete these tiddlers forever",
	listViewTemplate: {
		columns: [
			{name: 'Selected', field: 'Selected', rowName: 'title', type: 'Selector'},
			{name: 'Tiddler', field: 'tiddler', title: "Tiddler", type: 'Tiddler'},
			{name: 'Size', field: 'size', tiddlerLink: 'size', title: "Size", type: 'Size'},
			{name: 'Forced', field: 'forced', title: "Forced", tag: 'systemConfigForce', type: 'TagCheckbox'},
			{name: 'Disabled', field: 'disabled', title: "Disabled", tag: 'systemConfigDisable', type: 'TagCheckbox'},
			{name: 'Executed', field: 'executed', title: "Loaded", type: 'Boolean', trueText: "Yes", falseText: "No"},
			{name: 'Startup Time', field: 'startupTime', title: "Startup Time", type: 'String'},
			{name: 'Error', field: 'error', title: "Status", type: 'Boolean', trueText: "Error", falseText: "OK"},
			{name: 'Log', field: 'log', title: "Log", type: 'StringList'}
			],
		rowClasses: [
			{className: 'error', field: 'error'},
			{className: 'warning', field: 'warning'}
			]}
	});

merge(config.macros.toolbar,{
	moreLabel: "more",
	morePrompt: "Reveal further commands"
	});

merge(config.macros.refreshDisplay,{
	label: "refresh",
	prompt: "Redraw the entire TiddlyWiki display"
	});

merge(config.macros.importTiddlers,{
	readOnlyWarning: "You cannot import into a read-only TiddlyWiki file. Try opening it from a file:// URL",
	wizardTitle: "Import tiddlers from another file or server",
	step1Title: "Step 1: Locate the server or TiddlyWiki file",
	step1Html: "Specify the type of the server: &lt;select name='selTypes'&gt;&lt;option value=''&gt;Choose...&lt;/option&gt;&lt;/select&gt;&lt;br&gt;Enter the URL or pathname here: &lt;input type='text' size=50 name='txtPath'&gt;&lt;br&gt;...or browse for a file: &lt;input type='file' size=50 name='txtBrowse'&gt;&lt;br&gt;&lt;hr&gt;...or select a pre-defined feed: &lt;select name='selFeeds'&gt;&lt;option value=''&gt;Choose...&lt;/option&gt;&lt;/select&gt;",
	openLabel: "open",
	openPrompt: "Open the connection to this file or server",
	openError: "There were problems fetching the tiddlywiki file",
	statusOpenHost: "Opening the host",
	statusGetWorkspaceList: "Getting the list of available workspaces",
	step2Title: "Step 2: Choose the workspace",
	step2Html: "Enter a workspace name: &lt;input type='text' size=50 name='txtWorkspace'&gt;&lt;br&gt;...or select a workspace: &lt;select name='selWorkspace'&gt;&lt;option value=''&gt;Choose...&lt;/option&gt;&lt;/select&gt;",
	cancelLabel: "cancel",
	cancelPrompt: "Cancel this import",
	statusOpenWorkspace: "Opening the workspace",
	statusGetTiddlerList: "Getting the list of available tiddlers",
	step3Title: "Step 3: Choose the tiddlers to import",
	step3Html: "&lt;input type='hidden' name='markList'&gt;&lt;/input&gt;&lt;br&gt;&lt;input type='checkbox' checked='true' name='chkSync'&gt;Keep these tiddlers linked to this server so that you can synchronise subsequent changes&lt;/input&gt;&lt;br&gt;&lt;input type='checkbox' name='chkSave'&gt;Save the details of this server in a 'systemServer' tiddler called:&lt;/input&gt; &lt;input type='text' size=25 name='txtSaveTiddler'&gt;",
	importLabel: "import",
	importPrompt: "Import these tiddlers",
	confirmOverwriteText: "Are you sure you want to overwrite these tiddlers:\n\n%0",
	step4Title: "Step 4: Importing %0 tiddler(s)",
	step4Html: "&lt;input type='hidden' name='markReport'&gt;&lt;/input&gt;", // DO NOT TRANSLATE
	doneLabel: "done",
	donePrompt: "Close this wizard",
	statusDoingImport: "Importing tiddlers",
	statusDoneImport: "All tiddlers imported",
	systemServerNamePattern: "%2 on %1",
	systemServerNamePatternNoWorkspace: "%1",
	confirmOverwriteSaveTiddler: "The tiddler '%0' already exists. Click 'OK' to overwrite it with the details of this server, or 'Cancel' to leave it unchanged",
	serverSaveTemplate: "|''Type:''|%0|\n|''URL:''|%1|\n|''Workspace:''|%2|\n\nThis tiddler was automatically created to record the details of this server",
	serverSaveModifier: "(System)",
	listViewTemplate: {
		columns: [
			{name: 'Selected', field: 'Selected', rowName: 'title', type: 'Selector'},
			{name: 'Tiddler', field: 'tiddler', title: "Tiddler", type: 'Tiddler'},
			{name: 'Size', field: 'size', tiddlerLink: 'size', title: "Size", type: 'Size'},
			{name: 'Tags', field: 'tags', title: "Tags", type: 'Tags'}
			],
		rowClasses: [
			]}
	});

merge(config.macros.sync,{
	listViewTemplate: {
		columns: [
			{name: 'Selected', field: 'selected', rowName: 'title', type: 'Selector'},
			{name: 'Tiddler', field: 'tiddler', title: "Tiddler", type: 'Tiddler'},
			{name: 'Server Type', field: 'serverType', title: "Server type", type: 'String'},
			{name: 'Server Host', field: 'serverHost', title: "Server host", type: 'String'},
			{name: 'Server Workspace', field: 'serverWorkspace', title: "Server workspace", type: 'String'},
			{name: 'Status', field: 'status', title: "Synchronisation status", type: 'String'},
			{name: 'Server URL', field: 'serverUrl', title: "Server URL", text: "View", type: 'Link'}
			],
		rowClasses: [
			],
		buttons: [
			{caption: "Sync these tiddlers", name: 'sync'}
			]},
	wizardTitle: "Synchronize with external servers and files",
	step1Title: "Choose the tiddlers you want to synchronize",
	step1Html: "&lt;input type='hidden' name='markList'&gt;&lt;/input&gt;", // DO NOT TRANSLATE
	syncLabel: "sync",
	syncPrompt: "Sync these tiddlers",
	hasChanged: "Changed while unplugged",
	hasNotChanged: "Unchanged while unplugged",
	syncStatusList: {
		none: {text: "...", color: "none"},
		changedServer: {text: "Changed on server", color: '#80ff80'},
		changedLocally: {text: "Changed while unplugged", color: '#80ff80'},
		changedBoth: {text: "Changed while unplugged and on server", color: '#ff8080'},
		notFound: {text: "Not found on server", color: '#ffff80'},
		putToServer: {text: "Saved update on server", color: '#ff80ff'},
		gotFromServer: {text: "Retrieved update from server", color: '#80ffff'}
		}
	});

merge(config.macros.annotations,{
	});

merge(config.commands.closeTiddler,{
	text: "close",
	tooltip: "Close this tiddler"});

merge(config.commands.closeOthers,{
	text: "close others",
	tooltip: "Close all other tiddlers"});

merge(config.commands.editTiddler,{
	text: "edit",
	tooltip: "Edit this tiddler",
	readOnlyText: "view",
	readOnlyTooltip: "View the source of this tiddler"});

merge(config.commands.saveTiddler,{
	text: "done",
	tooltip: "Save changes to this tiddler"});

merge(config.commands.cancelTiddler,{
	text: "cancel",
	tooltip: "Undo changes to this tiddler",
	warning: "Are you sure you want to abandon your changes to '%0'?",
	readOnlyText: "done",
	readOnlyTooltip: "View this tiddler normally"});

merge(config.commands.deleteTiddler,{
	text: "delete",
	tooltip: "Delete this tiddler",
	warning: "Are you sure you want to delete '%0'?"});

merge(config.commands.permalink,{
	text: "permalink",
	tooltip: "Permalink for this tiddler"});

merge(config.commands.references,{
	text: "references",
	tooltip: "Show tiddlers that link to this one",
	popupNone: "No references"});

merge(config.commands.jump,{
	text: "jump",
	tooltip: "Jump to another open tiddler"});

merge(config.commands.syncing,{
	text: "syncing",
	tooltip: "Control synchronisation of this tiddler with a server or external file",
	currentlySyncing: "&lt;div&gt;Currently syncing via &lt;span class='popupHighlight'&gt;'%0'&lt;/span&gt; to:&lt;/"+"div&gt;&lt;div&gt;host: &lt;span class='popupHighlight'&gt;%1&lt;/span&gt;&lt;/"+"div&gt;&lt;div&gt;workspace: &lt;span class='popupHighlight'&gt;%2&lt;/span&gt;&lt;/"+"div&gt;", // Note escaping of closing &lt;div&gt; tag
	notCurrentlySyncing: "Not currently syncing",
	captionUnSync: "Stop synchronising this tiddler",
	chooseServer: "Synchronise this tiddler with another server:",
	currServerMarker: "\u25cf ",
	notCurrServerMarker: "  "});

merge(config.commands.fields,{
	text: "fields",
	tooltip: "Show the extended fields of this tiddler",
	emptyText: "There are no extended fields for this tiddler",
	listViewTemplate: {
		columns: [
			{name: 'Field', field: 'field', title: "Field", type: 'String'},
			{name: 'Value', field: 'value', title: "Value", type: 'String'}
			],
		rowClasses: [
			],
		buttons: [
			]}});

merge(config.shadowTiddlers,{
	DefaultTiddlers: "GettingStarted",
	MainMenu: "GettingStarted",
	SiteTitle: "My TiddlyWiki",
	SiteSubtitle: "a reusable non-linear personal web notebook",
	SiteUrl: "http://www.tiddlywiki.com/",
	SideBarOptions: '&lt;&lt;search&gt;&gt;&lt;&lt;closeAll&gt;&gt;&lt;&lt;permaview&gt;&gt;&lt;&lt;newTiddler&gt;&gt;&lt;&lt;newJournal "DD MMM YYYY"&gt;&gt;&lt;&lt;saveChanges&gt;&gt;&lt;&lt;slider chkSliderOptionsPanel OptionsPanel "options »" "Change TiddlyWiki advanced options"&gt;&gt;',
	SideBarTabs: '&lt;&lt;tabs txtMainTab "Timeline" "Timeline" TabTimeline "All" "All tiddlers" TabAll "Tags" "All tags" TabTags "More" "More lists" TabMore&gt;&gt;',
	TabMore: '&lt;&lt;tabs txtMoreTab "Missing" "Missing tiddlers" TabMoreMissing "Orphans" "Orphaned tiddlers" TabMoreOrphans "Shadowed" "Shadowed tiddlers" TabMoreShadowed&gt;&gt;'});

merge(config.annotations,{
	AdvancedOptions: "This shadow tiddler provides access to several advanced options",
	ColorPalette: "These values in this shadow tiddler determine the colour scheme of the ~TiddlyWiki user interface",
	DefaultTiddlers: "The tiddlers listed in this shadow tiddler will be automatically displayed when ~TiddlyWiki starts up",
	EditTemplate: "The HTML template in this shadow tiddler determines how tiddlers look while they are being edited",
	GettingStarted: "This shadow tiddler provides basic usage instructions",
	ImportTiddlers: "This shadow tiddler provides access to importing tiddlers",
	MainMenu: "This shadow tiddler is used as the contents of the main menu in the left-hand column of the screen",
	MarkupPreHead: "This tiddler is inserted at the top of the &lt;head&gt; section of the TiddlyWiki HTML file",
	MarkupPostHead: "This tiddler is inserted at the bottom of the &lt;head&gt; section of the TiddlyWiki HTML file",
	MarkupPreBody: "This tiddler is inserted at the top of the &lt;body&gt; section of the TiddlyWiki HTML file",
	MarkupPostBody: "This tiddler is inserted at the end of the &lt;body&gt; section of the TiddlyWiki HTML file immediately before the script block",
	OptionsPanel: "This shadow tiddler is used as the contents of the options panel slider in the right-hand sidebar",
	PageTemplate: "The HTML template in this shadow tiddler determines the overall ~TiddlyWiki layout",
	PluginManager: "This shadow tiddler provides access to the plugin manager",
	SideBarOptions: "This shadow tiddler is used as the contents of the option panel in the right-hand sidebar",
	SideBarTabs: "This shadow tiddler is used as the contents of the tabs panel in the right-hand sidebar",
	SiteSubtitle: "This shadow tiddler is used as the second part of the page title",
	SiteTitle: "This shadow tiddler is used as the first part of the page title",
	SiteUrl: "This shadow tiddler should be set to the full target URL for publication",
	StyleSheetColours: "This shadow tiddler contains CSS definitions related to the color of page elements",
	StyleSheet: "This tiddler can contain custom CSS definitions",
	StyleSheetLayout: "This shadow tiddler contains CSS definitions related to the layout of page elements",
	StyleSheetLocale: "This shadow tiddler contains CSS definitions related to the translation locale",
	StyleSheetPrint: "This shadow tiddler contains CSS definitions for printing",
	TabAll: "This shadow tiddler contains the contents of the 'All' tab in the right-hand sidebar",
	TabMore: "This shadow tiddler contains the contents of the 'More' tab in the right-hand sidebar",
	TabMoreMissing: "This shadow tiddler contains the contents of the 'Missing' tab in the right-hand sidebar",
	TabMoreOrphans: "This shadow tiddler contains the contents of the 'Orphans' tab in the right-hand sidebar",
	TabMoreShadowed: "This shadow tiddler contains the contents of the 'Shadowed' tab in the right-hand sidebar",
	TabTags: "This shadow tiddler contains the contents of the 'Tags' tab in the right-hand sidebar",
	TabTimeline: "This shadow tiddler contains the contents of the 'Timeline' tab in the right-hand sidebar",
	ViewTemplate: "The HTML template in this shadow tiddler determines how tiddlers look"
	});</t>
<t tx="ekr.20071027092301.5">//--
//-- Main
//--

var params = null; // Command line parameters
var store = null; // TiddlyWiki storage
var story = null; // Main story
var formatter = null; // Default formatters for the wikifier
config.parsers = {}; // Hashmap of alternative parsers for the wikifier
var anim = new Animator(); // Animation engine
var readOnly = false; // Whether we're in readonly mode
var highlightHack = null; // Embarrassing hack department...
var hadConfirmExit = false; // Don't warn more than once
var safeMode = false; // Disable all plugins and cookies
var installedPlugins = []; // Information filled in when plugins are executed
var startingUp = false; // Whether we're in the process of starting up
var pluginInfo,tiddler; // Used to pass information to plugins in loadPlugins()

// Whether to use the JavaSaver applet
var useJavaSaver = config.browser.isSafari || config.browser.isOpera;

// Starting up
function main()
{
	var t10,t9,t8,t7,t6,t5,t4,t3,t2,t1,t0 = new Date();
	startingUp = true;
	window.onbeforeunload = function(e) {if(window.confirmExit) return confirmExit();};
	params = getParameters();
	if(params)
		params = params.parseParams("open",null,false);
	store = new TiddlyWiki();
	invokeParamifier(params,"oninit");
	story = new Story("tiddlerDisplay","tiddler");
	addEvent(document,"click",Popup.onDocumentClick);
	saveTest();
	loadOptionsCookie();
	for(var s=0; s&lt;config.notifyTiddlers.length; s++)
		store.addNotification(config.notifyTiddlers[s].name,config.notifyTiddlers[s].notify);
	t1 = new Date();
	store.loadFromDiv("storeArea","store",true);
	t2 = new Date();
	loadShadowTiddlers();
	t3 = new Date();
	invokeParamifier(params,"onload");
	t4 = new Date();
	readOnly = (window.location.protocol == "file:") ? false : config.options.chkHttpReadOnly;
	var pluginProblem = loadPlugins();
	t5 = new Date();
	formatter = new Formatter(config.formatters);
	invokeParamifier(params,"onconfig");
	t6 = new Date();
	store.notifyAll();
	t7 = new Date();
	restart();
	t8 = new Date();
	if(pluginProblem) {
		story.displayTiddler(null,"PluginManager");
		displayMessage(config.messages.customConfigError);
	}
	for(var m in config.macros) {
		if(config.macros[m].init)
			config.macros[m].init();
	}
	t9 = new Date();
	if(!readOnly)
		backstage.init();
	t10 = new Date();
	if(config.options.chkDisplayStartupTime) {
		displayMessage("LoadFromDiv " + (t2-t1) + " ms");
		displayMessage("LoadShadows " + (t3-t2) + " ms");
		displayMessage("LoadPlugins " + (t5-t4) + " ms");
		displayMessage("Notify " + (t7-t6) + " ms");
		displayMessage("Restart " + (t8-t7) + " ms");
		displayMessage("Macro init " + (t9-t8) + " ms");
		displayMessage("Total: " + (t10-t0) + " ms");
	}
	startingUp = false;
}
</t>
<t tx="ekr.20071027092301.6">// Restarting
function restart()
{
	invokeParamifier(params,"onstart");
	if(story.isEmpty()) {
		var tiddlers = store.filterTiddlers(store.getTiddlerText("DefaultTiddlers"));
		for(var t=0; t&lt;tiddlers.length; t++) {
			story.displayTiddler("bottom",tiddlers[t].title);
		}
	}
	window.scrollTo(0,0);
}

function saveTest()
{
	var s = document.getElementById("saveTest");
	if(s.hasChildNodes())
		alert(config.messages.savedSnapshotError);
	s.appendChild(document.createTextNode("savetest"));
}

function loadShadowTiddlers()
{
	var shadows = new TiddlyWiki();
	shadows.loadFromDiv("shadowArea","shadows",true);
	shadows.forEachTiddler(function(title,tiddler){config.shadowTiddlers[title] = tiddler.text;});
	delete shadows;
}

function loadPlugins()
{
	if(safeMode)
		return false;
	var tiddlers = store.getTaggedTiddlers("systemConfig");
	var toLoad = [];
	var nLoaded = 0;
	var map = {};
	var nPlugins = tiddlers.length;
	installedPlugins = [];
	for(var i=0; i&lt;nPlugins; i++) {
		var p = getPluginInfo(tiddlers[i]);
		installedPlugins[i] = p;
		var n = p.Name;
		if(n)
			map[n] = p;
		n = p.Source;
		if(n)
			map[n] = p;
	}
	var visit = function(p) {
		if(!p || p.done)
			return;
		p.done = 1;
		var reqs = p.Requires;
		if(reqs) {
			reqs = reqs.readBracketedList();
			for(var i=0; i&lt;reqs.length; i++)
				visit(map[reqs[i]]);
		}
		toLoad.push(p);
	};
	for(i=0; i&lt;nPlugins; i++)
		visit(installedPlugins[i]);
	for(i=0; i&lt;toLoad.length; i++) {
		p = toLoad[i];
		pluginInfo = p;
		tiddler = p.tiddler;
		if(isPluginExecutable(p)) {
			if(isPluginEnabled(p)) {
				p.executed = true;
				var startTime = new Date();
				try {
					if(tiddler.text)
						window.eval(tiddler.text);
					nLoaded++;
				} catch(ex) {
					p.log.push(config.messages.pluginError.format([exceptionText(ex)]));
					p.error = true;
				}
				pluginInfo.startupTime = String((new Date()) - startTime) + "ms";
			} else {
				nPlugins--;
			}
		} else {
			p.warning = true;
		}
	}
	return nLoaded != nPlugins;
}

function getPluginInfo(tiddler)
{
	var p = store.getTiddlerSlices(tiddler.title,["Name","Description","Version","Requires","CoreVersion","Date","Source","Author","License","Browsers"]);
	p.tiddler = tiddler;
	p.title = tiddler.title;
	p.log = [];
	return p;
}

// Check that a particular plugin is valid for execution
function isPluginExecutable(plugin)
{
	if(plugin.tiddler.isTagged("systemConfigForce"))
		return verifyTail(plugin,true,config.messages.pluginForced);
	if(plugin["CoreVersion"]) {
		var coreVersion = plugin["CoreVersion"].split(".");
		var w = parseInt(coreVersion[0]) - version.major;
		if(w == 0 &amp;&amp; coreVersion[1])
			w = parseInt(coreVersion[1]) - version.minor;
		if(w == 0 &amp;&amp; coreVersion[2])
		 	w = parseInt(coreVersion[2]) - version.revision;
		if(w &gt; 0)
			return verifyTail(plugin,false,config.messages.pluginVersionError);
		}
	return true;
}

function isPluginEnabled(plugin)
{
	if(plugin.tiddler.isTagged("systemConfigDisable"))
		return verifyTail(plugin,false,config.messages.pluginDisabled);
	return true;
}

function verifyTail(plugin,result,message)
{
	plugin.log.push(message);
	return result;
}

function invokeMacro(place,macro,params,wikifier,tiddler)
{
	try {
		var m = config.macros[macro];
		if(m &amp;&amp; m.handler)
			m.handler(place,macro,params.readMacroParams(),wikifier,params,tiddler);
		else
			createTiddlyError(place,config.messages.macroError.format([macro]),config.messages.macroErrorDetails.format([macro,config.messages.missingMacro]));
	} catch(ex) {
		createTiddlyError(place,config.messages.macroError.format([macro]),config.messages.macroErrorDetails.format([macro,ex.toString()]));
	}
}

//--
//-- Paramifiers
//--

function getParameters()
{
	var p = null;
	if(window.location.hash) {
		p = decodeURI(window.location.hash.substr(1));
		if(config.browser.firefoxDate != null &amp;&amp; config.browser.firefoxDate[1] &lt; "20051111")
			p = convertUTF8ToUnicode(p);
	}
	return p;
}

function invokeParamifier(params,handler)
{
	if(!params || params.length == undefined || params.length &lt;= 1)
		return;
	for(var t=1; t&lt;params.length; t++) {
		var p = config.paramifiers[params[t].name];
		if(p &amp;&amp; p[handler] instanceof Function)
			p[handler](params[t].value);
	}
}

config.paramifiers = {};

config.paramifiers.start = {
	oninit: function(v) {
		safeMode = v.toLowerCase() == "safe";
	}
};

config.paramifiers.open = {
	onstart: function(v) {
		story.displayTiddler("bottom",v,null,false,null);
	}
};

config.paramifiers.story = {
	onstart: function(v) {
		var list = store.getTiddlerText(v,"").parseParams("open",null,false);
		invokeParamifier(list,"onstart");
	}
};

config.paramifiers.search = {
	onstart: function(v) {
		story.search(v,false,false);
	}
};

config.paramifiers.searchRegExp = {
	onstart: function(v) {
		story.prototype.search(v,false,true);
	}
};

config.paramifiers.tag = {
	onstart: function(v) {
		var tagged = store.getTaggedTiddlers(v,"title");
		for(var t=0; t&lt;tagged.length; t++)
			story.displayTiddler("bottom",tagged[t].title,null,false,null);
	}
};

config.paramifiers.newTiddler = {
	onstart: function(v) {
		if(!readOnly) {
			story.displayTiddler(null,v,DEFAULT_EDIT_TEMPLATE);
			story.focusTiddler(v,"text");
		}
	}
};

config.paramifiers.newJournal = {
	onstart: function(v) {
		if(!readOnly) {
			var now = new Date();
			var title = now.formatString(v.trim());
			story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE);
			story.focusTiddler(title,"text");
		}
	}
};

config.paramifiers.readOnly = {
	onconfig: function(v) {
		var p = v.toLowerCase();
		readOnly = p == "yes" ? true : (p == "no" ? false : readOnly);
	}
};

//--
//-- Formatter helpers
//--

function Formatter(formatters)
{
	this.formatters = [];
	var pattern = [];
	for(var n=0; n&lt;formatters.length; n++) {
		pattern.push("(" + formatters[n].match + ")");
		this.formatters.push(formatters[n]);
	}
	this.formatterRegExp = new RegExp(pattern.join("|"),"mg");
}

config.formatterHelpers = {

	createElementAndWikify: function(w)
	{
		w.subWikifyTerm(createTiddlyElement(w.output,this.element),this.termRegExp);
	},

	inlineCssHelper: function(w)
	{
		var styles = [];
		config.textPrimitives.cssLookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = config.textPrimitives.cssLookaheadRegExp.exec(w.source);
		while(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch) {
			var s,v;
			if(lookaheadMatch[1]) {
				s = lookaheadMatch[1].unDash();
				v = lookaheadMatch[2];
			} else {
				s = lookaheadMatch[3].unDash();
				v = lookaheadMatch[4];
			}
			if (s=="bgcolor")
				s = "backgroundColor";
			styles.push({style: s, value: v});
			w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
			config.textPrimitives.cssLookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = config.textPrimitives.cssLookaheadRegExp.exec(w.source);
		}
		return styles;
	},

	applyCssHelper: function(e,styles)
	{
		for(var t=0; t&lt; styles.length; t++) {
			try {
				e.style[styles[t].style] = styles[t].value;
			} catch (ex) {
			}
		}
	},

	enclosedTextHelper: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			var text = lookaheadMatch[1];
			if(config.browser.isIE)
				text = text.replace(/\n/g,"\r");
			createTiddlyElement(w.output,this.element,null,null,text);
			w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
		}
	},

	isExternalLink: function(link)
	{
		if(store.tiddlerExists(link) || store.isShadowTiddler(link)) {
			return false;
		}
		var urlRegExp = new RegExp(config.textPrimitives.urlPattern,"mg");
		if(urlRegExp.exec(link)) {
			return true;
		}
		if (link.indexOf(".")!=-1 || link.indexOf("\\")!=-1 || link.indexOf("/")!=-1 || link.indexOf("#")!=-1) {
			return true;
		}
		return false;
	}

};

//--
//-- Standard formatters
//--

config.formatters = [
{
	name: "table",
	match: "^\\|(?:[^\\n]*)\\|(?:[fhck]?)$",
	lookaheadRegExp: /^\|([^\n]*)\|([fhck]?)$/mg,
	rowTermRegExp: /(\|(?:[fhck]?)$\n?)/mg,
	cellRegExp: /(?:\|([^\n\|]*)\|)|(\|[fhck]?$\n?)/mg,
	cellTermRegExp: /((?:\x20*)\|)/mg,
	rowTypes: {"c":"caption", "h":"thead", "":"tbody", "f":"tfoot"},

	handler: function(w)
	{
		var table = createTiddlyElement(w.output,"table",null,"twtable");
		var prevColumns = [];
		var currRowType = null;
		var rowContainer;
		var rowCount = 0;
		w.nextMatch = w.matchStart;
		this.lookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		while(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch) {
			var nextRowType = lookaheadMatch[2];
			if(nextRowType == "k") {
				table.className = lookaheadMatch[1];
				w.nextMatch += lookaheadMatch[0].length+1;
			} else {
				if(nextRowType != currRowType) {
					rowContainer = createTiddlyElement(table,this.rowTypes[nextRowType]);
					currRowType = nextRowType;
				}
				if(currRowType == "c") {
					// Caption
					w.nextMatch++;
					if(rowContainer != table.firstChild)
						table.insertBefore(rowContainer,table.firstChild);
					rowContainer.setAttribute("align",rowCount == 0?"top":"bottom");
					w.subWikifyTerm(rowContainer,this.rowTermRegExp);
				} else {
					this.rowHandler(w,createTiddlyElement(rowContainer,"tr",null,(rowCount&amp;1)?"oddRow":"evenRow"),prevColumns);
					rowCount++;
				}
			}
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		}
	},
	rowHandler: function(w,e,prevColumns)
	{
		var col = 0;
		var colSpanCount = 1;
		var prevCell = null;
		this.cellRegExp.lastIndex = w.nextMatch;
		var cellMatch = this.cellRegExp.exec(w.source);
		while(cellMatch &amp;&amp; cellMatch.index == w.nextMatch) {
			if(cellMatch[1] == "~") {
				// Rowspan
				var last = prevColumns[col];
				if(last) {
					last.rowSpanCount++;
					last.element.setAttribute("rowspan",last.rowSpanCount);
					last.element.setAttribute("rowSpan",last.rowSpanCount); // Needed for IE
					last.element.valign = "center";
				}
				w.nextMatch = this.cellRegExp.lastIndex-1;
			} else if(cellMatch[1] == "&gt;") {
				// Colspan
				colSpanCount++;
				w.nextMatch = this.cellRegExp.lastIndex-1;
			} else if(cellMatch[2]) {
				// End of row
				if(prevCell &amp;&amp; colSpanCount &gt; 1) {
					prevCell.setAttribute("colspan",colSpanCount);
					prevCell.setAttribute("colSpan",colSpanCount); // Needed for IE
				}
				w.nextMatch = this.cellRegExp.lastIndex;
				break;
			} else {
				// Cell
				w.nextMatch++;
				var styles = config.formatterHelpers.inlineCssHelper(w);
				var spaceLeft = false;
				var chr = w.source.substr(w.nextMatch,1);
				while(chr == " ") {
					spaceLeft = true;
					w.nextMatch++;
					chr = w.source.substr(w.nextMatch,1);
				}
				var cell;
				if(chr == "!") {
					cell = createTiddlyElement(e,"th");
					w.nextMatch++;
				} else {
					cell = createTiddlyElement(e,"td");
				}
				prevCell = cell;
				prevColumns[col] = {rowSpanCount:1,element:cell};
				if(colSpanCount &gt; 1) {
					cell.setAttribute("colspan",colSpanCount);
					cell.setAttribute("colSpan",colSpanCount); // Needed for IE
					colSpanCount = 1;
				}
				config.formatterHelpers.applyCssHelper(cell,styles);
				w.subWikifyTerm(cell,this.cellTermRegExp);
				if(w.matchText.substr(w.matchText.length-2,1) == " ") // spaceRight
					cell.align = spaceLeft ? "center" : "left";
				else if(spaceLeft)
					cell.align = "right";
				w.nextMatch--;
			}
			col++;
			this.cellRegExp.lastIndex = w.nextMatch;
			cellMatch = this.cellRegExp.exec(w.source);
		}
	}
},

{
	name: "heading",
	match: "^!{1,6}",
	termRegExp: /(\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(createTiddlyElement(w.output,"h" + w.matchLength),this.termRegExp);
	}
},

{
	name: "list",
	match: "^(?:[\\*#;:]+)",
	lookaheadRegExp: /^(?:(?:(\*)|(#)|(;)|(:))+)/mg,
	termRegExp: /(\n)/mg,
	handler: function(w)
	{
		var stack = [w.output];
		var currLevel = 0, currType = null;
		var listLevel, listType, itemType, baseType;
		w.nextMatch = w.matchStart;
		this.lookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		while(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch) {
			if(lookaheadMatch[1]) {
				listType = "ul";
				itemType = "li";
			} else if(lookaheadMatch[2]) {
				listType = "ol";
				itemType = "li";
			} else if(lookaheadMatch[3]) {
				listType = "dl";
				itemType = "dt";
			} else if(lookaheadMatch[4]) {
				listType = "dl";
				itemType = "dd";
			}
			if (!baseType)
			   baseType = listType;
			listLevel = lookaheadMatch[0].length;
			w.nextMatch += lookaheadMatch[0].length;
			var t;
			if(listLevel &gt; currLevel) {
				for(t=currLevel; t&lt;listLevel; t++) {
					var target = (currLevel == 0) ? stack[stack.length-1] : stack[stack.length-1].lastChild;
					stack.push(createTiddlyElement(target,listType));
				}
			} else if (listType!=baseType &amp;&amp; listLevel==1) {
				w.nextMatch -= lookaheadMatch[0].length;
				return;
			} else if(listLevel &lt; currLevel) {
				for(t=currLevel; t&gt;listLevel; t--)
					stack.pop();
			} else if(listLevel == currLevel &amp;&amp; listType != currType) {
				stack.pop();
				stack.push(createTiddlyElement(stack[stack.length-1].lastChild,listType));
			}
			currLevel = listLevel;
			currType = listType;
			var e = createTiddlyElement(stack[stack.length-1],itemType);
			w.subWikifyTerm(e,this.termRegExp);
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		}
	}
},

{
	name: "quoteByBlock",
	match: "^&lt;&lt;&lt;\\n",
	termRegExp: /(^&lt;&lt;&lt;(\n|$))/mg,
	element: "blockquote",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "quoteByLine",
	match: "^&gt;+",
	lookaheadRegExp: /^&gt;+/mg,
	termRegExp: /(\n)/mg,
	element: "blockquote",
	handler: function(w)
	{
		var stack = [w.output];
		var currLevel = 0;
		var newLevel = w.matchLength;
		var t;
		do {
			if(newLevel &gt; currLevel) {
				for(t=currLevel; t&lt;newLevel; t++)
					stack.push(createTiddlyElement(stack[stack.length-1],this.element));
			} else if(newLevel &lt; currLevel) {
				for(t=currLevel; t&gt;newLevel; t--)
					stack.pop();
			}
			currLevel = newLevel;
			w.subWikifyTerm(stack[stack.length-1],this.termRegExp);
			createTiddlyElement(stack[stack.length-1],"br");
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
			var matched = lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch;
			if(matched) {
				newLevel = lookaheadMatch[0].length;
				w.nextMatch += lookaheadMatch[0].length;
			}
		} while(matched);
	}
},

{
	name: "rule",
	match: "^----+$\\n?",
	handler: function(w)
	{
		createTiddlyElement(w.output,"hr");
	}
},

{
	name: "monospacedByLine",
	match: "^\\{\\{\\{\\n",
	lookaheadRegExp: /^\{\{\{\n((?:^[^\n]*\n)+?)(^\}\}\}$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "monospacedByLineForCSS",
	match: "^/\\*\\{\\{\\{\\*/\\n",
	lookaheadRegExp: /\/\*\{\{\{\*\/\n*((?:^[^\n]*\n)+?)(\n*^\/\*\}\}\}\*\/$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "monospacedByLineForPlugin",
	match: "^//\\{\\{\\{\\n",
	lookaheadRegExp: /^\/\/\{\{\{\n\n*((?:^[^\n]*\n)+?)(\n*^\/\/\}\}\}$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "monospacedByLineForTemplate",
	match: "^&lt;!--\\{\\{\\{--&gt;\\n",
	lookaheadRegExp: /&lt;!--\{\{\{--&gt;\n*((?:^[^\n]*\n)+?)(\n*^&lt;!--\}\}\}--&gt;$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "wikifyCommentForPlugin",
	match: "^/\\*\\*\\*\\n",
	termRegExp: /(^\*\*\*\/\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(w.output,this.termRegExp);
	}
},

{
	name: "wikifyCommentForTemplate",
	match: "^&lt;!---\\n",
	termRegExp: /(^---&gt;\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(w.output,this.termRegExp);
	}
},

{
	name: "macro",
	match: "&lt;&lt;",
	lookaheadRegExp: /&lt;&lt;([^&gt;\s]+)(?:\s*)((?:[^&gt;]|(?:&gt;(?!&gt;)))*)&gt;&gt;/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart &amp;&amp; lookaheadMatch[1]) {
			w.nextMatch = this.lookaheadRegExp.lastIndex;
			invokeMacro(w.output,lookaheadMatch[1],lookaheadMatch[2],w,w.tiddler);
		}
	}
},

{
	name: "prettyLink",
	match: "\\[\\[",
	lookaheadRegExp: /\[\[(.*?)(?:\|(~)?(.*?))?\]\]/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			var e;
			var text = lookaheadMatch[1];
			if(lookaheadMatch[3]) {
				// Pretty bracketted link
				var link = lookaheadMatch[3];
				e = (!lookaheadMatch[2] &amp;&amp; config.formatterHelpers.isExternalLink(link)) ?
						createExternalLink(w.output,link) : createTiddlyLink(w.output,link,false,null,w.isStatic,w.tiddler);
			} else {
				// Simple bracketted link
				e = createTiddlyLink(w.output,text,false,null,w.isStatic,w.tiddler);
			}
			createTiddlyText(e,text);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "wikiLink",
	match: config.textPrimitives.unWikiLink+"?"+config.textPrimitives.wikiLink,
	handler: function(w)
	{
		if(w.matchText.substr(0,1) == config.textPrimitives.unWikiLink) {
			w.outputText(w.output,w.matchStart+1,w.nextMatch);
			return;
		}
		if(w.matchStart &gt; 0) {
			var preRegExp = new RegExp(config.textPrimitives.anyLetterStrict,"mg");
			preRegExp.lastIndex = w.matchStart-1;
			var preMatch = preRegExp.exec(w.source);
			if(preMatch.index == w.matchStart-1) {
				w.outputText(w.output,w.matchStart,w.nextMatch);
				return;
			}
		}
		if(w.autoLinkWikiWords == true || store.isShadowTiddler(w.matchText)) {
			var link = createTiddlyLink(w.output,w.matchText,false,null,w.isStatic,w.tiddler);
			w.outputText(link,w.matchStart,w.nextMatch);
		} else {
			w.outputText(w.output,w.matchStart,w.nextMatch);
		}
	}
},

{
	name: "urlLink",
	match: config.textPrimitives.urlPattern,
	handler: function(w)
	{
		w.outputText(createExternalLink(w.output,w.matchText),w.matchStart,w.nextMatch);
	}
},

{
	name: "image",
	match: "\\[[&lt;&gt;]?[Ii][Mm][Gg]\\[",
	lookaheadRegExp: /\[([&lt;]?)(&gt;?)[Ii][Mm][Gg]\[(?:([^\|\]]+)\|)?([^\[\]\|]+)\](?:\[([^\]]*)\])?\]/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			var e = w.output;
			if(lookaheadMatch[5]) {
				var link = lookaheadMatch[5];
				e = config.formatterHelpers.isExternalLink(link) ? createExternalLink(w.output,link) : createTiddlyLink(w.output,link,false,null,w.isStatic,w.tiddler);
				addClass(e,"imageLink");
			}
			var img = createTiddlyElement(e,"img");
			if(lookaheadMatch[1])
				img.align = "left";
			else if(lookaheadMatch[2])
				img.align = "right";
			if(lookaheadMatch[3])
				img.title = lookaheadMatch[3];
			img.src = lookaheadMatch[4];
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "html",
	match: "&lt;[Hh][Tt][Mm][Ll]&gt;",
	lookaheadRegExp: /&lt;[Hh][Tt][Mm][Ll]&gt;((?:.|\n)*?)&lt;\/[Hh][Tt][Mm][Ll]&gt;/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"span").innerHTML = lookaheadMatch[1];
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "commentByBlock",
	match: "/%",
	lookaheadRegExp: /\/%((?:.|\n)*?)%\//mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart)
			w.nextMatch = this.lookaheadRegExp.lastIndex;
	}
},

{
	name: "boldByChar",
	match: "''",
	termRegExp: /('')/mg,
	element: "strong",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "italicByChar",
	match: "//",
	termRegExp: /(\/\/)/mg,
	element: "em",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "underlineByChar",
	match: "__",
	termRegExp: /(__)/mg,
	element: "u",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "strikeByChar",
	match: "--(?!\\s|$)",
	termRegExp: /((?!\s)--|(?=\n\n))/mg,
	element: "strike",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "superscriptByChar",
	match: "\\^\\^",
	termRegExp: /(\^\^)/mg,
	element: "sup",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "subscriptByChar",
	match: "~~",
	termRegExp: /(~~)/mg,
	element: "sub",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "monospacedByChar",
	match: "\\{\\{\\{",
	lookaheadRegExp: /\{\{\{((?:.|\n)*?)\}\}\}/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"code",null,null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "styleByChar",
	match: "@@",
	termRegExp: /(@@)/mg,
	handler: function(w)
	{
		var e = createTiddlyElement(w.output,"span");
		var styles = config.formatterHelpers.inlineCssHelper(w);
		if(styles.length == 0)
			e.className = "marked";
		else
			config.formatterHelpers.applyCssHelper(e,styles);
		w.subWikifyTerm(e,this.termRegExp);
	}
},

{
	name: "lineBreak",
	match: "\\n|&lt;br ?/?&gt;",
	handler: function(w)
	{
		createTiddlyElement(w.output,"br");
	}
},

{
	name: "rawText",
	match: "\\\"{3}|&lt;nowiki&gt;",
	lookaheadRegExp: /(?:\"{3}|&lt;nowiki&gt;)((?:.|\n)*?)(?:\"{3}|&lt;\/nowiki&gt;)/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"span",null,null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "mdash",
	match: "--",
	handler: function(w)
	{
		createTiddlyElement(w.output,"span").innerHTML = "&amp;mdash;";
	}
},

{
	name: "htmlEntitiesEncoding",
	match: "(?:(?:&amp;#?[a-zA-Z0-9]{2,8};|.)(?:&amp;#?(?:x0*(?:3[0-6][0-9a-fA-F]|1D[c-fC-F][0-9a-fA-F]|20[d-fD-F][0-9a-fA-F]|FE2[0-9a-fA-F])|0*(?:76[89]|7[7-9][0-9]|8[0-7][0-9]|761[6-9]|76[2-7][0-9]|84[0-3][0-9]|844[0-7]|6505[6-9]|6506[0-9]|6507[0-1]));)+|&amp;#?[a-zA-Z0-9]{2,8};)",
	handler: function(w)
	{
		createTiddlyElement(w.output,"span").innerHTML = w.matchText;
	}
},

{
	name: "customClasses",
	match: "\\{\\{",
	termRegExp: /(\}\}\})/mg,
	lookaheadRegExp: /\{\{[\s]*([\w]+[\s\w]*)[\s]*\{(\n?)/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch) {
			var e = createTiddlyElement(w.output,lookaheadMatch[2] == "\n" ? "div" : "span",null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
			w.subWikifyTerm(e,this.termRegExp);
		}
	}
}

];

//--
//-- Wikifier
//--

function getParser(tiddler,format)
{
	if(tiddler) {
		if(!format)
			format = tiddler.fields["wikiformat"];
		var i;
		if(format) {
			for(i in config.parsers) {
				if(format == config.parsers[i].format)
					return config.parsers[i];
			}
		} else {
			for(i in config.parsers) {
				if(tiddler.isTagged(config.parsers[i].formatTag))
					return config.parsers[i];
			}
		}
	}
	return formatter;
}

function wikify(source,output,highlightRegExp,tiddler)
{
	if(source &amp;&amp; source != "") {
		var wikifier = new Wikifier(source,getParser(tiddler),highlightRegExp,tiddler);
		wikifier.subWikifyUnterm(output);
	}
}

function wikifyStatic(source,highlightRegExp,tiddler,format)
{
	var e = createTiddlyElement(document.body,"div");
	e.style.display = "none";
	var html = "";
	if(source &amp;&amp; source != "") {
		var wikifier = new Wikifier(source,getParser(tiddler,format),highlightRegExp,tiddler);
		wikifier.isStatic = true;
		wikifier.subWikifyUnterm(e);
		html = e.innerHTML;
		removeNode(e);
	}
	return html;
}

function wikifyPlain(title,theStore,limit)
{
	if(!theStore)
		theStore = store;
	if(theStore.tiddlerExists(title) || theStore.isShadowTiddler(title)) {
		return wikifyPlainText(theStore.getTiddlerText(title),limit,tiddler);
	} else {
		return "";
	}
}

function wikifyPlainText(text,limit,tiddler)
{
	if(limit &gt; 0)
		text = text.substr(0,limit);
	var wikifier = new Wikifier(text,formatter,null,tiddler);
	return wikifier.wikifyPlain();
}

function highlightify(source,output,highlightRegExp,tiddler)
{
	if(source &amp;&amp; source != "") {
		var wikifier = new Wikifier(source,formatter,highlightRegExp,tiddler);
		wikifier.outputText(output,0,source.length);
	}
}

function Wikifier(source,formatter,highlightRegExp,tiddler)
{
	this.source = source;
	this.output = null;
	this.formatter = formatter;
	this.nextMatch = 0;
	this.autoLinkWikiWords = tiddler &amp;&amp; tiddler.autoLinkWikiWords() == false ? false : true;
	this.highlightRegExp = highlightRegExp;
	this.highlightMatch = null;
	this.isStatic = false;
	if(highlightRegExp) {
		highlightRegExp.lastIndex = 0;
		this.highlightMatch = highlightRegExp.exec(source);
	}
	this.tiddler = tiddler;
}

Wikifier.prototype.wikifyPlain = function()
{
	var e = createTiddlyElement(document.body,"div");
	this.subWikify(e);
	var text = getPlainText(e);
	removeNode(e);
	return text;
};

Wikifier.prototype.subWikify = function(output,terminator)
{
	if(terminator)
		this.subWikifyTerm(output,new RegExp("(" + terminator + ")","mg"));
	else
		this.subWikifyUnterm(output);
};

Wikifier.prototype.subWikifyUnterm = function(output)
{
	// subWikify() can be indirectly recursive, so we need to save the old output pointer
	var oldOutput = this.output;
	this.output = output;
	this.formatter.formatterRegExp.lastIndex = this.nextMatch;
	var formatterMatch = this.formatter.formatterRegExp.exec(this.source);
	while(formatterMatch) {
		// Output any text before the match
		if(formatterMatch.index &gt; this.nextMatch)
			this.outputText(this.output,this.nextMatch,formatterMatch.index);
		// Set the match parameters for the handler
		this.matchStart = formatterMatch.index;
		this.matchLength = formatterMatch[0].length;
		this.matchText = formatterMatch[0];
		this.nextMatch = this.formatter.formatterRegExp.lastIndex;
		for(var t=1; t&lt;formatterMatch.length; t++) {
			if(formatterMatch[t]) {
				this.formatter.formatters[t-1].handler(this);
				this.formatter.formatterRegExp.lastIndex = this.nextMatch;
				break;
			}
		}
		formatterMatch = this.formatter.formatterRegExp.exec(this.source);
	}
	if(this.nextMatch &lt; this.source.length) {
		this.outputText(this.output,this.nextMatch,this.source.length);
		this.nextMatch = this.source.length;
	}
	this.output = oldOutput;
};

Wikifier.prototype.subWikifyTerm = function(output,terminatorRegExp)
{
	// subWikify() can be indirectly recursive, so we need to save the old output pointer
	var oldOutput = this.output;
	this.output = output;
	// Get the first matches for the formatter and terminator RegExps
	terminatorRegExp.lastIndex = this.nextMatch;
	var terminatorMatch = terminatorRegExp.exec(this.source);
	this.formatter.formatterRegExp.lastIndex = this.nextMatch;
	var formatterMatch = this.formatter.formatterRegExp.exec(terminatorMatch ? this.source.substr(0,terminatorMatch.index) : this.source);
	while(terminatorMatch || formatterMatch) {
		if(terminatorMatch &amp;&amp; (!formatterMatch || terminatorMatch.index &lt;= formatterMatch.index)) {
			if(terminatorMatch.index &gt; this.nextMatch)
				this.outputText(this.output,this.nextMatch,terminatorMatch.index);
			this.matchText = terminatorMatch[1];
			this.matchLength = terminatorMatch[1].length;
			this.matchStart = terminatorMatch.index;
			this.nextMatch = this.matchStart + this.matchLength;
			this.output = oldOutput;
			return;
		}
		if(formatterMatch.index &gt; this.nextMatch)
			this.outputText(this.output,this.nextMatch,formatterMatch.index);
		this.matchStart = formatterMatch.index;
		this.matchLength = formatterMatch[0].length;
		this.matchText = formatterMatch[0];
		this.nextMatch = this.formatter.formatterRegExp.lastIndex;
		for(var t=1; t&lt;formatterMatch.length; t++) {
			if(formatterMatch[t]) {
				this.formatter.formatters[t-1].handler(this);
				this.formatter.formatterRegExp.lastIndex = this.nextMatch;
				break;
			}
		}
		terminatorRegExp.lastIndex = this.nextMatch;
		terminatorMatch = terminatorRegExp.exec(this.source);
		formatterMatch = this.formatter.formatterRegExp.exec(terminatorMatch ? this.source.substr(0,terminatorMatch.index) : this.source);
	}
	if(this.nextMatch &lt; this.source.length) {
		this.outputText(this.output,this.nextMatch,this.source.length);
		this.nextMatch = this.source.length;
	}
	this.output = oldOutput;
};

Wikifier.prototype.outputText = function(place,startPos,endPos)
{
	while(this.highlightMatch &amp;&amp; (this.highlightRegExp.lastIndex &gt; startPos) &amp;&amp; (this.highlightMatch.index &lt; endPos) &amp;&amp; (startPos &lt; endPos)) {
		if(this.highlightMatch.index &gt; startPos) {
			createTiddlyText(place,this.source.substring(startPos,this.highlightMatch.index));
			startPos = this.highlightMatch.index;
		}
		var highlightEnd = Math.min(this.highlightRegExp.lastIndex,endPos);
		var theHighlight = createTiddlyElement(place,"span",null,"highlight",this.source.substring(startPos,highlightEnd));
		startPos = highlightEnd;
		if(startPos &gt;= this.highlightRegExp.lastIndex)
			this.highlightMatch = this.highlightRegExp.exec(this.source);
	}
	if(startPos &lt; endPos) {
		createTiddlyText(place,this.source.substring(startPos,endPos));
	}
};

//--
//-- Macro definitions
//--

config.macros.today.handler = function(place,macroName,params)
{
	var now = new Date();
	var text = params[0] ? now.formatString(params[0].trim()) : text = now.toLocaleString();
	createTiddlyElement(place,"span",null,null,text);
};

config.macros.version.handler = function(place)
{
	createTiddlyElement(place,"span",null,null,version.major + "." + version.minor + "." + version.revision + (version.beta ? " (beta " + version.beta + ")" : ""));
};

config.macros.list.handler = function(place,macroName,params)
{
	var type = params[0] ? params[0] : "all";
	var list = document.createElement("ul");
	place.appendChild(list);
	if(this[type].prompt)
		createTiddlyElement(list,"li",null,"listTitle",this[type].prompt);
	var results;
	if(this[type].handler)
		results = this[type].handler(params);
	for(var t = 0; t &lt; results.length; t++) {
		var li = document.createElement("li");
		list.appendChild(li);
		createTiddlyLink(li,typeof results[t] == "string" ? results[t] : results[t].title,true);
	}
};

config.macros.list.all.handler = function(params)
{
	return store.reverseLookup("tags","excludeLists",false,"title");
};

config.macros.list.missing.handler = function(params)
{
	return store.getMissingLinks();
};

config.macros.list.orphans.handler = function(params)
{
	return store.getOrphans();
};

config.macros.list.shadowed.handler = function(params)
{
	return store.getShadowed();
};

config.macros.list.touched.handler = function(params)
{
	return store.getTouched();
};

config.macros.list.filter.handler = function(params)
{
	var filter = params[1];
	var results = [];
	if(filter) {
		var tiddlers = store.filterTiddlers(filter);
		for(var t=0; t&lt;tiddlers.length; t++)
			results.push(tiddlers[t].title);
	}
	return results;
};

config.macros.allTags.handler = function(place,macroName,params)
{
	var tags = store.getTags(params[0]);
	var ul = createTiddlyElement(place,"ul");
	if(tags.length == 0)
		createTiddlyElement(ul,"li",null,"listTitle",this.noTags);
	for(var t=0; t&lt;tags.length; t++) {
		var title = tags[t][0];
		var info = getTiddlyLinkInfo(title);
		var li =createTiddlyElement(ul,"li");
		var btn = createTiddlyButton(li,title + " (" + tags[t][1] + ")",this.tooltip.format([title]),onClickTag,info.classes);
		btn.setAttribute("tag",title);
		btn.setAttribute("refresh","link");
		btn.setAttribute("tiddlyLink",title);
	}
};

config.macros.timeline.handler = function(place,macroName,params)
{
	var field = params[0] ? params[0] : "modified";
	var tiddlers = store.reverseLookup("tags","excludeLists",false,field);
	var lastDay = "";
	var last = params[1] ? tiddlers.length-Math.min(tiddlers.length,parseInt(params[1])) : 0;
	var dateFormat = params[2] ? params[2] : this.dateFormat;
	for(var t=tiddlers.length-1; t&gt;=last; t--) {
		var tiddler = tiddlers[t];
		var theDay = tiddler[field].convertToLocalYYYYMMDDHHMM().substr(0,8);
		if(theDay != lastDay) {
			var ul = document.createElement("ul");
			place.appendChild(ul);
			createTiddlyElement(ul,"li",null,"listTitle",tiddler[field].formatString(dateFormat));
			lastDay = theDay;
		}
		createTiddlyElement(ul,"li",null,"listLink").appendChild(createTiddlyLink(place,tiddler.title,true));
	}
};

config.macros.tiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("name",null,true,false,true);
	var names = params[0]["name"];
	var tiddlerName = names[0];
	var className = names[1] ? names[1] : null;
	var args = params[0]["with"];
	var wrapper = createTiddlyElement(place,"span",null,className);
	if(!args) {
		wrapper.setAttribute("refresh","content");
		wrapper.setAttribute("tiddler",tiddlerName);
	}
	var text = store.getTiddlerText(tiddlerName);
	if(text) {
		var stack = config.macros.tiddler.tiddlerStack;
		if(stack.indexOf(tiddlerName) !== -1)
			return;
		stack.push(tiddlerName);
		try {
			var n = args ? Math.min(args.length,9) : 0;
			for(var i=0; i&lt;n; i++) {
				var placeholderRE = new RegExp("\\$" + (i + 1),"mg");
				text = text.replace(placeholderRE,args[i]);
			}
			config.macros.tiddler.renderText(wrapper,text,tiddlerName,params);
		} finally {
			stack.pop();
		}
	}
};

config.macros.tiddler.renderText = function(place,text,tiddlerName,params)
{
	wikify(text,place,null,store.getTiddler(tiddlerName));
};

config.macros.tiddler.tiddlerStack = [];

config.macros.tag.handler = function(place,macroName,params)
{
	createTagButton(place,params[0]);
};

config.macros.tags.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var ul = createTiddlyElement(place,"ul");
	var title = getParam(params,"anon","");
	if(title &amp;&amp; store.tiddlerExists(title))
		tiddler = store.getTiddler(title);
	var sep = getParam(params,"sep"," ");
	var lingo = config.views.wikified.tag;
	var prompt = tiddler.tags.length == 0 ? lingo.labelNoTags : lingo.labelTags;
	createTiddlyElement(ul,"li",null,"listTitle",prompt.format([tiddler.title]));
	for(var t=0; t&lt;tiddler.tags.length; t++) {
		createTagButton(createTiddlyElement(ul,"li"),tiddler.tags[t],tiddler.title);
		if(t&lt;tiddler.tags.length-1)
			createTiddlyText(ul,sep);
	}
};

config.macros.tagging.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var ul = createTiddlyElement(place,"ul");
	var title = getParam(params,"anon","");
	if(title == "" &amp;&amp; tiddler instanceof Tiddler)
		title = tiddler.title;
	var sep = getParam(params,"sep"," ");
	ul.setAttribute("title",this.tooltip.format([title]));
	var tagged = store.getTaggedTiddlers(title);
	var prompt = tagged.length == 0 ? this.labelNotTag : this.label;
	createTiddlyElement(ul,"li",null,"listTitle",prompt.format([title,tagged.length]));
	for(var t=0; t&lt;tagged.length; t++) {
		createTiddlyLink(createTiddlyElement(ul,"li"),tagged[t].title,true);
		if(t&lt;tagged.length-1)
			createTiddlyText(ul,sep);
	}
};

config.macros.closeAll.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.closeAll.onClick = function(e)
{
	story.closeAllTiddlers();
	return false;
};

config.macros.permaview.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.permaview.onClick = function(e)
{
	story.permaView();
	return false;
};

config.macros.saveChanges.handler = function(place)
{
	if(!readOnly)
		createTiddlyButton(place,this.label,this.prompt,this.onClick,null,null,this.accessKey);
};

config.macros.saveChanges.onClick = function(e)
{
	saveChanges();
	return false;
};

config.macros.slider.onClickSlider = function(ev)
{
	var e = ev ? ev : window.event;
	var n = this.nextSibling;
	var cookie = n.getAttribute("cookie");
	var isOpen = n.style.display != "none";
	if(config.options.chkAnimate &amp;&amp; anim &amp;&amp; typeof Slider == "function")
		anim.startAnimating(new Slider(n,!isOpen,null,"none"));
	else
		n.style.display = isOpen ? "none" : "block";
	config.options[cookie] = !isOpen;
	saveOptionCookie(cookie);
	return false;
};

config.macros.slider.createSlider = function(place,cookie,title,tooltip)
{
	var c = cookie ? cookie : "";
	var btn = createTiddlyButton(place,title,tooltip,this.onClickSlider);
	var panel = createTiddlyElement(null,"div",null,"sliderPanel");
	panel.setAttribute("cookie",c);
	panel.style.display = config.options[c] ? "block" : "none";
	place.appendChild(panel);
	return panel;
};

config.macros.slider.handler = function(place,macroName,params)
{
	var panel = this.createSlider(place,params[0],params[2],params[3]);
	var text = store.getTiddlerText(params[1]);
	panel.setAttribute("refresh","content");
	panel.setAttribute("tiddler",params[1]);
	if(text)
		wikify(text,panel,null,store.getTiddler(params[1]));
};

// &lt;&lt;gradient [[tiddler name]] vert|horiz rgb rgb rgb rgb... &gt;&gt;
config.macros.gradient.handler = function(place,macroName,params,wikifier)
{
	var panel = wikifier ? createTiddlyElement(place,"div",null,"gradient") : place;
	panel.style.position = "relative";
	panel.style.overflow = "hidden";
	panel.style.zIndex = "0";
	if(wikifier) {
		var styles = config.formatterHelpers.inlineCssHelper(wikifier);
		config.formatterHelpers.applyCssHelper(panel,styles);
	}
	var colours = [];
	for(var t=1; t&lt;params.length; t++) {
		var c = new RGB(params[t]);
		if(c)
			colours.push(c);
	}
	drawGradient(panel,params[0] != "vert",colours);
	if(wikifier)
		wikifier.subWikify(panel,"&gt;&gt;");
	if(document.all) {
		panel.style.height = "100%";
		panel.style.width = "100%";
	}
};

config.macros.message.handler = function(place,macroName,params)
{
	if(params[0]) {
		var m = config;
		var p = params[0].split(".");
		for(var t=0; t&lt;p.length; t++) {
			if(p[t] in m)
				m = m[p[t]];
			else
				break;
		}
		createTiddlyText(place,m.toString().format(params.splice(1)));
	}
};

config.macros.view.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if((tiddler instanceof Tiddler) &amp;&amp; params[0]) {
		var value = store.getValue(tiddler,params[0]);
		if(value != undefined) {
			switch(params[1]) {
				case undefined:
					highlightify(value,place,highlightHack,tiddler);
					break;
				case "link":
					createTiddlyLink(place,value,true);
					break;
				case "wikified":
					wikify(value,place,highlightHack,tiddler);
					break;
				case "date":
					value = Date.convertFromYYYYMMDDHHMM(value);
					createTiddlyText(place,value.formatString(params[2] ? params[2] : config.views.wikified.dateFormat));
					break;
			}
		}
	}
};

config.macros.edit.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var field = params[0];
	var rows = params[1];
	if((tiddler instanceof Tiddler) &amp;&amp; field) {
		story.setDirty(tiddler.title,true);
		var e,v;
		if(field != "text" &amp;&amp; !rows) {
			e = createTiddlyElement(null,"input");
			if(tiddler.isReadOnly())
				e.setAttribute("readOnly","readOnly");
			e.setAttribute("edit",field);
			e.setAttribute("type","text");
			v = store.getValue(tiddler,field);
			if(!v)
				v = "";
			e.value = v;
			e.setAttribute("size","40");
			e.setAttribute("autocomplete","off");
			place.appendChild(e);
		} else {
			var wrapper1 = createTiddlyElement(null,"fieldset",null,"fieldsetFix");
			var wrapper2 = createTiddlyElement(wrapper1,"div");
			e = createTiddlyElement(wrapper2,"textarea");
			if(tiddler.isReadOnly())
				e.setAttribute("readOnly","readOnly");
			v = store.getValue(tiddler,field);
			if(!v)
				v = "";
			e.value = v;
			rows = rows ? rows : 10;
			var lines = v.match(/\n/mg);
			var maxLines = Math.max(parseInt(config.options.txtMaxEditRows),5);
			if(lines != null &amp;&amp; lines.length &gt; rows)
				rows = lines.length + 5;
			rows = Math.min(rows,maxLines);
			e.setAttribute("rows",rows);
			e.setAttribute("edit",field);
			place.appendChild(wrapper1);
		}
	}
};

config.macros.tagChooser.onClick = function(ev)
{
	var e = ev ? ev : window.event;
	var lingo = config.views.editor.tagChooser;
	var popup = Popup.create(this);
	var tags = store.getTags();
	if(tags.length == 0)
		createTiddlyText(createTiddlyElement(popup,"li"),lingo.popupNone);
	for(var t=0; t&lt;tags.length; t++) {
		var tag = createTiddlyButton(createTiddlyElement(popup,"li"),tags[t][0],lingo.tagTooltip.format([tags[t][0]]),config.macros.tagChooser.onTagClick);
		tag.setAttribute("tag",tags[t][0]);
		tag.setAttribute("tiddler",this.getAttribute("tiddler"));
	}
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
};

config.macros.tagChooser.onTagClick = function(ev)
{
	var e = ev ? ev : window.event;
	var tag = this.getAttribute("tag");
	var title = this.getAttribute("tiddler");
	if(!readOnly)
		story.setTiddlerTag(title,tag,0);
	return false;
};

config.macros.tagChooser.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(tiddler instanceof Tiddler) {
		var lingo = config.views.editor.tagChooser;
		var btn = createTiddlyButton(place,lingo.text,lingo.tooltip,this.onClick);
		btn.setAttribute("tiddler",tiddler.title);
	}
};

config.macros.refreshDisplay.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.refreshDisplay.onClick = function(e)
{
	refreshAll();
	return false;
};

config.macros.annotations.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var title = tiddler ? tiddler.title : null;
	var a = title ? config.annotations[title] : null;
	if(!tiddler || !title || !a)
		return;
	var text = a.format([title]);
	wikify(text,createTiddlyElement(place,"div",null,"annotation"),null,tiddler);
};

//--
//-- NewTiddler and NewJournal macros
//--

config.macros.newTiddler.createNewTiddlerButton = function(place,title,params,label,prompt,accessKey,newFocus,isJournal)
{
	var tags = [];
	for(var t=1; t&lt;params.length; t++) {
		if((params[t].name == "anon" &amp;&amp; t != 1) || (params[t].name == "tag"))
			tags.push(params[t].value);
	}
	label = getParam(params,"label",label);
	prompt = getParam(params,"prompt",prompt);
	accessKey = getParam(params,"accessKey",accessKey);
	newFocus = getParam(params,"focus",newFocus);
	var customFields = getParam(params,"fields","");
	if(!customFields &amp;&amp; !store.isShadowTiddler(title))
		customFields = String.encodeHashMap(config.defaultCustomFields);
	var btn = createTiddlyButton(place,label,prompt,this.onClickNewTiddler,null,null,accessKey);
	btn.setAttribute("newTitle",title);
	btn.setAttribute("isJournal",isJournal ? "true" : "false");
	if(tags.length &gt; 0)
		btn.setAttribute("params",tags.join("|"));
	btn.setAttribute("newFocus",newFocus);
	btn.setAttribute("newTemplate",getParam(params,"template",DEFAULT_EDIT_TEMPLATE));
	if(customFields !== "")
		btn.setAttribute("customFields",customFields);
	var text = getParam(params,"text");
	if(text !== undefined)
		btn.setAttribute("newText",text);
	return btn;
};

config.macros.newTiddler.onClickNewTiddler = function()
{
	var title = this.getAttribute("newTitle");
	if(this.getAttribute("isJournal") == "true") {
		var now = new Date();
		title = now.formatString(title.trim());
	}
	var params = this.getAttribute("params");
	var tags = params ? params.split("|") : [];
	var focus = this.getAttribute("newFocus");
	var template = this.getAttribute("newTemplate");
	var customFields = this.getAttribute("customFields");
	story.displayTiddler(null,title,template,false,null,null);
	var tiddlerElem = document.getElementById(story.idPrefix + title);
	if(customFields)
		story.addCustomFields(tiddlerElem,customFields);
	var text = this.getAttribute("newText");
	if(typeof text == "string")
		story.getTiddlerField(title,"text").value = text.format([title]);
	for(var t=0;t&lt;tags.length;t++)
		story.setTiddlerTag(title,tags[t],+1);
	story.focusTiddler(title,focus);
	return false;
};

config.macros.newTiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(!readOnly) {
		params = paramString.parseParams("anon",null,true,false,false);
		var title = params[1] &amp;&amp; params[1].name == "anon" ? params[1].value : this.title;
		title = getParam(params,"title",title);
		this.createNewTiddlerButton(place,title,params,this.label,this.prompt,this.accessKey,"title",false);
	}
};

config.macros.newJournal.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(!readOnly) {
		params = paramString.parseParams("anon",null,true,false,false);
		var title = params[1] &amp;&amp; params[1].name == "anon" ? params[1].value : config.macros.timeline.dateFormat;
		title = getParam(params,"title",title);
		config.macros.newTiddler.createNewTiddlerButton(place,title,params,this.label,this.prompt,this.accessKey,"text",true);
	}
};

//--
//-- Search macro
//--

config.macros.search.handler = function(place,macroName,params)
{
	var searchTimeout = null;
	var btn = createTiddlyButton(place,this.label,this.prompt,this.onClick);
	var txt = createTiddlyElement(place,"input",null,"txtOptionInput");
	if(params[0])
		txt.value = params[0];
	txt.onkeyup = this.onKeyPress;
	txt.onfocus = this.onFocus;
	txt.setAttribute("size",this.sizeTextbox);
	txt.setAttribute("accessKey",this.accessKey);
	txt.setAttribute("autocomplete","off");
	txt.setAttribute("lastSearchText","");
	if(config.browser.isSafari) {
		txt.setAttribute("type","search");
		txt.setAttribute("results","5");
	} else {
		txt.setAttribute("type","text");
	}
};

// Global because there's only ever one outstanding incremental search timer
config.macros.search.timeout = null;

config.macros.search.doSearch = function(txt)
{
	if(txt.value.length &gt; 0) {
		story.search(txt.value,config.options.chkCaseSensitiveSearch,config.options.chkRegExpSearch);
		txt.setAttribute("lastSearchText",txt.value);
	}
};

config.macros.search.onClick = function(e)
{
	config.macros.search.doSearch(this.nextSibling);
	return false;
};

config.macros.search.onKeyPress = function(ev)
{
	var e = ev ? ev : window.event;
	switch(e.keyCode) {
		case 13: // Ctrl-Enter
		case 10: // Ctrl-Enter on IE PC
			config.macros.search.doSearch(this);
			break;
		case 27: // Escape
			this.value = "";
			clearMessage();
			break;
	}
	if(this.value.length &gt; 2) {
		if(this.value != this.getAttribute("lastSearchText")) {
			if(config.macros.search.timeout)
				clearTimeout(config.macros.search.timeout);
			var txt = this;
			config.macros.search.timeout = setTimeout(function() {config.macros.search.doSearch(txt);},500);
		}
	} else {
		if(config.macros.search.timeout)
			clearTimeout(config.macros.search.timeout);
	}
};

config.macros.search.onFocus = function(e)
{
	this.select();
};

//--
//-- Tabs macro
//--

config.macros.tabs.handler = function(place,macroName,params)
{
	var cookie = params[0];
	var numTabs = (params.length-1)/3;
	var wrapper = createTiddlyElement(null,"div",null,cookie);
	var tabset = createTiddlyElement(wrapper,"div",null,"tabset");
	tabset.setAttribute("cookie",cookie);
	var validTab = false;
	for(var t=0; t&lt;numTabs; t++) {
		var label = params[t*3+1];
		var prompt = params[t*3+2];
		var content = params[t*3+3];
		var tab = createTiddlyButton(tabset,label,prompt,this.onClickTab,"tab tabUnselected");
		tab.setAttribute("tab",label);
		tab.setAttribute("content",content);
		tab.title = prompt;
		if(config.options[cookie] == label)
			validTab = true;
	}
	if(!validTab)
		config.options[cookie] = params[1];
	place.appendChild(wrapper);
	this.switchTab(tabset,config.options[cookie]);
};

config.macros.tabs.onClickTab = function(e)
{
	config.macros.tabs.switchTab(this.parentNode,this.getAttribute("tab"));
	return false;
};

config.macros.tabs.switchTab = function(tabset,tab)
{
	var cookie = tabset.getAttribute("cookie");
	var theTab = null;
	var nodes = tabset.childNodes;
	for(var t=0; t&lt;nodes.length; t++) {
		if(nodes[t].getAttribute &amp;&amp; nodes[t].getAttribute("tab") == tab) {
			theTab = nodes[t];
			theTab.className = "tab tabSelected";
		} else {
			nodes[t].className = "tab tabUnselected";
		}
	}
	if(theTab) {
		if(tabset.nextSibling &amp;&amp; tabset.nextSibling.className == "tabContents")
			removeNode(tabset.nextSibling);
		var tabContent = createTiddlyElement(null,"div",null,"tabContents");
		tabset.parentNode.insertBefore(tabContent,tabset.nextSibling);
		var contentTitle = theTab.getAttribute("content");
		wikify(store.getTiddlerText(contentTitle),tabContent,null,store.getTiddler(contentTitle));
		if(cookie) {
			config.options[cookie] = tab;
			saveOptionCookie(cookie);
		}
	}
};

//--
//-- Sparklines
//--

config.macros.sparkline = {};
config.macros.sparkline.handler = function(place,macroName,params)
{
	var data = [];
	var min = 0;
	var max = 0;
	var v;
	for(var t=0; t&lt;params.length; t++) {
		v = parseInt(params[t]);
		if(v &lt; min)
			min = v;
		if(v &gt; max)
			max = v;
		data.push(v);
	}
	if(data.length &lt; 1)
		return;
	var box = createTiddlyElement(place,"span",null,"sparkline",String.fromCharCode(160));
	box.title = data.join(",");
	var w = box.offsetWidth;
	var h = box.offsetHeight;
	box.style.paddingRight = (data.length * 2 - w) + "px";
	box.style.position = "relative";
	for(var d=0; d&lt;data.length; d++) {
		var tick = document.createElement("img");
		tick.border = 0;
		tick.className = "sparktick";
		tick.style.position = "absolute";
		tick.src = "data:image/gif,GIF89a%01%00%01%00%91%FF%00%FF%FF%FF%00%00%00%C0%C0%C0%00%00%00!%F9%04%01%00%00%02%00%2C%00%00%00%00%01%00%01%00%40%02%02T%01%00%3B";
		tick.style.left = d*2 + "px";
		tick.style.width = "2px";
		v = Math.floor(((data[d] - min)/(max-min)) * h);
		tick.style.top = (h-v) + "px";
		tick.style.height = v + "px";
		box.appendChild(tick);
	}
};

//--
//-- Tiddler toolbar
//--

// Create a toolbar command button
config.macros.toolbar.createCommand = function(place,commandName,tiddler,theClass)
{
	if(typeof commandName != "string") {
		var c = null;
		for(var t in config.commands) {
			if(config.commands[t] == commandName)
				c = t;
		}
		commandName = c;
	}
	if((tiddler instanceof Tiddler) &amp;&amp; (typeof commandName == "string")) {
		var command = config.commands[commandName];
		if(command.isEnabled ? command.isEnabled(tiddler) : this.isCommandEnabled(command,tiddler)) {
			var text = command.getText ? command.getText(tiddler) : this.getCommandText(command,tiddler);
			var tooltip = command.getTooltip ? command.getTooltip(tiddler) : this.getCommandTooltip(command,tiddler);
			var cmd;
			switch(command.type) {
				case "popup":
					cmd = this.onClickPopup;
					break;
				case "command":
				default:
					cmd = this.onClickCommand;
					break;
			}
			var btn = createTiddlyButton(null,text,tooltip,cmd);
			btn.setAttribute("commandName",commandName);
			btn.setAttribute("tiddler",tiddler.title);
			if(theClass)
				addClass(btn,theClass);
			place.appendChild(btn);
		}
	}
};

config.macros.toolbar.isCommandEnabled = function(command,tiddler)
{
	var title = tiddler.title;
	var ro = tiddler.isReadOnly();
	var shadow = store.isShadowTiddler(title) &amp;&amp; !store.tiddlerExists(title);
	return (!ro || (ro &amp;&amp; !command.hideReadOnly)) &amp;&amp; !(shadow &amp;&amp; command.hideShadow);
};

config.macros.toolbar.getCommandText = function(command,tiddler)
{
	return tiddler.isReadOnly() &amp;&amp; command.readOnlyText ? command.readOnlyText : command.text;
};

config.macros.toolbar.getCommandTooltip = function(command,tiddler)
{
	return tiddler.isReadOnly() &amp;&amp; command.readOnlyTooltip ? command.readOnlyTooltip : command.tooltip;
};

config.macros.toolbar.onClickCommand = function(ev)
{
	var e = ev ? ev : window.event;
	e.cancelBubble = true;
	if (e.stopPropagation) e.stopPropagation();
	var command = config.commands[this.getAttribute("commandName")];
	return command.handler(e,this,this.getAttribute("tiddler"));
};

config.macros.toolbar.onClickPopup = function(ev)
{
	var e = ev ? ev : window.event;
	e.cancelBubble = true;
	if (e.stopPropagation) e.stopPropagation();
	var popup = Popup.create(this);
	var command = config.commands[this.getAttribute("commandName")];
	var title = this.getAttribute("tiddler");
	var tiddler = store.fetchTiddler(title);
	popup.setAttribute("tiddler",title);
	command.handlePopup(popup,title);
	Popup.show();
	return false;
};

// Invoke the first command encountered from a given place that is tagged with a specified class
config.macros.toolbar.invokeCommand = function(place,theClass,event)
{
	var children = place.getElementsByTagName("a");
	for(var t=0; t&lt;children.length; t++) {
		var c = children[t];
		if(hasClass(c,theClass) &amp;&amp; c.getAttribute &amp;&amp; c.getAttribute("commandName")) {
			if(c.onclick instanceof Function)
				c.onclick.call(c,event);
			break;
		}
	}
};

config.macros.toolbar.onClickMore = function(ev)
{
	var e = this.nextSibling;
	e.style.display = "inline";
	removeNode(this);
	return false;
};

config.macros.toolbar.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	for(var t=0; t&lt;params.length; t++) {
		var c = params[t];
		switch(c) {
			case '&gt;':
				var btn = createTiddlyButton(place,this.moreLabel,this.morePrompt,config.macros.toolbar.onClickMore);
				addClass(btn,"moreCommand");
				var e = createTiddlyElement(place,"span",null,"moreCommand");
				e.style.display = "none";
				place = e;
				break;
			default:
				var theClass = "";
				switch(c.substr(0,1)) {
					case "+":
						theClass = "defaultCommand";
						c = c.substr(1);
						break;
					case "-":
						theClass = "cancelCommand";
						c = c.substr(1);
						break;
				}
				if(c in config.commands)
					this.createCommand(place,c,tiddler,theClass);
				break;
		}
	}
};

//--
//-- Menu and toolbar commands
//--

config.commands.closeTiddler.handler = function(event,src,title)
{
	story.closeTiddler(title,true);
	return false;
};

config.commands.closeOthers.handler = function(event,src,title)
{
	story.closeAllTiddlers(title);
	return false;
};

config.commands.editTiddler.handler = function(event,src,title)
{
	clearMessage();
	var tiddlerElem = document.getElementById(story.idPrefix + title);
	var fields = tiddlerElem.getAttribute("tiddlyFields");
	story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE,false,null,fields);
	story.focusTiddler(title,"text");
	return false;
};

config.commands.saveTiddler.handler = function(event,src,title)
{
	var newTitle = story.saveTiddler(title,event.shiftKey);
	if(newTitle)
		story.displayTiddler(null,newTitle);
	return false;
};

config.commands.cancelTiddler.handler = function(event,src,title)
{
	if(story.hasChanges(title) &amp;&amp; !readOnly) {
		if(!confirm(this.warning.format([title])))
			return false;
	}
	story.setDirty(title,false);
	story.displayTiddler(null,title);
	return false;
};

config.commands.deleteTiddler.handler = function(event,src,title)
{
	var deleteIt = true;
	if (config.options.chkConfirmDelete)
		deleteIt = confirm(this.warning.format([title]));
	if (deleteIt) {
		store.removeTiddler(title);
		story.closeTiddler(title,true);
		autoSaveChanges();
	}
	return false;
};

config.commands.permalink.handler = function(event,src,title)
{
	var t = encodeURIComponent(String.encodeTiddlyLink(title));
	if(window.location.hash != t)
		window.location.hash = t;
	return false;
};

config.commands.references.handlePopup = function(popup,title)
{
	var references = store.getReferringTiddlers(title);
	var c = false;
	for(var r=0; r&lt;references.length; r++) {
		if(references[r].title != title &amp;&amp; !references[r].isTagged("excludeLists")) {
			createTiddlyLink(createTiddlyElement(popup,"li"),references[r].title,true);
			c = true;
		}
	}
	if(!c)
		createTiddlyText(createTiddlyElement(popup,"li",null,"disabled"),this.popupNone);
};

config.commands.jump.handlePopup = function(popup,title)
{
	story.forEachTiddler(function(title,element) {
		createTiddlyLink(createTiddlyElement(popup,"li"),title,true,null,false,null,true);
		});
};

config.commands.syncing.handlePopup = function(popup,title)
{
	var tiddler = store.fetchTiddler(title);
	if(!tiddler)
		return;
	var serverType = tiddler.getServerType();
	var serverHost = tiddler.fields['server.host'];
	var serverWorkspace = tiddler.fields['server.workspace'];
	if(!serverWorkspace)
		serverWorkspace = "";
	if(serverType) {
		var e = createTiddlyElement(popup,"li",null,"popupMessage");
		e.innerHTML = config.commands.syncing.currentlySyncing.format([serverType,serverHost,serverWorkspace]);
	} else {
		createTiddlyElement(popup,"li",null,"popupMessage",config.commands.syncing.notCurrentlySyncing);
	}
	if(serverType) {
		createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
		var btn = createTiddlyButton(createTiddlyElement(popup,"li"),this.captionUnSync,null,config.commands.syncing.onChooseServer);
		btn.setAttribute("tiddler",title);
		btn.setAttribute("server.type","");
	}
	createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
	createTiddlyElement(popup,"li",null,"popupMessage",config.commands.syncing.chooseServer);
	var feeds = store.getTaggedTiddlers("systemServer","title");
	for(var t=0; t&lt;feeds.length; t++) {
		var f = feeds[t];
		var feedServerType = store.getTiddlerSlice(f.title,"Type");
		if(!feedServerType)
			feedServerType = "file";
		var feedServerHost = store.getTiddlerSlice(f.title,"URL");
		if(!feedServerHost)
			feedServerHost = "";
		var feedServerWorkspace = store.getTiddlerSlice(f.title,"Workspace");
		if(!feedServerWorkspace)
			feedServerWorkspace = "";
		var caption = f.title;
		if(serverType == feedServerType &amp;&amp; serverHost == feedServerHost &amp;&amp; serverWorkspace == feedServerWorkspace) {
			caption = config.commands.syncing.currServerMarker + caption;
		} else {
			caption = config.commands.syncing.notCurrServerMarker + caption;
		}
		btn = createTiddlyButton(createTiddlyElement(popup,"li"),caption,null,config.commands.syncing.onChooseServer);
		btn.setAttribute("tiddler",title);
		btn.setAttribute("server.type",feedServerType);
		btn.setAttribute("server.host",feedServerHost);
		btn.setAttribute("server.workspace",feedServerWorkspace);
	}
};

config.commands.syncing.onChooseServer = function(e)
{
	var tiddler = this.getAttribute("tiddler");
	var serverType = this.getAttribute("server.type");
	if(serverType) {
		store.addTiddlerFields(tiddler,{
			'server.type': serverType,
			'server.host': this.getAttribute("server.host"),
			'server.workspace': this.getAttribute("server.workspace")
			});
	} else {
		store.setValue(tiddler,'server',null);
	}
	return false;
};

config.commands.fields.handlePopup = function(popup,title)
{
	var tiddler = store.fetchTiddler(title);
	if(!tiddler)
		return;
	var fields = {};
	store.forEachField(tiddler,function(tiddler,fieldName,value) {fields[fieldName] = value;},true);
	var items = [];
	for(var t in fields) {
		items.push({field: t,value: fields[t]});
	}
	items.sort(function(a,b) {return a.field &lt; b.field ? -1 : (a.field == b.field ? 0 : +1);});
	if(items.length &gt; 0)
		ListView.create(popup,items,this.listViewTemplate);
	else
		createTiddlyElement(popup,"div",null,null,this.emptyText);
};

//--
//-- Tiddler() object
//--

function Tiddler(title)
{
	this.title = title;
	this.text = null;
	this.modifier = null;
	this.modified = new Date();
	this.created = new Date();
	this.links = [];
	this.linksUpdated = false;
	this.tags = [];
	this.fields = {};
	return this;
}

Tiddler.prototype.getLinks = function()
{
	if(this.linksUpdated==false)
		this.changed();
	return this.links;
};

// Returns the fields that are inherited in string field:"value" field2:"value2" format
Tiddler.prototype.getInheritedFields = function()
{
	var f = {};
	for(i in this.fields) {
		if(i=="server.host" || i=="server.workspace" || i=="wikiformat"|| i=="server.type") {
			f[i] = this.fields[i];
		}
	}
	return String.encodeHashMap(f);
};

// Increment the changeCount of a tiddler
Tiddler.prototype.incChangeCount = function()
{
	var c = this.fields['changecount'];
	c = c ? parseInt(c) : 0;
	this.fields['changecount'] = String(c+1);
};

// Clear the changeCount of a tiddler
Tiddler.prototype.clearChangeCount = function()
{
	if(this.fields['changecount']) {
		delete this.fields['changecount'];
	}
};

// Returns true if the tiddler has been updated since the tiddler was created or downloaded
Tiddler.prototype.isTouched = function()
{
	var changeCount = this.fields['changecount'];
	if(changeCount === undefined)
		changeCount = 0;
	return changeCount &gt; 0;
};

// Format the text for storage in an RSS item
Tiddler.prototype.saveToRss = function(url)
{
	var s = [];
	s.push("&lt;item&gt;");
	s.push("&lt;title" + "&gt;" + this.title.htmlEncode() + "&lt;/title" + "&gt;");
	s.push("&lt;description&gt;" + wikifyStatic(this.text,null,this).htmlEncode() + "&lt;/description&gt;");
	for(var t=0; t&lt;this.tags.length; t++)
		s.push("&lt;category&gt;" + this.tags[t] + "&lt;/category&gt;");
	s.push("&lt;link&gt;" + url + "#" + encodeURIComponent(String.encodeTiddlyLink(this.title)) + "&lt;/link&gt;");
	s.push("&lt;pubDate&gt;" + this.modified.toGMTString() + "&lt;/pubDate&gt;");
	s.push("&lt;/item&gt;");
	return s.join("\n");
};

// Change the text and other attributes of a tiddler
Tiddler.prototype.set = function(title,text,modifier,modified,tags,created,fields)
{
	this.assign(title,text,modifier,modified,tags,created,fields);
	this.changed();
	return this;
};

// Change the text and other attributes of a tiddler without triggered a tiddler.changed() call
Tiddler.prototype.assign = function(title,text,modifier,modified,tags,created,fields)
{
	if(title != undefined)
		this.title = title;
	if(text != undefined)
		this.text = text;
	if(modifier != undefined)
		this.modifier = modifier;
	if(modified != undefined)
		this.modified = modified;
	if(created != undefined)
		this.created = created;
	if(fields != undefined)
		this.fields = fields;
	if(tags != undefined)
		this.tags = (typeof tags == "string") ? tags.readBracketedList() : tags;
	else if(this.tags == undefined)
		this.tags = [];
	return this;
};

// Get the tags for a tiddler as a string (space delimited, using [[brackets]] for tags containing spaces)
Tiddler.prototype.getTags = function()
{
	return String.encodeTiddlyLinkList(this.tags);
};

// Test if a tiddler carries a tag
Tiddler.prototype.isTagged = function(tag)
{
	return this.tags.indexOf(tag) != -1;
};

// Static method to convert "\n" to newlines, "\s" to "\"
Tiddler.unescapeLineBreaks = function(text)
{
	return text ? text.unescapeLineBreaks() : "";
};

// Convert newlines to "\n", "\" to "\s"
Tiddler.prototype.escapeLineBreaks = function()
{
	return this.text.escapeLineBreaks();
};

// Updates the secondary information (like links[] array) after a change to a tiddler
Tiddler.prototype.changed = function()
{
	this.links = [];
	var t = this.autoLinkWikiWords() ? 0 : 1;
	var tiddlerLinkRegExp = t==0 ? config.textPrimitives.tiddlerAnyLinkRegExp : config.textPrimitives.tiddlerForcedLinkRegExp;
	tiddlerLinkRegExp.lastIndex = 0;
	var formatMatch = tiddlerLinkRegExp.exec(this.text);
	while(formatMatch) {
		var lastIndex = tiddlerLinkRegExp.lastIndex;
		if(t==0 &amp;&amp; formatMatch[1] &amp;&amp; formatMatch[1] != this.title) {
			// wikiWordLink
			if(formatMatch.index &gt; 0) {
				var preRegExp = new RegExp(config.textPrimitives.unWikiLink+"|"+config.textPrimitives.anyLetter,"mg");
				preRegExp.lastIndex = formatMatch.index-1;
				var preMatch = preRegExp.exec(this.text);
				if(preMatch.index != formatMatch.index-1)
					this.links.pushUnique(formatMatch[1]);
			} else {
				this.links.pushUnique(formatMatch[1]);
			}
		}
		else if(formatMatch[2-t] &amp;&amp; !config.formatterHelpers.isExternalLink(formatMatch[3-t])) // titledBrackettedLink
			this.links.pushUnique(formatMatch[3-t]);
		else if(formatMatch[4-t] &amp;&amp; formatMatch[4-t] != this.title) // brackettedLink
			this.links.pushUnique(formatMatch[4-t]);
		tiddlerLinkRegExp.lastIndex = lastIndex;
		formatMatch = tiddlerLinkRegExp.exec(this.text);
	}
	this.linksUpdated = true;
};

Tiddler.prototype.getSubtitle = function()
{
	var modifier = this.modifier;
	if(!modifier)
		modifier = config.messages.subtitleUnknown;
	var modified = this.modified;
	if(modified)
		modified = modified.toLocaleString();
	else
		modified = config.messages.subtitleUnknown;
	return config.messages.tiddlerLinkTooltip.format([this.title,modifier,modified]);
};

Tiddler.prototype.isReadOnly = function()
{
	return readOnly;
};

Tiddler.prototype.autoLinkWikiWords = function()
{
	return !(this.isTagged("systemConfig") || this.isTagged("excludeMissing"));
};

Tiddler.prototype.generateFingerprint = function()
{
	return "0x" + Crypto.hexSha1Str(this.text);
};

Tiddler.prototype.getServerType = function()
{
	var serverType = null;
	if(this.fields &amp;&amp; this.fields['server.type'])
		serverType = this.fields['server.type'];
	if(!serverType)
		serverType = this.fields['wikiformat'];
	if(serverType &amp;&amp; !config.adaptors[serverType])
		serverType = null;
	return serverType;
};

Tiddler.prototype.getAdaptor = function()
{
	var serverType = this.getServerType();
	return serverType ? new config.adaptors[serverType] : null;
};

//--
//-- TiddlyWiki() object contains Tiddler()s
//--

function TiddlyWiki()
{
	var tiddlers = {}; // Hashmap by name of tiddlers
	this.tiddlersUpdated = false;
	this.namedNotifications = []; // Array of {name:,notify:} of notification functions
	this.notificationLevel = 0;
	this.slices = {}; // map tiddlerName-&gt;(map sliceName-&gt;sliceValue). Lazy.
	this.clear = function() {
		tiddlers = {};
		this.setDirty(false);
	};
	this.fetchTiddler = function(title) {
		return tiddlers[title];
	};
	this.deleteTiddler = function(title) {
		delete this.slices[title];
		delete tiddlers[title];
	};
	this.addTiddler = function(tiddler) {
		delete this.slices[tiddler.title];
		tiddlers[tiddler.title] = tiddler;
	};
	this.forEachTiddler = function(callback) {
		for(var t in tiddlers) {
			var tiddler = tiddlers[t];
			if(tiddler instanceof Tiddler)
				callback.call(this,t,tiddler);
		}
	};
}

TiddlyWiki.prototype.setDirty = function(dirty)
{
	this.dirty = dirty;
};

TiddlyWiki.prototype.isDirty = function()
{
	return this.dirty;
};

TiddlyWiki.prototype.suspendNotifications = function()
{
	this.notificationLevel--;
};

TiddlyWiki.prototype.resumeNotifications = function()
{
	this.notificationLevel++;
};

// Invoke the notification handlers for a particular tiddler
TiddlyWiki.prototype.notify = function(title,doBlanket)
{
	if(!this.notificationLevel) {
		for(var t=0; t&lt;this.namedNotifications.length; t++) {
			var n = this.namedNotifications[t];
			if((n.name == null &amp;&amp; doBlanket) || (n.name == title))
				n.notify(title);
		}
	}
};

// Invoke the notification handlers for all tiddlers
TiddlyWiki.prototype.notifyAll = function()
{
	if(!this.notificationLevel) {
		for(var t=0; t&lt;this.namedNotifications.length; t++) {
			var n = this.namedNotifications[t];
			if(n.name)
				n.notify(n.name);
		}
	}
};

// Add a notification handler to a tiddler
TiddlyWiki.prototype.addNotification = function(title,fn)
{
	for(var i=0; i&lt;this.namedNotifications.length; i++) {
		if((this.namedNotifications[i].name == title) &amp;&amp; (this.namedNotifications[i].notify == fn))
			return this;
	}
	this.namedNotifications.push({name: title, notify: fn});
	return this;
};

TiddlyWiki.prototype.removeTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		this.deleteTiddler(title);
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.tiddlerExists = function(title)
{
	var t = this.fetchTiddler(title);
	return t != undefined;
};

TiddlyWiki.prototype.isShadowTiddler = function(title)
{
	return typeof config.shadowTiddlers[title] == "string";
};

TiddlyWiki.prototype.getTiddler = function(title)
{
	var t = this.fetchTiddler(title);
	if(t != undefined)
		return t;
	else
		return null;
};

TiddlyWiki.prototype.getTiddlerText = function(title,defaultText)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler)
		return tiddler.text;
	if(!title)
		return defaultText;
	var pos = title.indexOf(config.textPrimitives.sliceSeparator);
	if(pos != -1) {
		var slice = this.getTiddlerSlice(title.substr(0,pos),title.substr(pos + config.textPrimitives.sliceSeparator.length));
		if(slice)
			return slice;
	}
	if(this.isShadowTiddler(title))
		return config.shadowTiddlers[title];
	if(defaultText != undefined)
		return defaultText;
	return null;
};

TiddlyWiki.prototype.slicesRE = /(?:[\'\/]*~?([\.\w]+)[\'\/]*\:[\'\/]*\s*(.*?)\s*$)|(?:\|[\'\/]*~?([\.\w]+)\:?[\'\/]*\|\s*(.*?)\s*\|)/gm;

// @internal
TiddlyWiki.prototype.calcAllSlices = function(title)
{
	var slices = {};
	var text = this.getTiddlerText(title,"");
	this.slicesRE.lastIndex = 0;
	do {
		var m = this.slicesRE.exec(text);
		if(m) {
			if(m[1])
				slices[m[1]] = m[2];
			else
				slices[m[3]] = m[4];
		}
	} while(m);
	return slices;
};

// Returns the slice of text of the given name
TiddlyWiki.prototype.getTiddlerSlice = function(title,sliceName)
{
	var slices = this.slices[title];
	if(!slices) {
		slices = this.calcAllSlices(title);
		this.slices[title] = slices;
	}
	return slices[sliceName];
};

// Build an hashmap of the specified named slices of a tiddler
TiddlyWiki.prototype.getTiddlerSlices = function(title,sliceNames)
{
	var r = {};
	for(var t=0; t&lt;sliceNames.length; t++) {
		var slice = this.getTiddlerSlice(title,sliceNames[t]);
		if(slice)
			r[sliceNames[t]] = slice;
	}
	return r;
};

TiddlyWiki.prototype.getRecursiveTiddlerText = function(title,defaultText,depth)
{
	var bracketRegExp = new RegExp("(?:\\[\\[([^\\]]+)\\]\\])","mg");
	var text = this.getTiddlerText(title,null);
	if(text == null)
		return defaultText;
	var textOut = [];
	var lastPos = 0;
	do {
		var match = bracketRegExp.exec(text);
		if(match) {
			textOut.push(text.substr(lastPos,match.index-lastPos));
			if(match[1]) {
				if(depth &lt;= 0)
					textOut.push(match[1]);
				else
					textOut.push(this.getRecursiveTiddlerText(match[1],"[[" + match[1] + "]]",depth-1));
			}
			lastPos = match.index + match[0].length;
		} else {
			textOut.push(text.substr(lastPos));
		}
	} while(match);
	return textOut.join("");
};

TiddlyWiki.prototype.setTiddlerTag = function(title,status,tag)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		var t = tiddler.tags.indexOf(tag);
		if(t != -1)
			tiddler.tags.splice(t,1);
		if(status)
			tiddler.tags.push(tag);
		tiddler.changed();
		this.incChangeCount(title);
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.addTiddlerFields = function(title,fields)
{
	var tiddler = this.fetchTiddler(title);
	if(!tiddler)
		return;
	merge(tiddler.fields,fields);
	tiddler.changed();
	this.incChangeCount(title);
	this.notify(title,true);
	this.setDirty(true);
};

TiddlyWiki.prototype.saveTiddler = function(title,newTitle,newBody,modifier,modified,tags,fields,clearChangeCount,created)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		created = created ? created : tiddler.created; // Preserve created date
		this.deleteTiddler(title);
	} else {
		created = created ? created : modified;
		tiddler = new Tiddler();
	}
	tiddler.set(newTitle,newBody,modifier,modified,tags,created,fields);
	this.addTiddler(tiddler);
	if(clearChangeCount)
		tiddler.clearChangeCount();
	else
		tiddler.incChangeCount();
	if(title != newTitle)
		this.notify(title,true);
	this.notify(newTitle,true);
	this.setDirty(true);
	return tiddler;
};

// Reset the sync status of a freshly synced tiddler
TiddlyWiki.prototype.resetTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		tiddler.clearChangeCount();
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.incChangeCount = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler)
		tiddler.incChangeCount();
};

TiddlyWiki.prototype.createTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(!tiddler) {
		tiddler = new Tiddler();
		tiddler.title = title;
		this.addTiddler(tiddler);
		this.setDirty(true);
	}
	return tiddler;
};

// Load contents of a TiddlyWiki from an HTML DIV
TiddlyWiki.prototype.loadFromDiv = function(src,idPrefix,noUpdate)
{
	this.idPrefix = idPrefix;
	var storeElem = (typeof src == "string") ? document.getElementById(src) : src;
	if(!storeElem)
		return;
	var tiddlers = this.getLoader().loadTiddlers(this,storeElem.childNodes);
	this.setDirty(false);
	if(!noUpdate) {
		for(var i = 0;i&lt;tiddlers.length; i++)
			tiddlers[i].changed();
	}
};

// Load contents of a TiddlyWiki from a string
// Returns null if there's an error
TiddlyWiki.prototype.importTiddlyWiki = function(text)
{
	var posDiv = locateStoreArea(text);
	if(!posDiv)
		return null;
	var content = "&lt;" + "html&gt;&lt;" + "body&gt;" + text.substring(posDiv[0],posDiv[1] + endSaveArea.length) + "&lt;" + "/body&gt;&lt;" + "/html&gt;";
	// Create the iframe
	var iframe = document.createElement("iframe");
	iframe.style.display = "none";
	document.body.appendChild(iframe);
	var doc = iframe.document;
	if(iframe.contentDocument)
		doc = iframe.contentDocument; // For NS6
	else if(iframe.contentWindow)
		doc = iframe.contentWindow.document; // For IE5.5 and IE6
	// Put the content in the iframe
	doc.open();
	doc.writeln(content);
	doc.close();
	// Load the content into a TiddlyWiki() object
	var storeArea = doc.getElementById("storeArea");
	this.loadFromDiv(storeArea,"store");
	// Get rid of the iframe
	iframe.parentNode.removeChild(iframe);
	return this;
};

TiddlyWiki.prototype.updateTiddlers = function()
{
	this.tiddlersUpdated = true;
	this.forEachTiddler(function(title,tiddler) {
		tiddler.changed();
	});
};

// Return all tiddlers formatted as an HTML string
TiddlyWiki.prototype.allTiddlersAsHtml = function()
{
	return store.getSaver().externalize(store);
};

// Return an array of tiddlers matching a search regular expression
TiddlyWiki.prototype.search = function(searchRegExp,sortField,excludeTag,match)
{
	var candidates = this.reverseLookup("tags",excludeTag,!!match);
	var results = [];
	for(var t=0; t&lt;candidates.length; t++) {
		if((candidates[t].title.search(searchRegExp) != -1) || (candidates[t].text.search(searchRegExp) != -1))
			results.push(candidates[t]);
	}
	if(!sortField)
		sortField = "title";
	results.sort(function(a,b) {return a[sortField] &lt; b[sortField] ? -1 : (a[sortField] == b[sortField] ? 0 : +1);});
	return results;
};

// Returns a list of all tags in use
//   excludeTag - if present, excludes tags that are themselves tagged with excludeTag
// Returns an array of arrays where [tag][0] is the name of the tag and [tag][1] is the number of occurances
TiddlyWiki.prototype.getTags = function(excludeTag)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		for(var g=0; g&lt;tiddler.tags.length; g++) {
			var tag = tiddler.tags[g];
			var n = true;
			for(var c=0; c&lt;results.length; c++) {
				if(results[c][0] == tag) {
					n = false;
					results[c][1]++;
				}
			}
			if(n &amp;&amp; excludeTag) {
				var t = store.fetchTiddler(tag);
				if(t &amp;&amp; t.isTagged(excludeTag))
					n = false;
			}
			if(n)
				results.push([tag,1]);
		}
	});
	results.sort(function(a,b) {return a[0].toLowerCase() &lt; b[0].toLowerCase() ? -1 : (a[0].toLowerCase() == b[0].toLowerCase() ? 0 : +1);});
	return results;
};

// Return an array of the tiddlers that are tagged with a given tag
TiddlyWiki.prototype.getTaggedTiddlers = function(tag,sortField)
{
	return this.reverseLookup("tags",tag,true,sortField);
};

// Return an array of the tiddlers that link to a given tiddler
TiddlyWiki.prototype.getReferringTiddlers = function(title,unusedParameter,sortField)
{
	if(!this.tiddlersUpdated)
		this.updateTiddlers();
	return this.reverseLookup("links",title,true,sortField);
};

// Return an array of the tiddlers that do or do not have a specified entry in the specified storage array (ie, "links" or "tags")
// lookupMatch == true to match tiddlers, false to exclude tiddlers
TiddlyWiki.prototype.reverseLookup = function(lookupField,lookupValue,lookupMatch,sortField)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		var f = !lookupMatch;
		for(var lookup=0; lookup&lt;tiddler[lookupField].length; lookup++) {
			if(tiddler[lookupField][lookup] == lookupValue)
				f = lookupMatch;
		}
		if(f)
			results.push(tiddler);
	});
	if(!sortField)
		sortField = "title";
	results.sort(function(a,b) {return a[sortField] &lt; b[sortField] ? -1 : (a[sortField] == b[sortField] ? 0 : +1);});
	return results;
};

// Return the tiddlers as a sorted array
TiddlyWiki.prototype.getTiddlers = function(field,excludeTag)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		if(excludeTag == undefined || !tiddler.isTagged(excludeTag))
			results.push(tiddler);
	});
	if(field)
		results.sort(function(a,b) {return a[field] &lt; b[field] ? -1 : (a[field] == b[field] ? 0 : +1);});
	return results;
};

// Return array of names of tiddlers that are referred to but not defined
TiddlyWiki.prototype.getMissingLinks = function(sortField)
{
	if(!this.tiddlersUpdated)
		this.updateTiddlers();
	var results = [];
	this.forEachTiddler(function (title,tiddler) {
		if(tiddler.isTagged("excludeMissing") || tiddler.isTagged("systemConfig"))
			return;
		for(var n=0; n&lt;tiddler.links.length;n++) {
			var link = tiddler.links[n];
			if(this.fetchTiddler(link) == null &amp;&amp; !this.isShadowTiddler(link))
				results.pushUnique(link);
		}
	});
	results.sort();
	return results;
};

// Return an array of names of tiddlers that are defined but not referred to
TiddlyWiki.prototype.getOrphans = function()
{
	var results = [];
	this.forEachTiddler(function (title,tiddler) {
		if(this.getReferringTiddlers(title).length == 0 &amp;&amp; !tiddler.isTagged("excludeLists"))
			results.push(title);
	});
	results.sort();
	return results;
};

// Return an array of names of all the shadow tiddlers
TiddlyWiki.prototype.getShadowed = function()
{
	var results = [];
	for(var t in config.shadowTiddlers) {
		if(typeof config.shadowTiddlers[t] == "string")
			results.push(t);
	}
	results.sort();
	return results;
};

// Return an array of tiddlers that have been touched since they were downloaded or created
TiddlyWiki.prototype.getTouched = function()
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		if(tiddler.isTouched())
			results.push(tiddler);
		});
	results.sort();
	return results;
};

// Resolves a Tiddler reference or tiddler title into a Tiddler object, or null if it doesn't exist
TiddlyWiki.prototype.resolveTiddler = function(tiddler)
{
	var t = (typeof tiddler == 'string') ? this.getTiddler(tiddler) : tiddler;
	return t instanceof Tiddler ? t : null;
};

TiddlyWiki.prototype.getLoader = function()
{
	if(!this.loader)
		this.loader = new TW21Loader();
	return this.loader;
};

TiddlyWiki.prototype.getSaver = function()
{
	if(!this.saver)
		this.saver = new TW21Saver();
	return this.saver;
};

// Filter a list of tiddlers
TiddlyWiki.prototype.filterTiddlers = function(filter)
{
	var results = [];
	if(filter) {
		var tiddler;
		var re = /([^ \[\]]+)|(?:\[([ \w]+)\[([^\]]+)\]\])|(?:\[\[([^\]]+)\]\])/mg;
		var match = re.exec(filter);
		while(match) {
			if(match[1]) {
				var title = match[1];
				tiddler = this.fetchTiddler(title);
				if(tiddler) {
					results.push(tiddler);
				} else {
					if(store.isShadowTiddler(title)) {
						tiddler = new Tiddler();
						tiddler.set(title,store.getTiddlerText(title));
						results.push(tiddler);
					}
				}
			} else if(match[2]) {
				if(match[2]=="tag") {
					this.forEachTiddler(function(title,tiddler) {
						if(tiddler.isTagged(match[3]))
							results.push(tiddler);
					});
				}
			} else if(match[4]) {
				tiddler = this.fetchTiddler(match[4]);
				if(tiddler)
					results.push(tiddler);
			}
			match = re.exec(filter);
		}
	}
	return results;
};

// Returns true if path is a valid field name (path),
// i.e. a sequence of identifiers, separated by '.'
TiddlyWiki.isValidFieldName = function(name)
{
	var match = /[a-zA-Z_]\w*(\.[a-zA-Z_]\w*)*/.exec(name);
	return match &amp;&amp; (match[0] == name);
};

// Throws an exception when name is not a valid field name.
TiddlyWiki.checkFieldName = function(name)
{
	if(!TiddlyWiki.isValidFieldName(name))
		throw config.messages.invalidFieldName.format([name]);
};

function StringFieldAccess(n,readOnly)
{
	this.set = readOnly ?
			function(t,v) {if(v != t[n]) throw config.messages.fieldCannotBeChanged.format([n]);} :
			function(t,v) {if(v != t[n]) {t[n] = v; return true;}};
	this.get = function(t) {return t[n];};
}

function DateFieldAccess(n)
{
	this.set = function(t,v) {
		var d = v instanceof Date ? v : Date.convertFromYYYYMMDDHHMM(v);
		if(d != t[n]) {
			t[n] = d; return true;
		}
	};
	this.get = function(t) {return t[n].convertToYYYYMMDDHHMM();};
}

function LinksFieldAccess(n)
{
	this.set = function(t,v) {
		var s = (typeof v == "string") ? v.readBracketedList() : v;
		if(s.toString() != t[n].toString()) {
			t[n] = s; return true;
		}
	};
	this.get = function(t) {return String.encodeTiddlyLinkList(t[n]);};
}

TiddlyWiki.standardFieldAccess = {
	// The set functions return true when setting the data has changed the value.
	"title":    new StringFieldAccess("title",true),
	// Handle the "tiddler" field name as the title
	"tiddler":  new StringFieldAccess("title",true),
	"text":     new StringFieldAccess("text"),
	"modifier": new StringFieldAccess("modifier"),
	"modified": new DateFieldAccess("modified"),
	"created":  new DateFieldAccess("created"),
	"tags":     new LinksFieldAccess("tags")
};

TiddlyWiki.isStandardField = function(name)
{
	return TiddlyWiki.standardFieldAccess[name] != undefined;
};

// Sets the value of the given field of the tiddler to the value.
// Setting an ExtendedField's value to null or undefined removes the field.
// Setting a namespace to undefined removes all fields of that namespace.
// The fieldName is case-insensitive.
// All values will be converted to a string value.
TiddlyWiki.prototype.setValue = function(tiddler,fieldName,value)
{
	TiddlyWiki.checkFieldName(fieldName);
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return;
	fieldName = fieldName.toLowerCase();
	var isRemove = (value === undefined) || (value === null);
	var accessor = TiddlyWiki.standardFieldAccess[fieldName];
	if(accessor) {
		if(isRemove)
			// don't remove StandardFields
			return;
		var h = TiddlyWiki.standardFieldAccess[fieldName];
		if(!h.set(t,value))
			return;
	} else {
		var oldValue = t.fields[fieldName];
		if(isRemove) {
			if(oldValue !== undefined) {
				// deletes a single field
				delete t.fields[fieldName];
			} else {
				// no concrete value is defined for the fieldName
				// so we guess this is a namespace path.
				// delete all fields in a namespace
				var re = new RegExp('^'+fieldName+'\\.');
				var dirty = false;
				for(var n in t.fields) {
					if(n.match(re)) {
						delete t.fields[n];
						dirty = true;
					}
				}
				if(!dirty)
					return;
			}
		} else {
			// the "normal" set case. value is defined (not null/undefined)
			// For convenience provide a nicer conversion Date-&gt;String
			value = value instanceof Date ? value.convertToYYYYMMDDHHMMSSMMM() : String(value);
			if(oldValue == value)
				return;
			t.fields[fieldName] = value;
		}
	}
	// When we are here the tiddler/store really was changed.
	this.notify(t.title,true);
	if(!fieldName.match(/^temp\./))
		this.setDirty(true);
};

// Returns the value of the given field of the tiddler.
// The fieldName is case-insensitive.
// Will only return String values (or undefined).
TiddlyWiki.prototype.getValue = function(tiddler,fieldName)
{
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return undefined;
	fieldName = fieldName.toLowerCase();
	var accessor = TiddlyWiki.standardFieldAccess[fieldName];
	if(accessor) {
		return accessor.get(t);
	}
	return t.fields[fieldName];
};

// Calls the callback function for every field in the tiddler.
// When callback function returns a non-false value the iteration stops
// and that value is returned.
// The order of the fields is not defined.
// @param callback a function(tiddler,fieldName,value).
TiddlyWiki.prototype.forEachField = function(tiddler,callback,onlyExtendedFields)
{
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return undefined;
	var n,result;
	for(n in t.fields) {
		result = callback(t,n,t.fields[n]);
		if(result)
			return result;
		}
	if(onlyExtendedFields)
		return undefined;
	for(n in TiddlyWiki.standardFieldAccess) {
		if(n == "tiddler")
			// even though the "title" field can also be referenced through the name "tiddler"
			// we only visit this field once.
			continue;
		result = callback(t,n,TiddlyWiki.standardFieldAccess[n].get(t));
		if(result)
			return result;
	}
	return undefined;
};

//--
//-- Story functions
//--

function Story(container,idPrefix)
{
	this.container = container;
	this.idPrefix = idPrefix;
	this.highlightRegExp = null;
}

Story.prototype.forEachTiddler = function(fn)
{
	var place = document.getElementById(this.container);
	if(!place)
		return;
	var e = place.firstChild;
	while(e) {
		var n = e.nextSibling;
		var title = e.getAttribute("tiddler");
		fn.call(this,title,e);
		e = n;
	}
};

Story.prototype.displayTiddlers = function(srcElement,titles,template,animate,unused,customFields,toggle)
{
	for(var t = titles.length-1;t&gt;=0;t--)
		this.displayTiddler(srcElement,titles[t],template,animate,unused,customFields);
};

Story.prototype.displayTiddler = function(srcElement,title,template,animate,unused,customFields,toggle)
{
	var place = document.getElementById(this.container);
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem) {
		if(toggle)
			this.closeTiddler(title,true);
		else
			this.refreshTiddler(title,template,false,customFields);
	} else {
		var before = this.positionTiddler(srcElement);
		tiddlerElem = this.createTiddler(place,before,title,template,customFields);
	}
	if(srcElement &amp;&amp; typeof srcElement !== "string") {
		if(config.options.chkAnimate &amp;&amp; (animate == undefined || animate == true) &amp;&amp; anim &amp;&amp; typeof Zoomer == "function" &amp;&amp; typeof Scroller == "function")
			anim.startAnimating(new Zoomer(title,srcElement,tiddlerElem),new Scroller(tiddlerElem));
		else
			window.scrollTo(0,ensureVisible(tiddlerElem));
	}
};

Story.prototype.positionTiddler = function(srcElement)
{
	var place = document.getElementById(this.container);
	var before = null;
	if(typeof srcElement == "string") {
		switch(srcElement) {
			case "top":
				before = place.firstChild;
				break;
			case "bottom":
				before = null;
				break;
		}
	} else {
		var after = this.findContainingTiddler(srcElement);
		if(after == null) {
			before = place.firstChild;
		} else if(after.nextSibling) {
			before = after.nextSibling;
			if(before.nodeType != 1)
				before = null;
		}
	}
	return before;
};

Story.prototype.createTiddler = function(place,before,title,template,customFields)
{
	var tiddlerElem = createTiddlyElement(null,"div",this.idPrefix + title,"tiddler");
	tiddlerElem.setAttribute("refresh","tiddler");
	if(customFields)
		tiddlerElem.setAttribute("tiddlyFields",customFields);
	place.insertBefore(tiddlerElem,before);
	var defaultText = null;
	if(!store.tiddlerExists(title) &amp;&amp; !store.isShadowTiddler(title))
		defaultText = this.loadMissingTiddler(title,customFields,tiddlerElem);
	this.refreshTiddler(title,template,false,customFields,defaultText);
	return tiddlerElem;
};

Story.prototype.loadMissingTiddler = function(title,fields,tiddlerElem)
{
	var tiddler = new Tiddler(title);
	tiddler.fields = typeof fields == "string" ?  fields.decodeHashMap() : (fields ? fields : {});
	var serverType = tiddler.getServerType();
	var host = tiddler.fields['server.host'];
	var workspace = tiddler.fields['server.workspace'];
	if(!serverType | !host)
		return null;
	var sm = new SyncMachine(serverType,{
			start: function() {
				return this.openHost(host,"openWorkspace");
			},
			openWorkspace: function() {
				return this.openWorkspace(workspace,"getTiddler");
			},
			getTiddler: function() {
				return this.getTiddler(title,"gotTiddler");
			},
			gotTiddler: function(tiddler) {
				if(tiddler &amp;&amp; tiddler.text) {
					var downloaded = new Date();
					if(!tiddler.created)
						tiddler.created = downloaded;
					if(!tiddler.modified)
						tiddler.modified = tiddler.created;
					store.saveTiddler(tiddler.title,tiddler.title,tiddler.text,tiddler.modifier,tiddler.modified,tiddler.tags,tiddler.fields,true,tiddler.created);
					autoSaveChanges();
				}
				delete this;
				return true;
			},
			error: function(message) {
				displayMessage("Error loading missing tiddler from %0: %1".format([host,message]));
			}
		});
	sm.go();
	return config.messages.loadingMissingTiddler.format([title,serverType,host,workspace]);
};

Story.prototype.chooseTemplateForTiddler = function(title,template)
{
	if(!template)
		template = DEFAULT_VIEW_TEMPLATE;
	if(template == DEFAULT_VIEW_TEMPLATE || template == DEFAULT_EDIT_TEMPLATE)
		template = config.tiddlerTemplates[template];
	return template;
};

Story.prototype.getTemplateForTiddler = function(title,template,tiddler)
{
	return store.getRecursiveTiddlerText(template,null,10);
};

Story.prototype.refreshTiddler = function(title,template,force,customFields,defaultText)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem) {
		if(tiddlerElem.getAttribute("dirty") == "true" &amp;&amp; !force)
			return tiddlerElem;
		template = this.chooseTemplateForTiddler(title,template);
		var currTemplate = tiddlerElem.getAttribute("template");
		if((template != currTemplate) || force) {
			var tiddler = store.getTiddler(title);
			if(!tiddler) {
				tiddler = new Tiddler();
				if(store.isShadowTiddler(title)) {
					tiddler.set(title,store.getTiddlerText(title),config.views.wikified.shadowModifier,version.date,[],version.date);
				} else {
					var text = template=="EditTemplate" ?
								config.views.editor.defaultText.format([title]) :
								config.views.wikified.defaultText.format([title]);
					text = defaultText ? defaultText : text;
					var fields = customFields ? customFields.decodeHashMap() : null;
					tiddler.set(title,text,config.views.wikified.defaultModifier,version.date,[],version.date,fields);
				}
			}
			tiddlerElem.setAttribute("tags",tiddler.tags.join(" "));
			tiddlerElem.setAttribute("tiddler",title);
			tiddlerElem.setAttribute("template",template);
			var me = this;
			tiddlerElem.onmouseover = this.onTiddlerMouseOver;
			tiddlerElem.onmouseout = this.onTiddlerMouseOut;
			tiddlerElem.ondblclick = this.onTiddlerDblClick;
			tiddlerElem[window.event?"onkeydown":"onkeypress"] = this.onTiddlerKeyPress;
			var html = this.getTemplateForTiddler(title,template,tiddler);
			tiddlerElem.innerHTML = html;
			applyHtmlMacros(tiddlerElem,tiddler);
			if(store.getTaggedTiddlers(title).length &gt; 0)
				addClass(tiddlerElem,"isTag");
			else
				removeClass(tiddlerElem,"isTag");
			if(!store.tiddlerExists(title)) {
				if(store.isShadowTiddler(title))
					addClass(tiddlerElem,"shadow");
				else
					addClass(tiddlerElem,"missing");
			} else {
				removeClass(tiddlerElem,"shadow");
				removeClass(tiddlerElem,"missing");
			}
			if(customFields)
				this.addCustomFields(tiddlerElem,customFields);
			forceReflow();
		}
	}
	return tiddlerElem;
};

Story.prototype.addCustomFields = function(place,customFields)
{
	var fields = customFields.decodeHashMap();
	var w = document.createElement("div");
	w.style.display = "none";
	place.appendChild(w);
	for(var t in fields) {
		var e = document.createElement("input");
		e.setAttribute("type","text");
		e.setAttribute("value",fields[t]);
		w.appendChild(e);
		e.setAttribute("edit",t);
	}
};

Story.prototype.refreshAllTiddlers = function()
{
	var place = document.getElementById(this.container);
	var e = place.firstChild;
	if(!e)
		return;
	this.refreshTiddler(e.getAttribute("tiddler"),e.getAttribute("template"),true);
	while((e = e.nextSibling) != null)
		this.refreshTiddler(e.getAttribute("tiddler"),e.getAttribute("template"),true);
};

Story.prototype.onTiddlerMouseOver = function(e)
{
	if(window.addClass instanceof Function)
		addClass(this,"selected");
};

Story.prototype.onTiddlerMouseOut = function(e)
{
	if(window.removeClass instanceof Function)
		removeClass(this,"selected");
};

Story.prototype.onTiddlerDblClick = function(ev)
{
	var e = ev ? ev : window.event;
	var theTarget = resolveTarget(e);
	if(theTarget &amp;&amp; theTarget.nodeName.toLowerCase() != "input" &amp;&amp; theTarget.nodeName.toLowerCase() != "textarea") {
		if(document.selection &amp;&amp; document.selection.empty)
			document.selection.empty();
		config.macros.toolbar.invokeCommand(this,"defaultCommand",e);
		e.cancelBubble = true;
		if(e.stopPropagation) e.stopPropagation();
		return true;
	} else {
		return false;
	}
};

Story.prototype.onTiddlerKeyPress = function(ev)
{
	var e = ev ? ev : window.event;
	clearMessage();
	var consume = false;
	var title = this.getAttribute("tiddler");
	var target = resolveTarget(e);
	switch(e.keyCode) {
		case 9: // Tab
			if(config.options.chkInsertTabs &amp;&amp; target.tagName.toLowerCase() == "textarea") {
				replaceSelection(target,String.fromCharCode(9));
				consume = true;
			}
			if(config.isOpera) {
				target.onblur = function() {
					this.focus();
					this.onblur = null;
				};
			}
			break;
		case 13: // Ctrl-Enter
		case 10: // Ctrl-Enter on IE PC
		case 77: // Ctrl-Enter is "M" on some platforms
			if(e.ctrlKey) {
				blurElement(this);
				config.macros.toolbar.invokeCommand(this,"defaultCommand",e);
				consume = true;
			}
			break;
		case 27: // Escape
			blurElement(this);
			config.macros.toolbar.invokeCommand(this,"cancelCommand",e);
			consume = true;
			break;
	}
	e.cancelBubble = consume;
	if(consume) {
		if(e.stopPropagation) e.stopPropagation(); // Stop Propagation
		e.returnValue = true; // Cancel The Event in IE
		if(e.preventDefault ) e.preventDefault(); // Cancel The Event in Moz
	}
	return !consume;
};

Story.prototype.getTiddlerField = function(title,field)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	var e = null;
	if(tiddlerElem != null) {
		var children = tiddlerElem.getElementsByTagName("*");
		for(var t=0; t&lt;children.length; t++) {
			var c = children[t];
			if(c.tagName.toLowerCase() == "input" || c.tagName.toLowerCase() == "textarea") {
				if(!e)
					e = c;
				if(c.getAttribute("edit") == field)
					e = c;
			}
		}
	}
	return e;
};

Story.prototype.focusTiddler = function(title,field)
{
	var e = this.getTiddlerField(title,field);
	if(e) {
		e.focus();
		e.select();
	}
};

Story.prototype.blurTiddler = function(title)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null &amp;&amp; tiddlerElem.focus &amp;&amp; tiddlerElem.blur) {
		tiddlerElem.focus();
		tiddlerElem.blur();
	}
};

Story.prototype.setTiddlerField = function(title,tag,mode,field)
{
	var c = story.getTiddlerField(title,field);

	var tags = c.value.readBracketedList();
	tags.setItem(tag,mode);
	c.value = String.encodeTiddlyLinkList(tags);
};

Story.prototype.setTiddlerTag = function(title,tag,mode)
{
	Story.prototype.setTiddlerField(title,tag,mode,"tags");
};

Story.prototype.closeTiddler = function(title,animate,unused)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null) {
		clearMessage();
		this.scrubTiddler(tiddlerElem);
		if(config.options.chkAnimate &amp;&amp; animate &amp;&amp; anim &amp;&amp; typeof Slider == "function")
			anim.startAnimating(new Slider(tiddlerElem,false,null,"all"));
		else {
			removeNode(tiddlerElem);
			forceReflow();
		}
	}
};

Story.prototype.scrubTiddler = function(tiddlerElem)
{
	tiddlerElem.id = null;
};

Story.prototype.setDirty = function(title,dirty)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null)
		tiddlerElem.setAttribute("dirty",dirty ? "true" : "false");
};

Story.prototype.isDirty = function(title)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null)
		return tiddlerElem.getAttribute("dirty") == "true";
	return null;
};

Story.prototype.areAnyDirty = function()
{
	var r = false;
	this.forEachTiddler(function(title,element) {
		if(this.isDirty(title))
			r = true;
	});
	return r;
};

Story.prototype.closeAllTiddlers = function(exclude)
{
	clearMessage();
	this.forEachTiddler(function(title,element) {
		if((title != exclude) &amp;&amp; element.getAttribute("dirty") != "true")
			this.closeTiddler(title);
	});
	window.scrollTo(0,ensureVisible(this.container));
};

Story.prototype.isEmpty = function()
{
	var place = document.getElementById(this.container);
	return place &amp;&amp; place.firstChild == null;
};

Story.prototype.search = function(text,useCaseSensitive,useRegExp)
{
	this.closeAllTiddlers();
	highlightHack = new RegExp(useRegExp ?	 text : text.escapeRegExp(),useCaseSensitive ? "mg" : "img");
	var matches = store.search(highlightHack,"title","excludeSearch");
	var titles = [];
	for(var t=0;t&lt;matches.length;t++)
		titles.push(matches[t].title);
	this.displayTiddlers(null,titles);
	highlightHack = null;
	var q = useRegExp ? "/" : "'";
	if(matches.length &gt; 0)
		displayMessage(config.macros.search.successMsg.format([titles.length.toString(),q + text + q]));
	else
		displayMessage(config.macros.search.failureMsg.format([q + text + q]));
};

Story.prototype.findContainingTiddler = function(e)
{
	while(e &amp;&amp; !hasClass(e,"tiddler"))
		e = e.parentNode;
	return e;
};

Story.prototype.gatherSaveFields = function(e,fields)
{
	if(e &amp;&amp; e.getAttribute) {
		var f = e.getAttribute("edit");
		if(f)
			fields[f] = e.value.replace(/\r/mg,"");
		if(e.hasChildNodes()) {
			var c = e.childNodes;
			for(var t=0; t&lt;c.length; t++)
				this.gatherSaveFields(c[t],fields);
		}
	}
};

Story.prototype.hasChanges = function(title)
{
	var e = document.getElementById(this.idPrefix + title);
	if(e != null) {
		var fields = {};
		this.gatherSaveFields(e,fields);
		var tiddler = store.fetchTiddler(title);
		if(!tiddler)
			return false;
		for(var n in fields) {
			if(store.getValue(title,n) != fields[n])
				return true;
		}
	}
	return false;
};

Story.prototype.saveTiddler = function(title,minorUpdate)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null) {
		var fields = {};
		this.gatherSaveFields(tiddlerElem,fields);
		var newTitle = fields.title ? fields.title : title;
		if(store.tiddlerExists(newTitle) &amp;&amp; newTitle != title) {
			if(!confirm(config.messages.overwriteWarning.format([newTitle.toString()])))
				return null;
		}
		if(newTitle != title)
			this.closeTiddler(newTitle,false);
		tiddlerElem.id = this.idPrefix + newTitle;
		tiddlerElem.setAttribute("tiddler",newTitle);
		tiddlerElem.setAttribute("template",DEFAULT_VIEW_TEMPLATE);
		tiddlerElem.setAttribute("dirty","false");
		if(config.options.chkForceMinorUpdate)
			minorUpdate = !minorUpdate;
		if(!store.tiddlerExists(newTitle))
			minorUpdate = false;
		var newDate = new Date();
		var extendedFields = store.tiddlerExists(newTitle) ? store.fetchTiddler(newTitle).fields : (newTitle!=title &amp;&amp; store.tiddlerExists(title) ? store.fetchTiddler(title).fields : {});
		for(var n in fields) {
			if(!TiddlyWiki.isStandardField(n))
				extendedFields[n] = fields[n];
		}
		var tiddler = store.saveTiddler(title,newTitle,fields.text,minorUpdate ? undefined : config.options.txtUserName,minorUpdate ? undefined : newDate,fields.tags,extendedFields);
		autoSaveChanges(null,[tiddler]);
		return newTitle;
	}
	return null;
};

Story.prototype.permaView = function()
{
	var links = [];
	this.forEachTiddler(function(title,element) {
		links.push(String.encodeTiddlyLink(title));
	});
	var t = encodeURIComponent(links.join(" "));
	if(t == "")
		t = "#";
	if(window.location.hash != t)
		window.location.hash = t;
};

//--
//-- Backstage
//--

var backstage = {
	area: null,
	toolbar: null,
	button: null,
	showButton: null,
	hideButton: null,
	cloak: null,
	panel: null,
	panelBody: null,
	panelFooter: null,
	currTabName: null,
	currTabElem: null,
	content: null,

	init: function() {
		var cmb = config.messages.backstage;
		this.area = document.getElementById("backstageArea");
		this.toolbar = document.getElementById("backstageToolbar");
		this.button = document.getElementById("backstageButton");
		this.button.style.display = "block";
		var t = cmb.open.text + " " + glyph("bentArrowLeft");
		this.showButton = createTiddlyButton(this.button,t,cmb.open.tooltip,
						function (e) {backstage.show(); return false;},null,"backstageShow");
		t = glyph("bentArrowRight") + " " + cmb.close.text;
		this.hideButton = createTiddlyButton(this.button,t,cmb.close.tooltip,
						function (e) {backstage.hide(); return false;},null,"backstageHide");
		this.cloak = document.getElementById("backstageCloak");
		this.panel = document.getElementById("backstagePanel");
		this.panelFooter = createTiddlyElement(this.panel,"div",null,"backstagePanelFooter");
		this.panelBody = createTiddlyElement(this.panel,"div",null,"backstagePanelBody");
		this.cloak.onmousedown = function(e) {
			backstage.switchTab(null);
		};
		createTiddlyText(this.toolbar,cmb.prompt);
		for(t=0; t&lt;config.backstageTasks.length; t++) {
			var taskName = config.backstageTasks[t];
			var task = config.tasks[taskName];
			var handler = task.action ? this.onClickCommand : this.onClickTab;
			var text = task.text + (task.action ? "" : glyph("downTriangle"));
			var btn = createTiddlyButton(this.toolbar,text,task.tooltip,handler,"backstageTab");
			btn.setAttribute("task",taskName);
			addClass(btn,task.action ? "backstageAction" : "backstageTask");
			}
		this.content = document.getElementById("contentWrapper");
		if(config.options.chkBackstage)
			this.show();
		else
			this.hide();
	},

	isVisible: function() {
		return this.area ? this.area.style.display == "block" : false;
	},

	show: function() {
		this.area.style.display = "block";
		if(anim &amp;&amp; config.options.chkAnimate) {
			backstage.toolbar.style.left = findWindowWidth() + "px";
			var p = [
				{style: "left", start: findWindowWidth(), end: 0, template: "%0px"}
			];
			anim.startAnimating(new Morpher(backstage.toolbar,config.animDuration,p));
		} else {
			backstage.area.style.left = "0px";
		}
		this.showButton.style.display = "none";
		this.hideButton.style.display = "block";
		config.options.chkBackstage = true;
		saveOptionCookie("chkBackstage");
		addClass(this.content,"backstageVisible");
	},

	hide: function() {
		if(this.currTabElem) {
			this.switchTab(null);
		} else {
			backstage.toolbar.style.left = "0px";
			if(anim &amp;&amp; config.options.chkAnimate) {
				var p = [
					{style: "left", start: 0, end: findWindowWidth(), template: "%0px"}
				];
				var c = function(element,properties) {backstage.area.style.display = "none";};
				anim.startAnimating(new Morpher(backstage.toolbar,config.animDuration,p,c));
			} else {
				this.area.style.display = "none";
			}
			this.showButton.style.display = "block";
			this.hideButton.style.display = "none";
			config.options.chkBackstage = false;
			saveOptionCookie("chkBackstage");
			removeClass(this.content,"backstageVisible");
		}
	},

	onClickCommand: function(e) {
		var task = config.tasks[this.getAttribute("task")];
		displayMessage(task);
		if(task.action) {
			backstage.switchTab(null);
			task.action();
		}
		return false;
	},

	onClickTab: function(e) {
		backstage.switchTab(this.getAttribute("task"));
		return false;
	},

	// Switch to a given tab, or none if null is passed
	switchTab: function(tabName) {
		var tabElem = null;
		var e = this.toolbar.firstChild;
		while(e)
			{
			if(e.getAttribute &amp;&amp; e.getAttribute("task") == tabName)
				tabElem = e;
			e = e.nextSibling;
			}
		if(tabName == backstage.currTabName)
			return;
		if(backstage.currTabElem) {
			removeClass(this.currTabElem,"backstageSelTab");
		}
		if(tabElem &amp;&amp; tabName) {
			backstage.preparePanel();
			addClass(tabElem,"backstageSelTab");
			var task = config.tasks[tabName];
			wikify(task.content,backstage.panelBody,null,null);
			backstage.showPanel();
		} else if(backstage.currTabElem) {
			backstage.hidePanel();
		}
		backstage.currTabName = tabName;
		backstage.currTabElem = tabElem;
	},

	isPanelVisible: function() {
		return backstage.panel ? backstage.panel.style.display == "block" : false;
	},

	preparePanel: function() {
		backstage.cloak.style.height = findWindowHeight() + "px";
		backstage.cloak.style.display = "block";
		removeChildren(backstage.panelBody);
		return backstage.panelBody;
	},

	showPanel: function() {
		backstage.panel.style.display = "block";
		if(anim &amp;&amp; config.options.chkAnimate) {
			backstage.panel.style.top = (-backstage.panel.offsetHeight) + "px";
			var p = [
				{style: "top", start: -backstage.panel.offsetHeight, end: 0, template: "%0px"}
			];
			anim.startAnimating(new Morpher(backstage.panel,config.animDuration,p),new Scroller(backstage.panel,false));
		} else {
			backstage.panel.style.top = "0px";
		}
		return backstage.panelBody;
	},

	hidePanel: function() {
		backstage.currTabName = null;
		backstage.currTabElem = null;
		if(anim &amp;&amp; config.options.chkAnimate) {
			var p = [
				{style: "top", start: 0, end: -(backstage.panel.offsetHeight), template: "%0px"},
				{style: "display", atEnd: "none"}
			];
			var c = function(element,properties) {backstage.cloak.style.display = "none";};
			anim.startAnimating(new Morpher(backstage.panel,config.animDuration,p,c));
		 } else {
			backstage.panel.style.display = "none";
			backstage.cloak.style.display = "none";
		}
	}
};

config.macros.backstage = {};

config.macros.backstage.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var backstageTask = config.tasks[params[0]];
	if(backstageTask)
		createTiddlyButton(place,backstageTask.text,backstageTask.tooltip,function(e) {backstage.switchTab(params[0]); return false;});
};

//--
//-- ImportTiddlers macro
//--

config.macros.importTiddlers.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(readOnly) {
		createTiddlyElement(place,"div",null,"marked",this.readOnlyWarning);
		return;
	}
	var w = new Wizard();
	w.createWizard(place,this.wizardTitle);
	this.restart(w);
};

config.macros.importTiddlers.onCancel = function(e)
{
	var wizard = new Wizard(this);
	var place = wizard.clear();
	config.macros.importTiddlers.restart(wizard);
	return false;
};

config.macros.importTiddlers.restart = function(wizard)
{
	wizard.addStep(this.step1Title,this.step1Html);
	var s = wizard.getElement("selTypes");
	for(var t in config.adaptors) {
		var e = createTiddlyElement(s,"option",null,null,t);
		e.value = t;
	}
	s = wizard.getElement("selFeeds");
	var feeds = this.getFeeds();
	for(t in feeds) {
		e = createTiddlyElement(s,"option",null,null,t);
		e.value = t;
	}
	wizard.setValue("feeds",feeds);
	s.onchange = config.macros.importTiddlers.onFeedChange;
	var fileInput = wizard.getElement("txtBrowse");
	fileInput.onchange = config.macros.importTiddlers.onBrowseChange;
	fileInput.onkeyup = config.macros.importTiddlers.onBrowseChange;
	wizard.setButtons([{caption: this.openLabel, tooltip: this.openPrompt, onClick: config.macros.importTiddlers.onOpen}]);
};

config.macros.importTiddlers.getFeeds = function()
{
	var feeds = {};
	var tagged = store.getTaggedTiddlers("systemServer","title");
	for(var t=0; t&lt;tagged.length; t++) {
		var title = tagged[t].title;
		var serverType = store.getTiddlerSlice(title,"Type");
		if(!serverType)
			serverType = "file";
		feeds[title] = {title: title,
						url: store.getTiddlerSlice(title,"URL"),
						workspace: store.getTiddlerSlice(title,"Workspace"),
						workspaceList: store.getTiddlerSlice(title,"WorkspaceList"),
						tiddlerFilter: store.getTiddlerSlice(title,"TiddlerFilter"),
						serverType: serverType,
						description: store.getTiddlerSlice(title,"Description")};
	}
	return feeds;
};

config.macros.importTiddlers.onFeedChange = function(e)
{
	var wizard = new Wizard(this);
	var selTypes = wizard.getElement("selTypes");
	var fileInput = wizard.getElement("txtPath");
	var feeds = wizard.getValue("feeds");
	var f = feeds[this.value];
	if(f) {
		selTypes.value = f.serverType;
		fileInput.value = f.url;
		this.selectedIndex = 0;
		wizard.setValue("feedName",f.serverType);
		wizard.setValue("feedHost",f.url);
		wizard.setValue("feedWorkspace",f.workspace);
		wizard.setValue("feedWorkspaceList",f.workspaceList);
		wizard.setValue("feedTiddlerFilter",f.tiddlerFilter);
	}
	return false;
};

config.macros.importTiddlers.onBrowseChange = function(e)
{
	var wizard = new Wizard(this);
	var fileInput = wizard.getElement("txtPath");
	fileInput.value = "file://" + this.value;
	var serverType = wizard.getElement("selTypes");
	serverType.value = "file";
	return false;
};

config.macros.importTiddlers.onOpen = function(e)
{
	var wizard = new Wizard(this);
	var fileInput = wizard.getElement("txtPath");
	var url = fileInput.value;
	var serverType = wizard.getElement("selTypes").value;
	var adaptor = new config.adaptors[serverType];
	wizard.setValue("adaptor",adaptor);
	wizard.setValue("serverType",serverType);
	wizard.setValue("host",url);
	var ret = adaptor.openHost(url,null,wizard,config.macros.importTiddlers.onOpenHost);
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusOpenHost);
	return false;
};

config.macros.importTiddlers.onOpenHost = function(context,wizard)
{
	var adaptor = wizard.getValue("adaptor");
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onOpenHost: " + context.statusText);
	var ret = adaptor.getWorkspaceList(context,wizard,config.macros.importTiddlers.onGetWorkspaceList);
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusGetWorkspaceList);
};

config.macros.importTiddlers.onGetWorkspaceList = function(context,wizard)
{
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onGetWorkspaceList: " + context.statusText);
	wizard.addStep(config.macros.importTiddlers.step2Title,config.macros.importTiddlers.step2Html);
	var s = wizard.getElement("selWorkspace");
	s.onchange = config.macros.importTiddlers.onWorkspaceChange;
	for(var t=0; t&lt;context.workspaces.length; t++) {
		var e = createTiddlyElement(s,"option",null,null,context.workspaces[t].title);
		e.value = context.workspaces[t].title;
	}
	var workspaceList = wizard.getValue("feedWorkspaceList");
	if(workspaceList) {
		var list = workspaceList.parseParams("workspace",null,false,true);
		for(var n=1; n&lt;list.length; n++) {
			if(context.workspaces.findByField("title",list[n].value) == null) {
				e = createTiddlyElement(s,"option",null,null,list[n].value);
				e.value = list[n].value;
			}
		}
	}
	var workspace = wizard.getValue("feedWorkspace");
	if(workspace) {
		t = wizard.getElement("txtWorkspace");
		t.value = workspace;
	}
	wizard.setValue("context",context);
	wizard.setButtons([{caption: config.macros.importTiddlers.openLabel, tooltip: config.macros.importTiddlers.openPrompt, onClick: config.macros.importTiddlers.onChooseWorkspace}]);
};

config.macros.importTiddlers.onWorkspaceChange = function(e)
{
	var wizard = new Wizard(this);
	var t = wizard.getElement("txtWorkspace");
	t.value  = this.value;
	this.selectedIndex = 0;
	return false;
};

config.macros.importTiddlers.onChooseWorkspace = function(e)
{
	var wizard = new Wizard(this);
	var adaptor = wizard.getValue("adaptor");
	var workspace = wizard.getElement("txtWorkspace").value;
	wizard.setValue("workspace",workspace);
	var context = wizard.getValue("context");
	var ret = adaptor.openWorkspace(workspace,context,wizard,config.macros.importTiddlers.onOpenWorkspace);
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusOpenWorkspace);
	return false;
};

config.macros.importTiddlers.onOpenWorkspace = function(context,wizard)
{
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onOpenWorkspace: " + context.statusText);
	var adaptor = wizard.getValue("adaptor");
	var ret = adaptor.getTiddlerList(context,wizard,config.macros.importTiddlers.onGetTiddlerList,wizard.getValue("feedTiddlerFilter"));
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusGetTiddlerList);
};

config.macros.importTiddlers.onGetTiddlerList = function(context,wizard)
{
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onGetTiddlerList: " + context.statusText);
	// Extract data for the listview
	var listedTiddlers = [];
	if(context.tiddlers) {
		for(var n=0; n&lt;context.tiddlers.length; n++) {
			var tiddler = context.tiddlers[n];
			listedTiddlers.push({
				title: tiddler.title,
				modified: tiddler.modified,
				modifier: tiddler.modifier,
				text: tiddler.text ? wikifyPlainText(tiddler.text,100) : "",
				tags: tiddler.tags,
				size: tiddler.text ? tiddler.text.length : 0,
				tiddler: tiddler
			});
		}
	}
	listedTiddlers.sort(function(a,b) {return a.title &lt; b.title ? -1 : (a.title == b.title ? 0 : +1);});
	// Display the listview
	wizard.addStep(config.macros.importTiddlers.step3Title,config.macros.importTiddlers.step3Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	var listView = ListView.create(listWrapper,listedTiddlers,config.macros.importTiddlers.listViewTemplate);
	wizard.setValue("listView",listView);
	var txtSaveTiddler = wizard.getElement("txtSaveTiddler");
	txtSaveTiddler.value = config.macros.importTiddlers.generateSystemServerName(wizard);
	wizard.setButtons([
			{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel},
			{caption: config.macros.importTiddlers.importLabel, tooltip: config.macros.importTiddlers.importPrompt, onClick:  config.macros.importTiddlers.doImport}
		]);
};

config.macros.importTiddlers.generateSystemServerName = function(wizard)
{
	var serverType = wizard.getValue("serverType");
	var host = wizard.getValue("host");
	var workspace = wizard.getValue("workspace");
	var pattern = config.macros.importTiddlers[workspace ? "systemServerNamePattern" : "systemServerNamePatternNoWorkspace"];
	return pattern.format([serverType,host,workspace]);
};

config.macros.importTiddlers.saveServerTiddler = function(wizard)
{
	var txtSaveTiddler = wizard.getElement("txtSaveTiddler").value;
	if(store.tiddlerExists(txtSaveTiddler)) {
		if(!confirm(config.macros.importTiddlers.confirmOverwriteSaveTiddler.format([txtSaveTiddler])))
			return;
		store.suspendNotifications();
		store.removeTiddler(txtSaveTiddler);
		store.resumeNotifications();
	}
	var serverType = wizard.getValue("serverType");
	var host = wizard.getValue("host");
	var workspace = wizard.getValue("workspace");
	var text = config.macros.importTiddlers.serverSaveTemplate.format([serverType,host,workspace]);
	store.saveTiddler(txtSaveTiddler,txtSaveTiddler,text,config.macros.importTiddlers.serverSaveModifier,new Date(),["systemServer"]);
};

config.macros.importTiddlers.doImport = function(e)
{
	var wizard = new Wizard(this);
	if(wizard.getElement("chkSave").checked)
		config.macros.importTiddlers.saveServerTiddler(wizard);
	var chkSync = wizard.getElement("chkSync").checked;
	wizard.setValue("sync",chkSync);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	var adaptor = wizard.getValue("adaptor");
	var overwrite = new Array();
	var t;
	for(t=0; t&lt;rowNames.length; t++) {
		if(store.tiddlerExists(rowNames[t]))
			overwrite.push(rowNames[t]);
	}
	if(overwrite.length &gt; 0) {
		if(!confirm(config.macros.importTiddlers.confirmOverwriteText.format([overwrite.join(", ")])))
			return false;
	}
	wizard.addStep(config.macros.importTiddlers.step4Title.format([rowNames.length]),config.macros.importTiddlers.step4Html);
	for(t=0; t&lt;rowNames.length; t++) {
		var link = document.createElement("div");
		createTiddlyLink(link,rowNames[t],true);
		var place = wizard.getElement("markReport");
		place.parentNode.insertBefore(link,place);
	}
	wizard.setValue("remainingImports",rowNames.length);
	wizard.setButtons([
			{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}
		],config.macros.importTiddlers.statusDoingImport);
	for(t=0; t&lt;rowNames.length; t++) {
		var context = {};
		context.allowSynchronous = true;
		var inbound = adaptor.getTiddler(rowNames[t],context,wizard,config.macros.importTiddlers.onGetTiddler);
	}
	return false;
};

config.macros.importTiddlers.onGetTiddler = function(context,wizard)
{
	if(!context.status)
		displayMessage("Error in importTiddlers.onGetTiddler: " + context.statusText);
	var tiddler = context.tiddler;
	store.suspendNotifications();
	store.saveTiddler(tiddler.title, tiddler.title, tiddler.text, tiddler.modifier, tiddler.modified, tiddler.tags, tiddler.fields, true, tiddler.created);
	if(!wizard.getValue("sync")) {
		store.setValue(tiddler.title,'server',null);
	}
	store.resumeNotifications();
	if(!context.isSynchronous)
		store.notify(tiddler.title,true);
	var remainingImports = wizard.getValue("remainingImports")-1;
	wizard.setValue("remainingImports",remainingImports);
	if(remainingImports == 0) {
		if(context.isSynchronous) {
			store.notifyAll();
			refreshDisplay();
		}
		wizard.setButtons([
				{caption: config.macros.importTiddlers.doneLabel, tooltip: config.macros.importTiddlers.donePrompt, onClick: config.macros.importTiddlers.onCancel}
			],config.macros.importTiddlers.statusDoneImport);
		autoSaveChanges();
	}
};

//--
//-- Sync macro
//--

// Synchronisation handlers
config.syncers = {};

// Sync state.
var currSync = null;

// sync macro
config.macros.sync.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(!wikifier.isStatic)
		this.startSync(place);
};

config.macros.sync.startSync = function(place)
{
	if(currSync)
		config.macros.sync.cancelSync();
	currSync = {};
	currSync.syncList = this.getSyncableTiddlers();
	this.createSyncTasks();
	this.preProcessSyncableTiddlers();
	var wizard = new Wizard();
	currSync.wizard = wizard;
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	currSync.listView = ListView.create(listWrapper,currSync.syncList,this.listViewTemplate);
	this.processSyncableTiddlers();
	wizard.setButtons([
			{caption: this.syncLabel, tooltip: this.syncPrompt, onClick: this.doSync}
		]);
};

config.macros.sync.getSyncableTiddlers = function()
{
	var list = [];
	store.forEachTiddler(function(title,tiddler) {
		var syncItem = {};
		syncItem.serverType = tiddler.getServerType();
		syncItem.serverHost = tiddler.fields['server.host'];
		syncItem.serverWorkspace = tiddler.fields['server.workspace'];
		syncItem.tiddler = tiddler;
		syncItem.title = tiddler.title;
		syncItem.isTouched = tiddler.isTouched();
		syncItem.selected = syncItem.isTouched;
		syncItem.syncStatus = config.macros.sync.syncStatusList[syncItem.isTouched ? "changedLocally" : "none"];
		syncItem.status = syncItem.syncStatus.text;
		if(syncItem.serverType &amp;&amp; syncItem.serverHost)
			list.push(syncItem);
		});
	list.sort(function(a,b) {return a.title &lt; b.title ? -1 : (a.title == b.title ? 0 : +1);});
	return list;
};

config.macros.sync.preProcessSyncableTiddlers = function()
{
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		si = currSync.syncList[t];
		var ti = si.syncTask.syncMachine.generateTiddlerInfo(si.tiddler);
		si.serverUrl = ti.uri;
	}
};

config.macros.sync.processSyncableTiddlers = function()
{
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		si = currSync.syncList[t];
		si.rowElement.style.backgroundColor = si.syncStatus.color;
	}
};

config.macros.sync.createSyncTasks = function()
{
	currSync.syncTasks = [];
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		var si = currSync.syncList[t];
		var r = null;
		for(var st=0; st&lt;currSync.syncTasks.length; st++) {
			var cst = currSync.syncTasks[st];
			if(si.serverType == cst.serverType &amp;&amp; si.serverHost == cst.serverHost &amp;&amp; si.serverWorkspace == cst.serverWorkspace)
				r = cst;
		}
		if(r == null) {
			si.syncTask = this.createSyncTask(si);
			currSync.syncTasks.push(si.syncTask);
		} else {
			si.syncTask = r;
			r.syncItems.push(si);
		}
	}
};

config.macros.sync.createSyncTask = function(syncItem)
{
	var st = {};
	st.serverType = syncItem.serverType;
	st.serverHost = syncItem.serverHost;
	st.serverWorkspace = syncItem.serverWorkspace;
	st.syncItems = [syncItem];
	st.syncMachine = new SyncMachine(st.serverType,{
		start: function() {
			return this.openHost(st.serverHost,"openWorkspace");
		},
		openWorkspace: function() {
			return this.openWorkspace(st.serverWorkspace,"getTiddlerList");
		},
		getTiddlerList: function() {
			return this.getTiddlerList("gotTiddlerList");
		},
		gotTiddlerList: function(tiddlers) {
			for(var t=0; t&lt;st.syncItems.length; t++) {
				var si = st.syncItems[t];
				var f = tiddlers.findByField("title",si.title);
				if(f !== null) {
					if(tiddlers[f].fields['server.page.revision'] &gt; si.tiddler.fields['server.page.revision']) {
						si.syncStatus = config.macros.sync.syncStatusList[si.isTouched ? 'changedBoth' : 'changedServer'];
					}
				} else {
					si.syncStatus = config.macros.sync.syncStatusList.notFound;
				}
				config.macros.sync.updateSyncStatus(si);
			}
		},
		getTiddler: function(title) {
			return this.getTiddler(title,"onGetTiddler");
		},
		onGetTiddler: function(tiddler) {
			var syncItem = st.syncItems.findByField("title",tiddler.title);
			if(syncItem !== null) {
				syncItem = st.syncItems[syncItem];
				store.saveTiddler(tiddler.title, tiddler.title, tiddler.text, tiddler.modifier, tiddler.modified, tiddler.tags, tiddler.fields, true, tiddler.created);
				syncItem.syncStatus = config.macros.sync.syncStatusList.gotFromServer;
				config.macros.sync.updateSyncStatus(syncItem);
			}
		},
		putTiddler: function(tiddler) {
			return this.putTiddler(tiddler,"onPutTiddler");
		},
		onPutTiddler: function(tiddler) {
			var syncItem = st.syncItems.findByField("title",tiddler.title);
			if(syncItem !== null) {
				syncItem = st.syncItems[syncItem];
				store.resetTiddler(tiddler.title);
				syncItem.syncStatus = config.macros.sync.syncStatusList.putToServer;
				config.macros.sync.updateSyncStatus(syncItem);
			}
		}
	});
	st.syncMachine.go();
	return st;
};

config.macros.sync.updateSyncStatus = function(syncItem)
{
	var e = syncItem.colElements["status"];
	removeChildren(e);
	createTiddlyText(e,syncItem.syncStatus.text);
	syncItem.rowElement.style.backgroundColor = syncItem.syncStatus.color;
};

config.macros.sync.doSync = function(e)
{
	var rowNames = ListView.getSelectedRows(currSync.listView);
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		var si = currSync.syncList[t];
		if(rowNames.indexOf(si.title) != -1) {
			config.macros.sync.doSyncItem(si);
		}
	}
	return false;
};

config.macros.sync.doSyncItem = function(syncItem)
{
	var r = true;
	var sl = config.macros.sync.syncStatusList;
	switch(syncItem.syncStatus) {
		case sl.changedServer:
			r = syncItem.syncTask.syncMachine.go("getTiddler",syncItem.title);
			break;
		case sl.notFound:
		case sl.changedLocally:
		case sl.changedBoth:
			r = syncItem.syncTask.syncMachine.go("putTiddler",syncItem.tiddler);
			break;
		default:
			break;
	}
	if(r !== true)
		displayMessage("Error in doSyncItem: " + r);
};

config.macros.sync.cancelSync = function()
{
	currSync = null;
};

function SyncMachine(serverType,steps)
{
	this.serverType = serverType;
	this.adaptor = new config.adaptors[serverType];
	this.steps = steps;
}

SyncMachine.prototype.go = function(step,varargs)
{
	if(!step)
		step = "start";
	var h = this.steps[step];
	if(!h)
		return null;
	var a = [];
	for(var t=1; t&lt;arguments.length; t++)
		a.push(arguments[t]);
	var r = h.apply(this,a);
	if(typeof r == "string")
		this.invokeError(r);
	return r;
};

SyncMachine.prototype.invokeError = function(message)
{
	if(this.steps.error)
		this.steps.error(message);
};

SyncMachine.prototype.openHost = function(host,nextStep)
{
	var me = this;
	return me.adaptor.openHost(host,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep);
	});
};

SyncMachine.prototype.getWorkspaceList = function(nextStep)
{
	var me = this;
	return me.adaptor.getWorkspaceList(null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,context.workspaces);
	});
};

SyncMachine.prototype.openWorkspace = function(workspace,nextStep)
{
	var me = this;
	return me.adaptor.openWorkspace(workspace,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep);
	});
};

SyncMachine.prototype.getTiddlerList = function(nextStep)
{
	var me = this;
	return me.adaptor.getTiddlerList(null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,context.tiddlers);
	});
};

SyncMachine.prototype.generateTiddlerInfo = function(tiddler)
{
	return this.adaptor.generateTiddlerInfo(tiddler);
};

SyncMachine.prototype.getTiddler = function(title,nextStep)
{
	var me = this;
	return me.adaptor.getTiddler(title,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,context.tiddler);
	});
};

SyncMachine.prototype.putTiddler = function(tiddler,nextStep)
{
	var me = this;
	return me.adaptor.putTiddler(tiddler,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,tiddler);
	});
};

//--
//-- Manager UI for groups of tiddlers
//--

config.macros.plugins.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var wizard = new Wizard();
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	listWrapper.setAttribute("refresh","macro");
	listWrapper.setAttribute("macroName","plugins");
	listWrapper.setAttribute("params",paramString);
	this.refresh(listWrapper,paramString);
};

config.macros.plugins.refresh = function(listWrapper,params)
{
	var wizard = new Wizard(listWrapper);
	var selectedRows = [];
	ListView.forEachSelector(listWrapper,function(e,rowName) {
			if(e.checked)
				selectedRows.push(e.getAttribute("rowName"));
		});
	removeChildren(listWrapper);
	params = params.parseParams("anon");
	var plugins = installedPlugins.slice(0);
	var t,tiddler,p;
	var configTiddlers = store.getTaggedTiddlers("systemConfig");
	for(t=0; t&lt;configTiddlers.length; t++) {
		tiddler = configTiddlers[t];
		if(plugins.findByField("title",tiddler.title) == null) {
			p = getPluginInfo(tiddler);
			p.executed = false;
			p.log.splice(0,0,this.skippedText);
			plugins.push(p);
		}
	}
	for(t=0; t&lt;plugins.length; t++) {
		p = plugins[t];
		p.size = p.tiddler.text ? p.tiddler.text.length : 0;
		p.forced = p.tiddler.isTagged("systemConfigForce");
		p.disabled = p.tiddler.isTagged("systemConfigDisable");
		p.Selected = selectedRows.indexOf(plugins[t].title) != -1;
	}
	if(plugins.length == 0) {
		createTiddlyElement(listWrapper,"em",null,null,this.noPluginText);
		wizard.setButtons([]);
	} else {
		var listView = ListView.create(listWrapper,plugins,this.listViewTemplate,this.onSelectCommand);
		wizard.setValue("listView",listView);
		wizard.setButtons([
				{caption: config.macros.plugins.removeLabel, tooltip: config.macros.plugins.removePrompt, onClick:  config.macros.plugins.doRemoveTag},
				{caption: config.macros.plugins.deleteLabel, tooltip: config.macros.plugins.deletePrompt, onClick:  config.macros.plugins.doDelete}
			]);
	}
};

config.macros.plugins.doRemoveTag = function(e)
{
	var wizard = new Wizard(this);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	if(rowNames.length == 0) {
		alert(config.messages.nothingSelected);
	} else {
		for(var t=0; t&lt;rowNames.length; t++)
			store.setTiddlerTag(rowNames[t],false,"systemConfig");
	}
};

config.macros.plugins.doDelete = function(e)
{
	var wizard = new Wizard(this);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	if(rowNames.length == 0) {
		alert(config.messages.nothingSelected);
	} else {
		if(confirm(config.macros.plugins.confirmDeleteText.format([rowNames.join(", ")]))) {
			for(t=0; t&lt;rowNames.length; t++) {
				store.removeTiddler(rowNames[t]);
				story.closeTiddler(rowNames[t],true);
			}
		}
	}
};

//--
//-- Message area
//--

function getMessageDiv()
{
	var msgArea = document.getElementById("messageArea");
	if(!msgArea)
		return null;
	if(!msgArea.hasChildNodes())
		createTiddlyButton(createTiddlyElement(msgArea,"div",null,"messageToolbar"),
			config.messages.messageClose.text,
			config.messages.messageClose.tooltip,
			clearMessage);
	msgArea.style.display = "block";
	return createTiddlyElement(msgArea,"div");
}

function displayMessage(text,linkText)
{
	var e = getMessageDiv();
	if(!e) {
		alert(text);
		return;
	}
	if(linkText) {
		var link = createTiddlyElement(e,"a",null,null,text);
		link.href = linkText;
		link.target = "_blank";
	} else {
		e.appendChild(document.createTextNode(text));
	}
}

function clearMessage()
{
	var msgArea = document.getElementById("messageArea");
	if(msgArea) {
		removeChildren(msgArea);
		msgArea.style.display = "none";
	}
	return false;
}

//--
//-- Refresh mechanism
//--

config.refreshers = {
	link: function(e,changeList)
		{
		var title = e.getAttribute("tiddlyLink");
		refreshTiddlyLink(e,title);
		return true;
		},

	tiddler: function(e,changeList)
		{
		var title = e.getAttribute("tiddler");
		var template = e.getAttribute("template");
		if(changeList &amp;&amp; changeList.indexOf(title) != -1 &amp;&amp; !story.isDirty(title))
			story.refreshTiddler(title,template,true);
		else
			refreshElements(e,changeList);
		return true;
		},

	content: function(e,changeList)
		{
		var title = e.getAttribute("tiddler");
		var force = e.getAttribute("force");
		if(force != null || changeList == null || changeList.indexOf(title) != -1) {
			removeChildren(e);
			wikify(store.getTiddlerText(title,title),e,null);
			return true;
		} else
			return false;
		},

	macro: function(e,changeList)
		{
		var macro = e.getAttribute("macroName");
		var params = e.getAttribute("params");
		if(macro)
			macro = config.macros[macro];
		if(macro &amp;&amp; macro.refresh)
			macro.refresh(e,params);
		return true;
		}
};

function refreshElements(root,changeList)
{
	var nodes = root.childNodes;
	for(var c=0; c&lt;nodes.length; c++) {
		var e = nodes[c], type = null;
		if(e.getAttribute  &amp;&amp; (e.tagName ? e.tagName != "IFRAME" : true))
			type = e.getAttribute("refresh");
		var refresher = config.refreshers[type];
		var refreshed = false;
		if(refresher != undefined)
			refreshed = refresher(e,changeList);
		if(e.hasChildNodes() &amp;&amp; !refreshed)
			refreshElements(e,changeList);
	}
}

function applyHtmlMacros(root,tiddler)
{
	var e = root.firstChild;
	while(e) {
		var nextChild = e.nextSibling;
		if(e.getAttribute) {
			var macro = e.getAttribute("macro");
			if(macro) {
				var params = "";
				var p = macro.indexOf(" ");
				if(p != -1) {
					params = macro.substr(p+1);
					macro = macro.substr(0,p);
				}
				invokeMacro(e,macro,params,null,tiddler);
			}
		}
		if(e.hasChildNodes())
			applyHtmlMacros(e,tiddler);
		e = nextChild;
	}
}

function refreshPageTemplate(title)
{
	var stash = createTiddlyElement(document.body,"div");
	stash.style.display = "none";
	var display = document.getElementById("tiddlerDisplay");
	var nodes,t;
	if(display) {
		nodes = display.childNodes;
		for(t=nodes.length-1; t&gt;=0; t--)
			stash.appendChild(nodes[t]);
	}
	var wrapper = document.getElementById("contentWrapper");
	if(!title)
		title = "PageTemplate";
	var html = store.getRecursiveTiddlerText(title,null,10);
	wrapper.innerHTML = html;
	applyHtmlMacros(wrapper);
	refreshElements(wrapper);
	display = document.getElementById("tiddlerDisplay");
	removeChildren(display);
	if(!display)
		display = createTiddlyElement(wrapper,"div","tiddlerDisplay");
	nodes = stash.childNodes;
	for(t=nodes.length-1; t&gt;=0; t--)
		display.appendChild(nodes[t]);
	removeNode(stash);
}

function refreshDisplay(hint)
{
	if(typeof hint == "string")
		hint = [hint];
	var e = document.getElementById("contentWrapper");
	refreshElements(e,hint);
	if(backstage.isPanelVisible()) {
		e = document.getElementById("backstage");
		refreshElements(e,hint);
	}
}

function refreshPageTitle()
{
	document.title = getPageTitle();
}

function getPageTitle()
{
	var st = wikifyPlain("SiteTitle");
	var ss = wikifyPlain("SiteSubtitle");
	return st + ((st == "" || ss == "") ? "" : " - ") + ss;
}

function refreshStyles(title,doc)
{
	if(!doc)
		doc = document;
	setStylesheet(title == null ? "" : store.getRecursiveTiddlerText(title,"",10),title,doc);
}

function refreshColorPalette(title)
{
	if(!startingUp)
		refreshAll();
}

function refreshAll()
{
	refreshPageTemplate();
	refreshDisplay();
	refreshStyles("StyleSheetLayout");
	refreshStyles("StyleSheetColors");
	refreshStyles("StyleSheet");
	refreshStyles("StyleSheetPrint");
}

//--
//-- Options stuff
//--

config.optionHandlers = {
	'txt': {
		get: function(name) {return encodeCookie(config.options[name].toString());},
		set: function(name,value) {config.options[name] = decodeCookie(value);}
	},
	'chk': {
		get: function(name) {return config.options[name] ? "true" : "false";},
		set: function(name,value) {config.options[name] = value == "true";}
	}
};

function loadOptionsCookie()
{
	if(safeMode)
		return;
	var cookies = document.cookie.split(";");
	for(var c=0; c&lt;cookies.length; c++) {
		var p = cookies[c].indexOf("=");
		if(p != -1) {
			var name = cookies[c].substr(0,p).trim();
			var value = cookies[c].substr(p+1).trim();
			var optType = name.substr(0,3);
			if(config.optionHandlers[optType] &amp;&amp; config.optionHandlers[optType].set)
				config.optionHandlers[optType].set(name,value);
		}
	}
}

function saveOptionCookie(name)
{
	if(safeMode)
		return;
	var c = name + "=";
	var optType = name.substr(0,3);
	if(config.optionHandlers[optType] &amp;&amp; config.optionHandlers[optType].get)
		c += config.optionHandlers[optType].get(name);
	c += "; expires=Fri, 1 Jan 2038 12:00:00 UTC; path=/";
	document.cookie = c;
}

function encodeCookie(s)
{
	return escape(manualConvertUnicodeToUTF8(s));
}

function decodeCookie(s)
{
	s = unescape(s);
	var re = /&amp;#[0-9]{1,5};/g;
	return s.replace(re,function($0) {return String.fromCharCode(eval($0.replace(/[&amp;#;]/g,"")));});
}


config.macros.option.genericCreate = function(place,type,opt,className,desc)
{
	var typeInfo = config.macros.option.types[type];
	var c = document.createElement(typeInfo.elementType);
	if(typeInfo.typeValue)
		c.setAttribute("type",typeInfo.typeValue);
	c[typeInfo.eventName] = typeInfo.onChange;
	c.setAttribute("option",opt);
	if(className)
		c.className = className;
	else
		c.className = typeInfo.className;
	if(config.optionsDesc[opt])
		c.setAttribute("title",config.optionsDesc[opt]);
	place.appendChild(c);
	if(desc != "no")
		createTiddlyText(place,config.optionsDesc[opt] ? config.optionsDesc[opt] : opt);
	c[typeInfo.valueField] = config.options[opt];
	return c;
};

config.macros.option.genericOnChange = function(e)
{
	var opt = this.getAttribute("option");
	if(opt) {
		var optType = opt.substr(0,3);
		var handler = config.macros.option.types[optType];
		if (handler.elementType &amp;&amp; handler.valueField)
			config.macros.option.propagateOption(opt,handler.valueField,this[handler.valueField],handler.elementType);
		}
	return true;
};

config.macros.option.types = {
	'txt': {
		elementType: "input",
		valueField: "value",
		eventName: "onkeyup",
		className: "txtOptionInput",
		create: config.macros.option.genericCreate,
		onChange: config.macros.option.genericOnChange
	},
	'chk': {
		elementType: "input",
		valueField: "checked",
		eventName: "onclick",
		className: "chkOptionInput",
		typeValue: "checkbox",
		create: config.macros.option.genericCreate,
		onChange: config.macros.option.genericOnChange
	}
};

config.macros.option.propagateOption = function(opt,valueField,value,elementType)
{
	config.options[opt] = value;
	saveOptionCookie(opt);
	var nodes = document.getElementsByTagName(elementType);
	for(var t=0; t&lt;nodes.length; t++) {
		var optNode = nodes[t].getAttribute("option");
		if(opt == optNode)
			nodes[t][valueField] = value;
		}
};

config.macros.option.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var opt = (params[1] &amp;&amp; params[1].name == "anon") ? params[1].value : getParam(params,"name",null);
	var className = (params[2] &amp;&amp; params[2].name == "anon") ? params[2].value : getParam(params,"class",null);
	var desc = getParam(params,"desc","no");
	var type = opt.substr(0,3);
	var h = config.macros.option.types[type];
	if (h &amp;&amp; h.create)
		h.create(place,type,opt,className,desc);
};

config.macros.options.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var showUnknown = getParam(params,"showUnknown","no");
	var wizard = new Wizard();
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var chkUnknown = wizard.getElement("chkUnknown");
	chkUnknown.checked = showUnknown == "yes";
	chkUnknown.onchange = this.onChangeUnknown;
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	wizard.setValue("listWrapper",listWrapper);
	this.refreshOptions(listWrapper,showUnknown == "yes");
};

config.macros.options.refreshOptions = function(listWrapper,showUnknown)
{
	var opts = [];
	for(var n in config.options) {
		var opt = {};
		opt.option = "";
		opt.name = n;
		opt.lowlight = !config.optionsDesc[n];
		opt.description = opt.lowlight ? this.unknownDescription : config.optionsDesc[n];
		if(!opt.lowlight || showUnknown)
			opts.push(opt);
	}
	opts.sort(function(a,b) {return a.name.substr(3) &lt; b.name.substr(3) ? -1 : (a.name.substr(3) == b.name.substr(3) ? 0 : +1);});
	var listview = ListView.create(listWrapper,opts,this.listViewTemplate);
	for(n=0; n&lt;opts.length; n++) {
		var type = opts[n].name.substr(0,3);
		var h = config.macros.option.types[type];
		if (h &amp;&amp; h.create) {
			h.create(opts[n].colElements['option'],type,opts[n].name,null,"no");
		}
	}
};

config.macros.options.onChangeUnknown = function(e)
{
	var wizard = new Wizard(this);
	var listWrapper = wizard.getValue("listWrapper");
	removeChildren(listWrapper);
	config.macros.options.refreshOptions(listWrapper,this.checked);
	return false;
};

//--
//-- Saving
//--

var saveUsingSafari = false;

var startSaveArea = '&lt;div id="' + 'storeArea"&gt;'; // Split up into two so that indexOf() of this source doesn't find it
var endSaveArea = '&lt;/d' + 'iv&gt;';

// If there are unsaved changes, force the user to confirm before exitting
function confirmExit()
{
	hadConfirmExit = true;
	if((store &amp;&amp; store.isDirty &amp;&amp; store.isDirty()) || (story &amp;&amp; story.areAnyDirty &amp;&amp; story.areAnyDirty()))
		return config.messages.confirmExit;
}

// Give the user a chance to save changes before exitting
function checkUnsavedChanges()
{
	if(store &amp;&amp; store.isDirty &amp;&amp; store.isDirty() &amp;&amp; window.hadConfirmExit === false) {
		if(confirm(config.messages.unsavedChangesWarning))
			saveChanges();
	}
}

function updateLanguageAttribute(s)
{
	if(config.locale) {
		var mRE = /(&lt;html(?:.*?)?)(?: xml:lang\="([a-z]+)")?(?: lang\="([a-z]+)")?&gt;/;
		var m = mRE.exec(s);
		if(m) {
			var t = m[1];
			if(m[2])
				t += ' xml:lang="' + config.locale + '"';
			if(m[3])
				t += ' lang="' + config.locale + '"';
			t += "&gt;";
			s = s.substr(0,m.index) + t + s.substr(m.index+m[0].length);
		}
	}
	return s;
}

function updateMarkupBlock(s,blockName,tiddlerName)
{
	return s.replaceChunk(
			"&lt;!--%0-START--&gt;".format([blockName]),
			"&lt;!--%0-END--&gt;".format([blockName]),
			"\n" + store.getRecursiveTiddlerText(tiddlerName,"") + "\n");
}

function updateOriginal(original,posDiv)
{
	if(!posDiv)
		posDiv = locateStoreArea(original);
	if(!posDiv) {
		alert(config.messages.invalidFileError.format([localPath]));
		return null;
	}
	var revised = original.substr(0,posDiv[0] + startSaveArea.length) + "\n" +
				convertUnicodeToUTF8(store.allTiddlersAsHtml()) + "\n" +
				original.substr(posDiv[1]);
	var newSiteTitle = convertUnicodeToUTF8(getPageTitle()).htmlEncode();
	revised = revised.replaceChunk("&lt;title"+"&gt;","&lt;/title"+"&gt;"," " + newSiteTitle + " ");
	revised = updateLanguageAttribute(revised);
	revised = updateMarkupBlock(revised,"PRE-HEAD","MarkupPreHead");
	revised = updateMarkupBlock(revised,"POST-HEAD","MarkupPostHead");
	revised = updateMarkupBlock(revised,"PRE-BODY","MarkupPreBody");
	revised = updateMarkupBlock(revised,"POST-SCRIPT","MarkupPostBody");
	return revised;
}

function locateStoreArea(original)
{
	// Locate the storeArea div's
	var posOpeningDiv = original.indexOf(startSaveArea);
	var limitClosingDiv = original.indexOf("&lt;"+"!--POST-STOREAREA--"+"&gt;");
	if(limitClosingDiv == -1)
		limitClosingDiv = original.indexOf("&lt;"+"!--POST-BODY-START--"+"&gt;");
	var posClosingDiv = original.lastIndexOf(endSaveArea,limitClosingDiv == -1 ? original.length : limitClosingDiv);
	return (posOpeningDiv != -1 &amp;&amp; posClosingDiv != -1) ? [posOpeningDiv,posClosingDiv] : null;
}

function autoSaveChanges(onlyIfDirty,tiddlers)
{
	if(config.options.chkAutoSave)
		saveChanges(onlyIfDirty,tiddlers);
}

// Save this tiddlywiki with the pending changes
function saveChanges(onlyIfDirty,tiddlers)
{
	if(onlyIfDirty &amp;&amp; !store.isDirty())
		return;
	clearMessage();
	// Get the URL of the document
	var originalPath = document.location.toString();
	// Check we were loaded from a file URL
	if(originalPath.substr(0,5) != "file:") {
		alert(config.messages.notFileUrlError);
		if(store.tiddlerExists(config.messages.saveInstructions))
			story.displayTiddler(null,config.messages.saveInstructions);
		return;
	}
	var localPath = getLocalPath(originalPath);
	// Load the original file
	var original = loadFile(localPath);
	if(original == null) {
		alert(config.messages.cantSaveError);
		if(store.tiddlerExists(config.messages.saveInstructions))
			story.displayTiddler(null,config.messages.saveInstructions);
		return;
	}
	// Locate the storeArea div's
	var posDiv = locateStoreArea(original);
	if(!posDiv) {
		alert(config.messages.invalidFileError.format([localPath]));
		return;
	}
	saveBackup(localPath,original);
	saveRss(localPath);
	saveEmpty(localPath,original,posDiv);
	saveMain(localPath,original,posDiv);
}

function saveBackup(localPath,original)
{
	// Save the backup
	if(config.options.chkSaveBackups) {
		var backupPath = getBackupPath(localPath);
		var backup = config.browser.isIE ? ieCopyFile(backupPath,localPath) : saveFile(backupPath,original);
		if(backup)
			displayMessage(config.messages.backupSaved,"file://" + backupPath);
		else
			alert(config.messages.backupFailed);
	}
}

function saveRss(localPath)
{
	if(config.options.chkGenerateAnRssFeed) {
		var rssPath = localPath.substr(0,localPath.lastIndexOf(".")) + ".xml";
		var rssSave = saveFile(rssPath,convertUnicodeToUTF8(generateRss()));
		if(rssSave)
			displayMessage(config.messages.rssSaved,"file://" + rssPath);
		else
			alert(config.messages.rssFailed);
	}
}

function saveEmpty(localPath,original,posDiv)
{
	if(config.options.chkSaveEmptyTemplate) {
		var emptyPath,p;
		if((p = localPath.lastIndexOf("/")) != -1)
			emptyPath = localPath.substr(0,p) + "/empty.html";
		else if((p = localPath.lastIndexOf("\\")) != -1)
			emptyPath = localPath.substr(0,p) + "\\empty.html";
		else
			emptyPath = localPath + ".empty.html";
		var empty = original.substr(0,posDiv[0] + startSaveArea.length) + original.substr(posDiv[1]);
		var emptySave = saveFile(emptyPath,empty);
		if(emptySave)
			displayMessage(config.messages.emptySaved,"file://" + emptyPath);
		else
			alert(config.messages.emptyFailed);
	}
}

function saveMain(localPath,original,posDiv)
{
	var save;
	try {
		var revised = updateOriginal(original,posDiv);
		save = saveFile(localPath,revised);
	} catch (ex) {
		showException(ex);
	}
	if(save) {
		displayMessage(config.messages.mainSaved,"file://" + localPath);
		store.setDirty(false);
	} else {
		alert(config.messages.mainFailed);
	}
}

function getLocalPath(origPath)
{
	var originalPath = convertUriToUTF8(origPath,config.options.txtFileSystemCharSet);
	// Remove any location or query part of the URL
	var argPos = originalPath.indexOf("?");
	if(argPos != -1)
		originalPath = originalPath.substr(0,argPos);
	var hashPos = originalPath.indexOf("#");
	if(hashPos != -1)
		originalPath = originalPath.substr(0,hashPos);
	// Convert file://localhost/ to file:///
	if(originalPath.indexOf("file://localhost/") == 0)
		originalPath = "file://" + originalPath.substr(16);
	// Convert to a native file format
	var localPath;
	if(originalPath.charAt(9) == ":") // pc local file
		localPath = unescape(originalPath.substr(8)).replace(new RegExp("/","g"),"\\");
	else if(originalPath.indexOf("file://///") == 0) // FireFox pc network file
		localPath = "\\\\" + unescape(originalPath.substr(10)).replace(new RegExp("/","g"),"\\");
	else if(originalPath.indexOf("file:///") == 0) // mac/unix local file
		localPath = unescape(originalPath.substr(7));
	else if(originalPath.indexOf("file:/") == 0) // mac/unix local file
		localPath = unescape(originalPath.substr(5));
	else // pc network file
		localPath = "\\\\" + unescape(originalPath.substr(7)).replace(new RegExp("/","g"),"\\");
	return localPath;
}

function getBackupPath(localPath)
{
	var backSlash = true;
	var dirPathPos = localPath.lastIndexOf("\\");
	if(dirPathPos == -1) {
		dirPathPos = localPath.lastIndexOf("/");
		backSlash = false;
	}
	var backupFolder = config.options.txtBackupFolder;
	if(!backupFolder || backupFolder == "")
		backupFolder = ".";
	var backupPath = localPath.substr(0,dirPathPos) + (backSlash ? "\\" : "/") + backupFolder + localPath.substr(dirPathPos);
	backupPath = backupPath.substr(0,backupPath.lastIndexOf(".")) + "." + (new Date()).convertToYYYYMMDDHHMMSSMMM() + ".html";
	return backupPath;
}

function generateRss()
{
	var s = [];
	var d = new Date();
	var u = store.getTiddlerText("SiteUrl");
	// Assemble the header
	s.push("&lt;" + "?xml version=\"1.0\"?" + "&gt;");
	s.push("&lt;rss version=\"2.0\"&gt;");
	s.push("&lt;channel&gt;");
	s.push("&lt;title" + "&gt;" + wikifyPlain("SiteTitle").htmlEncode() + "&lt;/title" + "&gt;");
	if(u)
		s.push("&lt;link&gt;" + u.htmlEncode() + "&lt;/link&gt;");
	s.push("&lt;description&gt;" + wikifyPlain("SiteSubtitle").htmlEncode() + "&lt;/description&gt;");
	s.push("&lt;language&gt;en-us&lt;/language&gt;");
	s.push("&lt;copyright&gt;Copyright " + d.getFullYear() + " " + config.options.txtUserName.htmlEncode() + "&lt;/copyright&gt;");
	s.push("&lt;pubDate&gt;" + d.toGMTString() + "&lt;/pubDate&gt;");
	s.push("&lt;lastBuildDate&gt;" + d.toGMTString() + "&lt;/lastBuildDate&gt;");
	s.push("&lt;docs&gt;http://blogs.law.harvard.edu/tech/rss&lt;/docs&gt;");
	s.push("&lt;generator&gt;TiddlyWiki " + version.major + "." + version.minor + "." + version.revision + "&lt;/generator&gt;");
	// The body
	var tiddlers = store.getTiddlers("modified","excludeLists");
	var n = config.numRssItems &gt; tiddlers.length ? 0 : tiddlers.length-config.numRssItems;
	for (var t=tiddlers.length-1; t&gt;=n; t--)
		s.push(tiddlers[t].saveToRss(u));
	// And footer
	s.push("&lt;/channel&gt;");
	s.push("&lt;/rss&gt;");
	// Save it all
	return s.join("\n");
}

//--
//-- Filesystem code
//--

function convertUTF8ToUnicode(u)
{
	return window.netscape == undefined ? manualConvertUTF8ToUnicode(u) : mozConvertUTF8ToUnicode(u);
}

function manualConvertUTF8ToUnicode(utf)
{
	var uni = utf;
	var src = 0;
	var dst = 0;
	var b1, b2, b3;
	var c;
	while(src &lt; utf.length) {
		b1 = utf.charCodeAt(src++);
		if(b1 &lt; 0x80) {
			dst++;
		} else if(b1 &lt; 0xE0) {
			b2 = utf.charCodeAt(src++);
			c = String.fromCharCode(((b1 &amp; 0x1F) &lt;&lt; 6) | (b2 &amp; 0x3F));
			uni = uni.substring(0,dst++).concat(c,utf.substr(src));
		} else {
			b2 = utf.charCodeAt(src++);
			b3 = utf.charCodeAt(src++);
			c = String.fromCharCode(((b1 &amp; 0xF) &lt;&lt; 12) | ((b2 &amp; 0x3F) &lt;&lt; 6) | (b3 &amp; 0x3F));
			uni = uni.substring(0,dst++).concat(c,utf.substr(src));
		}
	}
	return uni;
}

function mozConvertUTF8ToUnicode(u)
{
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
		converter.charset = "UTF-8";
	} catch(ex) {
		return manualConvertUTF8ToUnicode(u);
	} // fallback
	var s = converter.ConvertToUnicode(u);
	var fin = converter.Finish();
	return (fin.length &gt; 0) ? s+fin : s;
}

function convertUnicodeToUTF8(s)
{
	if(window.netscape == undefined)
		return manualConvertUnicodeToUTF8(s);
	else
		return mozConvertUnicodeToUTF8(s);
}

function manualConvertUnicodeToUTF8(s)
{
	var re = /[^\u0000-\u007F]/g ;
	return s.replace(re,function($0) {return "&amp;#" + $0.charCodeAt(0).toString() + ";";});
}

function mozConvertUnicodeToUTF8(s)
{
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
		converter.charset = "UTF-8";
	} catch(ex) {
		return manualConvertUnicodeToUTF8(s);
	} // fallback
	var u = converter.ConvertFromUnicode(s);
	var fin = converter.Finish();
	return fin.length &gt; 0 ? u + fin : u;
}

function convertUriToUTF8(uri,charSet)
{
	if(window.netscape == undefined || charSet == undefined || charSet == "")
		return uri;
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/utf8converterservice;1"].getService(Components.interfaces.nsIUTF8ConverterService);
	} catch(ex) {
		return uri;
	}
	return converter.convertURISpecToUTF8(uri,charSet);
}

function saveFile(fileUrl,content)
{
	var r = mozillaSaveFile(fileUrl,content);
	if(!r)
		r = ieSaveFile(fileUrl,content);
	if(!r)
		r = javaSaveFile(fileUrl,content);
	return r;
}

function loadFile(fileUrl)
{
	var r = mozillaLoadFile(fileUrl);
	if((r == null) || (r == false))
		r = ieLoadFile(fileUrl);
	if((r == null) || (r == false))
		r = javaLoadFile(fileUrl);
	return r;
}

// Returns null if it can't do it, false if there's an error, true if it saved OK
function ieSaveFile(filePath,content)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
	} catch(ex) {
		return null;
	}
	var file = fso.OpenTextFile(filePath,2,-1,0);
	file.Write(content);
	file.Close();
	return true;
}

// Returns null if it can't do it, false if there's an error, or a string of the content if successful
function ieLoadFile(filePath)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		var file = fso.OpenTextFile(filePath,1);
		var content = file.ReadAll();
		file.Close();
	} catch(ex) {
		return null;
	}
	return content;
}

function ieCopyFile(dest,source)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		fso.GetFile(source).Copy(dest);
	} catch(ex) {
		return false;
	}
	return true;
}

// Returns null if it can't do it, false if there's an error, true if it saved OK
function mozillaSaveFile(filePath,content)
{
	if(window.Components) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
			file.initWithPath(filePath);
			if(!file.exists())
				file.create(0,0664);
			var out = Components.classes["@mozilla.org/network/file-output-stream;1"].createInstance(Components.interfaces.nsIFileOutputStream);
			out.init(file,0x20|0x02,00004,null);
			out.write(content,content.length);
			out.flush();
			out.close();
			return true;
		} catch(ex) {
			return false;
		}
	}
	return null;
}

// Returns null if it can't do it, false if there's an error, or a string of the content if successful
function mozillaLoadFile(filePath)
{
	if(window.Components) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
			file.initWithPath(filePath);
			if(!file.exists())
				return null;
			var inputStream = Components.classes["@mozilla.org/network/file-input-stream;1"].createInstance(Components.interfaces.nsIFileInputStream);
			inputStream.init(file,0x01,00004,null);
			var sInputStream = Components.classes["@mozilla.org/scriptableinputstream;1"].createInstance(Components.interfaces.nsIScriptableInputStream);
			sInputStream.init(inputStream);
			return sInputStream.read(sInputStream.available());
		} catch(ex) {
			return false;
		}
	}
	return null;
}

function javaUrlToFilename(url)
{
	var f = "//localhost";
	if(url.indexOf(f) == 0)
		return url.substring(f.length);
	var i = url.indexOf(":");
	if(i &gt; 0)
		return url.substring(i-1);
	return url;
}

function javaSaveFile(filePath,content)
{
	try {
		if(document.applets["TiddlySaver"])
			return document.applets["TiddlySaver"].saveFile(javaUrlToFilename(filePath),"UTF-8",content);
	} catch(ex) {
	}
	try {
		var s = new java.io.PrintStream(new java.io.FileOutputStream(javaUrlToFilename(filePath)));
		s.print(content);
		s.close();
	} catch(ex) {
		return null;
	}
	return true;
}

function javaLoadFile(filePath)
{
	try {
		if(document.applets["TiddlySaver"])
			return String(document.applets["TiddlySaver"].loadFile(javaUrlToFilename(filePath),"UTF-8"));
	} catch(ex) {
	}
	var content = [];
	try {
		var r = new java.io.BufferedReader(new java.io.FileReader(javaUrlToFilename(filePath)));
		var line;
		while((line = r.readLine()) != null)
			content.push(new String(line));
		r.close();
	} catch(ex) {
		return null;
	}
	return content.join("\n");
}

//--
//-- Server adaptor for talking to static files
//--

function FileAdaptor()
{
	this.host = null;
	this.store = null;
	return this;
}

FileAdaptor.NotLoadedError = "TiddlyWiki file has not been loaded";
FileAdaptor.serverType = 'file';

// Open the specified host/server
FileAdaptor.prototype.openHost = function(host,context,userParams,callback)
{
	this.host = host;
	if(!context)
		context = {};
	context.adaptor = this;
	context.callback = callback;
	context.userParams = userParams;
	var ret = loadRemoteFile(host,FileAdaptor.openHostCallback,context);
	return typeof(ret) == "string" ? ret : true;
};

FileAdaptor.openHostCallback = function(status,context,responseText,url,xhr)
{
	var adaptor = context.adaptor;
	context.status = status;
	if(!status) {
		context.statusText = "Error reading file: " + xhr.statusText;
	} else {
		// Load the content into a TiddlyWiki() object
		adaptor.store = new TiddlyWiki();
		if(!adaptor.store.importTiddlyWiki(responseText))
			context.statusText = config.messages.invalidFileError.format([url]);
	}
	context.callback(context,context.userParams);
};

// Gets the list of workspaces on a given server
FileAdaptor.prototype.getWorkspaceList = function(context,userParams,callback)
{
	if(!context)
		context = {};
	context.workspaces = [{title:"(default)"}];
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Open the specified workspace
FileAdaptor.prototype.openWorkspace = function(workspace,context,userParams,callback)
{
	if(!context)
		context = {};
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Gets the list of tiddlers within a given workspace
FileAdaptor.prototype.getTiddlerList = function(context,userParams,callback,filter)
{
	if(!this.store)
		return FileAdaptor.NotLoadedError;
	if(!context)
		context = {};
	if(filter) {
		context.tiddlers = this.store.filterTiddlers(filter);
	} else {
		context.tiddlers = [];
		this.store.forEachTiddler(function(title,tiddler) {context.tiddlers.push(tiddler);});
	}
	for(var t=0; t&lt;context.tiddlers.length; t++) {
		context.tiddlers[t].fields['server.page.revision'] = context.tiddlers[t].modified.convertToYYYYMMDDHHMM();
	}
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

FileAdaptor.prototype.generateTiddlerInfo = function(tiddler)
{
	var info = {};
	info.uri = tiddler.fields['server.host'] + "#" + tiddler.title;
	return info;
};

// Retrieves a tiddler from a given workspace on a given server
FileAdaptor.prototype.getTiddler = function(title,context,userParams,callback)
{
	if(!this.store)
		return FileAdaptor.NotLoadedError;
	if(!context)
		context = {};
	context.tiddler = this.store.fetchTiddler(title);
	if(context.tiddler) {
		context.tiddler.fields['server.type'] = FileAdaptor.serverType;
		context.tiddler.fields['server.host'] = this.host;
		context.tiddler.fields['server.page.revision'] = context.tiddler.modified.convertToYYYYMMDDHHMM();
	}
	context.status = true;
	if(context.allowSynchronous) {
		context.isSynchronous = true;
		callback(context,userParams);
	} else {
		window.setTimeout(function() {callback(context,userParams);},10);
	}
	return true;
};

FileAdaptor.prototype.close = function()
{
	delete this.store;
	this.store = null;
};

config.adaptors[FileAdaptor.serverType] = FileAdaptor;

//--
//-- Remote HTTP requests
//--

function loadRemoteFile(url,callback,params)
{
	return doHttp("GET",url,null,null,null,null,callback,params,null);
}

// HTTP status codes
var httpStatus = {
	OK: 200,
	ContentCreated: 201,
	NoContent: 204,
	MultiStatus: 207,
	Unauthorized: 401,
	Forbidden: 403,
	NotFound: 404,
	MethodNotAllowed: 405
};

function doHttp(type,url,data,contentType,username,password,callback,params,headers)
{
	var x = getXMLHttpRequest();
	if(!x)
		return "Can't create XMLHttpRequest object";
	x.onreadystatechange = function() {
		if (x.readyState == 4 &amp;&amp; callback &amp;&amp; (x.status !== undefined)) {
			if([0, httpStatus.OK, httpStatus.ContentCreated, httpStatus.NoContent, httpStatus.MultiStatus].contains(x.status))
				callback(true,params,x.responseText,url,x);
			else
				callback(false,params,null,url,x);
			x.onreadystatechange = function(){};
			x = null;
		}
	};
	if(window.Components &amp;&amp; window.netscape &amp;&amp; window.netscape.security &amp;&amp; document.location.protocol.indexOf("http") == -1)
		window.netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	try {
		url = url + (url.indexOf("?") &lt; 0 ? "?" : "&amp;") + "nocache=" + Math.random();
		x.open(type,url,true,username,password);
		if(data)
			x.setRequestHeader("Content-Type", contentType ? contentType : "application/x-www-form-urlencoded");
		if(x.overrideMimeType)
			x.setRequestHeader("Connection", "close");
		if(headers) {
			for(var n in headers)
				x.setRequestHeader(n,headers[n]);
		}
		x.setRequestHeader("X-Requested-With", "TiddlyWiki " + version.major + "." + version.minor + "." + version.revision + (version.beta ? " (beta " + version.beta + ")" : ""));
		x.send(data);
	} catch(ex) {
		return exceptionText(ex);
	}
	return x;
}

function getXMLHttpRequest()
{
	try {
		var x = new XMLHttpRequest(); // Modern
	} catch(ex) {
		try {
			x = new ActiveXObject("Msxml2.XMLHTTP"); // IE 6
		} catch (ex2) {
			return null;
		}
	}
	return x;
}

//--
//-- TiddlyWiki-specific utility functions
//--

function createTiddlyButton(parent,text,tooltip,action,className,id,accessKey,attribs)
{
	var btn = document.createElement("a");
	if(action) {
		btn.onclick = action;
		btn.setAttribute("href","javascript:;");
	}
	if(tooltip)
		btn.setAttribute("title",tooltip);
	if(text)
		btn.appendChild(document.createTextNode(text));
	btn.className = className ? className : "button";
	if(id)
		btn.id = id;
	if(attribs){
		for(var n in attribs){
			e.setAttribute(n,attribs[n]);
		}
	}
	if(parent)
		parent.appendChild(btn);
	if(accessKey)
		btn.setAttribute("accessKey",accessKey);
	return btn;
}

function createTiddlyLink(place,title,includeText,className,isStatic,linkedFromTiddler,noToggle)
{
	var text = includeText ? title : null;
	var i = getTiddlyLinkInfo(title,className);
	var btn = isStatic ? createExternalLink(place,store.getTiddlerText("SiteUrl",null) + "#" + title) : createTiddlyButton(place,text,i.subTitle,onClickTiddlerLink,i.classes);
	btn.setAttribute("refresh","link");
	btn.setAttribute("tiddlyLink",title);
	if(noToggle)
		btn.setAttribute("noToggle","true");
	if(linkedFromTiddler) {
		var fields = linkedFromTiddler.getInheritedFields();
		if(fields)
			btn.setAttribute("tiddlyFields",fields);
	}
	return btn;
}

function refreshTiddlyLink(e,title)
{
	var i = getTiddlyLinkInfo(title,e.className);
	e.className = i.classes;
	e.title = i.subTitle;
}

function getTiddlyLinkInfo(title,currClasses)
{
	var classes = currClasses ? currClasses.split(" ") : [];
	classes.pushUnique("tiddlyLink");
	var tiddler = store.fetchTiddler(title);
	var subTitle;
	if(tiddler) {
		subTitle = tiddler.getSubtitle();
		classes.pushUnique("tiddlyLinkExisting");
		classes.remove("tiddlyLinkNonExisting");
		classes.remove("shadow");
	} else {
		classes.remove("tiddlyLinkExisting");
		classes.pushUnique("tiddlyLinkNonExisting");
		if(store.isShadowTiddler(title)) {
			subTitle = config.messages.shadowedTiddlerToolTip.format([title]);
			classes.pushUnique("shadow");
		} else {
			subTitle = config.messages.undefinedTiddlerToolTip.format([title]);
			classes.remove("shadow");
		}
	}
	if(config.annotations[title])
		subTitle = config.annotations[title];
	return {classes: classes.join(" "),subTitle: subTitle};
}

function createExternalLink(place,url)
{
	var link = document.createElement("a");
	link.className = "externalLink";
	link.href = url;
	link.title = config.messages.externalLinkTooltip.format([url]);
	if(config.options.chkOpenInNewWindow)
		link.target = "_blank";
	place.appendChild(link);
	return link;
}

// Event handler for clicking on a tiddly link
function onClickTiddlerLink(ev)
{
	var e = ev ? ev : window.event;
	var target = resolveTarget(e);
	var link = target;
	var title = null;
	var fields = null;
	var noToggle = null;
	do {
		title = link.getAttribute("tiddlyLink");
		fields = link.getAttribute("tiddlyFields");
		noToggle = link.getAttribute("noToggle");
		link = link.parentNode;
	} while(title == null &amp;&amp; link != null);
	if(!store.isShadowTiddler(title)) {
		var f = fields ? fields.decodeHashMap() : {};
		fields = String.encodeHashMap(merge(f,config.defaultCustomFields,true));
	}
	if(title) {
		var toggling = e.metaKey || e.ctrlKey;
		if(config.options.chkToggleLinks)
			toggling = !toggling;
		if(noToggle)
			toggling = false;
		if(store.getTiddler(title))
			fields = null;
		story.displayTiddler(target,title,null,true,null,fields,toggling);
	}
	clearMessage();
	return false;
}

// Create a button for a tag with a popup listing all the tiddlers that it tags
function createTagButton(place,tag,excludeTiddler)
{
	var btn = createTiddlyButton(place,tag,config.views.wikified.tag.tooltip.format([tag]),onClickTag);
	btn.setAttribute("tag",tag);
	if(excludeTiddler)
		btn.setAttribute("tiddler",excludeTiddler);
	return btn;
}

// Event handler for clicking on a tiddler tag
function onClickTag(ev)
{
	var e = ev ? ev : window.event;
	var popup = Popup.create(this);
	var tag = this.getAttribute("tag");
	var title = this.getAttribute("tiddler");
	if(popup &amp;&amp; tag) {
		var tagged = store.getTaggedTiddlers(tag);
		var titles = [];
		var li,r;
		for(r=0;r&lt;tagged.length;r++) {
			if(tagged[r].title != title)
				titles.push(tagged[r].title);
		}
		var lingo = config.views.wikified.tag;
		if(titles.length &gt; 0) {
			var openAll = createTiddlyButton(createTiddlyElement(popup,"li"),lingo.openAllText.format([tag]),lingo.openAllTooltip,onClickTagOpenAll);
			openAll.setAttribute("tag",tag);
			createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
			for(r=0; r&lt;titles.length; r++) {
				createTiddlyLink(createTiddlyElement(popup,"li"),titles[r],true);
			}
		} else {
			createTiddlyText(createTiddlyElement(popup,"li",null,"disabled"),lingo.popupNone.format([tag]));
		}
		createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
		var h = createTiddlyLink(createTiddlyElement(popup,"li"),tag,false);
		createTiddlyText(h,lingo.openTag.format([tag]));
	}
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
}

// Event handler for 'open all' on a tiddler popup
function onClickTagOpenAll(ev)
{
	var e = ev ? ev : window.event;
	var tag = this.getAttribute("tag");
	var tagged = store.getTaggedTiddlers(tag);
	var titles = [];
	for(var t=0; t&lt;tagged.length; t++)
		titles.push(tagged[t].title);
	story.displayTiddlers(this,titles);
	return false;
}

function onClickError(ev)
{
	var e = ev ? ev : window.event;
	var popup = Popup.create(this);
	var lines = this.getAttribute("errorText").split("\n");
	for(var t=0; t&lt;lines.length; t++)
		createTiddlyElement(popup,"li",null,null,lines[t]);
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
}

function createTiddlyDropDown(place,onchange,options,defaultValue)
{
	var sel = createTiddlyElement(place,"select");
	sel.onchange = onchange;
	for(var t=0; t&lt;options.length; t++) {
		var e = createTiddlyElement(sel,"option",null,null,options[t].caption);
		e.value = options[t].name;
		if(options[t].name == defaultValue)
			e.selected = true;
	}
	return sel;
}

function createTiddlyPopup(place,caption,tooltip,tiddler)
{
	if(tiddler.text) {
		createTiddlyLink(place,caption,true);
		var btn = createTiddlyButton(place,glyph("downArrow"),tooltip,onClickTiddlyPopup,"tiddlerPopupButton");
		btn.tiddler = tiddler;
	} else {
		createTiddlyText(place,caption);
	}
}

function onClickTiddlyPopup(ev)
{
	var e = ev ? ev : window.event;
	var tiddler = this.tiddler;
	if(tiddler.text) {
		var popup = Popup.create(this,"div","popupTiddler");
		wikify(tiddler.text,popup,null,tiddler);
		Popup.show();
	}
	if(e) e.cancelBubble = true;
	if(e &amp;&amp; e.stopPropagation) e.stopPropagation();
	return false;
}

function createTiddlyError(place,title,text)
{
	var btn = createTiddlyButton(place,title,null,onClickError,"errorButton");
	if(text) btn.setAttribute("errorText",text);
}

function merge(dst,src,preserveExisting)
{
	for(p in src) {
		if(!preserveExisting || dst[p] === undefined)
			dst[p] = src[p];
	}
	return dst;
}

// Returns a string containing the description of an exception, optionally prepended by a message
function exceptionText(e,message)
{
	var s = e.description ? e.description : e.toString();
	return message ? "%0:\n%1".format([message,s]) : s;
}

// Displays an alert of an exception description with optional message
function showException(e,message)
{
	alert(exceptionText(e,message));
}

function alertAndThrow(m)
{
	alert(m);
	throw(m);
}

function glyph(name)
{
	var g = config.glyphs;
	var b = g.currBrowser;
	if(b == null) {
		b = 0;
		while(!g.browsers[b]() &amp;&amp; b &lt; g.browsers.length-1)
			b++;
		g.currBrowser = b;
	}
	if(!g.codes[name])
		return "";
	return g.codes[name][b];
}

//-
//- Animation engine
//-

function Animator()
{
	this.running = 0; // Incremented at start of each animation, decremented afterwards. If zero, the interval timer is disabled
	this.timerID = 0; // ID of the timer used for animating
	this.animations = []; // List of animations in progress
	return this;
}

// Start animation engine
Animator.prototype.startAnimating = function() // Variable number of arguments
{
	for(var t=0; t&lt;arguments.length; t++)
		this.animations.push(arguments[t]);
	if(this.running == 0) {
		var me = this;
		this.timerID = window.setInterval(function() {me.doAnimate(me);},10);
	}
	this.running += arguments.length;
};

// Perform an animation engine tick, calling each of the known animation modules
Animator.prototype.doAnimate = function(me)
{
	var a = 0;
	while(a &lt; me.animations.length) {
		var animation = me.animations[a];
		if(animation.tick()) {
			a++;
		} else {
			me.animations.splice(a,1);
			if(--me.running == 0)
				window.clearInterval(me.timerID);
		}
	}
};

// Map a 0..1 value to 0..1, but slow down at the start and end
Animator.slowInSlowOut = function(progress)
{
	return(1-((Math.cos(progress * Math.PI)+1)/2));
};

//--
//-- Morpher animation
//--

// Animate a set of properties of an element
function Morpher(element,duration,properties,callback)
{
	this.element = element;
	this.duration = duration;
	this.properties = properties;
	this.startTime = new Date();
	this.endTime = Number(this.startTime) + duration;
	this.callback = callback;
	this.tick();
	return this;
}

Morpher.prototype.assignStyle = function(element,style,value)
{
	switch(style) {
		case "-tw-vertScroll":
			window.scrollTo(findScrollX(),value);
			break;
		case "-tw-horizScroll":
			window.scrollTo(value,findScrollY());
			break;
		default:
			element.style[style] = value;
			break;
	}
};

Morpher.prototype.stop = function()
{
	for(var t=0; t&lt;this.properties.length; t++) {
		var p = this.properties[t];
		if(p.atEnd !== undefined) {
			this.assignStyle(this.element,p.style,p.atEnd);
		}
	}
	if(this.callback)
		this.callback(this.element,this.properties);
};

Morpher.prototype.tick = function()
{
	var currTime = Number(new Date());
	progress = Animator.slowInSlowOut(Math.min(1,(currTime-this.startTime)/this.duration));
	for(var t=0; t&lt;this.properties.length; t++) {
		var p = this.properties[t];
		if(p.start !== undefined &amp;&amp; p.end !== undefined) {
			var template = p.template ? p.template : "%0";
			switch(p.format) {
				case undefined:
				case "style":
					var v = p.start + (p.end-p.start) * progress;
					this.assignStyle(this.element,p.style,template.format([v]));
					break;
				case "color":
					break;
			}
		}
	}
	if(currTime &gt;= this.endTime) {
		this.stop();
		return false;
	}
	return true;
};

//--
//-- Zoomer animation
//--

function Zoomer(text,startElement,targetElement,unused)
{
	var e = createTiddlyElement(document.body,"div",null,"zoomer");
	createTiddlyElement(e,"div",null,null,text);
	var winWidth = findWindowWidth();
	var winHeight = findWindowHeight();
	var p = [
		{style: 'left', start: findPosX(startElement), end: findPosX(targetElement), template: '%0px'},
		{style: 'top', start: findPosY(startElement), end: findPosY(targetElement), template: '%0px'},
		{style: 'width', start: Math.min(startElement.scrollWidth,winWidth), end: Math.min(targetElement.scrollWidth,winWidth), template: '%0px', atEnd: 'auto'},
		{style: 'height', start: Math.min(startElement.scrollHeight,winHeight), end: Math.min(targetElement.scrollHeight,winHeight), template: '%0px', atEnd: 'auto'},
		{style: 'fontSize', start: 8, end: 24, template: '%0pt'}
	];
	var c = function(element,properties) {removeNode(element);};
	return new Morpher(e,config.animDuration,p,c);
}

//--
//-- Scroller animation
//--

function Scroller(targetElement,unused)
{
	var p = [
		{style: '-tw-vertScroll', start: findScrollY(), end: ensureVisible(targetElement)}
	];
	return new Morpher(targetElement,config.animDuration,p);
}

//--
//-- Slider animation
//--

// deleteMode - "none", "all" [delete target element and it's children], [only] "children" [but not the target element]
function Slider(element,opening,unused,deleteMode)
{
	element.style.overflow = 'hidden';
	if(opening)
		element.style.height = '0px'; // Resolves a Firefox flashing bug
	element.style.display = 'block';
	var left = findPosX(element);
	var width = element.scrollWidth;
	var height = element.scrollHeight;
	var winWidth = findWindowWidth();
	var p = [];
	var c = null;
	if(opening) {
		p.push({style: 'height', start: 0, end: height, template: '%0px', atEnd: 'auto'});
		p.push({style: 'opacity', start: 0, end: 1, template: '%0'});
		p.push({style: 'filter', start: 0, end: 100, template: 'alpha(opacity:%0)'});
	} else {
		p.push({style: 'height', start: height, end: 0, template: '%0px'});
		p.push({style: 'display', atEnd: 'none'});
		p.push({style: 'opacity', start: 1, end: 0, template: '%0'});
		p.push({style: 'filter', start: 100, end: 0, template: 'alpha(opacity:%0)'});
		switch(deleteMode) {
			case "all":
				c = function(element,properties) {removeNode(element);};
				break;
			case "children":
				c = function(element,properties) {removeChildren(element);};
				break;
		}
	}
	return new Morpher(element,config.animDuration,p,c);
}

//--
//-- Popup menu
//--

var Popup = {
	stack: [] // Array of objects with members root: and popup:
	};

Popup.create = function(root,elem,theClass)
{
	Popup.remove();
	var popup = createTiddlyElement(document.body,elem ? elem : "ol","popup",theClass ? theClass : "popup");
	Popup.stack.push({root: root, popup: popup});
	return popup;
};

Popup.onDocumentClick = function(ev)
{
	var e = ev ? ev : window.event;
	if(e.eventPhase == undefined)
		Popup.remove();
	else if(e.eventPhase == Event.BUBBLING_PHASE || e.eventPhase == Event.AT_TARGET)
		Popup.remove();
	return true;
};

Popup.show = function(unused1,unused2)
{
	var curr = Popup.stack[Popup.stack.length-1];
	this.place(curr.root,curr.popup);
	addClass(curr.root,"highlight");
	if(config.options.chkAnimate &amp;&amp; anim &amp;&amp; typeof Scroller == "function")
		anim.startAnimating(new Scroller(curr.popup));
	else
		window.scrollTo(0,ensureVisible(curr.popup));
};

Popup.place = function(root,popup,offset)
{
	if(!offset) var offset = {x:0, y:0};
	var rootLeft = findPosX(root);
	var rootTop = findPosY(root);
	var rootHeight = root.offsetHeight;
	var popupLeft = rootLeft + offset.x;
	var popupTop = rootTop + rootHeight + offset.y;
	var winWidth = findWindowWidth();
	if(popup.offsetWidth &gt; winWidth*0.75)
		popup.style.width = winWidth*0.75 + "px";
	var popupWidth = popup.offsetWidth;
	if(popupLeft + popupWidth &gt; winWidth)
		popupLeft = winWidth - popupWidth;
	popup.style.left = popupLeft + "px";
	popup.style.top = popupTop + "px";
	popup.style.display = "block";
};

Popup.remove = function()
{
	if(Popup.stack.length &gt; 0) {
		Popup.removeFrom(0);
	}
};

Popup.removeFrom = function(from)
{
	for(var t=Popup.stack.length-1; t&gt;=from; t--) {
		var p = Popup.stack[t];
		removeClass(p.root,"highlight");
		removeNode(p.popup);
	}
	Popup.stack = Popup.stack.slice(0,from);
};

//--
//-- Wizard support
//--

function Wizard(elem)
{
	if(elem) {
		this.formElem = findRelated(elem,"wizard","className");
		this.bodyElem = findRelated(this.formElem.firstChild,"wizardBody","className","nextSibling");
		this.footElem = findRelated(this.formElem.firstChild,"wizardFooter","className","nextSibling");
	} else {
		this.formElem = null;
		this.bodyElem = null;
		this.footElem = null;
	}
}

Wizard.prototype.setValue = function(name,value)
{
	if(this.formElem)
		this.formElem[name] = value;
};

Wizard.prototype.getValue = function(name)
{
	return this.formElem ? this.formElem[name] : null;
};

Wizard.prototype.createWizard = function(place,title)
{
	this.formElem = createTiddlyElement(place,"form",null,"wizard");
	createTiddlyElement(this.formElem,"h1",null,null,title);
	this.bodyElem = createTiddlyElement(this.formElem,"div",null,"wizardBody");
	this.footElem = createTiddlyElement(this.formElem,"div",null,"wizardFooter");
};

Wizard.prototype.clear = function()
{
	removeChildren(this.bodyElem);
};

Wizard.prototype.setButtons = function(buttonInfo,status)
{
	removeChildren(this.footElem);
	for(var t=0; t&lt;buttonInfo.length; t++) {
		createTiddlyButton(this.footElem,buttonInfo[t].caption,buttonInfo[t].tooltip,buttonInfo[t].onClick);
		insertSpacer(this.footElem);
		}
	if(typeof status == "string") {
		createTiddlyElement(this.footElem,"span",null,"status",status);
	}
};

Wizard.prototype.addStep = function(stepTitle,html)
{
	removeChildren(this.bodyElem);
	var w = createTiddlyElement(this.bodyElem,"div");
	createTiddlyElement(w,"h2",null,null,stepTitle);
	var step = createTiddlyElement(w,"div",null,"wizardStep");
	step.innerHTML = html;
	applyHtmlMacros(step,tiddler);
};

Wizard.prototype.getElement = function(name)
{
	return this.formElem.elements[name];
};

//--
//-- ListView gadget
//--

var ListView = {};

// Create a listview
ListView.create = function(place,listObject,listTemplate,callback,className)
{
	var table = createTiddlyElement(place,"table",null,className ? className : "listView twtable");
	var thead = createTiddlyElement(table,"thead");
	var r = createTiddlyElement(thead,"tr");
	for(var t=0; t&lt;listTemplate.columns.length; t++) {
		var columnTemplate = listTemplate.columns[t];
		var c = createTiddlyElement(r,"th");
		var colType = ListView.columnTypes[columnTemplate.type];
		if(colType &amp;&amp; colType.createHeader)
			colType.createHeader(c,columnTemplate,t);
	}
	var tbody = createTiddlyElement(table,"tbody");
	for(var rc=0; rc&lt;listObject.length; rc++) {
		rowObject = listObject[rc];
		r = createTiddlyElement(tbody,"tr");
		for(c=0; c&lt;listTemplate.rowClasses.length; c++) {
			if(rowObject[listTemplate.rowClasses[c].field])
				addClass(r,listTemplate.rowClasses[c].className);
		}
		rowObject.rowElement = r;
		rowObject.colElements = {};
		for(var cc=0; cc&lt;listTemplate.columns.length; cc++) {
			c = createTiddlyElement(r,"td");
			columnTemplate = listTemplate.columns[cc];
			var field = columnTemplate.field;
			colType = ListView.columnTypes[columnTemplate.type];
			if(colType &amp;&amp; colType.createItem)
				colType.createItem(c,rowObject,field,columnTemplate,cc,rc);
			rowObject.colElements[field] = c;
		}
	}
	if(callback &amp;&amp; listTemplate.actions)
		createTiddlyDropDown(place,ListView.getCommandHandler(callback),listTemplate.actions);
	if(callback &amp;&amp; listTemplate.buttons) {
		for(t=0; t&lt;listTemplate.buttons.length; t++) {
			var a = listTemplate.buttons[t];
			if(a &amp;&amp; a.name != "")
				createTiddlyButton(place,a.caption,null,ListView.getCommandHandler(callback,a.name,a.allowEmptySelection));
		}
	}
	return table;
};

ListView.getCommandHandler = function(callback,name,allowEmptySelection)
{
	return function(e) {
		var view = findRelated(this,"TABLE",null,"previousSibling");
		var tiddlers = [];
		ListView.forEachSelector(view,function(e,rowName) {
					if(e.checked)
						tiddlers.push(rowName);
					});
		if(tiddlers.length == 0 &amp;&amp; !allowEmptySelection) {
			alert(config.messages.nothingSelected);
		} else {
			if(this.nodeName.toLowerCase() == "select") {
				callback(view,this.value,tiddlers);
				this.selectedIndex = 0;
			} else {
				callback(view,name,tiddlers);
			}
		}
	};
};

// Invoke a callback for each selector checkbox in the listview
ListView.forEachSelector = function(view,callback)
{
	var checkboxes = view.getElementsByTagName("input");
	var hadOne = false;
	for(var t=0; t&lt;checkboxes.length; t++) {
		var cb = checkboxes[t];
		if(cb.getAttribute("type") == "checkbox") {
			var rn = cb.getAttribute("rowName");
			if(rn) {
				callback(cb,rn);
				hadOne = true;
			}
		}
	}
	return hadOne;
};

ListView.getSelectedRows = function(view)
{
	var rowNames = [];
	ListView.forEachSelector(view,function(e,rowName) {
				if(e.checked)
					rowNames.push(rowName);
				});
	return rowNames;
};

ListView.columnTypes = {};

ListView.columnTypes.String = {
	createHeader: function(place,columnTemplate,col)
		{
			createTiddlyText(place,columnTemplate.title);
		},
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				createTiddlyText(place,v);
		}
};

ListView.columnTypes.WikiText = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				wikify(v,place,null,null);
		}
};

ListView.columnTypes.Tiddler = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined &amp;&amp; v.title)
				createTiddlyPopup(place,v.title,config.messages.listView.tiddlerTooltip,v);
		}
};

ListView.columnTypes.Size = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				var t = 0;
				while(t&lt;config.messages.sizeTemplates.length-1 &amp;&amp; v&lt;config.messages.sizeTemplates[t].unit)
					t++;
				createTiddlyText(place,config.messages.sizeTemplates[t].template.format([Math.round(v/config.messages.sizeTemplates[t].unit)]));
			}
		}
};

ListView.columnTypes.Link = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			var c = columnTemplate.text;
			if(v != undefined)
				createTiddlyText(createExternalLink(place,v),c ? c : v);
		}
};

ListView.columnTypes.Date = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				createTiddlyText(place,v.formatString(columnTemplate.dateFormat));
		}
};

ListView.columnTypes.StringList = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				for(var t=0; t&lt;v.length; t++) {
					createTiddlyText(place,v[t]);
					createTiddlyElement(place,"br");
				}
			}
		}
};

ListView.columnTypes.Selector = {
	createHeader: function(place,columnTemplate,col)
		{
			createTiddlyCheckbox(place,null,false,this.onHeaderChange);
		},
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var e = createTiddlyCheckbox(place,null,listObject[field],null);
			e.setAttribute("rowName",listObject[columnTemplate.rowName]);
		},
	onHeaderChange: function(e)
		{
			var state = this.checked;
			var view = findRelated(this,"TABLE");
			if(!view)
				return;
			ListView.forEachSelector(view,function(e,rowName) {
								e.checked = state;
							});
		}
};

ListView.columnTypes.Tags = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var tags = listObject[field];
			createTiddlyText(place,String.encodeTiddlyLinkList(tags));
		}
};

ListView.columnTypes.Boolean = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			if(listObject[field] == true)
				createTiddlyText(place,columnTemplate.trueText);
			if(listObject[field] == false)
				createTiddlyText(place,columnTemplate.falseText);
		}
};

ListView.columnTypes.TagCheckbox = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var e = createTiddlyCheckbox(place,null,listObject[field],this.onChange);
			e.setAttribute("tiddler",listObject.title);
			e.setAttribute("tag",columnTemplate.tag);
		},
	onChange : function(e)
		{
			var tag = this.getAttribute("tag");
			var tiddler = this.getAttribute("tiddler");
			store.setTiddlerTag(tiddler,this.checked,tag);
		}
};

ListView.columnTypes.TiddlerLink = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				var link = createTiddlyLink(place,listObject[columnTemplate.tiddlerLink],false,null);
				createTiddlyText(link,listObject[field]);
			}
		}
};

//--
//-- Augmented methods for the JavaScript Number(), Array(), String() and Date() objects
//--

// Clamp a number to a range
Number.prototype.clamp = function(min,max)
{
	var c = this;
	if(c &lt; min)
		c = min;
	if(c &gt; max)
		c = max;
	return c;
};

// Add indexOf function if browser does not support it
if(!Array.indexOf) {
Array.prototype.indexOf = function(item,from)
{
	if(!from)
		from = 0;
	for(var i=from; i&lt;this.length; i++) {
		if(this[i] === item)
			return i;
	}
	return -1;
};}

// Find an entry in a given field of the members of an array
Array.prototype.findByField = function(field,value)
{
	for(var t=0; t&lt;this.length; t++) {
		if(this[t][field] == value)
			return t;
	}
	return null;
};

// Return whether an entry exists in an array
Array.prototype.contains = function(item)
{
	return this.indexOf(item) != -1;
};

// Adds, removes or toggles a particular value within an array
//  value - value to add
//  mode - +1 to add value, -1 to remove value, 0 to toggle it
Array.prototype.setItem = function(value,mode)
{
	var p = this.indexOf(value);
	if(mode == 0)
		mode = (p == -1) ? +1 : -1;
	if(mode == +1) {
		if(p == -1)
			this.push(value);
	} else if(mode == -1) {
		if(p != -1)
			this.splice(p,1);
	}
};

// Return whether one of a list of values exists in an array
Array.prototype.containsAny = function(items)
{
	for(var i=0; i&lt;items.length; i++) {
		if (this.indexOf(items[i]) != -1)
			return true;
	}
	return false;
};

// Return whether all of a list of values exists in an array
Array.prototype.containsAll = function(items)
{
	for (var i = 0; i&lt;items.length; i++) {
		if (this.indexOf(items[i]) == -1)
			return false;
	}
	return true;
};

// Push a new value into an array only if it is not already present in the array. If the optional unique parameter is false, it reverts to a normal push
Array.prototype.pushUnique = function(item,unique)
{
	if(unique === false) {
		this.push(item);
	} else {
		if(this.indexOf(item) == -1)
			this.push(item);
	}
};

Array.prototype.remove = function(item)
{
	var p = this.indexOf(item);
	if(p != -1)
		this.splice(p,1);
};

// Get characters from the right end of a string
String.prototype.right = function(n)
{
	return n &lt; this.length ? this.slice(this.length-n) : this;
};

// Trim whitespace from both ends of a string
String.prototype.trim = function()
{
	return this.replace(/^\s*|\s*$/g,"");
};

// Convert a string from a CSS style property name to a JavaScript style name ("background-color" -&gt; "backgroundColor")
String.prototype.unDash = function()
{
	var s = this.split("-");
	if(s.length &gt; 1) {
		for(var t=1; t&lt;s.length; t++)
			s[t] = s[t].substr(0,1).toUpperCase() + s[t].substr(1);
	}
	return s.join("");
};

// Substitute substrings from an array into a format string that includes '%1'-type specifiers
String.prototype.format = function(substrings)
{
	var subRegExp = /(?:%(\d+))/mg;
	var currPos = 0;
	var r = [];
	do {
		var match = subRegExp.exec(this);
		if(match &amp;&amp; match[1]) {
			if(match.index &gt; currPos)
				r.push(this.substring(currPos,match.index));
			r.push(substrings[parseInt(match[1])]);
			currPos = subRegExp.lastIndex;
		}
	} while(match);
	if(currPos &lt; this.length)
		r.push(this.substring(currPos,this.length));
	return r.join("");
};

// Escape any special RegExp characters with that character preceded by a backslash
String.prototype.escapeRegExp = function()
{
	var s = "\\^$*+?()=!|,{}[].";
	var c = this;
	for(var t=0; t&lt;s.length; t++)
		c = c.replace(new RegExp("\\" + s.substr(t,1),"g"),"\\" + s.substr(t,1));
	return c;
};

// Convert "\" to "\s", newlines to "\n" (and remove carriage returns)
String.prototype.escapeLineBreaks = function()
{
	return this.replace(/\\/mg,"\\s").replace(/\n/mg,"\\n").replace(/\r/mg,"");
};

// Convert "\n" to newlines, "\b" to " ", "\s" to "\" (and remove carriage returns)
String.prototype.unescapeLineBreaks = function()
{
	return this.replace(/\\n/mg,"\n").replace(/\\b/mg," ").replace(/\\s/mg,"\\").replace(/\r/mg,"");
};

// Convert &amp; to "&amp;amp;", &lt; to "&amp;lt;", &gt; to "&amp;gt;" and " to "&amp;quot;"
String.prototype.htmlEncode = function()
{
	return this.replace(/&amp;/mg,"&amp;amp;").replace(/&lt;/mg,"&amp;lt;").replace(/&gt;/mg,"&amp;gt;").replace(/\"/mg,"&amp;quot;");
};

// Convert "&amp;amp;" to &amp;, "&amp;lt;" to &lt;, "&amp;gt;" to &gt; and "&amp;quot;" to "
String.prototype.htmlDecode = function()
{
	return this.replace(/&amp;lt;/mg,"&lt;").replace(/&amp;gt;/mg,"&gt;").replace(/&amp;quot;/mg,"\"").replace(/&amp;amp;/mg,"&amp;");
};

// Convert a string to it's JSON representation by encoding control characters, double quotes and backslash. See json.org
String.prototype.toJSONString = function()
{
	var m = {
		'\b': '\\b',
		'\f': '\\f',
		'\n': '\\n',
		'\r': '\\r',
		'\t': '\\t',
		'"' : '\\"',
		'\\': '\\\\'
		};
	var replaceFn = function(a,b) {
		var c = m[b];
		if(c)
			return c;
		c = b.charCodeAt();
		return '\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
		};
	if(/["\\\x00-\x1f]/.test(this))
		return '"' + this.replace(/([\x00-\x1f\\"])/g,replaceFn) + '"';
	return '"' + this + '"';
};

// Parse a space-separated string of name:value parameters
// The result is an array of objects:
//   result[0] = object with a member for each parameter name, value of that member being an array of values
//   result[1..n] = one object for each parameter, with 'name' and 'value' members
String.prototype.parseParams = function(defaultName,defaultValue,allowEval,noNames,cascadeDefaults)
{
	var parseToken = function(match,p) {
		var n;
		if(match[p]) // Double quoted
			n = match[p];
		else if(match[p+1]) // Single quoted
			n = match[p+1];
		else if(match[p+2]) // Double-square-bracket quoted
			n = match[p+2];
		else if(match[p+3]) // Double-brace quoted
			try {
				n = match[p+3];
				if(allowEval)
					n = window.eval(n);
			} catch(ex) {
				throw "Unable to evaluate {{" + match[p+3] + "}}: " + exceptionText(ex);
			}
		else if(match[p+4]) // Unquoted
			n = match[p+4];
		else if(match[p+5]) // empty quote
			n = "";
		return n;
	};
	var r = [{}];
	var dblQuote = "(?:\"((?:(?:\\\\\")|[^\"])+)\")";
	var sngQuote = "(?:'((?:(?:\\\\\')|[^'])+)')";
	var dblSquare = "(?:\\[\\[((?:\\s|\\S)*?)\\]\\])";
	var dblBrace = "(?:\\{\\{((?:\\s|\\S)*?)\\}\\})";
	var unQuoted = noNames ? "([^\"'\\s]\\S*)" : "([^\"':\\s][^\\s:]*)";
	var emptyQuote = "((?:\"\")|(?:''))";
	var skipSpace = "(?:\\s*)";
	var token = "(?:" + dblQuote + "|" + sngQuote + "|" + dblSquare + "|" + dblBrace + "|" + unQuoted + "|" + emptyQuote + ")";
	var re = noNames ? new RegExp(token,"mg") : new RegExp(skipSpace + token + skipSpace + "(?:(\\:)" + skipSpace + token + ")?","mg");
	var params = [];
	do {
		var match = re.exec(this);
		if(match) {
			var n = parseToken(match,1);
			if(noNames) {
				r.push({name:"",value:n});
			} else {
				var v = parseToken(match,8);
				if(v == null &amp;&amp; defaultName) {
					v = n;
					n = defaultName;
				} else if(v == null &amp;&amp; defaultValue) {
					v = defaultValue;
				}
				r.push({name:n,value:v});
				if(cascadeDefaults) {
					defaultName = n;
					defaultValue = v;
				}
			}
		}
	} while(match);
	// Summarise parameters into first element
	for(var t=1; t&lt;r.length; t++) {
		if(r[0][r[t].name])
			r[0][r[t].name].push(r[t].value);
		else
			r[0][r[t].name] = [r[t].value];
	}
	return r;
};

// Process a string list of macro parameters into an array. Parameters can be quoted with "", '',
// [[]], {{ }} or left unquoted (and therefore space-separated). Double-braces {{}} results in
// an *evaluated* parameter: e.g. {{config.options.txtUserName}} results in the current user's name.
String.prototype.readMacroParams = function()
{
	var p = this.parseParams("list",null,true,true);
	var n = [];
	for(var t=1; t&lt;p.length; t++)
		n.push(p[t].value);
	return n;
};

// Process a string list of unique tiddler names into an array. Tiddler names that have spaces in them must be [[bracketed]]
String.prototype.readBracketedList = function(unique)
{
	var p = this.parseParams("list",null,false,true);
	var n = [];
	for(var t=1; t&lt;p.length; t++) {
		if(p[t].value)
			n.pushUnique(p[t].value,unique);
	}
	return n;
};

// Returns array with start and end index of chunk between given start and end marker, or undefined.
String.prototype.getChunkRange = function(start,end)
{
	var s = this.indexOf(start);
	if(s != -1) {
		s += start.length;
		var e = this.indexOf(end,s);
		if(e != -1)
			return [s,e];
	}
};

// Replace a chunk of a string given start and end markers
String.prototype.replaceChunk = function(start,end,sub)
{
	var r = this.getChunkRange(start,end);
	return r ? this.substring(0,r[0]) + sub + this.substring(r[1]) : this;
};

// Returns a chunk of a string between start and end markers, or undefined
String.prototype.getChunk = function(start,end)
{
	var r = this.getChunkRange(start,end);
	if(r)
		return this.substring(r[0],r[1]);
};


// Static method to bracket a string with double square brackets if it contains a space
String.encodeTiddlyLink = function(title)
{
	return title.indexOf(" ") == -1 ? title : "[[" + title + "]]";
};

// Static method to encodeTiddlyLink for every item in an array and join them with spaces
String.encodeTiddlyLinkList = function(list)
{
	if(list) {
		var results = [];
		for(var t=0; t&lt;list.length; t++)
			results.push(String.encodeTiddlyLink(list[t]));
		return results.join(" ");
	} else {
		return "";
	}
};

// Convert a string as a sequence of name:"value" pairs into a hashmap
String.prototype.decodeHashMap = function()
{
	var fields = this.parseParams("anon","",false);
	var r = {};
	for(var t=1; t&lt;fields.length; t++)
		r[fields[t].name] = fields[t].value;
	return r;
};

// Static method to encode a hashmap into a name:"value"... string
String.encodeHashMap = function(hashmap)
{
	var r = [];
	for(var t in hashmap)
		r.push(t + ':"' + hashmap[t] + '"');
	return r.join(" ");
};

// Static method to left-pad a string with 0s to a certain width
String.zeroPad = function(n,d)
{
	var s = n.toString();
	if(s.length &lt; d)
		s = "000000000000000000000000000".substr(0,d-s.length) + s;
	return s;
};

String.prototype.startsWith = function(prefix)
{
	return !prefix || this.substring(0,prefix.length) == prefix;
};

// Returns the first value of the given named parameter.
function getParam(params,name,defaultValue)
{
	if(!params)
		return defaultValue;
	var p = params[0][name];
	return p ? p[0] : defaultValue;
}

// Returns the first value of the given boolean named parameter.
function getFlag(params,name,defaultValue)
{
	return !!getParam(params,name,defaultValue);
}

// Substitute date components into a string
Date.prototype.formatString = function(template)
{
	var t = template.replace(/0hh12/g,String.zeroPad(this.getHours12(),2));
	t = t.replace(/hh12/g,this.getHours12());
	t = t.replace(/0hh/g,String.zeroPad(this.getHours(),2));
	t = t.replace(/hh/g,this.getHours());
	t = t.replace(/mmm/g,config.messages.dates.shortMonths[this.getMonth()]);
	t = t.replace(/0mm/g,String.zeroPad(this.getMinutes(),2));
	t = t.replace(/mm/g,this.getMinutes());
	t = t.replace(/0ss/g,String.zeroPad(this.getSeconds(),2));
	t = t.replace(/ss/g,this.getSeconds());
	t = t.replace(/[ap]m/g,this.getAmPm().toLowerCase());
	t = t.replace(/[AP]M/g,this.getAmPm().toUpperCase());
	t = t.replace(/wYYYY/g,this.getYearForWeekNo());
	t = t.replace(/wYY/g,String.zeroPad(this.getYearForWeekNo()-2000,2));
	t = t.replace(/YYYY/g,this.getFullYear());
	t = t.replace(/YY/g,String.zeroPad(this.getFullYear()-2000,2));
	t = t.replace(/MMM/g,config.messages.dates.months[this.getMonth()]);
	t = t.replace(/0MM/g,String.zeroPad(this.getMonth()+1,2));
	t = t.replace(/MM/g,this.getMonth()+1);
	t = t.replace(/0WW/g,String.zeroPad(this.getWeek(),2));
	t = t.replace(/WW/g,this.getWeek());
	t = t.replace(/DDD/g,config.messages.dates.days[this.getDay()]);
	t = t.replace(/ddd/g,config.messages.dates.shortDays[this.getDay()]);
	t = t.replace(/0DD/g,String.zeroPad(this.getDate(),2));
	t = t.replace(/DDth/g,this.getDate()+this.daySuffix());
	t = t.replace(/DD/g,this.getDate());
	return t;
};

Date.prototype.getWeek = function()
{
	var dt = new Date(this.getTime());
	var d = dt.getDay();
	if (d==0) d=7;// JavaScript Sun=0, ISO Sun=7
	dt.setTime(dt.getTime()+(4-d)*86400000);// shift day to Thurs of same week to calculate weekNo
	var n = Math.floor((dt.getTime()-new Date(dt.getFullYear(),0,1)+3600000)/86400000);
	return Math.floor(n/7)+1;
};

Date.prototype.getYearForWeekNo = function()
{
	var dt = new Date(this.getTime());
	var d = dt.getDay();
	if (d==0) d=7;// JavaScript Sun=0, ISO Sun=7
	dt.setTime(dt.getTime()+(4-d)*86400000);// shift day to Thurs of same week
	return dt.getFullYear();
};

Date.prototype.getHours12 = function()
{
	var h = this.getHours();
	return h &gt; 12 ? h-12 : ( h &gt; 0 ? h : 12 );
};

Date.prototype.getAmPm = function()
{
	return this.getHours() &gt;= 12 ? config.messages.dates.pm : config.messages.dates.am;
};

Date.prototype.daySuffix = function()
{
	return config.messages.dates.daySuffixes[this.getDate()-1];
};

// Convert a date to local YYYYMMDDHHMM string format
Date.prototype.convertToLocalYYYYMMDDHHMM = function()
{
	return String.zeroPad(this.getFullYear(),4) + String.zeroPad(this.getMonth()+1,2) + String.zeroPad(this.getDate(),2) + String.zeroPad(this.getHours(),2) + String.zeroPad(this.getMinutes(),2);
};

// Convert a date to UTC YYYYMMDDHHMM string format
Date.prototype.convertToYYYYMMDDHHMM = function()
{
	return String.zeroPad(this.getUTCFullYear(),4) + String.zeroPad(this.getUTCMonth()+1,2) + String.zeroPad(this.getUTCDate(),2) + String.zeroPad(this.getUTCHours(),2) + String.zeroPad(this.getUTCMinutes(),2);
};

// Convert a date to UTC YYYYMMDD.HHMMSSMMM string format
Date.prototype.convertToYYYYMMDDHHMMSSMMM = function()
{
	return String.zeroPad(this.getUTCFullYear(),4) + String.zeroPad(this.getUTCMonth()+1,2) + String.zeroPad(this.getUTCDate(),2) + "." + String.zeroPad(this.getUTCHours(),2) + String.zeroPad(this.getUTCMinutes(),2) + String.zeroPad(this.getUTCSeconds(),2) + String.zeroPad(this.getUTCMilliseconds(),4);
};

// Static method to create a date from a UTC YYYYMMDDHHMM format string
Date.convertFromYYYYMMDDHHMM = function(d)
{
	return new Date(Date.UTC(parseInt(d.substr(0,4),10),
			parseInt(d.substr(4,2),10)-1,
			parseInt(d.substr(6,2),10),
			parseInt(d.substr(8,2),10),
			parseInt(d.substr(10,2),10),0,0));
};

//--
//-- Crypto functions and associated conversion routines
//--

// Crypto "namespace"
function Crypto() {}

// Convert a string to an array of big-endian 32-bit words
Crypto.strToBe32s = function(str)
{
	var be = Array();
	var len = Math.floor(str.length/4);
	var i, j;
	for(i=0, j=0; i&lt;len; i++, j+=4) {
		be[i] = ((str.charCodeAt(j)&amp;0xff) &lt;&lt; 24)|((str.charCodeAt(j+1)&amp;0xff) &lt;&lt; 16)|((str.charCodeAt(j+2)&amp;0xff) &lt;&lt; 8)|(str.charCodeAt(j+3)&amp;0xff);
	}
	while (j&lt;str.length) {
		be[j&gt;&gt;2] |= (str.charCodeAt(j)&amp;0xff)&lt;&lt;(24-(j*8)%32);
		j++;
	}
	return be;
};

// Convert an array of big-endian 32-bit words to a string
Crypto.be32sToStr = function(be)
{
	var str = "";
	for(var i=0;i&lt;be.length*32;i+=8)
		str += String.fromCharCode((be[i&gt;&gt;5]&gt;&gt;&gt;(24-i%32)) &amp; 0xff);
	return str;
};

// Convert an array of big-endian 32-bit words to a hex string
Crypto.be32sToHex = function(be)
{
	var hex = "0123456789ABCDEF";
	var str = "";
	for(var i=0;i&lt;be.length*4;i++)
		str += hex.charAt((be[i&gt;&gt;2]&gt;&gt;((3-i%4)*8+4))&amp;0xF) + hex.charAt((be[i&gt;&gt;2]&gt;&gt;((3-i%4)*8))&amp;0xF);
	return str;
};

// Return, in hex, the SHA-1 hash of a string
Crypto.hexSha1Str = function(str)
{
	return Crypto.be32sToHex(Crypto.sha1Str(str));
};

// Return the SHA-1 hash of a string
Crypto.sha1Str = function(str)
{
	return Crypto.sha1(Crypto.strToBe32s(str),str.length);
};

// Calculate the SHA-1 hash of an array of blen bytes of big-endian 32-bit words
Crypto.sha1 = function(x,blen)
{
	// Add 32-bit integers, wrapping at 32 bits
	add32 = function(a,b)
	{
		var lsw = (a&amp;0xFFFF)+(b&amp;0xFFFF);
		var msw = (a&gt;&gt;16)+(b&gt;&gt;16)+(lsw&gt;&gt;16);
		return (msw&lt;&lt;16)|(lsw&amp;0xFFFF);
	};
	// Add five 32-bit integers, wrapping at 32 bits
	add32x5 = function(a,b,c,d,e)
	{
		var lsw = (a&amp;0xFFFF)+(b&amp;0xFFFF)+(c&amp;0xFFFF)+(d&amp;0xFFFF)+(e&amp;0xFFFF);
		var msw = (a&gt;&gt;16)+(b&gt;&gt;16)+(c&gt;&gt;16)+(d&gt;&gt;16)+(e&gt;&gt;16)+(lsw&gt;&gt;16);
		return (msw&lt;&lt;16)|(lsw&amp;0xFFFF);
	};
	// Bitwise rotate left a 32-bit integer by 1 bit
	rol32 = function(n)
	{
		return (n&gt;&gt;&gt;31)|(n&lt;&lt;1);
	};

	var len = blen*8;
	// Append padding so length in bits is 448 mod 512
	x[len&gt;&gt;5] |= 0x80 &lt;&lt; (24-len%32);
	// Append length
	x[((len+64&gt;&gt;9)&lt;&lt;4)+15] = len;
	var w = Array(80);

	var k1 = 0x5A827999;
	var k2 = 0x6ED9EBA1;
	var k3 = 0x8F1BBCDC;
	var k4 = 0xCA62C1D6;

	var h0 = 0x67452301;
	var h1 = 0xEFCDAB89;
	var h2 = 0x98BADCFE;
	var h3 = 0x10325476;
	var h4 = 0xC3D2E1F0;

	for(var i=0;i&lt;x.length;i+=16) {
		var j,t;
		var a = h0;
		var b = h1;
		var c = h2;
		var d = h3;
		var e = h4;
		for(j = 0;j&lt;16;j++) {
			w[j] = x[i+j];
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),d^(b&amp;(c^d)),w[j],k1);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=16;j&lt;20;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),d^(b&amp;(c^d)),w[j],k1);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=20;j&lt;40;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),b^c^d,w[j],k2);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=40;j&lt;60;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),(b&amp;c)|(d&amp;(b|c)),w[j],k3);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=60;j&lt;80;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),b^c^d,w[j],k4);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}

		h0 = add32(h0,a);
		h1 = add32(h1,b);
		h2 = add32(h2,c);
		h3 = add32(h3,d);
		h4 = add32(h4,e);
	}
	return Array(h0,h1,h2,h3,h4);
};

//--
//-- RGB colour object
//--

// Construct an RGB colour object from a '#rrggbb', '#rgb' or 'rgb(n,n,n)' string or from separate r,g,b values
function RGB(r,g,b)
{
	this.r = 0;
	this.g = 0;
	this.b = 0;
	if(typeof r == "string") {
		if(r.substr(0,1) == "#") {
			if(r.length == 7) {
				this.r = parseInt(r.substr(1,2),16)/255;
				this.g = parseInt(r.substr(3,2),16)/255;
				this.b = parseInt(r.substr(5,2),16)/255;
			} else {
				this.r = parseInt(r.substr(1,1),16)/15;
				this.g = parseInt(r.substr(2,1),16)/15;
				this.b = parseInt(r.substr(3,1),16)/15;
			}
		} else {
			var rgbPattern = /rgb\s*\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)/;
			var c = r.match(rgbPattern);
			if(c) {
				this.r = parseInt(c[1],10)/255;
				this.g = parseInt(c[2],10)/255;
				this.b = parseInt(c[3],10)/255;
			}
		}
	} else {
		this.r = r;
		this.g = g;
		this.b = b;
	}
	return this;
}

// Mixes this colour with another in a specified proportion
// c = other colour to mix
// f = 0..1 where 0 is this colour and 1 is the new colour
// Returns an RGB object
RGB.prototype.mix = function(c,f)
{
	return new RGB(this.r + (c.r-this.r) * f,this.g + (c.g-this.g) * f,this.b + (c.b-this.b) * f);
};

// Return an rgb colour as a #rrggbb format hex string
RGB.prototype.toString = function()
{
	return "#" + ("0" + Math.floor(this.r.clamp(0,1) * 255).toString(16)).right(2) +
				 ("0" + Math.floor(this.g.clamp(0,1) * 255).toString(16)).right(2) +
				 ("0" + Math.floor(this.b.clamp(0,1) * 255).toString(16)).right(2);
};

//--
//-- DOM utilities - many derived from www.quirksmode.org
//--

function drawGradient(place,horiz,colours)
{
	for(var t=0; t&lt;= 100; t+=2) {
		var bar = document.createElement("div");
		place.appendChild(bar);
		bar.style.position = "absolute";
		bar.style.left = horiz ? t + "%" : 0;
		bar.style.top = horiz ? 0 : t + "%";
		bar.style.width = horiz ? (101-t) + "%" : "100%";
		bar.style.height = horiz ? "100%" : (101-t) + "%";
		bar.style.zIndex = -1;
		var f = t/100;
		var p = f*(colours.length-1);
		bar.style.backgroundColor = colours[Math.floor(p)].mix(colours[Math.ceil(p)],p-Math.floor(p)).toString();
	}
}

function createTiddlyText(theParent,theText)
{
	return theParent.appendChild(document.createTextNode(theText));
}

function createTiddlyCheckbox(theParent,caption,checked,onChange)
{
	var cb = document.createElement("input");
	cb.setAttribute("type","checkbox");
	cb.onclick = onChange;
	theParent.appendChild(cb);
	cb.checked = checked;
	cb.className = "chkOptionInput";
	if(caption)
		wikify(caption,theParent);
	return cb;
}

function createTiddlyElement(theParent,theElement,theID,theClass,theText,attribs)
{
	var e = document.createElement(theElement);
	if(theClass != null)
		e.className = theClass;
	if(theID != null)
		e.setAttribute("id",theID);
	if(theText != null)
		e.appendChild(document.createTextNode(theText));
	if(attribs){
		for(var n in attribs){
			e.setAttribute(n,attribs[n]);
		}
	}
	if(theParent != null)
		theParent.appendChild(e);
	return e;
}

function addEvent(obj,type,fn)
{
	if(obj.attachEvent) {
		obj['e'+type+fn] = fn;
		obj[type+fn] = function(){obj['e'+type+fn](window.event);};
		obj.attachEvent('on'+type,obj[type+fn]);
	} else {
		obj.addEventListener(type,fn,false);
	}
}

function removeEvent(obj,type,fn)
{
	if(obj.detachEvent) {
		obj.detachEvent('on'+type,obj[type+fn]);
		obj[type+fn] = null;
	} else {
		obj.removeEventListener(type,fn,false);
	}
}

function addClass(e,theClass)
{
	var currClass = e.className.split(" ");
	if(currClass.indexOf(theClass) == -1)
		e.className += " " + theClass;
}

function removeClass(e,theClass)
{
	var currClass = e.className.split(" ");
	var i = currClass.indexOf(theClass);
	while(i != -1) {
		currClass.splice(i,1);
		i = currClass.indexOf(theClass);
	}
	e.className = currClass.join(" ");
}

function hasClass(e,theClass)
{
	if(e.className) {
		if(e.className.split(" ").indexOf(theClass) != -1)
			return true;
	}
	return false;
}

// Find the closest relative with a given property value (property defaults to tagName, relative defaults to parentNode)
function findRelated(e,value,name,relative)
{
	name = name ? name : "tagName";
	relative = relative ? relative : "parentNode";
	if(name == "className") {
		while(e &amp;&amp; !hasClass(e,value)) {
			e = e[relative];
		}
	} else {
		while(e &amp;&amp; e[name] != value) {
			e = e[relative];
		}
	}
	return e;
}

// Resolve the target object of an event
function resolveTarget(e)
{
	var obj;
	if(e.target)
		obj = e.target;
	else if(e.srcElement)
		obj = e.srcElement;
	if(obj.nodeType == 3) // defeat Safari bug
		obj = obj.parentNode;
	return obj;
}

// Return the content of an element as plain text with no formatting
function getPlainText(e)
{
	var text = "";
	if(e.innerText)
		text = e.innerText;
	else if(e.textContent)
		text = e.textContent;
	return text;
}

// Get the scroll position for window.scrollTo necessary to scroll a given element into view
function ensureVisible(e)
{
	var posTop = findPosY(e);
	var posBot = posTop + e.offsetHeight;
	var winTop = findScrollY();
	var winHeight = findWindowHeight();
	var winBot = winTop + winHeight;
	if(posTop &lt; winTop) {
		return posTop;
	} else if(posBot &gt; winBot) {
		if(e.offsetHeight &lt; winHeight)
			return posTop - (winHeight - e.offsetHeight);
		else
			return posTop;
	} else {
		return winTop;
	}
}

// Get the current width of the display window
function findWindowWidth()
{
	return window.innerWidth ? window.innerWidth : document.documentElement.clientWidth;
}

// Get the current height of the display window
function findWindowHeight()
{
	return window.innerHeight ? window.innerHeight : document.documentElement.clientHeight;
}

// Get the current horizontal page scroll position
function findScrollX()
{
	return window.scrollX ? window.scrollX : document.documentElement.scrollLeft;
}

// Get the current vertical page scroll position
function findScrollY()
{
	return window.scrollY ? window.scrollY : document.documentElement.scrollTop;
}

function findPosX(obj)
{
	var curleft = 0;
	while(obj.offsetParent) {
		curleft += obj.offsetLeft;
		obj = obj.offsetParent;
	}
	return curleft;
}

function findPosY(obj)
{
	var curtop = 0;
	while(obj.offsetParent) {
		curtop += obj.offsetTop;
		obj = obj.offsetParent;
	}
	return curtop;
}

// Blur a particular element
function blurElement(e)
{
	if(e != null &amp;&amp; e.focus &amp;&amp; e.blur) {
		e.focus();
		e.blur();
	}
}

// Create a non-breaking space
function insertSpacer(place)
{
	var e = document.createTextNode(String.fromCharCode(160));
	if(place)
		place.appendChild(e);
	return e;
}

// Remove all children of a node
function removeChildren(e)
{
	while(e &amp;&amp; e.hasChildNodes())
		removeNode(e.firstChild);
}

// Remove a node and all it's children
function removeNode(e)
{
	scrubNode(e);
	e.parentNode.removeChild(e);
}

// Remove any event handlers or non-primitve custom attributes
function scrubNode(e)
{
	if(!config.browser.isIE)
		return;
	var att = e.attributes;
	if(att) {
		for(var t=0; t&lt;att.length; t++) {
			var n = att[t].name;
			if(n !== 'style' &amp;&amp; (typeof e[n] === 'function' || (typeof e[n] === 'object' &amp;&amp; e[n] != null))) {
				try {
					e[n] = null;
				} catch(ex) {
				}
			}
		}
	}
	var c = e.firstChild;
	while(c) {
		scrubNode(c);
		c = c.nextSibling;
	}
}

// Add a stylesheet, replacing any previous custom stylesheet
function setStylesheet(s,id,doc)
{
	if(!id)
		id = "customStyleSheet";
	if(!doc)
		doc = document;
	var n = doc.getElementById(id);
	if(doc.createStyleSheet) {
		// Test for IE's non-standard createStyleSheet method
		if(n)
			n.parentNode.removeChild(n);
		// This failed without the &amp;nbsp;
		doc.getElementsByTagName("head")[0].insertAdjacentHTML("beforeEnd","&amp;nbsp;&lt;style id='" + id + "'&gt;" + s + "&lt;/style&gt;");
	} else {
		if(n) {
			n.replaceChild(doc.createTextNode(s),n.firstChild);
		} else {
			n = doc.createElement("style");
			n.type = "text/css";
			n.id = id;
			n.appendChild(doc.createTextNode(s));
			doc.getElementsByTagName("head")[0].appendChild(n);
		}
	}
}

// Force the browser to do a document reflow when needed to workaround browser bugs
function forceReflow()
{
	if(config.browser.isGecko) {
		setStylesheet("body {top:-1em;margin-top:1em;}");
		setStylesheet("");
	}
}

// Replace the current selection of a textarea or text input and scroll it into view
function replaceSelection(e,text)
{
	if(e.setSelectionRange) {
		var oldpos = e.selectionStart;
		var isRange = e.selectionEnd &gt; e.selectionStart;
		e.value = e.value.substr(0,e.selectionStart) + text + e.value.substr(e.selectionEnd);
		e.setSelectionRange(isRange ? oldpos : oldpos + text.length,oldpos + text.length);
		var linecount = e.value.split('\n').length;
		var thisline = e.value.substr(0,e.selectionStart).split('\n').length-1;
		e.scrollTop = Math.floor((thisline - e.rows / 2) * e.scrollHeight / linecount);
	} else if(document.selection) {
		var range = document.selection.createRange();
		if(range.parentElement() == e) {
			var isCollapsed = range.text == "";
			range.text = text;
			if(!isCollapsed) {
				range.moveStart('character', -text.length);
				range.select();
			}
		}
	}
}

// Returns the text of the given (text) node, possibly merging subsequent text nodes
function getNodeText(e)
{
	var t = "";
	while(e &amp;&amp; e.nodeName == "#text") {
		t += e.nodeValue;
		e = e.nextSibling;
	}
	return t;
}

//--
//-- LoaderBase and SaverBase
//--

function LoaderBase() {}

LoaderBase.prototype.loadTiddler = function(store,node,tiddlers)
{
	var title = this.getTitle(store,node);
	if(title) {
		var tiddler = store.createTiddler(title);
		this.internalizeTiddler(store,tiddler,title,node);
		tiddlers.push(tiddler);
	}
};

LoaderBase.prototype.loadTiddlers = function(store,nodes)
{
	var tiddlers = [];
	for(var t = 0; t &lt; nodes.length; t++) {
		try {
			this.loadTiddler(store,nodes[t],tiddlers);
		} catch(ex) {
			showException(ex,config.messages.tiddlerLoadError.format([this.getTitle(store,nodes[t])]));
		}
	}
	return tiddlers;
};

function SaverBase() {}

SaverBase.prototype.externalize = function(store)
{
	var results = [];
	var tiddlers = store.getTiddlers("title");
	for(var t = 0; t &lt; tiddlers.length; t++)
		results.push(this.externalizeTiddler(store,tiddlers[t]));
	return results.join("\n");
};

//--
//-- TW21Loader (inherits from LoaderBase)
//--

function TW21Loader() {}

TW21Loader.prototype = new LoaderBase();

TW21Loader.prototype.getTitle = function(store,node)
{
	var title = null;
	if(node.getAttribute) {
		title = node.getAttribute("title");
		if(!title)
			title = node.getAttribute("tiddler");
	}
	if(!title &amp;&amp; node.id) {
		var lenPrefix = store.idPrefix.length;
		if (node.id.substr(0,lenPrefix) == store.idPrefix)
			title = node.id.substr(lenPrefix);
	}
	return title;
};

TW21Loader.prototype.internalizeTiddler = function(store,tiddler,title,node)
{
	var e = node.firstChild;
	var text = null;
	if(node.getAttribute("tiddler")) {
		text = getNodeText(e).unescapeLineBreaks();
	} else {
		while(e.nodeName!="PRE" &amp;&amp; e.nodeName!="pre") {
			e = e.nextSibling;
		}
		text = e.innerHTML.replace(/\r/mg,"").htmlDecode();
	}
	var modifier = node.getAttribute("modifier");
	var c = node.getAttribute("created");
	var m = node.getAttribute("modified");
	var created = c ? Date.convertFromYYYYMMDDHHMM(c) : version.date;
	var modified = m ? Date.convertFromYYYYMMDDHHMM(m) : created;
	var tags = node.getAttribute("tags");
	var fields = {};
	var attrs = node.attributes;
	for(var i = attrs.length-1; i &gt;= 0; i--) {
		var name = attrs[i].name;
		if (attrs[i].specified &amp;&amp; !TiddlyWiki.isStandardField(name)) {
			fields[name] = attrs[i].value.unescapeLineBreaks();
		}
	}
	tiddler.assign(title,text,modifier,modified,tags,created,fields);
	return tiddler;
};

//--
//-- TW21Saver (inherits from SaverBase)
//--

function TW21Saver() {}

TW21Saver.prototype = new SaverBase();

TW21Saver.prototype.externalizeTiddler = function(store,tiddler)
{
	try {
		var extendedAttributes = "";
		var usePre = config.options.chkUsePreForStorage;
		store.forEachField(tiddler,
			function(tiddler,fieldName,value) {
				// don't store stuff from the temp namespace
				if(typeof value != "string")
					value = "";
				if (!fieldName.match(/^temp\./))
					extendedAttributes += ' %0="%1"'.format([fieldName,value.escapeLineBreaks().htmlEncode()]);
			},true);
		var created = tiddler.created.convertToYYYYMMDDHHMM();
		var modified = tiddler.modified.convertToYYYYMMDDHHMM();
		var vdate = version.date.convertToYYYYMMDDHHMM();
		var attributes = tiddler.modifier ? ' modifier="' + tiddler.modifier.htmlEncode() + '"' : "";
		attributes += (usePre &amp;&amp; modified == created) ? "" : ' modified="' + modified +'"';
		attributes += (usePre &amp;&amp; created == vdate) ? "" :' created="' + created + '"';
		var tags = tiddler.getTags();
		if(!usePre || tags)
			attributes += ' tags="' + tags.htmlEncode() + '"';
		return ('&lt;div %0="%1"%2%3&gt;%4&lt;/'+'div&gt;').format([
				usePre ? "title" : "tiddler",
				tiddler.title.htmlEncode(),
				attributes,
				extendedAttributes,
				usePre ? "\n&lt;pre&gt;" + tiddler.text.htmlEncode() + "&lt;/pre&gt;\n" : tiddler.text.escapeLineBreaks().htmlEncode()
			]);
	} catch (ex) {
		throw exceptionText(ex,config.messages.tiddlerSaveError.format([tiddler.title]));
	}
};

//--
//-- Deprecated code
//--

// @Deprecated: Use createElementAndWikify and this.termRegExp instead
config.formatterHelpers.charFormatHelper = function(w)
{
	w.subWikify(createTiddlyElement(w.output,this.element),this.terminator);
};

// @Deprecated: Use enclosedTextHelper and this.lookaheadRegExp instead
config.formatterHelpers.monospacedByLineHelper = function(w)
{
	var lookaheadRegExp = new RegExp(this.lookahead,"mg");
	lookaheadRegExp.lastIndex = w.matchStart;
	var lookaheadMatch = lookaheadRegExp.exec(w.source);
	if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
		var text = lookaheadMatch[1];
		if(config.browser.isIE)
			text = text.replace(/\n/g,"\r");
		createTiddlyElement(w.output,"pre",null,null,text);
		w.nextMatch = lookaheadRegExp.lastIndex;
	}
};

// @Deprecated: Use &lt;br&gt; or &lt;br /&gt; instead of &lt;&lt;br&gt;&gt;
config.macros.br = {};
config.macros.br.handler = function(place)
{
	createTiddlyElement(place,"br");
};

// Find an entry in an array. Returns the array index or null
// @Deprecated: Use indexOf instead
Array.prototype.find = function(item)
{
	var i = this.indexOf(item);
	return i == -1 ? null : i;
};

// Load a tiddler from an HTML DIV. The caller should make sure to later call Tiddler.changed()
// @Deprecated: Use store.getLoader().internalizeTiddler instead
Tiddler.prototype.loadFromDiv = function(divRef,title)
{
	return store.getLoader().internalizeTiddler(store,this,title,divRef);
};

// Format the text for storage in an HTML DIV
// @Deprecated Use store.getSaver().externalizeTiddler instead.
Tiddler.prototype.saveToDiv = function()
{
	return store.getSaver().externalizeTiddler(store,this);
};

// @Deprecated: Use store.allTiddlersAsHtml() instead
function allTiddlersAsHtml()
{
	return store.allTiddlersAsHtml();
}

// @Deprecated: Use refreshPageTemplate instead
function applyPageTemplate(title)
{
	refreshPageTemplate(title);
}

// @Deprecated: Use story.displayTiddlers instead
function displayTiddlers(srcElement,titles,template,unused1,unused2,animate,unused3)
{
	story.displayTiddlers(srcElement,titles,template,animate);
}

// @Deprecated: Use story.displayTiddler instead
function displayTiddler(srcElement,title,template,unused1,unused2,animate,unused3)
{
	story.displayTiddler(srcElement,title,template,animate);
}

// @Deprecated: Use functions on right hand side directly instead
var createTiddlerPopup = Popup.create;
var scrollToTiddlerPopup = Popup.show;
var hideTiddlerPopup = Popup.remove;

// @Deprecated: Use right hand side directly instead
var regexpBackSlashEn = new RegExp("\\\\n","mg");
var regexpBackSlash = new RegExp("\\\\","mg");
var regexpBackSlashEss = new RegExp("\\\\s","mg");
var regexpNewLine = new RegExp("\n","mg");
var regexpCarriageReturn = new RegExp("\r","mg");
//--
//-- End of scripts
//--
</t>
<t tx="ekr.20071027111751">@language javascript
</t>
<t tx="ekr.20071027111751.1">// Restarting
function restart()
{
	invokeParamifier(params,"onstart");
	if(story.isEmpty()) {
		var tiddlers = store.filterTiddlers(store.getTiddlerText("DefaultTiddlers"));
		for(var t=0; t&lt;tiddlers.length; t++) {
			story.displayTiddler("bottom",tiddlers[t].title);
		}
	}
	window.scrollTo(0,0);
}

function saveTest()
{
	var s = document.getElementById("saveTest");
	if(s.hasChildNodes())
		alert(config.messages.savedSnapshotError);
	s.appendChild(document.createTextNode("savetest"));
}

function loadShadowTiddlers()
{
	var shadows = new TiddlyWiki();
	shadows.loadFromDiv("shadowArea","shadows",true);
	shadows.forEachTiddler(function(title,tiddler){config.shadowTiddlers[title] = tiddler.text;});
	delete shadows;
}

function loadPlugins()
{
	if(safeMode)
		return false;
	var tiddlers = store.getTaggedTiddlers("systemConfig");
	var toLoad = [];
	var nLoaded = 0;
	var map = {};
	var nPlugins = tiddlers.length;
	installedPlugins = [];
	for(var i=0; i&lt;nPlugins; i++) {
		var p = getPluginInfo(tiddlers[i]);
		installedPlugins[i] = p;
		var n = p.Name;
		if(n)
			map[n] = p;
		n = p.Source;
		if(n)
			map[n] = p;
	}
	var visit = function(p) {
		if(!p || p.done)
			return;
		p.done = 1;
		var reqs = p.Requires;
		if(reqs) {
			reqs = reqs.readBracketedList();
			for(var i=0; i&lt;reqs.length; i++)
				visit(map[reqs[i]]);
		}
		toLoad.push(p);
	};
	for(i=0; i&lt;nPlugins; i++)
		visit(installedPlugins[i]);
	for(i=0; i&lt;toLoad.length; i++) {
		p = toLoad[i];
		pluginInfo = p;
		tiddler = p.tiddler;
		if(isPluginExecutable(p)) {
			if(isPluginEnabled(p)) {
				p.executed = true;
				var startTime = new Date();
				try {
					if(tiddler.text)
						window.eval(tiddler.text);
					nLoaded++;
				} catch(ex) {
					p.log.push(config.messages.pluginError.format([exceptionText(ex)]));
					p.error = true;
				}
				pluginInfo.startupTime = String((new Date()) - startTime) + "ms";
			} else {
				nPlugins--;
			}
		} else {
			p.warning = true;
		}
	}
	return nLoaded != nPlugins;
}

function getPluginInfo(tiddler)
{
	var p = store.getTiddlerSlices(tiddler.title,["Name","Description","Version","Requires","CoreVersion","Date","Source","Author","License","Browsers"]);
	p.tiddler = tiddler;
	p.title = tiddler.title;
	p.log = [];
	return p;
}

// Check that a particular plugin is valid for execution
function isPluginExecutable(plugin)
{
	if(plugin.tiddler.isTagged("systemConfigForce"))
		return verifyTail(plugin,true,config.messages.pluginForced);
	if(plugin["CoreVersion"]) {
		var coreVersion = plugin["CoreVersion"].split(".");
		var w = parseInt(coreVersion[0]) - version.major;
		if(w == 0 &amp;&amp; coreVersion[1])
			w = parseInt(coreVersion[1]) - version.minor;
		if(w == 0 &amp;&amp; coreVersion[2])
		 	w = parseInt(coreVersion[2]) - version.revision;
		if(w &gt; 0)
			return verifyTail(plugin,false,config.messages.pluginVersionError);
		}
	return true;
}

function isPluginEnabled(plugin)
{
	if(plugin.tiddler.isTagged("systemConfigDisable"))
		return verifyTail(plugin,false,config.messages.pluginDisabled);
	return true;
}

function verifyTail(plugin,result,message)
{
	plugin.log.push(message);
	return result;
}

function invokeMacro(place,macro,params,wikifier,tiddler)
{
	try {
		var m = config.macros[macro];
		if(m &amp;&amp; m.handler)
			m.handler(place,macro,params.readMacroParams(),wikifier,params,tiddler);
		else
			createTiddlyError(place,config.messages.macroError.format([macro]),config.messages.macroErrorDetails.format([macro,config.messages.missingMacro]));
	} catch(ex) {
		createTiddlyError(place,config.messages.macroError.format([macro]),config.messages.macroErrorDetails.format([macro,ex.toString()]));
	}
}

//--
//-- Paramifiers
//--

function getParameters()
{
	var p = null;
	if(window.location.hash) {
		p = decodeURI(window.location.hash.substr(1));
		if(config.browser.firefoxDate != null &amp;&amp; config.browser.firefoxDate[1] &lt; "20051111")
			p = convertUTF8ToUnicode(p);
	}
	return p;
}

function invokeParamifier(params,handler)
{
	if(!params || params.length == undefined || params.length &lt;= 1)
		return;
	for(var t=1; t&lt;params.length; t++) {
		var p = config.paramifiers[params[t].name];
		if(p &amp;&amp; p[handler] instanceof Function)
			p[handler](params[t].value);
	}
}

config.paramifiers = {};

config.paramifiers.start = {
	oninit: function(v) {
		safeMode = v.toLowerCase() == "safe";
	}
};

config.paramifiers.open = {
	onstart: function(v) {
		story.displayTiddler("bottom",v,null,false,null);
	}
};

config.paramifiers.story = {
	onstart: function(v) {
		var list = store.getTiddlerText(v,"").parseParams("open",null,false);
		invokeParamifier(list,"onstart");
	}
};

config.paramifiers.search = {
	onstart: function(v) {
		story.search(v,false,false);
	}
};

config.paramifiers.searchRegExp = {
	onstart: function(v) {
		story.prototype.search(v,false,true);
	}
};

config.paramifiers.tag = {
	onstart: function(v) {
		var tagged = store.getTaggedTiddlers(v,"title");
		for(var t=0; t&lt;tagged.length; t++)
			story.displayTiddler("bottom",tagged[t].title,null,false,null);
	}
};

config.paramifiers.newTiddler = {
	onstart: function(v) {
		if(!readOnly) {
			story.displayTiddler(null,v,DEFAULT_EDIT_TEMPLATE);
			story.focusTiddler(v,"text");
		}
	}
};

config.paramifiers.newJournal = {
	onstart: function(v) {
		if(!readOnly) {
			var now = new Date();
			var title = now.formatString(v.trim());
			story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE);
			story.focusTiddler(title,"text");
		}
	}
};

config.paramifiers.readOnly = {
	onconfig: function(v) {
		var p = v.toLowerCase();
		readOnly = p == "yes" ? true : (p == "no" ? false : readOnly);
	}
};

//--
//-- Formatter helpers
//--

function Formatter(formatters)
{
	this.formatters = [];
	var pattern = [];
	for(var n=0; n&lt;formatters.length; n++) {
		pattern.push("(" + formatters[n].match + ")");
		this.formatters.push(formatters[n]);
	}
	this.formatterRegExp = new RegExp(pattern.join("|"),"mg");
}

config.formatterHelpers = {

	createElementAndWikify: function(w)
	{
		w.subWikifyTerm(createTiddlyElement(w.output,this.element),this.termRegExp);
	},

	inlineCssHelper: function(w)
	{
		var styles = [];
		config.textPrimitives.cssLookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = config.textPrimitives.cssLookaheadRegExp.exec(w.source);
		while(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch) {
			var s,v;
			if(lookaheadMatch[1]) {
				s = lookaheadMatch[1].unDash();
				v = lookaheadMatch[2];
			} else {
				s = lookaheadMatch[3].unDash();
				v = lookaheadMatch[4];
			}
			if (s=="bgcolor")
				s = "backgroundColor";
			styles.push({style: s, value: v});
			w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
			config.textPrimitives.cssLookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = config.textPrimitives.cssLookaheadRegExp.exec(w.source);
		}
		return styles;
	},

	applyCssHelper: function(e,styles)
	{
		for(var t=0; t&lt; styles.length; t++) {
			try {
				e.style[styles[t].style] = styles[t].value;
			} catch (ex) {
			}
		}
	},

	enclosedTextHelper: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			var text = lookaheadMatch[1];
			if(config.browser.isIE)
				text = text.replace(/\n/g,"\r");
			createTiddlyElement(w.output,this.element,null,null,text);
			w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
		}
	},

	isExternalLink: function(link)
	{
		if(store.tiddlerExists(link) || store.isShadowTiddler(link)) {
			return false;
		}
		var urlRegExp = new RegExp(config.textPrimitives.urlPattern,"mg");
		if(urlRegExp.exec(link)) {
			return true;
		}
		if (link.indexOf(".")!=-1 || link.indexOf("\\")!=-1 || link.indexOf("/")!=-1 || link.indexOf("#")!=-1) {
			return true;
		}
		return false;
	}

};

//--
//-- Standard formatters
//--

config.formatters = [
{
	name: "table",
	match: "^\\|(?:[^\\n]*)\\|(?:[fhck]?)$",
	lookaheadRegExp: /^\|([^\n]*)\|([fhck]?)$/mg,
	rowTermRegExp: /(\|(?:[fhck]?)$\n?)/mg,
	cellRegExp: /(?:\|([^\n\|]*)\|)|(\|[fhck]?$\n?)/mg,
	cellTermRegExp: /((?:\x20*)\|)/mg,
	rowTypes: {"c":"caption", "h":"thead", "":"tbody", "f":"tfoot"},

	handler: function(w)
	{
		var table = createTiddlyElement(w.output,"table",null,"twtable");
		var prevColumns = [];
		var currRowType = null;
		var rowContainer;
		var rowCount = 0;
		w.nextMatch = w.matchStart;
		this.lookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		while(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch) {
			var nextRowType = lookaheadMatch[2];
			if(nextRowType == "k") {
				table.className = lookaheadMatch[1];
				w.nextMatch += lookaheadMatch[0].length+1;
			} else {
				if(nextRowType != currRowType) {
					rowContainer = createTiddlyElement(table,this.rowTypes[nextRowType]);
					currRowType = nextRowType;
				}
				if(currRowType == "c") {
					// Caption
					w.nextMatch++;
					if(rowContainer != table.firstChild)
						table.insertBefore(rowContainer,table.firstChild);
					rowContainer.setAttribute("align",rowCount == 0?"top":"bottom");
					w.subWikifyTerm(rowContainer,this.rowTermRegExp);
				} else {
					this.rowHandler(w,createTiddlyElement(rowContainer,"tr",null,(rowCount&amp;1)?"oddRow":"evenRow"),prevColumns);
					rowCount++;
				}
			}
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		}
	},
	rowHandler: function(w,e,prevColumns)
	{
		var col = 0;
		var colSpanCount = 1;
		var prevCell = null;
		this.cellRegExp.lastIndex = w.nextMatch;
		var cellMatch = this.cellRegExp.exec(w.source);
		while(cellMatch &amp;&amp; cellMatch.index == w.nextMatch) {
			if(cellMatch[1] == "~") {
				// Rowspan
				var last = prevColumns[col];
				if(last) {
					last.rowSpanCount++;
					last.element.setAttribute("rowspan",last.rowSpanCount);
					last.element.setAttribute("rowSpan",last.rowSpanCount); // Needed for IE
					last.element.valign = "center";
				}
				w.nextMatch = this.cellRegExp.lastIndex-1;
			} else if(cellMatch[1] == "&gt;") {
				// Colspan
				colSpanCount++;
				w.nextMatch = this.cellRegExp.lastIndex-1;
			} else if(cellMatch[2]) {
				// End of row
				if(prevCell &amp;&amp; colSpanCount &gt; 1) {
					prevCell.setAttribute("colspan",colSpanCount);
					prevCell.setAttribute("colSpan",colSpanCount); // Needed for IE
				}
				w.nextMatch = this.cellRegExp.lastIndex;
				break;
			} else {
				// Cell
				w.nextMatch++;
				var styles = config.formatterHelpers.inlineCssHelper(w);
				var spaceLeft = false;
				var chr = w.source.substr(w.nextMatch,1);
				while(chr == " ") {
					spaceLeft = true;
					w.nextMatch++;
					chr = w.source.substr(w.nextMatch,1);
				}
				var cell;
				if(chr == "!") {
					cell = createTiddlyElement(e,"th");
					w.nextMatch++;
				} else {
					cell = createTiddlyElement(e,"td");
				}
				prevCell = cell;
				prevColumns[col] = {rowSpanCount:1,element:cell};
				if(colSpanCount &gt; 1) {
					cell.setAttribute("colspan",colSpanCount);
					cell.setAttribute("colSpan",colSpanCount); // Needed for IE
					colSpanCount = 1;
				}
				config.formatterHelpers.applyCssHelper(cell,styles);
				w.subWikifyTerm(cell,this.cellTermRegExp);
				if(w.matchText.substr(w.matchText.length-2,1) == " ") // spaceRight
					cell.align = spaceLeft ? "center" : "left";
				else if(spaceLeft)
					cell.align = "right";
				w.nextMatch--;
			}
			col++;
			this.cellRegExp.lastIndex = w.nextMatch;
			cellMatch = this.cellRegExp.exec(w.source);
		}
	}
},

{
	name: "heading",
	match: "^!{1,6}",
	termRegExp: /(\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(createTiddlyElement(w.output,"h" + w.matchLength),this.termRegExp);
	}
},

{
	name: "list",
	match: "^(?:[\\*#;:]+)",
	lookaheadRegExp: /^(?:(?:(\*)|(#)|(;)|(:))+)/mg,
	termRegExp: /(\n)/mg,
	handler: function(w)
	{
		var stack = [w.output];
		var currLevel = 0, currType = null;
		var listLevel, listType, itemType, baseType;
		w.nextMatch = w.matchStart;
		this.lookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		while(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch) {
			if(lookaheadMatch[1]) {
				listType = "ul";
				itemType = "li";
			} else if(lookaheadMatch[2]) {
				listType = "ol";
				itemType = "li";
			} else if(lookaheadMatch[3]) {
				listType = "dl";
				itemType = "dt";
			} else if(lookaheadMatch[4]) {
				listType = "dl";
				itemType = "dd";
			}
			if (!baseType)
			   baseType = listType;
			listLevel = lookaheadMatch[0].length;
			w.nextMatch += lookaheadMatch[0].length;
			var t;
			if(listLevel &gt; currLevel) {
				for(t=currLevel; t&lt;listLevel; t++) {
					var target = (currLevel == 0) ? stack[stack.length-1] : stack[stack.length-1].lastChild;
					stack.push(createTiddlyElement(target,listType));
				}
			} else if (listType!=baseType &amp;&amp; listLevel==1) {
				w.nextMatch -= lookaheadMatch[0].length;
				return;
			} else if(listLevel &lt; currLevel) {
				for(t=currLevel; t&gt;listLevel; t--)
					stack.pop();
			} else if(listLevel == currLevel &amp;&amp; listType != currType) {
				stack.pop();
				stack.push(createTiddlyElement(stack[stack.length-1].lastChild,listType));
			}
			currLevel = listLevel;
			currType = listType;
			var e = createTiddlyElement(stack[stack.length-1],itemType);
			w.subWikifyTerm(e,this.termRegExp);
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		}
	}
},

{
	name: "quoteByBlock",
	match: "^&lt;&lt;&lt;\\n",
	termRegExp: /(^&lt;&lt;&lt;(\n|$))/mg,
	element: "blockquote",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "quoteByLine",
	match: "^&gt;+",
	lookaheadRegExp: /^&gt;+/mg,
	termRegExp: /(\n)/mg,
	element: "blockquote",
	handler: function(w)
	{
		var stack = [w.output];
		var currLevel = 0;
		var newLevel = w.matchLength;
		var t;
		do {
			if(newLevel &gt; currLevel) {
				for(t=currLevel; t&lt;newLevel; t++)
					stack.push(createTiddlyElement(stack[stack.length-1],this.element));
			} else if(newLevel &lt; currLevel) {
				for(t=currLevel; t&gt;newLevel; t--)
					stack.pop();
			}
			currLevel = newLevel;
			w.subWikifyTerm(stack[stack.length-1],this.termRegExp);
			createTiddlyElement(stack[stack.length-1],"br");
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
			var matched = lookaheadMatch &amp;&amp; lookaheadMatch.index == w.nextMatch;
			if(matched) {
				newLevel = lookaheadMatch[0].length;
				w.nextMatch += lookaheadMatch[0].length;
			}
		} while(matched);
	}
},

{
	name: "rule",
	match: "^----+$\\n?",
	handler: function(w)
	{
		createTiddlyElement(w.output,"hr");
	}
},

{
	name: "monospacedByLine",
	match: "^\\{\\{\\{\\n",
	lookaheadRegExp: /^\{\{\{\n((?:^[^\n]*\n)+?)(^\}\}\}$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "monospacedByLineForCSS",
	match: "^/\\*\\{\\{\\{\\*/\\n",
	lookaheadRegExp: /\/\*\{\{\{\*\/\n*((?:^[^\n]*\n)+?)(\n*^\/\*\}\}\}\*\/$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "monospacedByLineForPlugin",
	match: "^//\\{\\{\\{\\n",
	lookaheadRegExp: /^\/\/\{\{\{\n\n*((?:^[^\n]*\n)+?)(\n*^\/\/\}\}\}$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "monospacedByLineForTemplate",
	match: "^&lt;!--\\{\\{\\{--&gt;\\n",
	lookaheadRegExp: /&lt;!--\{\{\{--&gt;\n*((?:^[^\n]*\n)+?)(\n*^&lt;!--\}\}\}--&gt;$\n?)/mg,
	element: "pre",
	handler: config.formatterHelpers.enclosedTextHelper
},

{
	name: "wikifyCommentForPlugin",
	match: "^/\\*\\*\\*\\n",
	termRegExp: /(^\*\*\*\/\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(w.output,this.termRegExp);
	}
},

{
	name: "wikifyCommentForTemplate",
	match: "^&lt;!---\\n",
	termRegExp: /(^---&gt;\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(w.output,this.termRegExp);
	}
},

{
	name: "macro",
	match: "&lt;&lt;",
	lookaheadRegExp: /&lt;&lt;([^&gt;\s]+)(?:\s*)((?:[^&gt;]|(?:&gt;(?!&gt;)))*)&gt;&gt;/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart &amp;&amp; lookaheadMatch[1]) {
			w.nextMatch = this.lookaheadRegExp.lastIndex;
			invokeMacro(w.output,lookaheadMatch[1],lookaheadMatch[2],w,w.tiddler);
		}
	}
},

{
	name: "prettyLink",
	match: "\\[\\[",
	lookaheadRegExp: /\[\[(.*?)(?:\|(~)?(.*?))?\]\]/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			var e;
			var text = lookaheadMatch[1];
			if(lookaheadMatch[3]) {
				// Pretty bracketted link
				var link = lookaheadMatch[3];
				e = (!lookaheadMatch[2] &amp;&amp; config.formatterHelpers.isExternalLink(link)) ?
						createExternalLink(w.output,link) : createTiddlyLink(w.output,link,false,null,w.isStatic,w.tiddler);
			} else {
				// Simple bracketted link
				e = createTiddlyLink(w.output,text,false,null,w.isStatic,w.tiddler);
			}
			createTiddlyText(e,text);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "wikiLink",
	match: config.textPrimitives.unWikiLink+"?"+config.textPrimitives.wikiLink,
	handler: function(w)
	{
		if(w.matchText.substr(0,1) == config.textPrimitives.unWikiLink) {
			w.outputText(w.output,w.matchStart+1,w.nextMatch);
			return;
		}
		if(w.matchStart &gt; 0) {
			var preRegExp = new RegExp(config.textPrimitives.anyLetterStrict,"mg");
			preRegExp.lastIndex = w.matchStart-1;
			var preMatch = preRegExp.exec(w.source);
			if(preMatch.index == w.matchStart-1) {
				w.outputText(w.output,w.matchStart,w.nextMatch);
				return;
			}
		}
		if(w.autoLinkWikiWords == true || store.isShadowTiddler(w.matchText)) {
			var link = createTiddlyLink(w.output,w.matchText,false,null,w.isStatic,w.tiddler);
			w.outputText(link,w.matchStart,w.nextMatch);
		} else {
			w.outputText(w.output,w.matchStart,w.nextMatch);
		}
	}
},

{
	name: "urlLink",
	match: config.textPrimitives.urlPattern,
	handler: function(w)
	{
		w.outputText(createExternalLink(w.output,w.matchText),w.matchStart,w.nextMatch);
	}
},

{
	name: "image",
	match: "\\[[&lt;&gt;]?[Ii][Mm][Gg]\\[",
	lookaheadRegExp: /\[([&lt;]?)(&gt;?)[Ii][Mm][Gg]\[(?:([^\|\]]+)\|)?([^\[\]\|]+)\](?:\[([^\]]*)\])?\]/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			var e = w.output;
			if(lookaheadMatch[5]) {
				var link = lookaheadMatch[5];
				e = config.formatterHelpers.isExternalLink(link) ? createExternalLink(w.output,link) : createTiddlyLink(w.output,link,false,null,w.isStatic,w.tiddler);
				addClass(e,"imageLink");
			}
			var img = createTiddlyElement(e,"img");
			if(lookaheadMatch[1])
				img.align = "left";
			else if(lookaheadMatch[2])
				img.align = "right";
			if(lookaheadMatch[3])
				img.title = lookaheadMatch[3];
			img.src = lookaheadMatch[4];
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "html",
	match: "&lt;[Hh][Tt][Mm][Ll]&gt;",
	lookaheadRegExp: /&lt;[Hh][Tt][Mm][Ll]&gt;((?:.|\n)*?)&lt;\/[Hh][Tt][Mm][Ll]&gt;/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"span").innerHTML = lookaheadMatch[1];
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "commentByBlock",
	match: "/%",
	lookaheadRegExp: /\/%((?:.|\n)*?)%\//mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart)
			w.nextMatch = this.lookaheadRegExp.lastIndex;
	}
},

{
	name: "boldByChar",
	match: "''",
	termRegExp: /('')/mg,
	element: "strong",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "italicByChar",
	match: "//",
	termRegExp: /(\/\/)/mg,
	element: "em",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "underlineByChar",
	match: "__",
	termRegExp: /(__)/mg,
	element: "u",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "strikeByChar",
	match: "--(?!\\s|$)",
	termRegExp: /((?!\s)--|(?=\n\n))/mg,
	element: "strike",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "superscriptByChar",
	match: "\\^\\^",
	termRegExp: /(\^\^)/mg,
	element: "sup",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "subscriptByChar",
	match: "~~",
	termRegExp: /(~~)/mg,
	element: "sub",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "monospacedByChar",
	match: "\\{\\{\\{",
	lookaheadRegExp: /\{\{\{((?:.|\n)*?)\}\}\}/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"code",null,null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "styleByChar",
	match: "@@",
	termRegExp: /(@@)/mg,
	handler: function(w)
	{
		var e = createTiddlyElement(w.output,"span");
		var styles = config.formatterHelpers.inlineCssHelper(w);
		if(styles.length == 0)
			e.className = "marked";
		else
			config.formatterHelpers.applyCssHelper(e,styles);
		w.subWikifyTerm(e,this.termRegExp);
	}
},

{
	name: "lineBreak",
	match: "\\n|&lt;br ?/?&gt;",
	handler: function(w)
	{
		createTiddlyElement(w.output,"br");
	}
},

{
	name: "rawText",
	match: "\\\"{3}|&lt;nowiki&gt;",
	lookaheadRegExp: /(?:\"{3}|&lt;nowiki&gt;)((?:.|\n)*?)(?:\"{3}|&lt;\/nowiki&gt;)/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"span",null,null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "mdash",
	match: "--",
	handler: function(w)
	{
		createTiddlyElement(w.output,"span").innerHTML = "&amp;mdash;";
	}
},

{
	name: "htmlEntitiesEncoding",
	match: "(?:(?:&amp;#?[a-zA-Z0-9]{2,8};|.)(?:&amp;#?(?:x0*(?:3[0-6][0-9a-fA-F]|1D[c-fC-F][0-9a-fA-F]|20[d-fD-F][0-9a-fA-F]|FE2[0-9a-fA-F])|0*(?:76[89]|7[7-9][0-9]|8[0-7][0-9]|761[6-9]|76[2-7][0-9]|84[0-3][0-9]|844[0-7]|6505[6-9]|6506[0-9]|6507[0-1]));)+|&amp;#?[a-zA-Z0-9]{2,8};)",
	handler: function(w)
	{
		createTiddlyElement(w.output,"span").innerHTML = w.matchText;
	}
},

{
	name: "customClasses",
	match: "\\{\\{",
	termRegExp: /(\}\}\})/mg,
	lookaheadRegExp: /\{\{[\s]*([\w]+[\s\w]*)[\s]*\{(\n?)/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch) {
			var e = createTiddlyElement(w.output,lookaheadMatch[2] == "\n" ? "div" : "span",null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
			w.subWikifyTerm(e,this.termRegExp);
		}
	}
}

];

//--
//-- Wikifier
//--

function getParser(tiddler,format)
{
	if(tiddler) {
		if(!format)
			format = tiddler.fields["wikiformat"];
		var i;
		if(format) {
			for(i in config.parsers) {
				if(format == config.parsers[i].format)
					return config.parsers[i];
			}
		} else {
			for(i in config.parsers) {
				if(tiddler.isTagged(config.parsers[i].formatTag))
					return config.parsers[i];
			}
		}
	}
	return formatter;
}

function wikify(source,output,highlightRegExp,tiddler)
{
	if(source &amp;&amp; source != "") {
		var wikifier = new Wikifier(source,getParser(tiddler),highlightRegExp,tiddler);
		wikifier.subWikifyUnterm(output);
	}
}

function wikifyStatic(source,highlightRegExp,tiddler,format)
{
	var e = createTiddlyElement(document.body,"div");
	e.style.display = "none";
	var html = "";
	if(source &amp;&amp; source != "") {
		var wikifier = new Wikifier(source,getParser(tiddler,format),highlightRegExp,tiddler);
		wikifier.isStatic = true;
		wikifier.subWikifyUnterm(e);
		html = e.innerHTML;
		removeNode(e);
	}
	return html;
}

function wikifyPlain(title,theStore,limit)
{
	if(!theStore)
		theStore = store;
	if(theStore.tiddlerExists(title) || theStore.isShadowTiddler(title)) {
		return wikifyPlainText(theStore.getTiddlerText(title),limit,tiddler);
	} else {
		return "";
	}
}

function wikifyPlainText(text,limit,tiddler)
{
	if(limit &gt; 0)
		text = text.substr(0,limit);
	var wikifier = new Wikifier(text,formatter,null,tiddler);
	return wikifier.wikifyPlain();
}

function highlightify(source,output,highlightRegExp,tiddler)
{
	if(source &amp;&amp; source != "") {
		var wikifier = new Wikifier(source,formatter,highlightRegExp,tiddler);
		wikifier.outputText(output,0,source.length);
	}
}

function Wikifier(source,formatter,highlightRegExp,tiddler)
{
	this.source = source;
	this.output = null;
	this.formatter = formatter;
	this.nextMatch = 0;
	this.autoLinkWikiWords = tiddler &amp;&amp; tiddler.autoLinkWikiWords() == false ? false : true;
	this.highlightRegExp = highlightRegExp;
	this.highlightMatch = null;
	this.isStatic = false;
	if(highlightRegExp) {
		highlightRegExp.lastIndex = 0;
		this.highlightMatch = highlightRegExp.exec(source);
	}
	this.tiddler = tiddler;
}

Wikifier.prototype.wikifyPlain = function()
{
	var e = createTiddlyElement(document.body,"div");
	this.subWikify(e);
	var text = getPlainText(e);
	removeNode(e);
	return text;
};

Wikifier.prototype.subWikify = function(output,terminator)
{
	if(terminator)
		this.subWikifyTerm(output,new RegExp("(" + terminator + ")","mg"));
	else
		this.subWikifyUnterm(output);
};

Wikifier.prototype.subWikifyUnterm = function(output)
{
	// subWikify() can be indirectly recursive, so we need to save the old output pointer
	var oldOutput = this.output;
	this.output = output;
	this.formatter.formatterRegExp.lastIndex = this.nextMatch;
	var formatterMatch = this.formatter.formatterRegExp.exec(this.source);
	while(formatterMatch) {
		// Output any text before the match
		if(formatterMatch.index &gt; this.nextMatch)
			this.outputText(this.output,this.nextMatch,formatterMatch.index);
		// Set the match parameters for the handler
		this.matchStart = formatterMatch.index;
		this.matchLength = formatterMatch[0].length;
		this.matchText = formatterMatch[0];
		this.nextMatch = this.formatter.formatterRegExp.lastIndex;
		for(var t=1; t&lt;formatterMatch.length; t++) {
			if(formatterMatch[t]) {
				this.formatter.formatters[t-1].handler(this);
				this.formatter.formatterRegExp.lastIndex = this.nextMatch;
				break;
			}
		}
		formatterMatch = this.formatter.formatterRegExp.exec(this.source);
	}
	if(this.nextMatch &lt; this.source.length) {
		this.outputText(this.output,this.nextMatch,this.source.length);
		this.nextMatch = this.source.length;
	}
	this.output = oldOutput;
};

Wikifier.prototype.subWikifyTerm = function(output,terminatorRegExp)
{
	// subWikify() can be indirectly recursive, so we need to save the old output pointer
	var oldOutput = this.output;
	this.output = output;
	// Get the first matches for the formatter and terminator RegExps
	terminatorRegExp.lastIndex = this.nextMatch;
	var terminatorMatch = terminatorRegExp.exec(this.source);
	this.formatter.formatterRegExp.lastIndex = this.nextMatch;
	var formatterMatch = this.formatter.formatterRegExp.exec(terminatorMatch ? this.source.substr(0,terminatorMatch.index) : this.source);
	while(terminatorMatch || formatterMatch) {
		if(terminatorMatch &amp;&amp; (!formatterMatch || terminatorMatch.index &lt;= formatterMatch.index)) {
			if(terminatorMatch.index &gt; this.nextMatch)
				this.outputText(this.output,this.nextMatch,terminatorMatch.index);
			this.matchText = terminatorMatch[1];
			this.matchLength = terminatorMatch[1].length;
			this.matchStart = terminatorMatch.index;
			this.nextMatch = this.matchStart + this.matchLength;
			this.output = oldOutput;
			return;
		}
		if(formatterMatch.index &gt; this.nextMatch)
			this.outputText(this.output,this.nextMatch,formatterMatch.index);
		this.matchStart = formatterMatch.index;
		this.matchLength = formatterMatch[0].length;
		this.matchText = formatterMatch[0];
		this.nextMatch = this.formatter.formatterRegExp.lastIndex;
		for(var t=1; t&lt;formatterMatch.length; t++) {
			if(formatterMatch[t]) {
				this.formatter.formatters[t-1].handler(this);
				this.formatter.formatterRegExp.lastIndex = this.nextMatch;
				break;
			}
		}
		terminatorRegExp.lastIndex = this.nextMatch;
		terminatorMatch = terminatorRegExp.exec(this.source);
		formatterMatch = this.formatter.formatterRegExp.exec(terminatorMatch ? this.source.substr(0,terminatorMatch.index) : this.source);
	}
	if(this.nextMatch &lt; this.source.length) {
		this.outputText(this.output,this.nextMatch,this.source.length);
		this.nextMatch = this.source.length;
	}
	this.output = oldOutput;
};

Wikifier.prototype.outputText = function(place,startPos,endPos)
{
	while(this.highlightMatch &amp;&amp; (this.highlightRegExp.lastIndex &gt; startPos) &amp;&amp; (this.highlightMatch.index &lt; endPos) &amp;&amp; (startPos &lt; endPos)) {
		if(this.highlightMatch.index &gt; startPos) {
			createTiddlyText(place,this.source.substring(startPos,this.highlightMatch.index));
			startPos = this.highlightMatch.index;
		}
		var highlightEnd = Math.min(this.highlightRegExp.lastIndex,endPos);
		var theHighlight = createTiddlyElement(place,"span",null,"highlight",this.source.substring(startPos,highlightEnd));
		startPos = highlightEnd;
		if(startPos &gt;= this.highlightRegExp.lastIndex)
			this.highlightMatch = this.highlightRegExp.exec(this.source);
	}
	if(startPos &lt; endPos) {
		createTiddlyText(place,this.source.substring(startPos,endPos));
	}
};

//--
//-- Macro definitions
//--

config.macros.today.handler = function(place,macroName,params)
{
	var now = new Date();
	var text = params[0] ? now.formatString(params[0].trim()) : text = now.toLocaleString();
	createTiddlyElement(place,"span",null,null,text);
};

config.macros.version.handler = function(place)
{
	createTiddlyElement(place,"span",null,null,version.major + "." + version.minor + "." + version.revision + (version.beta ? " (beta " + version.beta + ")" : ""));
};

config.macros.list.handler = function(place,macroName,params)
{
	var type = params[0] ? params[0] : "all";
	var list = document.createElement("ul");
	place.appendChild(list);
	if(this[type].prompt)
		createTiddlyElement(list,"li",null,"listTitle",this[type].prompt);
	var results;
	if(this[type].handler)
		results = this[type].handler(params);
	for(var t = 0; t &lt; results.length; t++) {
		var li = document.createElement("li");
		list.appendChild(li);
		createTiddlyLink(li,typeof results[t] == "string" ? results[t] : results[t].title,true);
	}
};

config.macros.list.all.handler = function(params)
{
	return store.reverseLookup("tags","excludeLists",false,"title");
};

config.macros.list.missing.handler = function(params)
{
	return store.getMissingLinks();
};

config.macros.list.orphans.handler = function(params)
{
	return store.getOrphans();
};

config.macros.list.shadowed.handler = function(params)
{
	return store.getShadowed();
};

config.macros.list.touched.handler = function(params)
{
	return store.getTouched();
};

config.macros.list.filter.handler = function(params)
{
	var filter = params[1];
	var results = [];
	if(filter) {
		var tiddlers = store.filterTiddlers(filter);
		for(var t=0; t&lt;tiddlers.length; t++)
			results.push(tiddlers[t].title);
	}
	return results;
};

config.macros.allTags.handler = function(place,macroName,params)
{
	var tags = store.getTags(params[0]);
	var ul = createTiddlyElement(place,"ul");
	if(tags.length == 0)
		createTiddlyElement(ul,"li",null,"listTitle",this.noTags);
	for(var t=0; t&lt;tags.length; t++) {
		var title = tags[t][0];
		var info = getTiddlyLinkInfo(title);
		var li =createTiddlyElement(ul,"li");
		var btn = createTiddlyButton(li,title + " (" + tags[t][1] + ")",this.tooltip.format([title]),onClickTag,info.classes);
		btn.setAttribute("tag",title);
		btn.setAttribute("refresh","link");
		btn.setAttribute("tiddlyLink",title);
	}
};

config.macros.timeline.handler = function(place,macroName,params)
{
	var field = params[0] ? params[0] : "modified";
	var tiddlers = store.reverseLookup("tags","excludeLists",false,field);
	var lastDay = "";
	var last = params[1] ? tiddlers.length-Math.min(tiddlers.length,parseInt(params[1])) : 0;
	var dateFormat = params[2] ? params[2] : this.dateFormat;
	for(var t=tiddlers.length-1; t&gt;=last; t--) {
		var tiddler = tiddlers[t];
		var theDay = tiddler[field].convertToLocalYYYYMMDDHHMM().substr(0,8);
		if(theDay != lastDay) {
			var ul = document.createElement("ul");
			place.appendChild(ul);
			createTiddlyElement(ul,"li",null,"listTitle",tiddler[field].formatString(dateFormat));
			lastDay = theDay;
		}
		createTiddlyElement(ul,"li",null,"listLink").appendChild(createTiddlyLink(place,tiddler.title,true));
	}
};

config.macros.tiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("name",null,true,false,true);
	var names = params[0]["name"];
	var tiddlerName = names[0];
	var className = names[1] ? names[1] : null;
	var args = params[0]["with"];
	var wrapper = createTiddlyElement(place,"span",null,className);
	if(!args) {
		wrapper.setAttribute("refresh","content");
		wrapper.setAttribute("tiddler",tiddlerName);
	}
	var text = store.getTiddlerText(tiddlerName);
	if(text) {
		var stack = config.macros.tiddler.tiddlerStack;
		if(stack.indexOf(tiddlerName) !== -1)
			return;
		stack.push(tiddlerName);
		try {
			var n = args ? Math.min(args.length,9) : 0;
			for(var i=0; i&lt;n; i++) {
				var placeholderRE = new RegExp("\\$" + (i + 1),"mg");
				text = text.replace(placeholderRE,args[i]);
			}
			config.macros.tiddler.renderText(wrapper,text,tiddlerName,params);
		} finally {
			stack.pop();
		}
	}
};

config.macros.tiddler.renderText = function(place,text,tiddlerName,params)
{
	wikify(text,place,null,store.getTiddler(tiddlerName));
};

config.macros.tiddler.tiddlerStack = [];

config.macros.tag.handler = function(place,macroName,params)
{
	createTagButton(place,params[0]);
};

config.macros.tags.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var ul = createTiddlyElement(place,"ul");
	var title = getParam(params,"anon","");
	if(title &amp;&amp; store.tiddlerExists(title))
		tiddler = store.getTiddler(title);
	var sep = getParam(params,"sep"," ");
	var lingo = config.views.wikified.tag;
	var prompt = tiddler.tags.length == 0 ? lingo.labelNoTags : lingo.labelTags;
	createTiddlyElement(ul,"li",null,"listTitle",prompt.format([tiddler.title]));
	for(var t=0; t&lt;tiddler.tags.length; t++) {
		createTagButton(createTiddlyElement(ul,"li"),tiddler.tags[t],tiddler.title);
		if(t&lt;tiddler.tags.length-1)
			createTiddlyText(ul,sep);
	}
};

config.macros.tagging.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var ul = createTiddlyElement(place,"ul");
	var title = getParam(params,"anon","");
	if(title == "" &amp;&amp; tiddler instanceof Tiddler)
		title = tiddler.title;
	var sep = getParam(params,"sep"," ");
	ul.setAttribute("title",this.tooltip.format([title]));
	var tagged = store.getTaggedTiddlers(title);
	var prompt = tagged.length == 0 ? this.labelNotTag : this.label;
	createTiddlyElement(ul,"li",null,"listTitle",prompt.format([title,tagged.length]));
	for(var t=0; t&lt;tagged.length; t++) {
		createTiddlyLink(createTiddlyElement(ul,"li"),tagged[t].title,true);
		if(t&lt;tagged.length-1)
			createTiddlyText(ul,sep);
	}
};

config.macros.closeAll.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.closeAll.onClick = function(e)
{
	story.closeAllTiddlers();
	return false;
};

config.macros.permaview.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.permaview.onClick = function(e)
{
	story.permaView();
	return false;
};

config.macros.saveChanges.handler = function(place)
{
	if(!readOnly)
		createTiddlyButton(place,this.label,this.prompt,this.onClick,null,null,this.accessKey);
};

config.macros.saveChanges.onClick = function(e)
{
	saveChanges();
	return false;
};

config.macros.slider.onClickSlider = function(ev)
{
	var e = ev ? ev : window.event;
	var n = this.nextSibling;
	var cookie = n.getAttribute("cookie");
	var isOpen = n.style.display != "none";
	if(config.options.chkAnimate &amp;&amp; anim &amp;&amp; typeof Slider == "function")
		anim.startAnimating(new Slider(n,!isOpen,null,"none"));
	else
		n.style.display = isOpen ? "none" : "block";
	config.options[cookie] = !isOpen;
	saveOptionCookie(cookie);
	return false;
};

config.macros.slider.createSlider = function(place,cookie,title,tooltip)
{
	var c = cookie ? cookie : "";
	var btn = createTiddlyButton(place,title,tooltip,this.onClickSlider);
	var panel = createTiddlyElement(null,"div",null,"sliderPanel");
	panel.setAttribute("cookie",c);
	panel.style.display = config.options[c] ? "block" : "none";
	place.appendChild(panel);
	return panel;
};

config.macros.slider.handler = function(place,macroName,params)
{
	var panel = this.createSlider(place,params[0],params[2],params[3]);
	var text = store.getTiddlerText(params[1]);
	panel.setAttribute("refresh","content");
	panel.setAttribute("tiddler",params[1]);
	if(text)
		wikify(text,panel,null,store.getTiddler(params[1]));
};

// &lt;&lt;gradient [[tiddler name]] vert|horiz rgb rgb rgb rgb... &gt;&gt;
config.macros.gradient.handler = function(place,macroName,params,wikifier)
{
	var panel = wikifier ? createTiddlyElement(place,"div",null,"gradient") : place;
	panel.style.position = "relative";
	panel.style.overflow = "hidden";
	panel.style.zIndex = "0";
	if(wikifier) {
		var styles = config.formatterHelpers.inlineCssHelper(wikifier);
		config.formatterHelpers.applyCssHelper(panel,styles);
	}
	var colours = [];
	for(var t=1; t&lt;params.length; t++) {
		var c = new RGB(params[t]);
		if(c)
			colours.push(c);
	}
	drawGradient(panel,params[0] != "vert",colours);
	if(wikifier)
		wikifier.subWikify(panel,"&gt;&gt;");
	if(document.all) {
		panel.style.height = "100%";
		panel.style.width = "100%";
	}
};

config.macros.message.handler = function(place,macroName,params)
{
	if(params[0]) {
		var m = config;
		var p = params[0].split(".");
		for(var t=0; t&lt;p.length; t++) {
			if(p[t] in m)
				m = m[p[t]];
			else
				break;
		}
		createTiddlyText(place,m.toString().format(params.splice(1)));
	}
};

config.macros.view.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if((tiddler instanceof Tiddler) &amp;&amp; params[0]) {
		var value = store.getValue(tiddler,params[0]);
		if(value != undefined) {
			switch(params[1]) {
				case undefined:
					highlightify(value,place,highlightHack,tiddler);
					break;
				case "link":
					createTiddlyLink(place,value,true);
					break;
				case "wikified":
					wikify(value,place,highlightHack,tiddler);
					break;
				case "date":
					value = Date.convertFromYYYYMMDDHHMM(value);
					createTiddlyText(place,value.formatString(params[2] ? params[2] : config.views.wikified.dateFormat));
					break;
			}
		}
	}
};

config.macros.edit.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var field = params[0];
	var rows = params[1];
	if((tiddler instanceof Tiddler) &amp;&amp; field) {
		story.setDirty(tiddler.title,true);
		var e,v;
		if(field != "text" &amp;&amp; !rows) {
			e = createTiddlyElement(null,"input");
			if(tiddler.isReadOnly())
				e.setAttribute("readOnly","readOnly");
			e.setAttribute("edit",field);
			e.setAttribute("type","text");
			v = store.getValue(tiddler,field);
			if(!v)
				v = "";
			e.value = v;
			e.setAttribute("size","40");
			e.setAttribute("autocomplete","off");
			place.appendChild(e);
		} else {
			var wrapper1 = createTiddlyElement(null,"fieldset",null,"fieldsetFix");
			var wrapper2 = createTiddlyElement(wrapper1,"div");
			e = createTiddlyElement(wrapper2,"textarea");
			if(tiddler.isReadOnly())
				e.setAttribute("readOnly","readOnly");
			v = store.getValue(tiddler,field);
			if(!v)
				v = "";
			e.value = v;
			rows = rows ? rows : 10;
			var lines = v.match(/\n/mg);
			var maxLines = Math.max(parseInt(config.options.txtMaxEditRows),5);
			if(lines != null &amp;&amp; lines.length &gt; rows)
				rows = lines.length + 5;
			rows = Math.min(rows,maxLines);
			e.setAttribute("rows",rows);
			e.setAttribute("edit",field);
			place.appendChild(wrapper1);
		}
	}
};

config.macros.tagChooser.onClick = function(ev)
{
	var e = ev ? ev : window.event;
	var lingo = config.views.editor.tagChooser;
	var popup = Popup.create(this);
	var tags = store.getTags();
	if(tags.length == 0)
		createTiddlyText(createTiddlyElement(popup,"li"),lingo.popupNone);
	for(var t=0; t&lt;tags.length; t++) {
		var tag = createTiddlyButton(createTiddlyElement(popup,"li"),tags[t][0],lingo.tagTooltip.format([tags[t][0]]),config.macros.tagChooser.onTagClick);
		tag.setAttribute("tag",tags[t][0]);
		tag.setAttribute("tiddler",this.getAttribute("tiddler"));
	}
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
};

config.macros.tagChooser.onTagClick = function(ev)
{
	var e = ev ? ev : window.event;
	var tag = this.getAttribute("tag");
	var title = this.getAttribute("tiddler");
	if(!readOnly)
		story.setTiddlerTag(title,tag,0);
	return false;
};

config.macros.tagChooser.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(tiddler instanceof Tiddler) {
		var lingo = config.views.editor.tagChooser;
		var btn = createTiddlyButton(place,lingo.text,lingo.tooltip,this.onClick);
		btn.setAttribute("tiddler",tiddler.title);
	}
};

config.macros.refreshDisplay.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.refreshDisplay.onClick = function(e)
{
	refreshAll();
	return false;
};

config.macros.annotations.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var title = tiddler ? tiddler.title : null;
	var a = title ? config.annotations[title] : null;
	if(!tiddler || !title || !a)
		return;
	var text = a.format([title]);
	wikify(text,createTiddlyElement(place,"div",null,"annotation"),null,tiddler);
};

//--
//-- NewTiddler and NewJournal macros
//--

config.macros.newTiddler.createNewTiddlerButton = function(place,title,params,label,prompt,accessKey,newFocus,isJournal)
{
	var tags = [];
	for(var t=1; t&lt;params.length; t++) {
		if((params[t].name == "anon" &amp;&amp; t != 1) || (params[t].name == "tag"))
			tags.push(params[t].value);
	}
	label = getParam(params,"label",label);
	prompt = getParam(params,"prompt",prompt);
	accessKey = getParam(params,"accessKey",accessKey);
	newFocus = getParam(params,"focus",newFocus);
	var customFields = getParam(params,"fields","");
	if(!customFields &amp;&amp; !store.isShadowTiddler(title))
		customFields = String.encodeHashMap(config.defaultCustomFields);
	var btn = createTiddlyButton(place,label,prompt,this.onClickNewTiddler,null,null,accessKey);
	btn.setAttribute("newTitle",title);
	btn.setAttribute("isJournal",isJournal ? "true" : "false");
	if(tags.length &gt; 0)
		btn.setAttribute("params",tags.join("|"));
	btn.setAttribute("newFocus",newFocus);
	btn.setAttribute("newTemplate",getParam(params,"template",DEFAULT_EDIT_TEMPLATE));
	if(customFields !== "")
		btn.setAttribute("customFields",customFields);
	var text = getParam(params,"text");
	if(text !== undefined)
		btn.setAttribute("newText",text);
	return btn;
};

config.macros.newTiddler.onClickNewTiddler = function()
{
	var title = this.getAttribute("newTitle");
	if(this.getAttribute("isJournal") == "true") {
		var now = new Date();
		title = now.formatString(title.trim());
	}
	var params = this.getAttribute("params");
	var tags = params ? params.split("|") : [];
	var focus = this.getAttribute("newFocus");
	var template = this.getAttribute("newTemplate");
	var customFields = this.getAttribute("customFields");
	story.displayTiddler(null,title,template,false,null,null);
	var tiddlerElem = document.getElementById(story.idPrefix + title);
	if(customFields)
		story.addCustomFields(tiddlerElem,customFields);
	var text = this.getAttribute("newText");
	if(typeof text == "string")
		story.getTiddlerField(title,"text").value = text.format([title]);
	for(var t=0;t&lt;tags.length;t++)
		story.setTiddlerTag(title,tags[t],+1);
	story.focusTiddler(title,focus);
	return false;
};

config.macros.newTiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(!readOnly) {
		params = paramString.parseParams("anon",null,true,false,false);
		var title = params[1] &amp;&amp; params[1].name == "anon" ? params[1].value : this.title;
		title = getParam(params,"title",title);
		this.createNewTiddlerButton(place,title,params,this.label,this.prompt,this.accessKey,"title",false);
	}
};

config.macros.newJournal.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(!readOnly) {
		params = paramString.parseParams("anon",null,true,false,false);
		var title = params[1] &amp;&amp; params[1].name == "anon" ? params[1].value : config.macros.timeline.dateFormat;
		title = getParam(params,"title",title);
		config.macros.newTiddler.createNewTiddlerButton(place,title,params,this.label,this.prompt,this.accessKey,"text",true);
	}
};

//--
//-- Search macro
//--

config.macros.search.handler = function(place,macroName,params)
{
	var searchTimeout = null;
	var btn = createTiddlyButton(place,this.label,this.prompt,this.onClick);
	var txt = createTiddlyElement(place,"input",null,"txtOptionInput");
	if(params[0])
		txt.value = params[0];
	txt.onkeyup = this.onKeyPress;
	txt.onfocus = this.onFocus;
	txt.setAttribute("size",this.sizeTextbox);
	txt.setAttribute("accessKey",this.accessKey);
	txt.setAttribute("autocomplete","off");
	txt.setAttribute("lastSearchText","");
	if(config.browser.isSafari) {
		txt.setAttribute("type","search");
		txt.setAttribute("results","5");
	} else {
		txt.setAttribute("type","text");
	}
};

// Global because there's only ever one outstanding incremental search timer
config.macros.search.timeout = null;

config.macros.search.doSearch = function(txt)
{
	if(txt.value.length &gt; 0) {
		story.search(txt.value,config.options.chkCaseSensitiveSearch,config.options.chkRegExpSearch);
		txt.setAttribute("lastSearchText",txt.value);
	}
};

config.macros.search.onClick = function(e)
{
	config.macros.search.doSearch(this.nextSibling);
	return false;
};

config.macros.search.onKeyPress = function(ev)
{
	var e = ev ? ev : window.event;
	switch(e.keyCode) {
		case 13: // Ctrl-Enter
		case 10: // Ctrl-Enter on IE PC
			config.macros.search.doSearch(this);
			break;
		case 27: // Escape
			this.value = "";
			clearMessage();
			break;
	}
	if(this.value.length &gt; 2) {
		if(this.value != this.getAttribute("lastSearchText")) {
			if(config.macros.search.timeout)
				clearTimeout(config.macros.search.timeout);
			var txt = this;
			config.macros.search.timeout = setTimeout(function() {config.macros.search.doSearch(txt);},500);
		}
	} else {
		if(config.macros.search.timeout)
			clearTimeout(config.macros.search.timeout);
	}
};

config.macros.search.onFocus = function(e)
{
	this.select();
};

//--
//-- Tabs macro
//--

config.macros.tabs.handler = function(place,macroName,params)
{
	var cookie = params[0];
	var numTabs = (params.length-1)/3;
	var wrapper = createTiddlyElement(null,"div",null,cookie);
	var tabset = createTiddlyElement(wrapper,"div",null,"tabset");
	tabset.setAttribute("cookie",cookie);
	var validTab = false;
	for(var t=0; t&lt;numTabs; t++) {
		var label = params[t*3+1];
		var prompt = params[t*3+2];
		var content = params[t*3+3];
		var tab = createTiddlyButton(tabset,label,prompt,this.onClickTab,"tab tabUnselected");
		tab.setAttribute("tab",label);
		tab.setAttribute("content",content);
		tab.title = prompt;
		if(config.options[cookie] == label)
			validTab = true;
	}
	if(!validTab)
		config.options[cookie] = params[1];
	place.appendChild(wrapper);
	this.switchTab(tabset,config.options[cookie]);
};

config.macros.tabs.onClickTab = function(e)
{
	config.macros.tabs.switchTab(this.parentNode,this.getAttribute("tab"));
	return false;
};

config.macros.tabs.switchTab = function(tabset,tab)
{
	var cookie = tabset.getAttribute("cookie");
	var theTab = null;
	var nodes = tabset.childNodes;
	for(var t=0; t&lt;nodes.length; t++) {
		if(nodes[t].getAttribute &amp;&amp; nodes[t].getAttribute("tab") == tab) {
			theTab = nodes[t];
			theTab.className = "tab tabSelected";
		} else {
			nodes[t].className = "tab tabUnselected";
		}
	}
	if(theTab) {
		if(tabset.nextSibling &amp;&amp; tabset.nextSibling.className == "tabContents")
			removeNode(tabset.nextSibling);
		var tabContent = createTiddlyElement(null,"div",null,"tabContents");
		tabset.parentNode.insertBefore(tabContent,tabset.nextSibling);
		var contentTitle = theTab.getAttribute("content");
		wikify(store.getTiddlerText(contentTitle),tabContent,null,store.getTiddler(contentTitle));
		if(cookie) {
			config.options[cookie] = tab;
			saveOptionCookie(cookie);
		}
	}
};

//--
//-- Sparklines
//--

config.macros.sparkline = {};
config.macros.sparkline.handler = function(place,macroName,params)
{
	var data = [];
	var min = 0;
	var max = 0;
	var v;
	for(var t=0; t&lt;params.length; t++) {
		v = parseInt(params[t]);
		if(v &lt; min)
			min = v;
		if(v &gt; max)
			max = v;
		data.push(v);
	}
	if(data.length &lt; 1)
		return;
	var box = createTiddlyElement(place,"span",null,"sparkline",String.fromCharCode(160));
	box.title = data.join(",");
	var w = box.offsetWidth;
	var h = box.offsetHeight;
	box.style.paddingRight = (data.length * 2 - w) + "px";
	box.style.position = "relative";
	for(var d=0; d&lt;data.length; d++) {
		var tick = document.createElement("img");
		tick.border = 0;
		tick.className = "sparktick";
		tick.style.position = "absolute";
		tick.src = "data:image/gif,GIF89a%01%00%01%00%91%FF%00%FF%FF%FF%00%00%00%C0%C0%C0%00%00%00!%F9%04%01%00%00%02%00%2C%00%00%00%00%01%00%01%00%40%02%02T%01%00%3B";
		tick.style.left = d*2 + "px";
		tick.style.width = "2px";
		v = Math.floor(((data[d] - min)/(max-min)) * h);
		tick.style.top = (h-v) + "px";
		tick.style.height = v + "px";
		box.appendChild(tick);
	}
};

//--
//-- Tiddler toolbar
//--

// Create a toolbar command button
config.macros.toolbar.createCommand = function(place,commandName,tiddler,theClass)
{
	if(typeof commandName != "string") {
		var c = null;
		for(var t in config.commands) {
			if(config.commands[t] == commandName)
				c = t;
		}
		commandName = c;
	}
	if((tiddler instanceof Tiddler) &amp;&amp; (typeof commandName == "string")) {
		var command = config.commands[commandName];
		if(command.isEnabled ? command.isEnabled(tiddler) : this.isCommandEnabled(command,tiddler)) {
			var text = command.getText ? command.getText(tiddler) : this.getCommandText(command,tiddler);
			var tooltip = command.getTooltip ? command.getTooltip(tiddler) : this.getCommandTooltip(command,tiddler);
			var cmd;
			switch(command.type) {
				case "popup":
					cmd = this.onClickPopup;
					break;
				case "command":
				default:
					cmd = this.onClickCommand;
					break;
			}
			var btn = createTiddlyButton(null,text,tooltip,cmd);
			btn.setAttribute("commandName",commandName);
			btn.setAttribute("tiddler",tiddler.title);
			if(theClass)
				addClass(btn,theClass);
			place.appendChild(btn);
		}
	}
};

config.macros.toolbar.isCommandEnabled = function(command,tiddler)
{
	var title = tiddler.title;
	var ro = tiddler.isReadOnly();
	var shadow = store.isShadowTiddler(title) &amp;&amp; !store.tiddlerExists(title);
	return (!ro || (ro &amp;&amp; !command.hideReadOnly)) &amp;&amp; !(shadow &amp;&amp; command.hideShadow);
};

config.macros.toolbar.getCommandText = function(command,tiddler)
{
	return tiddler.isReadOnly() &amp;&amp; command.readOnlyText ? command.readOnlyText : command.text;
};

config.macros.toolbar.getCommandTooltip = function(command,tiddler)
{
	return tiddler.isReadOnly() &amp;&amp; command.readOnlyTooltip ? command.readOnlyTooltip : command.tooltip;
};

config.macros.toolbar.onClickCommand = function(ev)
{
	var e = ev ? ev : window.event;
	e.cancelBubble = true;
	if (e.stopPropagation) e.stopPropagation();
	var command = config.commands[this.getAttribute("commandName")];
	return command.handler(e,this,this.getAttribute("tiddler"));
};

config.macros.toolbar.onClickPopup = function(ev)
{
	var e = ev ? ev : window.event;
	e.cancelBubble = true;
	if (e.stopPropagation) e.stopPropagation();
	var popup = Popup.create(this);
	var command = config.commands[this.getAttribute("commandName")];
	var title = this.getAttribute("tiddler");
	var tiddler = store.fetchTiddler(title);
	popup.setAttribute("tiddler",title);
	command.handlePopup(popup,title);
	Popup.show();
	return false;
};

// Invoke the first command encountered from a given place that is tagged with a specified class
config.macros.toolbar.invokeCommand = function(place,theClass,event)
{
	var children = place.getElementsByTagName("a");
	for(var t=0; t&lt;children.length; t++) {
		var c = children[t];
		if(hasClass(c,theClass) &amp;&amp; c.getAttribute &amp;&amp; c.getAttribute("commandName")) {
			if(c.onclick instanceof Function)
				c.onclick.call(c,event);
			break;
		}
	}
};

config.macros.toolbar.onClickMore = function(ev)
{
	var e = this.nextSibling;
	e.style.display = "inline";
	removeNode(this);
	return false;
};

config.macros.toolbar.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	for(var t=0; t&lt;params.length; t++) {
		var c = params[t];
		switch(c) {
			case '&gt;':
				var btn = createTiddlyButton(place,this.moreLabel,this.morePrompt,config.macros.toolbar.onClickMore);
				addClass(btn,"moreCommand");
				var e = createTiddlyElement(place,"span",null,"moreCommand");
				e.style.display = "none";
				place = e;
				break;
			default:
				var theClass = "";
				switch(c.substr(0,1)) {
					case "+":
						theClass = "defaultCommand";
						c = c.substr(1);
						break;
					case "-":
						theClass = "cancelCommand";
						c = c.substr(1);
						break;
				}
				if(c in config.commands)
					this.createCommand(place,c,tiddler,theClass);
				break;
		}
	}
};

//--
//-- Menu and toolbar commands
//--

config.commands.closeTiddler.handler = function(event,src,title)
{
	story.closeTiddler(title,true);
	return false;
};

config.commands.closeOthers.handler = function(event,src,title)
{
	story.closeAllTiddlers(title);
	return false;
};

config.commands.editTiddler.handler = function(event,src,title)
{
	clearMessage();
	var tiddlerElem = document.getElementById(story.idPrefix + title);
	var fields = tiddlerElem.getAttribute("tiddlyFields");
	story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE,false,null,fields);
	story.focusTiddler(title,"text");
	return false;
};

config.commands.saveTiddler.handler = function(event,src,title)
{
	var newTitle = story.saveTiddler(title,event.shiftKey);
	if(newTitle)
		story.displayTiddler(null,newTitle);
	return false;
};

config.commands.cancelTiddler.handler = function(event,src,title)
{
	if(story.hasChanges(title) &amp;&amp; !readOnly) {
		if(!confirm(this.warning.format([title])))
			return false;
	}
	story.setDirty(title,false);
	story.displayTiddler(null,title);
	return false;
};

config.commands.deleteTiddler.handler = function(event,src,title)
{
	var deleteIt = true;
	if (config.options.chkConfirmDelete)
		deleteIt = confirm(this.warning.format([title]));
	if (deleteIt) {
		store.removeTiddler(title);
		story.closeTiddler(title,true);
		autoSaveChanges();
	}
	return false;
};

config.commands.permalink.handler = function(event,src,title)
{
	var t = encodeURIComponent(String.encodeTiddlyLink(title));
	if(window.location.hash != t)
		window.location.hash = t;
	return false;
};

config.commands.references.handlePopup = function(popup,title)
{
	var references = store.getReferringTiddlers(title);
	var c = false;
	for(var r=0; r&lt;references.length; r++) {
		if(references[r].title != title &amp;&amp; !references[r].isTagged("excludeLists")) {
			createTiddlyLink(createTiddlyElement(popup,"li"),references[r].title,true);
			c = true;
		}
	}
	if(!c)
		createTiddlyText(createTiddlyElement(popup,"li",null,"disabled"),this.popupNone);
};

config.commands.jump.handlePopup = function(popup,title)
{
	story.forEachTiddler(function(title,element) {
		createTiddlyLink(createTiddlyElement(popup,"li"),title,true,null,false,null,true);
		});
};

config.commands.syncing.handlePopup = function(popup,title)
{
	var tiddler = store.fetchTiddler(title);
	if(!tiddler)
		return;
	var serverType = tiddler.getServerType();
	var serverHost = tiddler.fields['server.host'];
	var serverWorkspace = tiddler.fields['server.workspace'];
	if(!serverWorkspace)
		serverWorkspace = "";
	if(serverType) {
		var e = createTiddlyElement(popup,"li",null,"popupMessage");
		e.innerHTML = config.commands.syncing.currentlySyncing.format([serverType,serverHost,serverWorkspace]);
	} else {
		createTiddlyElement(popup,"li",null,"popupMessage",config.commands.syncing.notCurrentlySyncing);
	}
	if(serverType) {
		createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
		var btn = createTiddlyButton(createTiddlyElement(popup,"li"),this.captionUnSync,null,config.commands.syncing.onChooseServer);
		btn.setAttribute("tiddler",title);
		btn.setAttribute("server.type","");
	}
	createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
	createTiddlyElement(popup,"li",null,"popupMessage",config.commands.syncing.chooseServer);
	var feeds = store.getTaggedTiddlers("systemServer","title");
	for(var t=0; t&lt;feeds.length; t++) {
		var f = feeds[t];
		var feedServerType = store.getTiddlerSlice(f.title,"Type");
		if(!feedServerType)
			feedServerType = "file";
		var feedServerHost = store.getTiddlerSlice(f.title,"URL");
		if(!feedServerHost)
			feedServerHost = "";
		var feedServerWorkspace = store.getTiddlerSlice(f.title,"Workspace");
		if(!feedServerWorkspace)
			feedServerWorkspace = "";
		var caption = f.title;
		if(serverType == feedServerType &amp;&amp; serverHost == feedServerHost &amp;&amp; serverWorkspace == feedServerWorkspace) {
			caption = config.commands.syncing.currServerMarker + caption;
		} else {
			caption = config.commands.syncing.notCurrServerMarker + caption;
		}
		btn = createTiddlyButton(createTiddlyElement(popup,"li"),caption,null,config.commands.syncing.onChooseServer);
		btn.setAttribute("tiddler",title);
		btn.setAttribute("server.type",feedServerType);
		btn.setAttribute("server.host",feedServerHost);
		btn.setAttribute("server.workspace",feedServerWorkspace);
	}
};

config.commands.syncing.onChooseServer = function(e)
{
	var tiddler = this.getAttribute("tiddler");
	var serverType = this.getAttribute("server.type");
	if(serverType) {
		store.addTiddlerFields(tiddler,{
			'server.type': serverType,
			'server.host': this.getAttribute("server.host"),
			'server.workspace': this.getAttribute("server.workspace")
			});
	} else {
		store.setValue(tiddler,'server',null);
	}
	return false;
};

config.commands.fields.handlePopup = function(popup,title)
{
	var tiddler = store.fetchTiddler(title);
	if(!tiddler)
		return;
	var fields = {};
	store.forEachField(tiddler,function(tiddler,fieldName,value) {fields[fieldName] = value;},true);
	var items = [];
	for(var t in fields) {
		items.push({field: t,value: fields[t]});
	}
	items.sort(function(a,b) {return a.field &lt; b.field ? -1 : (a.field == b.field ? 0 : +1);});
	if(items.length &gt; 0)
		ListView.create(popup,items,this.listViewTemplate);
	else
		createTiddlyElement(popup,"div",null,null,this.emptyText);
};

//--
//-- Tiddler() object
//--

function Tiddler(title)
{
	this.title = title;
	this.text = null;
	this.modifier = null;
	this.modified = new Date();
	this.created = new Date();
	this.links = [];
	this.linksUpdated = false;
	this.tags = [];
	this.fields = {};
	return this;
}

Tiddler.prototype.getLinks = function()
{
	if(this.linksUpdated==false)
		this.changed();
	return this.links;
};

// Returns the fields that are inherited in string field:"value" field2:"value2" format
Tiddler.prototype.getInheritedFields = function()
{
	var f = {};
	for(i in this.fields) {
		if(i=="server.host" || i=="server.workspace" || i=="wikiformat"|| i=="server.type") {
			f[i] = this.fields[i];
		}
	}
	return String.encodeHashMap(f);
};

// Increment the changeCount of a tiddler
Tiddler.prototype.incChangeCount = function()
{
	var c = this.fields['changecount'];
	c = c ? parseInt(c) : 0;
	this.fields['changecount'] = String(c+1);
};

// Clear the changeCount of a tiddler
Tiddler.prototype.clearChangeCount = function()
{
	if(this.fields['changecount']) {
		delete this.fields['changecount'];
	}
};

// Returns true if the tiddler has been updated since the tiddler was created or downloaded
Tiddler.prototype.isTouched = function()
{
	var changeCount = this.fields['changecount'];
	if(changeCount === undefined)
		changeCount = 0;
	return changeCount &gt; 0;
};

// Format the text for storage in an RSS item
Tiddler.prototype.saveToRss = function(url)
{
	var s = [];
	s.push("&lt;item&gt;");
	s.push("&lt;title" + "&gt;" + this.title.htmlEncode() + "&lt;/title" + "&gt;");
	s.push("&lt;description&gt;" + wikifyStatic(this.text,null,this).htmlEncode() + "&lt;/description&gt;");
	for(var t=0; t&lt;this.tags.length; t++)
		s.push("&lt;category&gt;" + this.tags[t] + "&lt;/category&gt;");
	s.push("&lt;link&gt;" + url + "#" + encodeURIComponent(String.encodeTiddlyLink(this.title)) + "&lt;/link&gt;");
	s.push("&lt;pubDate&gt;" + this.modified.toGMTString() + "&lt;/pubDate&gt;");
	s.push("&lt;/item&gt;");
	return s.join("\n");
};

// Change the text and other attributes of a tiddler
Tiddler.prototype.set = function(title,text,modifier,modified,tags,created,fields)
{
	this.assign(title,text,modifier,modified,tags,created,fields);
	this.changed();
	return this;
};

// Change the text and other attributes of a tiddler without triggered a tiddler.changed() call
Tiddler.prototype.assign = function(title,text,modifier,modified,tags,created,fields)
{
	if(title != undefined)
		this.title = title;
	if(text != undefined)
		this.text = text;
	if(modifier != undefined)
		this.modifier = modifier;
	if(modified != undefined)
		this.modified = modified;
	if(created != undefined)
		this.created = created;
	if(fields != undefined)
		this.fields = fields;
	if(tags != undefined)
		this.tags = (typeof tags == "string") ? tags.readBracketedList() : tags;
	else if(this.tags == undefined)
		this.tags = [];
	return this;
};

// Get the tags for a tiddler as a string (space delimited, using [[brackets]] for tags containing spaces)
Tiddler.prototype.getTags = function()
{
	return String.encodeTiddlyLinkList(this.tags);
};

// Test if a tiddler carries a tag
Tiddler.prototype.isTagged = function(tag)
{
	return this.tags.indexOf(tag) != -1;
};

// Static method to convert "\n" to newlines, "\s" to "\"
Tiddler.unescapeLineBreaks = function(text)
{
	return text ? text.unescapeLineBreaks() : "";
};

// Convert newlines to "\n", "\" to "\s"
Tiddler.prototype.escapeLineBreaks = function()
{
	return this.text.escapeLineBreaks();
};

// Updates the secondary information (like links[] array) after a change to a tiddler
Tiddler.prototype.changed = function()
{
	this.links = [];
	var t = this.autoLinkWikiWords() ? 0 : 1;
	var tiddlerLinkRegExp = t==0 ? config.textPrimitives.tiddlerAnyLinkRegExp : config.textPrimitives.tiddlerForcedLinkRegExp;
	tiddlerLinkRegExp.lastIndex = 0;
	var formatMatch = tiddlerLinkRegExp.exec(this.text);
	while(formatMatch) {
		var lastIndex = tiddlerLinkRegExp.lastIndex;
		if(t==0 &amp;&amp; formatMatch[1] &amp;&amp; formatMatch[1] != this.title) {
			// wikiWordLink
			if(formatMatch.index &gt; 0) {
				var preRegExp = new RegExp(config.textPrimitives.unWikiLink+"|"+config.textPrimitives.anyLetter,"mg");
				preRegExp.lastIndex = formatMatch.index-1;
				var preMatch = preRegExp.exec(this.text);
				if(preMatch.index != formatMatch.index-1)
					this.links.pushUnique(formatMatch[1]);
			} else {
				this.links.pushUnique(formatMatch[1]);
			}
		}
		else if(formatMatch[2-t] &amp;&amp; !config.formatterHelpers.isExternalLink(formatMatch[3-t])) // titledBrackettedLink
			this.links.pushUnique(formatMatch[3-t]);
		else if(formatMatch[4-t] &amp;&amp; formatMatch[4-t] != this.title) // brackettedLink
			this.links.pushUnique(formatMatch[4-t]);
		tiddlerLinkRegExp.lastIndex = lastIndex;
		formatMatch = tiddlerLinkRegExp.exec(this.text);
	}
	this.linksUpdated = true;
};

Tiddler.prototype.getSubtitle = function()
{
	var modifier = this.modifier;
	if(!modifier)
		modifier = config.messages.subtitleUnknown;
	var modified = this.modified;
	if(modified)
		modified = modified.toLocaleString();
	else
		modified = config.messages.subtitleUnknown;
	return config.messages.tiddlerLinkTooltip.format([this.title,modifier,modified]);
};

Tiddler.prototype.isReadOnly = function()
{
	return readOnly;
};

Tiddler.prototype.autoLinkWikiWords = function()
{
	return !(this.isTagged("systemConfig") || this.isTagged("excludeMissing"));
};

Tiddler.prototype.generateFingerprint = function()
{
	return "0x" + Crypto.hexSha1Str(this.text);
};

Tiddler.prototype.getServerType = function()
{
	var serverType = null;
	if(this.fields &amp;&amp; this.fields['server.type'])
		serverType = this.fields['server.type'];
	if(!serverType)
		serverType = this.fields['wikiformat'];
	if(serverType &amp;&amp; !config.adaptors[serverType])
		serverType = null;
	return serverType;
};

Tiddler.prototype.getAdaptor = function()
{
	var serverType = this.getServerType();
	return serverType ? new config.adaptors[serverType] : null;
};

//--
//-- TiddlyWiki() object contains Tiddler()s
//--

function TiddlyWiki()
{
	var tiddlers = {}; // Hashmap by name of tiddlers
	this.tiddlersUpdated = false;
	this.namedNotifications = []; // Array of {name:,notify:} of notification functions
	this.notificationLevel = 0;
	this.slices = {}; // map tiddlerName-&gt;(map sliceName-&gt;sliceValue). Lazy.
	this.clear = function() {
		tiddlers = {};
		this.setDirty(false);
	};
	this.fetchTiddler = function(title) {
		return tiddlers[title];
	};
	this.deleteTiddler = function(title) {
		delete this.slices[title];
		delete tiddlers[title];
	};
	this.addTiddler = function(tiddler) {
		delete this.slices[tiddler.title];
		tiddlers[tiddler.title] = tiddler;
	};
	this.forEachTiddler = function(callback) {
		for(var t in tiddlers) {
			var tiddler = tiddlers[t];
			if(tiddler instanceof Tiddler)
				callback.call(this,t,tiddler);
		}
	};
}

TiddlyWiki.prototype.setDirty = function(dirty)
{
	this.dirty = dirty;
};

TiddlyWiki.prototype.isDirty = function()
{
	return this.dirty;
};

TiddlyWiki.prototype.suspendNotifications = function()
{
	this.notificationLevel--;
};

TiddlyWiki.prototype.resumeNotifications = function()
{
	this.notificationLevel++;
};

// Invoke the notification handlers for a particular tiddler
TiddlyWiki.prototype.notify = function(title,doBlanket)
{
	if(!this.notificationLevel) {
		for(var t=0; t&lt;this.namedNotifications.length; t++) {
			var n = this.namedNotifications[t];
			if((n.name == null &amp;&amp; doBlanket) || (n.name == title))
				n.notify(title);
		}
	}
};

// Invoke the notification handlers for all tiddlers
TiddlyWiki.prototype.notifyAll = function()
{
	if(!this.notificationLevel) {
		for(var t=0; t&lt;this.namedNotifications.length; t++) {
			var n = this.namedNotifications[t];
			if(n.name)
				n.notify(n.name);
		}
	}
};

// Add a notification handler to a tiddler
TiddlyWiki.prototype.addNotification = function(title,fn)
{
	for(var i=0; i&lt;this.namedNotifications.length; i++) {
		if((this.namedNotifications[i].name == title) &amp;&amp; (this.namedNotifications[i].notify == fn))
			return this;
	}
	this.namedNotifications.push({name: title, notify: fn});
	return this;
};

TiddlyWiki.prototype.removeTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		this.deleteTiddler(title);
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.tiddlerExists = function(title)
{
	var t = this.fetchTiddler(title);
	return t != undefined;
};

TiddlyWiki.prototype.isShadowTiddler = function(title)
{
	return typeof config.shadowTiddlers[title] == "string";
};

TiddlyWiki.prototype.getTiddler = function(title)
{
	var t = this.fetchTiddler(title);
	if(t != undefined)
		return t;
	else
		return null;
};

TiddlyWiki.prototype.getTiddlerText = function(title,defaultText)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler)
		return tiddler.text;
	if(!title)
		return defaultText;
	var pos = title.indexOf(config.textPrimitives.sliceSeparator);
	if(pos != -1) {
		var slice = this.getTiddlerSlice(title.substr(0,pos),title.substr(pos + config.textPrimitives.sliceSeparator.length));
		if(slice)
			return slice;
	}
	if(this.isShadowTiddler(title))
		return config.shadowTiddlers[title];
	if(defaultText != undefined)
		return defaultText;
	return null;
};

TiddlyWiki.prototype.slicesRE = /(?:[\'\/]*~?([\.\w]+)[\'\/]*\:[\'\/]*\s*(.*?)\s*$)|(?:\|[\'\/]*~?([\.\w]+)\:?[\'\/]*\|\s*(.*?)\s*\|)/gm;

// @internal
TiddlyWiki.prototype.calcAllSlices = function(title)
{
	var slices = {};
	var text = this.getTiddlerText(title,"");
	this.slicesRE.lastIndex = 0;
	do {
		var m = this.slicesRE.exec(text);
		if(m) {
			if(m[1])
				slices[m[1]] = m[2];
			else
				slices[m[3]] = m[4];
		}
	} while(m);
	return slices;
};

// Returns the slice of text of the given name
TiddlyWiki.prototype.getTiddlerSlice = function(title,sliceName)
{
	var slices = this.slices[title];
	if(!slices) {
		slices = this.calcAllSlices(title);
		this.slices[title] = slices;
	}
	return slices[sliceName];
};

// Build an hashmap of the specified named slices of a tiddler
TiddlyWiki.prototype.getTiddlerSlices = function(title,sliceNames)
{
	var r = {};
	for(var t=0; t&lt;sliceNames.length; t++) {
		var slice = this.getTiddlerSlice(title,sliceNames[t]);
		if(slice)
			r[sliceNames[t]] = slice;
	}
	return r;
};

TiddlyWiki.prototype.getRecursiveTiddlerText = function(title,defaultText,depth)
{
	var bracketRegExp = new RegExp("(?:\\[\\[([^\\]]+)\\]\\])","mg");
	var text = this.getTiddlerText(title,null);
	if(text == null)
		return defaultText;
	var textOut = [];
	var lastPos = 0;
	do {
		var match = bracketRegExp.exec(text);
		if(match) {
			textOut.push(text.substr(lastPos,match.index-lastPos));
			if(match[1]) {
				if(depth &lt;= 0)
					textOut.push(match[1]);
				else
					textOut.push(this.getRecursiveTiddlerText(match[1],"[[" + match[1] + "]]",depth-1));
			}
			lastPos = match.index + match[0].length;
		} else {
			textOut.push(text.substr(lastPos));
		}
	} while(match);
	return textOut.join("");
};

TiddlyWiki.prototype.setTiddlerTag = function(title,status,tag)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		var t = tiddler.tags.indexOf(tag);
		if(t != -1)
			tiddler.tags.splice(t,1);
		if(status)
			tiddler.tags.push(tag);
		tiddler.changed();
		this.incChangeCount(title);
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.addTiddlerFields = function(title,fields)
{
	var tiddler = this.fetchTiddler(title);
	if(!tiddler)
		return;
	merge(tiddler.fields,fields);
	tiddler.changed();
	this.incChangeCount(title);
	this.notify(title,true);
	this.setDirty(true);
};

TiddlyWiki.prototype.saveTiddler = function(title,newTitle,newBody,modifier,modified,tags,fields,clearChangeCount,created)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		created = created ? created : tiddler.created; // Preserve created date
		this.deleteTiddler(title);
	} else {
		created = created ? created : modified;
		tiddler = new Tiddler();
	}
	tiddler.set(newTitle,newBody,modifier,modified,tags,created,fields);
	this.addTiddler(tiddler);
	if(clearChangeCount)
		tiddler.clearChangeCount();
	else
		tiddler.incChangeCount();
	if(title != newTitle)
		this.notify(title,true);
	this.notify(newTitle,true);
	this.setDirty(true);
	return tiddler;
};

// Reset the sync status of a freshly synced tiddler
TiddlyWiki.prototype.resetTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		tiddler.clearChangeCount();
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.incChangeCount = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler)
		tiddler.incChangeCount();
};

TiddlyWiki.prototype.createTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(!tiddler) {
		tiddler = new Tiddler();
		tiddler.title = title;
		this.addTiddler(tiddler);
		this.setDirty(true);
	}
	return tiddler;
};

// Load contents of a TiddlyWiki from an HTML DIV
TiddlyWiki.prototype.loadFromDiv = function(src,idPrefix,noUpdate)
{
	this.idPrefix = idPrefix;
	var storeElem = (typeof src == "string") ? document.getElementById(src) : src;
	if(!storeElem)
		return;
	var tiddlers = this.getLoader().loadTiddlers(this,storeElem.childNodes);
	this.setDirty(false);
	if(!noUpdate) {
		for(var i = 0;i&lt;tiddlers.length; i++)
			tiddlers[i].changed();
	}
};

// Load contents of a TiddlyWiki from a string
// Returns null if there's an error
TiddlyWiki.prototype.importTiddlyWiki = function(text)
{
	var posDiv = locateStoreArea(text);
	if(!posDiv)
		return null;
	var content = "&lt;" + "html&gt;&lt;" + "body&gt;" + text.substring(posDiv[0],posDiv[1] + endSaveArea.length) + "&lt;" + "/body&gt;&lt;" + "/html&gt;";
	// Create the iframe
	var iframe = document.createElement("iframe");
	iframe.style.display = "none";
	document.body.appendChild(iframe);
	var doc = iframe.document;
	if(iframe.contentDocument)
		doc = iframe.contentDocument; // For NS6
	else if(iframe.contentWindow)
		doc = iframe.contentWindow.document; // For IE5.5 and IE6
	// Put the content in the iframe
	doc.open();
	doc.writeln(content);
	doc.close();
	// Load the content into a TiddlyWiki() object
	var storeArea = doc.getElementById("storeArea");
	this.loadFromDiv(storeArea,"store");
	// Get rid of the iframe
	iframe.parentNode.removeChild(iframe);
	return this;
};

TiddlyWiki.prototype.updateTiddlers = function()
{
	this.tiddlersUpdated = true;
	this.forEachTiddler(function(title,tiddler) {
		tiddler.changed();
	});
};

// Return all tiddlers formatted as an HTML string
TiddlyWiki.prototype.allTiddlersAsHtml = function()
{
	return store.getSaver().externalize(store);
};

// Return an array of tiddlers matching a search regular expression
TiddlyWiki.prototype.search = function(searchRegExp,sortField,excludeTag,match)
{
	var candidates = this.reverseLookup("tags",excludeTag,!!match);
	var results = [];
	for(var t=0; t&lt;candidates.length; t++) {
		if((candidates[t].title.search(searchRegExp) != -1) || (candidates[t].text.search(searchRegExp) != -1))
			results.push(candidates[t]);
	}
	if(!sortField)
		sortField = "title";
	results.sort(function(a,b) {return a[sortField] &lt; b[sortField] ? -1 : (a[sortField] == b[sortField] ? 0 : +1);});
	return results;
};

// Returns a list of all tags in use
//   excludeTag - if present, excludes tags that are themselves tagged with excludeTag
// Returns an array of arrays where [tag][0] is the name of the tag and [tag][1] is the number of occurances
TiddlyWiki.prototype.getTags = function(excludeTag)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		for(var g=0; g&lt;tiddler.tags.length; g++) {
			var tag = tiddler.tags[g];
			var n = true;
			for(var c=0; c&lt;results.length; c++) {
				if(results[c][0] == tag) {
					n = false;
					results[c][1]++;
				}
			}
			if(n &amp;&amp; excludeTag) {
				var t = store.fetchTiddler(tag);
				if(t &amp;&amp; t.isTagged(excludeTag))
					n = false;
			}
			if(n)
				results.push([tag,1]);
		}
	});
	results.sort(function(a,b) {return a[0].toLowerCase() &lt; b[0].toLowerCase() ? -1 : (a[0].toLowerCase() == b[0].toLowerCase() ? 0 : +1);});
	return results;
};

// Return an array of the tiddlers that are tagged with a given tag
TiddlyWiki.prototype.getTaggedTiddlers = function(tag,sortField)
{
	return this.reverseLookup("tags",tag,true,sortField);
};

// Return an array of the tiddlers that link to a given tiddler
TiddlyWiki.prototype.getReferringTiddlers = function(title,unusedParameter,sortField)
{
	if(!this.tiddlersUpdated)
		this.updateTiddlers();
	return this.reverseLookup("links",title,true,sortField);
};

// Return an array of the tiddlers that do or do not have a specified entry in the specified storage array (ie, "links" or "tags")
// lookupMatch == true to match tiddlers, false to exclude tiddlers
TiddlyWiki.prototype.reverseLookup = function(lookupField,lookupValue,lookupMatch,sortField)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		var f = !lookupMatch;
		for(var lookup=0; lookup&lt;tiddler[lookupField].length; lookup++) {
			if(tiddler[lookupField][lookup] == lookupValue)
				f = lookupMatch;
		}
		if(f)
			results.push(tiddler);
	});
	if(!sortField)
		sortField = "title";
	results.sort(function(a,b) {return a[sortField] &lt; b[sortField] ? -1 : (a[sortField] == b[sortField] ? 0 : +1);});
	return results;
};

// Return the tiddlers as a sorted array
TiddlyWiki.prototype.getTiddlers = function(field,excludeTag)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		if(excludeTag == undefined || !tiddler.isTagged(excludeTag))
			results.push(tiddler);
	});
	if(field)
		results.sort(function(a,b) {return a[field] &lt; b[field] ? -1 : (a[field] == b[field] ? 0 : +1);});
	return results;
};

// Return array of names of tiddlers that are referred to but not defined
TiddlyWiki.prototype.getMissingLinks = function(sortField)
{
	if(!this.tiddlersUpdated)
		this.updateTiddlers();
	var results = [];
	this.forEachTiddler(function (title,tiddler) {
		if(tiddler.isTagged("excludeMissing") || tiddler.isTagged("systemConfig"))
			return;
		for(var n=0; n&lt;tiddler.links.length;n++) {
			var link = tiddler.links[n];
			if(this.fetchTiddler(link) == null &amp;&amp; !this.isShadowTiddler(link))
				results.pushUnique(link);
		}
	});
	results.sort();
	return results;
};

// Return an array of names of tiddlers that are defined but not referred to
TiddlyWiki.prototype.getOrphans = function()
{
	var results = [];
	this.forEachTiddler(function (title,tiddler) {
		if(this.getReferringTiddlers(title).length == 0 &amp;&amp; !tiddler.isTagged("excludeLists"))
			results.push(title);
	});
	results.sort();
	return results;
};

// Return an array of names of all the shadow tiddlers
TiddlyWiki.prototype.getShadowed = function()
{
	var results = [];
	for(var t in config.shadowTiddlers) {
		if(typeof config.shadowTiddlers[t] == "string")
			results.push(t);
	}
	results.sort();
	return results;
};

// Return an array of tiddlers that have been touched since they were downloaded or created
TiddlyWiki.prototype.getTouched = function()
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		if(tiddler.isTouched())
			results.push(tiddler);
		});
	results.sort();
	return results;
};

// Resolves a Tiddler reference or tiddler title into a Tiddler object, or null if it doesn't exist
TiddlyWiki.prototype.resolveTiddler = function(tiddler)
{
	var t = (typeof tiddler == 'string') ? this.getTiddler(tiddler) : tiddler;
	return t instanceof Tiddler ? t : null;
};

TiddlyWiki.prototype.getLoader = function()
{
	if(!this.loader)
		this.loader = new TW21Loader();
	return this.loader;
};

TiddlyWiki.prototype.getSaver = function()
{
	if(!this.saver)
		this.saver = new TW21Saver();
	return this.saver;
};

// Filter a list of tiddlers
TiddlyWiki.prototype.filterTiddlers = function(filter)
{
	var results = [];
	if(filter) {
		var tiddler;
		var re = /([^ \[\]]+)|(?:\[([ \w]+)\[([^\]]+)\]\])|(?:\[\[([^\]]+)\]\])/mg;
		var match = re.exec(filter);
		while(match) {
			if(match[1]) {
				var title = match[1];
				tiddler = this.fetchTiddler(title);
				if(tiddler) {
					results.push(tiddler);
				} else {
					if(store.isShadowTiddler(title)) {
						tiddler = new Tiddler();
						tiddler.set(title,store.getTiddlerText(title));
						results.push(tiddler);
					}
				}
			} else if(match[2]) {
				if(match[2]=="tag") {
					this.forEachTiddler(function(title,tiddler) {
						if(tiddler.isTagged(match[3]))
							results.push(tiddler);
					});
				}
			} else if(match[4]) {
				tiddler = this.fetchTiddler(match[4]);
				if(tiddler)
					results.push(tiddler);
			}
			match = re.exec(filter);
		}
	}
	return results;
};

// Returns true if path is a valid field name (path),
// i.e. a sequence of identifiers, separated by '.'
TiddlyWiki.isValidFieldName = function(name)
{
	var match = /[a-zA-Z_]\w*(\.[a-zA-Z_]\w*)*/.exec(name);
	return match &amp;&amp; (match[0] == name);
};

// Throws an exception when name is not a valid field name.
TiddlyWiki.checkFieldName = function(name)
{
	if(!TiddlyWiki.isValidFieldName(name))
		throw config.messages.invalidFieldName.format([name]);
};

function StringFieldAccess(n,readOnly)
{
	this.set = readOnly ?
			function(t,v) {if(v != t[n]) throw config.messages.fieldCannotBeChanged.format([n]);} :
			function(t,v) {if(v != t[n]) {t[n] = v; return true;}};
	this.get = function(t) {return t[n];};
}

function DateFieldAccess(n)
{
	this.set = function(t,v) {
		var d = v instanceof Date ? v : Date.convertFromYYYYMMDDHHMM(v);
		if(d != t[n]) {
			t[n] = d; return true;
		}
	};
	this.get = function(t) {return t[n].convertToYYYYMMDDHHMM();};
}

function LinksFieldAccess(n)
{
	this.set = function(t,v) {
		var s = (typeof v == "string") ? v.readBracketedList() : v;
		if(s.toString() != t[n].toString()) {
			t[n] = s; return true;
		}
	};
	this.get = function(t) {return String.encodeTiddlyLinkList(t[n]);};
}

TiddlyWiki.standardFieldAccess = {
	// The set functions return true when setting the data has changed the value.
	"title":    new StringFieldAccess("title",true),
	// Handle the "tiddler" field name as the title
	"tiddler":  new StringFieldAccess("title",true),
	"text":     new StringFieldAccess("text"),
	"modifier": new StringFieldAccess("modifier"),
	"modified": new DateFieldAccess("modified"),
	"created":  new DateFieldAccess("created"),
	"tags":     new LinksFieldAccess("tags")
};

TiddlyWiki.isStandardField = function(name)
{
	return TiddlyWiki.standardFieldAccess[name] != undefined;
};

// Sets the value of the given field of the tiddler to the value.
// Setting an ExtendedField's value to null or undefined removes the field.
// Setting a namespace to undefined removes all fields of that namespace.
// The fieldName is case-insensitive.
// All values will be converted to a string value.
TiddlyWiki.prototype.setValue = function(tiddler,fieldName,value)
{
	TiddlyWiki.checkFieldName(fieldName);
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return;
	fieldName = fieldName.toLowerCase();
	var isRemove = (value === undefined) || (value === null);
	var accessor = TiddlyWiki.standardFieldAccess[fieldName];
	if(accessor) {
		if(isRemove)
			// don't remove StandardFields
			return;
		var h = TiddlyWiki.standardFieldAccess[fieldName];
		if(!h.set(t,value))
			return;
	} else {
		var oldValue = t.fields[fieldName];
		if(isRemove) {
			if(oldValue !== undefined) {
				// deletes a single field
				delete t.fields[fieldName];
			} else {
				// no concrete value is defined for the fieldName
				// so we guess this is a namespace path.
				// delete all fields in a namespace
				var re = new RegExp('^'+fieldName+'\\.');
				var dirty = false;
				for(var n in t.fields) {
					if(n.match(re)) {
						delete t.fields[n];
						dirty = true;
					}
				}
				if(!dirty)
					return;
			}
		} else {
			// the "normal" set case. value is defined (not null/undefined)
			// For convenience provide a nicer conversion Date-&gt;String
			value = value instanceof Date ? value.convertToYYYYMMDDHHMMSSMMM() : String(value);
			if(oldValue == value)
				return;
			t.fields[fieldName] = value;
		}
	}
	// When we are here the tiddler/store really was changed.
	this.notify(t.title,true);
	if(!fieldName.match(/^temp\./))
		this.setDirty(true);
};

// Returns the value of the given field of the tiddler.
// The fieldName is case-insensitive.
// Will only return String values (or undefined).
TiddlyWiki.prototype.getValue = function(tiddler,fieldName)
{
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return undefined;
	fieldName = fieldName.toLowerCase();
	var accessor = TiddlyWiki.standardFieldAccess[fieldName];
	if(accessor) {
		return accessor.get(t);
	}
	return t.fields[fieldName];
};

// Calls the callback function for every field in the tiddler.
// When callback function returns a non-false value the iteration stops
// and that value is returned.
// The order of the fields is not defined.
// @param callback a function(tiddler,fieldName,value).
TiddlyWiki.prototype.forEachField = function(tiddler,callback,onlyExtendedFields)
{
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return undefined;
	var n,result;
	for(n in t.fields) {
		result = callback(t,n,t.fields[n]);
		if(result)
			return result;
		}
	if(onlyExtendedFields)
		return undefined;
	for(n in TiddlyWiki.standardFieldAccess) {
		if(n == "tiddler")
			// even though the "title" field can also be referenced through the name "tiddler"
			// we only visit this field once.
			continue;
		result = callback(t,n,TiddlyWiki.standardFieldAccess[n].get(t));
		if(result)
			return result;
	}
	return undefined;
};

//--
//-- Story functions
//--

function Story(container,idPrefix)
{
	this.container = container;
	this.idPrefix = idPrefix;
	this.highlightRegExp = null;
}

Story.prototype.forEachTiddler = function(fn)
{
	var place = document.getElementById(this.container);
	if(!place)
		return;
	var e = place.firstChild;
	while(e) {
		var n = e.nextSibling;
		var title = e.getAttribute("tiddler");
		fn.call(this,title,e);
		e = n;
	}
};

Story.prototype.displayTiddlers = function(srcElement,titles,template,animate,unused,customFields,toggle)
{
	for(var t = titles.length-1;t&gt;=0;t--)
		this.displayTiddler(srcElement,titles[t],template,animate,unused,customFields);
};

Story.prototype.displayTiddler = function(srcElement,title,template,animate,unused,customFields,toggle)
{
	var place = document.getElementById(this.container);
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem) {
		if(toggle)
			this.closeTiddler(title,true);
		else
			this.refreshTiddler(title,template,false,customFields);
	} else {
		var before = this.positionTiddler(srcElement);
		tiddlerElem = this.createTiddler(place,before,title,template,customFields);
	}
	if(srcElement &amp;&amp; typeof srcElement !== "string") {
		if(config.options.chkAnimate &amp;&amp; (animate == undefined || animate == true) &amp;&amp; anim &amp;&amp; typeof Zoomer == "function" &amp;&amp; typeof Scroller == "function")
			anim.startAnimating(new Zoomer(title,srcElement,tiddlerElem),new Scroller(tiddlerElem));
		else
			window.scrollTo(0,ensureVisible(tiddlerElem));
	}
};

Story.prototype.positionTiddler = function(srcElement)
{
	var place = document.getElementById(this.container);
	var before = null;
	if(typeof srcElement == "string") {
		switch(srcElement) {
			case "top":
				before = place.firstChild;
				break;
			case "bottom":
				before = null;
				break;
		}
	} else {
		var after = this.findContainingTiddler(srcElement);
		if(after == null) {
			before = place.firstChild;
		} else if(after.nextSibling) {
			before = after.nextSibling;
			if(before.nodeType != 1)
				before = null;
		}
	}
	return before;
};

Story.prototype.createTiddler = function(place,before,title,template,customFields)
{
	var tiddlerElem = createTiddlyElement(null,"div",this.idPrefix + title,"tiddler");
	tiddlerElem.setAttribute("refresh","tiddler");
	if(customFields)
		tiddlerElem.setAttribute("tiddlyFields",customFields);
	place.insertBefore(tiddlerElem,before);
	var defaultText = null;
	if(!store.tiddlerExists(title) &amp;&amp; !store.isShadowTiddler(title))
		defaultText = this.loadMissingTiddler(title,customFields,tiddlerElem);
	this.refreshTiddler(title,template,false,customFields,defaultText);
	return tiddlerElem;
};

Story.prototype.loadMissingTiddler = function(title,fields,tiddlerElem)
{
	var tiddler = new Tiddler(title);
	tiddler.fields = typeof fields == "string" ?  fields.decodeHashMap() : (fields ? fields : {});
	var serverType = tiddler.getServerType();
	var host = tiddler.fields['server.host'];
	var workspace = tiddler.fields['server.workspace'];
	if(!serverType | !host)
		return null;
	var sm = new SyncMachine(serverType,{
			start: function() {
				return this.openHost(host,"openWorkspace");
			},
			openWorkspace: function() {
				return this.openWorkspace(workspace,"getTiddler");
			},
			getTiddler: function() {
				return this.getTiddler(title,"gotTiddler");
			},
			gotTiddler: function(tiddler) {
				if(tiddler &amp;&amp; tiddler.text) {
					var downloaded = new Date();
					if(!tiddler.created)
						tiddler.created = downloaded;
					if(!tiddler.modified)
						tiddler.modified = tiddler.created;
					store.saveTiddler(tiddler.title,tiddler.title,tiddler.text,tiddler.modifier,tiddler.modified,tiddler.tags,tiddler.fields,true,tiddler.created);
					autoSaveChanges();
				}
				delete this;
				return true;
			},
			error: function(message) {
				displayMessage("Error loading missing tiddler from %0: %1".format([host,message]));
			}
		});
	sm.go();
	return config.messages.loadingMissingTiddler.format([title,serverType,host,workspace]);
};

Story.prototype.chooseTemplateForTiddler = function(title,template)
{
	if(!template)
		template = DEFAULT_VIEW_TEMPLATE;
	if(template == DEFAULT_VIEW_TEMPLATE || template == DEFAULT_EDIT_TEMPLATE)
		template = config.tiddlerTemplates[template];
	return template;
};

Story.prototype.getTemplateForTiddler = function(title,template,tiddler)
{
	return store.getRecursiveTiddlerText(template,null,10);
};

Story.prototype.refreshTiddler = function(title,template,force,customFields,defaultText)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem) {
		if(tiddlerElem.getAttribute("dirty") == "true" &amp;&amp; !force)
			return tiddlerElem;
		template = this.chooseTemplateForTiddler(title,template);
		var currTemplate = tiddlerElem.getAttribute("template");
		if((template != currTemplate) || force) {
			var tiddler = store.getTiddler(title);
			if(!tiddler) {
				tiddler = new Tiddler();
				if(store.isShadowTiddler(title)) {
					tiddler.set(title,store.getTiddlerText(title),config.views.wikified.shadowModifier,version.date,[],version.date);
				} else {
					var text = template=="EditTemplate" ?
								config.views.editor.defaultText.format([title]) :
								config.views.wikified.defaultText.format([title]);
					text = defaultText ? defaultText : text;
					var fields = customFields ? customFields.decodeHashMap() : null;
					tiddler.set(title,text,config.views.wikified.defaultModifier,version.date,[],version.date,fields);
				}
			}
			tiddlerElem.setAttribute("tags",tiddler.tags.join(" "));
			tiddlerElem.setAttribute("tiddler",title);
			tiddlerElem.setAttribute("template",template);
			var me = this;
			tiddlerElem.onmouseover = this.onTiddlerMouseOver;
			tiddlerElem.onmouseout = this.onTiddlerMouseOut;
			tiddlerElem.ondblclick = this.onTiddlerDblClick;
			tiddlerElem[window.event?"onkeydown":"onkeypress"] = this.onTiddlerKeyPress;
			var html = this.getTemplateForTiddler(title,template,tiddler);
			tiddlerElem.innerHTML = html;
			applyHtmlMacros(tiddlerElem,tiddler);
			if(store.getTaggedTiddlers(title).length &gt; 0)
				addClass(tiddlerElem,"isTag");
			else
				removeClass(tiddlerElem,"isTag");
			if(!store.tiddlerExists(title)) {
				if(store.isShadowTiddler(title))
					addClass(tiddlerElem,"shadow");
				else
					addClass(tiddlerElem,"missing");
			} else {
				removeClass(tiddlerElem,"shadow");
				removeClass(tiddlerElem,"missing");
			}
			if(customFields)
				this.addCustomFields(tiddlerElem,customFields);
			forceReflow();
		}
	}
	return tiddlerElem;
};

Story.prototype.addCustomFields = function(place,customFields)
{
	var fields = customFields.decodeHashMap();
	var w = document.createElement("div");
	w.style.display = "none";
	place.appendChild(w);
	for(var t in fields) {
		var e = document.createElement("input");
		e.setAttribute("type","text");
		e.setAttribute("value",fields[t]);
		w.appendChild(e);
		e.setAttribute("edit",t);
	}
};

Story.prototype.refreshAllTiddlers = function()
{
	var place = document.getElementById(this.container);
	var e = place.firstChild;
	if(!e)
		return;
	this.refreshTiddler(e.getAttribute("tiddler"),e.getAttribute("template"),true);
	while((e = e.nextSibling) != null)
		this.refreshTiddler(e.getAttribute("tiddler"),e.getAttribute("template"),true);
};

Story.prototype.onTiddlerMouseOver = function(e)
{
	if(window.addClass instanceof Function)
		addClass(this,"selected");
};

Story.prototype.onTiddlerMouseOut = function(e)
{
	if(window.removeClass instanceof Function)
		removeClass(this,"selected");
};

Story.prototype.onTiddlerDblClick = function(ev)
{
	var e = ev ? ev : window.event;
	var theTarget = resolveTarget(e);
	if(theTarget &amp;&amp; theTarget.nodeName.toLowerCase() != "input" &amp;&amp; theTarget.nodeName.toLowerCase() != "textarea") {
		if(document.selection &amp;&amp; document.selection.empty)
			document.selection.empty();
		config.macros.toolbar.invokeCommand(this,"defaultCommand",e);
		e.cancelBubble = true;
		if(e.stopPropagation) e.stopPropagation();
		return true;
	} else {
		return false;
	}
};

Story.prototype.onTiddlerKeyPress = function(ev)
{
	var e = ev ? ev : window.event;
	clearMessage();
	var consume = false;
	var title = this.getAttribute("tiddler");
	var target = resolveTarget(e);
	switch(e.keyCode) {
		case 9: // Tab
			if(config.options.chkInsertTabs &amp;&amp; target.tagName.toLowerCase() == "textarea") {
				replaceSelection(target,String.fromCharCode(9));
				consume = true;
			}
			if(config.isOpera) {
				target.onblur = function() {
					this.focus();
					this.onblur = null;
				};
			}
			break;
		case 13: // Ctrl-Enter
		case 10: // Ctrl-Enter on IE PC
		case 77: // Ctrl-Enter is "M" on some platforms
			if(e.ctrlKey) {
				blurElement(this);
				config.macros.toolbar.invokeCommand(this,"defaultCommand",e);
				consume = true;
			}
			break;
		case 27: // Escape
			blurElement(this);
			config.macros.toolbar.invokeCommand(this,"cancelCommand",e);
			consume = true;
			break;
	}
	e.cancelBubble = consume;
	if(consume) {
		if(e.stopPropagation) e.stopPropagation(); // Stop Propagation
		e.returnValue = true; // Cancel The Event in IE
		if(e.preventDefault ) e.preventDefault(); // Cancel The Event in Moz
	}
	return !consume;
};

Story.prototype.getTiddlerField = function(title,field)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	var e = null;
	if(tiddlerElem != null) {
		var children = tiddlerElem.getElementsByTagName("*");
		for(var t=0; t&lt;children.length; t++) {
			var c = children[t];
			if(c.tagName.toLowerCase() == "input" || c.tagName.toLowerCase() == "textarea") {
				if(!e)
					e = c;
				if(c.getAttribute("edit") == field)
					e = c;
			}
		}
	}
	return e;
};

Story.prototype.focusTiddler = function(title,field)
{
	var e = this.getTiddlerField(title,field);
	if(e) {
		e.focus();
		e.select();
	}
};

Story.prototype.blurTiddler = function(title)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null &amp;&amp; tiddlerElem.focus &amp;&amp; tiddlerElem.blur) {
		tiddlerElem.focus();
		tiddlerElem.blur();
	}
};

Story.prototype.setTiddlerField = function(title,tag,mode,field)
{
	var c = story.getTiddlerField(title,field);

	var tags = c.value.readBracketedList();
	tags.setItem(tag,mode);
	c.value = String.encodeTiddlyLinkList(tags);
};

Story.prototype.setTiddlerTag = function(title,tag,mode)
{
	Story.prototype.setTiddlerField(title,tag,mode,"tags");
};

Story.prototype.closeTiddler = function(title,animate,unused)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null) {
		clearMessage();
		this.scrubTiddler(tiddlerElem);
		if(config.options.chkAnimate &amp;&amp; animate &amp;&amp; anim &amp;&amp; typeof Slider == "function")
			anim.startAnimating(new Slider(tiddlerElem,false,null,"all"));
		else {
			removeNode(tiddlerElem);
			forceReflow();
		}
	}
};

Story.prototype.scrubTiddler = function(tiddlerElem)
{
	tiddlerElem.id = null;
};

Story.prototype.setDirty = function(title,dirty)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null)
		tiddlerElem.setAttribute("dirty",dirty ? "true" : "false");
};

Story.prototype.isDirty = function(title)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null)
		return tiddlerElem.getAttribute("dirty") == "true";
	return null;
};

Story.prototype.areAnyDirty = function()
{
	var r = false;
	this.forEachTiddler(function(title,element) {
		if(this.isDirty(title))
			r = true;
	});
	return r;
};

Story.prototype.closeAllTiddlers = function(exclude)
{
	clearMessage();
	this.forEachTiddler(function(title,element) {
		if((title != exclude) &amp;&amp; element.getAttribute("dirty") != "true")
			this.closeTiddler(title);
	});
	window.scrollTo(0,ensureVisible(this.container));
};

Story.prototype.isEmpty = function()
{
	var place = document.getElementById(this.container);
	return place &amp;&amp; place.firstChild == null;
};

Story.prototype.search = function(text,useCaseSensitive,useRegExp)
{
	this.closeAllTiddlers();
	highlightHack = new RegExp(useRegExp ?	 text : text.escapeRegExp(),useCaseSensitive ? "mg" : "img");
	var matches = store.search(highlightHack,"title","excludeSearch");
	var titles = [];
	for(var t=0;t&lt;matches.length;t++)
		titles.push(matches[t].title);
	this.displayTiddlers(null,titles);
	highlightHack = null;
	var q = useRegExp ? "/" : "'";
	if(matches.length &gt; 0)
		displayMessage(config.macros.search.successMsg.format([titles.length.toString(),q + text + q]));
	else
		displayMessage(config.macros.search.failureMsg.format([q + text + q]));
};

Story.prototype.findContainingTiddler = function(e)
{
	while(e &amp;&amp; !hasClass(e,"tiddler"))
		e = e.parentNode;
	return e;
};

Story.prototype.gatherSaveFields = function(e,fields)
{
	if(e &amp;&amp; e.getAttribute) {
		var f = e.getAttribute("edit");
		if(f)
			fields[f] = e.value.replace(/\r/mg,"");
		if(e.hasChildNodes()) {
			var c = e.childNodes;
			for(var t=0; t&lt;c.length; t++)
				this.gatherSaveFields(c[t],fields);
		}
	}
};

Story.prototype.hasChanges = function(title)
{
	var e = document.getElementById(this.idPrefix + title);
	if(e != null) {
		var fields = {};
		this.gatherSaveFields(e,fields);
		var tiddler = store.fetchTiddler(title);
		if(!tiddler)
			return false;
		for(var n in fields) {
			if(store.getValue(title,n) != fields[n])
				return true;
		}
	}
	return false;
};

Story.prototype.saveTiddler = function(title,minorUpdate)
{
	var tiddlerElem = document.getElementById(this.idPrefix + title);
	if(tiddlerElem != null) {
		var fields = {};
		this.gatherSaveFields(tiddlerElem,fields);
		var newTitle = fields.title ? fields.title : title;
		if(store.tiddlerExists(newTitle) &amp;&amp; newTitle != title) {
			if(!confirm(config.messages.overwriteWarning.format([newTitle.toString()])))
				return null;
		}
		if(newTitle != title)
			this.closeTiddler(newTitle,false);
		tiddlerElem.id = this.idPrefix + newTitle;
		tiddlerElem.setAttribute("tiddler",newTitle);
		tiddlerElem.setAttribute("template",DEFAULT_VIEW_TEMPLATE);
		tiddlerElem.setAttribute("dirty","false");
		if(config.options.chkForceMinorUpdate)
			minorUpdate = !minorUpdate;
		if(!store.tiddlerExists(newTitle))
			minorUpdate = false;
		var newDate = new Date();
		var extendedFields = store.tiddlerExists(newTitle) ? store.fetchTiddler(newTitle).fields : (newTitle!=title &amp;&amp; store.tiddlerExists(title) ? store.fetchTiddler(title).fields : {});
		for(var n in fields) {
			if(!TiddlyWiki.isStandardField(n))
				extendedFields[n] = fields[n];
		}
		var tiddler = store.saveTiddler(title,newTitle,fields.text,minorUpdate ? undefined : config.options.txtUserName,minorUpdate ? undefined : newDate,fields.tags,extendedFields);
		autoSaveChanges(null,[tiddler]);
		return newTitle;
	}
	return null;
};

Story.prototype.permaView = function()
{
	var links = [];
	this.forEachTiddler(function(title,element) {
		links.push(String.encodeTiddlyLink(title));
	});
	var t = encodeURIComponent(links.join(" "));
	if(t == "")
		t = "#";
	if(window.location.hash != t)
		window.location.hash = t;
};

//--
//-- Backstage
//--

var backstage = {
	area: null,
	toolbar: null,
	button: null,
	showButton: null,
	hideButton: null,
	cloak: null,
	panel: null,
	panelBody: null,
	panelFooter: null,
	currTabName: null,
	currTabElem: null,
	content: null,

	init: function() {
		var cmb = config.messages.backstage;
		this.area = document.getElementById("backstageArea");
		this.toolbar = document.getElementById("backstageToolbar");
		this.button = document.getElementById("backstageButton");
		this.button.style.display = "block";
		var t = cmb.open.text + " " + glyph("bentArrowLeft");
		this.showButton = createTiddlyButton(this.button,t,cmb.open.tooltip,
						function (e) {backstage.show(); return false;},null,"backstageShow");
		t = glyph("bentArrowRight") + " " + cmb.close.text;
		this.hideButton = createTiddlyButton(this.button,t,cmb.close.tooltip,
						function (e) {backstage.hide(); return false;},null,"backstageHide");
		this.cloak = document.getElementById("backstageCloak");
		this.panel = document.getElementById("backstagePanel");
		this.panelFooter = createTiddlyElement(this.panel,"div",null,"backstagePanelFooter");
		this.panelBody = createTiddlyElement(this.panel,"div",null,"backstagePanelBody");
		this.cloak.onmousedown = function(e) {
			backstage.switchTab(null);
		};
		createTiddlyText(this.toolbar,cmb.prompt);
		for(t=0; t&lt;config.backstageTasks.length; t++) {
			var taskName = config.backstageTasks[t];
			var task = config.tasks[taskName];
			var handler = task.action ? this.onClickCommand : this.onClickTab;
			var text = task.text + (task.action ? "" : glyph("downTriangle"));
			var btn = createTiddlyButton(this.toolbar,text,task.tooltip,handler,"backstageTab");
			btn.setAttribute("task",taskName);
			addClass(btn,task.action ? "backstageAction" : "backstageTask");
			}
		this.content = document.getElementById("contentWrapper");
		if(config.options.chkBackstage)
			this.show();
		else
			this.hide();
	},

	isVisible: function() {
		return this.area ? this.area.style.display == "block" : false;
	},

	show: function() {
		this.area.style.display = "block";
		if(anim &amp;&amp; config.options.chkAnimate) {
			backstage.toolbar.style.left = findWindowWidth() + "px";
			var p = [
				{style: "left", start: findWindowWidth(), end: 0, template: "%0px"}
			];
			anim.startAnimating(new Morpher(backstage.toolbar,config.animDuration,p));
		} else {
			backstage.area.style.left = "0px";
		}
		this.showButton.style.display = "none";
		this.hideButton.style.display = "block";
		config.options.chkBackstage = true;
		saveOptionCookie("chkBackstage");
		addClass(this.content,"backstageVisible");
	},

	hide: function() {
		if(this.currTabElem) {
			this.switchTab(null);
		} else {
			backstage.toolbar.style.left = "0px";
			if(anim &amp;&amp; config.options.chkAnimate) {
				var p = [
					{style: "left", start: 0, end: findWindowWidth(), template: "%0px"}
				];
				var c = function(element,properties) {backstage.area.style.display = "none";};
				anim.startAnimating(new Morpher(backstage.toolbar,config.animDuration,p,c));
			} else {
				this.area.style.display = "none";
			}
			this.showButton.style.display = "block";
			this.hideButton.style.display = "none";
			config.options.chkBackstage = false;
			saveOptionCookie("chkBackstage");
			removeClass(this.content,"backstageVisible");
		}
	},

	onClickCommand: function(e) {
		var task = config.tasks[this.getAttribute("task")];
		displayMessage(task);
		if(task.action) {
			backstage.switchTab(null);
			task.action();
		}
		return false;
	},

	onClickTab: function(e) {
		backstage.switchTab(this.getAttribute("task"));
		return false;
	},

	// Switch to a given tab, or none if null is passed
	switchTab: function(tabName) {
		var tabElem = null;
		var e = this.toolbar.firstChild;
		while(e)
			{
			if(e.getAttribute &amp;&amp; e.getAttribute("task") == tabName)
				tabElem = e;
			e = e.nextSibling;
			}
		if(tabName == backstage.currTabName)
			return;
		if(backstage.currTabElem) {
			removeClass(this.currTabElem,"backstageSelTab");
		}
		if(tabElem &amp;&amp; tabName) {
			backstage.preparePanel();
			addClass(tabElem,"backstageSelTab");
			var task = config.tasks[tabName];
			wikify(task.content,backstage.panelBody,null,null);
			backstage.showPanel();
		} else if(backstage.currTabElem) {
			backstage.hidePanel();
		}
		backstage.currTabName = tabName;
		backstage.currTabElem = tabElem;
	},

	isPanelVisible: function() {
		return backstage.panel ? backstage.panel.style.display == "block" : false;
	},

	preparePanel: function() {
		backstage.cloak.style.height = findWindowHeight() + "px";
		backstage.cloak.style.display = "block";
		removeChildren(backstage.panelBody);
		return backstage.panelBody;
	},

	showPanel: function() {
		backstage.panel.style.display = "block";
		if(anim &amp;&amp; config.options.chkAnimate) {
			backstage.panel.style.top = (-backstage.panel.offsetHeight) + "px";
			var p = [
				{style: "top", start: -backstage.panel.offsetHeight, end: 0, template: "%0px"}
			];
			anim.startAnimating(new Morpher(backstage.panel,config.animDuration,p),new Scroller(backstage.panel,false));
		} else {
			backstage.panel.style.top = "0px";
		}
		return backstage.panelBody;
	},

	hidePanel: function() {
		backstage.currTabName = null;
		backstage.currTabElem = null;
		if(anim &amp;&amp; config.options.chkAnimate) {
			var p = [
				{style: "top", start: 0, end: -(backstage.panel.offsetHeight), template: "%0px"},
				{style: "display", atEnd: "none"}
			];
			var c = function(element,properties) {backstage.cloak.style.display = "none";};
			anim.startAnimating(new Morpher(backstage.panel,config.animDuration,p,c));
		 } else {
			backstage.panel.style.display = "none";
			backstage.cloak.style.display = "none";
		}
	}
};

config.macros.backstage = {};

config.macros.backstage.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var backstageTask = config.tasks[params[0]];
	if(backstageTask)
		createTiddlyButton(place,backstageTask.text,backstageTask.tooltip,function(e) {backstage.switchTab(params[0]); return false;});
};

//--
//-- ImportTiddlers macro
//--

config.macros.importTiddlers.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(readOnly) {
		createTiddlyElement(place,"div",null,"marked",this.readOnlyWarning);
		return;
	}
	var w = new Wizard();
	w.createWizard(place,this.wizardTitle);
	this.restart(w);
};

config.macros.importTiddlers.onCancel = function(e)
{
	var wizard = new Wizard(this);
	var place = wizard.clear();
	config.macros.importTiddlers.restart(wizard);
	return false;
};

config.macros.importTiddlers.restart = function(wizard)
{
	wizard.addStep(this.step1Title,this.step1Html);
	var s = wizard.getElement("selTypes");
	for(var t in config.adaptors) {
		var e = createTiddlyElement(s,"option",null,null,t);
		e.value = t;
	}
	s = wizard.getElement("selFeeds");
	var feeds = this.getFeeds();
	for(t in feeds) {
		e = createTiddlyElement(s,"option",null,null,t);
		e.value = t;
	}
	wizard.setValue("feeds",feeds);
	s.onchange = config.macros.importTiddlers.onFeedChange;
	var fileInput = wizard.getElement("txtBrowse");
	fileInput.onchange = config.macros.importTiddlers.onBrowseChange;
	fileInput.onkeyup = config.macros.importTiddlers.onBrowseChange;
	wizard.setButtons([{caption: this.openLabel, tooltip: this.openPrompt, onClick: config.macros.importTiddlers.onOpen}]);
};

config.macros.importTiddlers.getFeeds = function()
{
	var feeds = {};
	var tagged = store.getTaggedTiddlers("systemServer","title");
	for(var t=0; t&lt;tagged.length; t++) {
		var title = tagged[t].title;
		var serverType = store.getTiddlerSlice(title,"Type");
		if(!serverType)
			serverType = "file";
		feeds[title] = {title: title,
						url: store.getTiddlerSlice(title,"URL"),
						workspace: store.getTiddlerSlice(title,"Workspace"),
						workspaceList: store.getTiddlerSlice(title,"WorkspaceList"),
						tiddlerFilter: store.getTiddlerSlice(title,"TiddlerFilter"),
						serverType: serverType,
						description: store.getTiddlerSlice(title,"Description")};
	}
	return feeds;
};

config.macros.importTiddlers.onFeedChange = function(e)
{
	var wizard = new Wizard(this);
	var selTypes = wizard.getElement("selTypes");
	var fileInput = wizard.getElement("txtPath");
	var feeds = wizard.getValue("feeds");
	var f = feeds[this.value];
	if(f) {
		selTypes.value = f.serverType;
		fileInput.value = f.url;
		this.selectedIndex = 0;
		wizard.setValue("feedName",f.serverType);
		wizard.setValue("feedHost",f.url);
		wizard.setValue("feedWorkspace",f.workspace);
		wizard.setValue("feedWorkspaceList",f.workspaceList);
		wizard.setValue("feedTiddlerFilter",f.tiddlerFilter);
	}
	return false;
};

config.macros.importTiddlers.onBrowseChange = function(e)
{
	var wizard = new Wizard(this);
	var fileInput = wizard.getElement("txtPath");
	fileInput.value = "file://" + this.value;
	var serverType = wizard.getElement("selTypes");
	serverType.value = "file";
	return false;
};

config.macros.importTiddlers.onOpen = function(e)
{
	var wizard = new Wizard(this);
	var fileInput = wizard.getElement("txtPath");
	var url = fileInput.value;
	var serverType = wizard.getElement("selTypes").value;
	var adaptor = new config.adaptors[serverType];
	wizard.setValue("adaptor",adaptor);
	wizard.setValue("serverType",serverType);
	wizard.setValue("host",url);
	var ret = adaptor.openHost(url,null,wizard,config.macros.importTiddlers.onOpenHost);
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusOpenHost);
	return false;
};

config.macros.importTiddlers.onOpenHost = function(context,wizard)
{
	var adaptor = wizard.getValue("adaptor");
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onOpenHost: " + context.statusText);
	var ret = adaptor.getWorkspaceList(context,wizard,config.macros.importTiddlers.onGetWorkspaceList);
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusGetWorkspaceList);
};

config.macros.importTiddlers.onGetWorkspaceList = function(context,wizard)
{
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onGetWorkspaceList: " + context.statusText);
	wizard.addStep(config.macros.importTiddlers.step2Title,config.macros.importTiddlers.step2Html);
	var s = wizard.getElement("selWorkspace");
	s.onchange = config.macros.importTiddlers.onWorkspaceChange;
	for(var t=0; t&lt;context.workspaces.length; t++) {
		var e = createTiddlyElement(s,"option",null,null,context.workspaces[t].title);
		e.value = context.workspaces[t].title;
	}
	var workspaceList = wizard.getValue("feedWorkspaceList");
	if(workspaceList) {
		var list = workspaceList.parseParams("workspace",null,false,true);
		for(var n=1; n&lt;list.length; n++) {
			if(context.workspaces.findByField("title",list[n].value) == null) {
				e = createTiddlyElement(s,"option",null,null,list[n].value);
				e.value = list[n].value;
			}
		}
	}
	var workspace = wizard.getValue("feedWorkspace");
	if(workspace) {
		t = wizard.getElement("txtWorkspace");
		t.value = workspace;
	}
	wizard.setValue("context",context);
	wizard.setButtons([{caption: config.macros.importTiddlers.openLabel, tooltip: config.macros.importTiddlers.openPrompt, onClick: config.macros.importTiddlers.onChooseWorkspace}]);
};

config.macros.importTiddlers.onWorkspaceChange = function(e)
{
	var wizard = new Wizard(this);
	var t = wizard.getElement("txtWorkspace");
	t.value  = this.value;
	this.selectedIndex = 0;
	return false;
};

config.macros.importTiddlers.onChooseWorkspace = function(e)
{
	var wizard = new Wizard(this);
	var adaptor = wizard.getValue("adaptor");
	var workspace = wizard.getElement("txtWorkspace").value;
	wizard.setValue("workspace",workspace);
	var context = wizard.getValue("context");
	var ret = adaptor.openWorkspace(workspace,context,wizard,config.macros.importTiddlers.onOpenWorkspace);
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusOpenWorkspace);
	return false;
};

config.macros.importTiddlers.onOpenWorkspace = function(context,wizard)
{
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onOpenWorkspace: " + context.statusText);
	var adaptor = wizard.getValue("adaptor");
	var ret = adaptor.getTiddlerList(context,wizard,config.macros.importTiddlers.onGetTiddlerList,wizard.getValue("feedTiddlerFilter"));
	if(ret !== true)
		displayMessage(ret);
	wizard.setButtons([{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}],config.macros.importTiddlers.statusGetTiddlerList);
};

config.macros.importTiddlers.onGetTiddlerList = function(context,wizard)
{
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onGetTiddlerList: " + context.statusText);
	// Extract data for the listview
	var listedTiddlers = [];
	if(context.tiddlers) {
		for(var n=0; n&lt;context.tiddlers.length; n++) {
			var tiddler = context.tiddlers[n];
			listedTiddlers.push({
				title: tiddler.title,
				modified: tiddler.modified,
				modifier: tiddler.modifier,
				text: tiddler.text ? wikifyPlainText(tiddler.text,100) : "",
				tags: tiddler.tags,
				size: tiddler.text ? tiddler.text.length : 0,
				tiddler: tiddler
			});
		}
	}
	listedTiddlers.sort(function(a,b) {return a.title &lt; b.title ? -1 : (a.title == b.title ? 0 : +1);});
	// Display the listview
	wizard.addStep(config.macros.importTiddlers.step3Title,config.macros.importTiddlers.step3Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	var listView = ListView.create(listWrapper,listedTiddlers,config.macros.importTiddlers.listViewTemplate);
	wizard.setValue("listView",listView);
	var txtSaveTiddler = wizard.getElement("txtSaveTiddler");
	txtSaveTiddler.value = config.macros.importTiddlers.generateSystemServerName(wizard);
	wizard.setButtons([
			{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel},
			{caption: config.macros.importTiddlers.importLabel, tooltip: config.macros.importTiddlers.importPrompt, onClick:  config.macros.importTiddlers.doImport}
		]);
};

config.macros.importTiddlers.generateSystemServerName = function(wizard)
{
	var serverType = wizard.getValue("serverType");
	var host = wizard.getValue("host");
	var workspace = wizard.getValue("workspace");
	var pattern = config.macros.importTiddlers[workspace ? "systemServerNamePattern" : "systemServerNamePatternNoWorkspace"];
	return pattern.format([serverType,host,workspace]);
};

config.macros.importTiddlers.saveServerTiddler = function(wizard)
{
	var txtSaveTiddler = wizard.getElement("txtSaveTiddler").value;
	if(store.tiddlerExists(txtSaveTiddler)) {
		if(!confirm(config.macros.importTiddlers.confirmOverwriteSaveTiddler.format([txtSaveTiddler])))
			return;
		store.suspendNotifications();
		store.removeTiddler(txtSaveTiddler);
		store.resumeNotifications();
	}
	var serverType = wizard.getValue("serverType");
	var host = wizard.getValue("host");
	var workspace = wizard.getValue("workspace");
	var text = config.macros.importTiddlers.serverSaveTemplate.format([serverType,host,workspace]);
	store.saveTiddler(txtSaveTiddler,txtSaveTiddler,text,config.macros.importTiddlers.serverSaveModifier,new Date(),["systemServer"]);
};

config.macros.importTiddlers.doImport = function(e)
{
	var wizard = new Wizard(this);
	if(wizard.getElement("chkSave").checked)
		config.macros.importTiddlers.saveServerTiddler(wizard);
	var chkSync = wizard.getElement("chkSync").checked;
	wizard.setValue("sync",chkSync);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	var adaptor = wizard.getValue("adaptor");
	var overwrite = new Array();
	var t;
	for(t=0; t&lt;rowNames.length; t++) {
		if(store.tiddlerExists(rowNames[t]))
			overwrite.push(rowNames[t]);
	}
	if(overwrite.length &gt; 0) {
		if(!confirm(config.macros.importTiddlers.confirmOverwriteText.format([overwrite.join(", ")])))
			return false;
	}
	wizard.addStep(config.macros.importTiddlers.step4Title.format([rowNames.length]),config.macros.importTiddlers.step4Html);
	for(t=0; t&lt;rowNames.length; t++) {
		var link = document.createElement("div");
		createTiddlyLink(link,rowNames[t],true);
		var place = wizard.getElement("markReport");
		place.parentNode.insertBefore(link,place);
	}
	wizard.setValue("remainingImports",rowNames.length);
	wizard.setButtons([
			{caption: config.macros.importTiddlers.cancelLabel, tooltip: config.macros.importTiddlers.cancelPrompt, onClick: config.macros.importTiddlers.onCancel}
		],config.macros.importTiddlers.statusDoingImport);
	for(t=0; t&lt;rowNames.length; t++) {
		var context = {};
		context.allowSynchronous = true;
		var inbound = adaptor.getTiddler(rowNames[t],context,wizard,config.macros.importTiddlers.onGetTiddler);
	}
	return false;
};

config.macros.importTiddlers.onGetTiddler = function(context,wizard)
{
	if(!context.status)
		displayMessage("Error in importTiddlers.onGetTiddler: " + context.statusText);
	var tiddler = context.tiddler;
	store.suspendNotifications();
	store.saveTiddler(tiddler.title, tiddler.title, tiddler.text, tiddler.modifier, tiddler.modified, tiddler.tags, tiddler.fields, true, tiddler.created);
	if(!wizard.getValue("sync")) {
		store.setValue(tiddler.title,'server',null);
	}
	store.resumeNotifications();
	if(!context.isSynchronous)
		store.notify(tiddler.title,true);
	var remainingImports = wizard.getValue("remainingImports")-1;
	wizard.setValue("remainingImports",remainingImports);
	if(remainingImports == 0) {
		if(context.isSynchronous) {
			store.notifyAll();
			refreshDisplay();
		}
		wizard.setButtons([
				{caption: config.macros.importTiddlers.doneLabel, tooltip: config.macros.importTiddlers.donePrompt, onClick: config.macros.importTiddlers.onCancel}
			],config.macros.importTiddlers.statusDoneImport);
		autoSaveChanges();
	}
};

//--
//-- Sync macro
//--

// Synchronisation handlers
config.syncers = {};

// Sync state.
var currSync = null;

// sync macro
config.macros.sync.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(!wikifier.isStatic)
		this.startSync(place);
};

config.macros.sync.startSync = function(place)
{
	if(currSync)
		config.macros.sync.cancelSync();
	currSync = {};
	currSync.syncList = this.getSyncableTiddlers();
	this.createSyncTasks();
	this.preProcessSyncableTiddlers();
	var wizard = new Wizard();
	currSync.wizard = wizard;
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	currSync.listView = ListView.create(listWrapper,currSync.syncList,this.listViewTemplate);
	this.processSyncableTiddlers();
	wizard.setButtons([
			{caption: this.syncLabel, tooltip: this.syncPrompt, onClick: this.doSync}
		]);
};

config.macros.sync.getSyncableTiddlers = function()
{
	var list = [];
	store.forEachTiddler(function(title,tiddler) {
		var syncItem = {};
		syncItem.serverType = tiddler.getServerType();
		syncItem.serverHost = tiddler.fields['server.host'];
		syncItem.serverWorkspace = tiddler.fields['server.workspace'];
		syncItem.tiddler = tiddler;
		syncItem.title = tiddler.title;
		syncItem.isTouched = tiddler.isTouched();
		syncItem.selected = syncItem.isTouched;
		syncItem.syncStatus = config.macros.sync.syncStatusList[syncItem.isTouched ? "changedLocally" : "none"];
		syncItem.status = syncItem.syncStatus.text;
		if(syncItem.serverType &amp;&amp; syncItem.serverHost)
			list.push(syncItem);
		});
	list.sort(function(a,b) {return a.title &lt; b.title ? -1 : (a.title == b.title ? 0 : +1);});
	return list;
};

config.macros.sync.preProcessSyncableTiddlers = function()
{
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		si = currSync.syncList[t];
		var ti = si.syncTask.syncMachine.generateTiddlerInfo(si.tiddler);
		si.serverUrl = ti.uri;
	}
};

config.macros.sync.processSyncableTiddlers = function()
{
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		si = currSync.syncList[t];
		si.rowElement.style.backgroundColor = si.syncStatus.color;
	}
};

config.macros.sync.createSyncTasks = function()
{
	currSync.syncTasks = [];
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		var si = currSync.syncList[t];
		var r = null;
		for(var st=0; st&lt;currSync.syncTasks.length; st++) {
			var cst = currSync.syncTasks[st];
			if(si.serverType == cst.serverType &amp;&amp; si.serverHost == cst.serverHost &amp;&amp; si.serverWorkspace == cst.serverWorkspace)
				r = cst;
		}
		if(r == null) {
			si.syncTask = this.createSyncTask(si);
			currSync.syncTasks.push(si.syncTask);
		} else {
			si.syncTask = r;
			r.syncItems.push(si);
		}
	}
};

config.macros.sync.createSyncTask = function(syncItem)
{
	var st = {};
	st.serverType = syncItem.serverType;
	st.serverHost = syncItem.serverHost;
	st.serverWorkspace = syncItem.serverWorkspace;
	st.syncItems = [syncItem];
	st.syncMachine = new SyncMachine(st.serverType,{
		start: function() {
			return this.openHost(st.serverHost,"openWorkspace");
		},
		openWorkspace: function() {
			return this.openWorkspace(st.serverWorkspace,"getTiddlerList");
		},
		getTiddlerList: function() {
			return this.getTiddlerList("gotTiddlerList");
		},
		gotTiddlerList: function(tiddlers) {
			for(var t=0; t&lt;st.syncItems.length; t++) {
				var si = st.syncItems[t];
				var f = tiddlers.findByField("title",si.title);
				if(f !== null) {
					if(tiddlers[f].fields['server.page.revision'] &gt; si.tiddler.fields['server.page.revision']) {
						si.syncStatus = config.macros.sync.syncStatusList[si.isTouched ? 'changedBoth' : 'changedServer'];
					}
				} else {
					si.syncStatus = config.macros.sync.syncStatusList.notFound;
				}
				config.macros.sync.updateSyncStatus(si);
			}
		},
		getTiddler: function(title) {
			return this.getTiddler(title,"onGetTiddler");
		},
		onGetTiddler: function(tiddler) {
			var syncItem = st.syncItems.findByField("title",tiddler.title);
			if(syncItem !== null) {
				syncItem = st.syncItems[syncItem];
				store.saveTiddler(tiddler.title, tiddler.title, tiddler.text, tiddler.modifier, tiddler.modified, tiddler.tags, tiddler.fields, true, tiddler.created);
				syncItem.syncStatus = config.macros.sync.syncStatusList.gotFromServer;
				config.macros.sync.updateSyncStatus(syncItem);
			}
		},
		putTiddler: function(tiddler) {
			return this.putTiddler(tiddler,"onPutTiddler");
		},
		onPutTiddler: function(tiddler) {
			var syncItem = st.syncItems.findByField("title",tiddler.title);
			if(syncItem !== null) {
				syncItem = st.syncItems[syncItem];
				store.resetTiddler(tiddler.title);
				syncItem.syncStatus = config.macros.sync.syncStatusList.putToServer;
				config.macros.sync.updateSyncStatus(syncItem);
			}
		}
	});
	st.syncMachine.go();
	return st;
};

config.macros.sync.updateSyncStatus = function(syncItem)
{
	var e = syncItem.colElements["status"];
	removeChildren(e);
	createTiddlyText(e,syncItem.syncStatus.text);
	syncItem.rowElement.style.backgroundColor = syncItem.syncStatus.color;
};

config.macros.sync.doSync = function(e)
{
	var rowNames = ListView.getSelectedRows(currSync.listView);
	for(var t=0; t&lt;currSync.syncList.length; t++) {
		var si = currSync.syncList[t];
		if(rowNames.indexOf(si.title) != -1) {
			config.macros.sync.doSyncItem(si);
		}
	}
	return false;
};

config.macros.sync.doSyncItem = function(syncItem)
{
	var r = true;
	var sl = config.macros.sync.syncStatusList;
	switch(syncItem.syncStatus) {
		case sl.changedServer:
			r = syncItem.syncTask.syncMachine.go("getTiddler",syncItem.title);
			break;
		case sl.notFound:
		case sl.changedLocally:
		case sl.changedBoth:
			r = syncItem.syncTask.syncMachine.go("putTiddler",syncItem.tiddler);
			break;
		default:
			break;
	}
	if(r !== true)
		displayMessage("Error in doSyncItem: " + r);
};

config.macros.sync.cancelSync = function()
{
	currSync = null;
};

function SyncMachine(serverType,steps)
{
	this.serverType = serverType;
	this.adaptor = new config.adaptors[serverType];
	this.steps = steps;
}

SyncMachine.prototype.go = function(step,varargs)
{
	if(!step)
		step = "start";
	var h = this.steps[step];
	if(!h)
		return null;
	var a = [];
	for(var t=1; t&lt;arguments.length; t++)
		a.push(arguments[t]);
	var r = h.apply(this,a);
	if(typeof r == "string")
		this.invokeError(r);
	return r;
};

SyncMachine.prototype.invokeError = function(message)
{
	if(this.steps.error)
		this.steps.error(message);
};

SyncMachine.prototype.openHost = function(host,nextStep)
{
	var me = this;
	return me.adaptor.openHost(host,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep);
	});
};

SyncMachine.prototype.getWorkspaceList = function(nextStep)
{
	var me = this;
	return me.adaptor.getWorkspaceList(null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,context.workspaces);
	});
};

SyncMachine.prototype.openWorkspace = function(workspace,nextStep)
{
	var me = this;
	return me.adaptor.openWorkspace(workspace,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep);
	});
};

SyncMachine.prototype.getTiddlerList = function(nextStep)
{
	var me = this;
	return me.adaptor.getTiddlerList(null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,context.tiddlers);
	});
};

SyncMachine.prototype.generateTiddlerInfo = function(tiddler)
{
	return this.adaptor.generateTiddlerInfo(tiddler);
};

SyncMachine.prototype.getTiddler = function(title,nextStep)
{
	var me = this;
	return me.adaptor.getTiddler(title,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,context.tiddler);
	});
};

SyncMachine.prototype.putTiddler = function(tiddler,nextStep)
{
	var me = this;
	return me.adaptor.putTiddler(tiddler,null,null,function(context) {
		if(typeof context.status == "string")
			me.invokeError(context.status);
		else
			me.go(nextStep,tiddler);
	});
};

//--
//-- Manager UI for groups of tiddlers
//--

config.macros.plugins.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var wizard = new Wizard();
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	listWrapper.setAttribute("refresh","macro");
	listWrapper.setAttribute("macroName","plugins");
	listWrapper.setAttribute("params",paramString);
	this.refresh(listWrapper,paramString);
};

config.macros.plugins.refresh = function(listWrapper,params)
{
	var wizard = new Wizard(listWrapper);
	var selectedRows = [];
	ListView.forEachSelector(listWrapper,function(e,rowName) {
			if(e.checked)
				selectedRows.push(e.getAttribute("rowName"));
		});
	removeChildren(listWrapper);
	params = params.parseParams("anon");
	var plugins = installedPlugins.slice(0);
	var t,tiddler,p;
	var configTiddlers = store.getTaggedTiddlers("systemConfig");
	for(t=0; t&lt;configTiddlers.length; t++) {
		tiddler = configTiddlers[t];
		if(plugins.findByField("title",tiddler.title) == null) {
			p = getPluginInfo(tiddler);
			p.executed = false;
			p.log.splice(0,0,this.skippedText);
			plugins.push(p);
		}
	}
	for(t=0; t&lt;plugins.length; t++) {
		p = plugins[t];
		p.size = p.tiddler.text ? p.tiddler.text.length : 0;
		p.forced = p.tiddler.isTagged("systemConfigForce");
		p.disabled = p.tiddler.isTagged("systemConfigDisable");
		p.Selected = selectedRows.indexOf(plugins[t].title) != -1;
	}
	if(plugins.length == 0) {
		createTiddlyElement(listWrapper,"em",null,null,this.noPluginText);
		wizard.setButtons([]);
	} else {
		var listView = ListView.create(listWrapper,plugins,this.listViewTemplate,this.onSelectCommand);
		wizard.setValue("listView",listView);
		wizard.setButtons([
				{caption: config.macros.plugins.removeLabel, tooltip: config.macros.plugins.removePrompt, onClick:  config.macros.plugins.doRemoveTag},
				{caption: config.macros.plugins.deleteLabel, tooltip: config.macros.plugins.deletePrompt, onClick:  config.macros.plugins.doDelete}
			]);
	}
};

config.macros.plugins.doRemoveTag = function(e)
{
	var wizard = new Wizard(this);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	if(rowNames.length == 0) {
		alert(config.messages.nothingSelected);
	} else {
		for(var t=0; t&lt;rowNames.length; t++)
			store.setTiddlerTag(rowNames[t],false,"systemConfig");
	}
};

config.macros.plugins.doDelete = function(e)
{
	var wizard = new Wizard(this);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	if(rowNames.length == 0) {
		alert(config.messages.nothingSelected);
	} else {
		if(confirm(config.macros.plugins.confirmDeleteText.format([rowNames.join(", ")]))) {
			for(t=0; t&lt;rowNames.length; t++) {
				store.removeTiddler(rowNames[t]);
				story.closeTiddler(rowNames[t],true);
			}
		}
	}
};

//--
//-- Message area
//--

function getMessageDiv()
{
	var msgArea = document.getElementById("messageArea");
	if(!msgArea)
		return null;
	if(!msgArea.hasChildNodes())
		createTiddlyButton(createTiddlyElement(msgArea,"div",null,"messageToolbar"),
			config.messages.messageClose.text,
			config.messages.messageClose.tooltip,
			clearMessage);
	msgArea.style.display = "block";
	return createTiddlyElement(msgArea,"div");
}

function displayMessage(text,linkText)
{
	var e = getMessageDiv();
	if(!e) {
		alert(text);
		return;
	}
	if(linkText) {
		var link = createTiddlyElement(e,"a",null,null,text);
		link.href = linkText;
		link.target = "_blank";
	} else {
		e.appendChild(document.createTextNode(text));
	}
}

function clearMessage()
{
	var msgArea = document.getElementById("messageArea");
	if(msgArea) {
		removeChildren(msgArea);
		msgArea.style.display = "none";
	}
	return false;
}

//--
//-- Refresh mechanism
//--

config.refreshers = {
	link: function(e,changeList)
		{
		var title = e.getAttribute("tiddlyLink");
		refreshTiddlyLink(e,title);
		return true;
		},

	tiddler: function(e,changeList)
		{
		var title = e.getAttribute("tiddler");
		var template = e.getAttribute("template");
		if(changeList &amp;&amp; changeList.indexOf(title) != -1 &amp;&amp; !story.isDirty(title))
			story.refreshTiddler(title,template,true);
		else
			refreshElements(e,changeList);
		return true;
		},

	content: function(e,changeList)
		{
		var title = e.getAttribute("tiddler");
		var force = e.getAttribute("force");
		if(force != null || changeList == null || changeList.indexOf(title) != -1) {
			removeChildren(e);
			wikify(store.getTiddlerText(title,title),e,null);
			return true;
		} else
			return false;
		},

	macro: function(e,changeList)
		{
		var macro = e.getAttribute("macroName");
		var params = e.getAttribute("params");
		if(macro)
			macro = config.macros[macro];
		if(macro &amp;&amp; macro.refresh)
			macro.refresh(e,params);
		return true;
		}
};

function refreshElements(root,changeList)
{
	var nodes = root.childNodes;
	for(var c=0; c&lt;nodes.length; c++) {
		var e = nodes[c], type = null;
		if(e.getAttribute  &amp;&amp; (e.tagName ? e.tagName != "IFRAME" : true))
			type = e.getAttribute("refresh");
		var refresher = config.refreshers[type];
		var refreshed = false;
		if(refresher != undefined)
			refreshed = refresher(e,changeList);
		if(e.hasChildNodes() &amp;&amp; !refreshed)
			refreshElements(e,changeList);
	}
}

function applyHtmlMacros(root,tiddler)
{
	var e = root.firstChild;
	while(e) {
		var nextChild = e.nextSibling;
		if(e.getAttribute) {
			var macro = e.getAttribute("macro");
			if(macro) {
				var params = "";
				var p = macro.indexOf(" ");
				if(p != -1) {
					params = macro.substr(p+1);
					macro = macro.substr(0,p);
				}
				invokeMacro(e,macro,params,null,tiddler);
			}
		}
		if(e.hasChildNodes())
			applyHtmlMacros(e,tiddler);
		e = nextChild;
	}
}

function refreshPageTemplate(title)
{
	var stash = createTiddlyElement(document.body,"div");
	stash.style.display = "none";
	var display = document.getElementById("tiddlerDisplay");
	var nodes,t;
	if(display) {
		nodes = display.childNodes;
		for(t=nodes.length-1; t&gt;=0; t--)
			stash.appendChild(nodes[t]);
	}
	var wrapper = document.getElementById("contentWrapper");
	if(!title)
		title = "PageTemplate";
	var html = store.getRecursiveTiddlerText(title,null,10);
	wrapper.innerHTML = html;
	applyHtmlMacros(wrapper);
	refreshElements(wrapper);
	display = document.getElementById("tiddlerDisplay");
	removeChildren(display);
	if(!display)
		display = createTiddlyElement(wrapper,"div","tiddlerDisplay");
	nodes = stash.childNodes;
	for(t=nodes.length-1; t&gt;=0; t--)
		display.appendChild(nodes[t]);
	removeNode(stash);
}

function refreshDisplay(hint)
{
	if(typeof hint == "string")
		hint = [hint];
	var e = document.getElementById("contentWrapper");
	refreshElements(e,hint);
	if(backstage.isPanelVisible()) {
		e = document.getElementById("backstage");
		refreshElements(e,hint);
	}
}

function refreshPageTitle()
{
	document.title = getPageTitle();
}

function getPageTitle()
{
	var st = wikifyPlain("SiteTitle");
	var ss = wikifyPlain("SiteSubtitle");
	return st + ((st == "" || ss == "") ? "" : " - ") + ss;
}

function refreshStyles(title,doc)
{
	if(!doc)
		doc = document;
	setStylesheet(title == null ? "" : store.getRecursiveTiddlerText(title,"",10),title,doc);
}

function refreshColorPalette(title)
{
	if(!startingUp)
		refreshAll();
}

function refreshAll()
{
	refreshPageTemplate();
	refreshDisplay();
	refreshStyles("StyleSheetLayout");
	refreshStyles("StyleSheetColors");
	refreshStyles("StyleSheet");
	refreshStyles("StyleSheetPrint");
}

//--
//-- Options stuff
//--

config.optionHandlers = {
	'txt': {
		get: function(name) {return encodeCookie(config.options[name].toString());},
		set: function(name,value) {config.options[name] = decodeCookie(value);}
	},
	'chk': {
		get: function(name) {return config.options[name] ? "true" : "false";},
		set: function(name,value) {config.options[name] = value == "true";}
	}
};

function loadOptionsCookie()
{
	if(safeMode)
		return;
	var cookies = document.cookie.split(";");
	for(var c=0; c&lt;cookies.length; c++) {
		var p = cookies[c].indexOf("=");
		if(p != -1) {
			var name = cookies[c].substr(0,p).trim();
			var value = cookies[c].substr(p+1).trim();
			var optType = name.substr(0,3);
			if(config.optionHandlers[optType] &amp;&amp; config.optionHandlers[optType].set)
				config.optionHandlers[optType].set(name,value);
		}
	}
}

function saveOptionCookie(name)
{
	if(safeMode)
		return;
	var c = name + "=";
	var optType = name.substr(0,3);
	if(config.optionHandlers[optType] &amp;&amp; config.optionHandlers[optType].get)
		c += config.optionHandlers[optType].get(name);
	c += "; expires=Fri, 1 Jan 2038 12:00:00 UTC; path=/";
	document.cookie = c;
}

function encodeCookie(s)
{
	return escape(manualConvertUnicodeToUTF8(s));
}

function decodeCookie(s)
{
	s = unescape(s);
	var re = /&amp;#[0-9]{1,5};/g;
	return s.replace(re,function($0) {return String.fromCharCode(eval($0.replace(/[&amp;#;]/g,"")));});
}


config.macros.option.genericCreate = function(place,type,opt,className,desc)
{
	var typeInfo = config.macros.option.types[type];
	var c = document.createElement(typeInfo.elementType);
	if(typeInfo.typeValue)
		c.setAttribute("type",typeInfo.typeValue);
	c[typeInfo.eventName] = typeInfo.onChange;
	c.setAttribute("option",opt);
	if(className)
		c.className = className;
	else
		c.className = typeInfo.className;
	if(config.optionsDesc[opt])
		c.setAttribute("title",config.optionsDesc[opt]);
	place.appendChild(c);
	if(desc != "no")
		createTiddlyText(place,config.optionsDesc[opt] ? config.optionsDesc[opt] : opt);
	c[typeInfo.valueField] = config.options[opt];
	return c;
};

config.macros.option.genericOnChange = function(e)
{
	var opt = this.getAttribute("option");
	if(opt) {
		var optType = opt.substr(0,3);
		var handler = config.macros.option.types[optType];
		if (handler.elementType &amp;&amp; handler.valueField)
			config.macros.option.propagateOption(opt,handler.valueField,this[handler.valueField],handler.elementType);
		}
	return true;
};

config.macros.option.types = {
	'txt': {
		elementType: "input",
		valueField: "value",
		eventName: "onkeyup",
		className: "txtOptionInput",
		create: config.macros.option.genericCreate,
		onChange: config.macros.option.genericOnChange
	},
	'chk': {
		elementType: "input",
		valueField: "checked",
		eventName: "onclick",
		className: "chkOptionInput",
		typeValue: "checkbox",
		create: config.macros.option.genericCreate,
		onChange: config.macros.option.genericOnChange
	}
};

config.macros.option.propagateOption = function(opt,valueField,value,elementType)
{
	config.options[opt] = value;
	saveOptionCookie(opt);
	var nodes = document.getElementsByTagName(elementType);
	for(var t=0; t&lt;nodes.length; t++) {
		var optNode = nodes[t].getAttribute("option");
		if(opt == optNode)
			nodes[t][valueField] = value;
		}
};

config.macros.option.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var opt = (params[1] &amp;&amp; params[1].name == "anon") ? params[1].value : getParam(params,"name",null);
	var className = (params[2] &amp;&amp; params[2].name == "anon") ? params[2].value : getParam(params,"class",null);
	var desc = getParam(params,"desc","no");
	var type = opt.substr(0,3);
	var h = config.macros.option.types[type];
	if (h &amp;&amp; h.create)
		h.create(place,type,opt,className,desc);
};

config.macros.options.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var showUnknown = getParam(params,"showUnknown","no");
	var wizard = new Wizard();
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var chkUnknown = wizard.getElement("chkUnknown");
	chkUnknown.checked = showUnknown == "yes";
	chkUnknown.onchange = this.onChangeUnknown;
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	wizard.setValue("listWrapper",listWrapper);
	this.refreshOptions(listWrapper,showUnknown == "yes");
};

config.macros.options.refreshOptions = function(listWrapper,showUnknown)
{
	var opts = [];
	for(var n in config.options) {
		var opt = {};
		opt.option = "";
		opt.name = n;
		opt.lowlight = !config.optionsDesc[n];
		opt.description = opt.lowlight ? this.unknownDescription : config.optionsDesc[n];
		if(!opt.lowlight || showUnknown)
			opts.push(opt);
	}
	opts.sort(function(a,b) {return a.name.substr(3) &lt; b.name.substr(3) ? -1 : (a.name.substr(3) == b.name.substr(3) ? 0 : +1);});
	var listview = ListView.create(listWrapper,opts,this.listViewTemplate);
	for(n=0; n&lt;opts.length; n++) {
		var type = opts[n].name.substr(0,3);
		var h = config.macros.option.types[type];
		if (h &amp;&amp; h.create) {
			h.create(opts[n].colElements['option'],type,opts[n].name,null,"no");
		}
	}
};

config.macros.options.onChangeUnknown = function(e)
{
	var wizard = new Wizard(this);
	var listWrapper = wizard.getValue("listWrapper");
	removeChildren(listWrapper);
	config.macros.options.refreshOptions(listWrapper,this.checked);
	return false;
};

//--
//-- Saving
//--

var saveUsingSafari = false;

var startSaveArea = '&lt;div id="' + 'storeArea"&gt;'; // Split up into two so that indexOf() of this source doesn't find it
var endSaveArea = '&lt;/d' + 'iv&gt;';

// If there are unsaved changes, force the user to confirm before exitting
function confirmExit()
{
	hadConfirmExit = true;
	if((store &amp;&amp; store.isDirty &amp;&amp; store.isDirty()) || (story &amp;&amp; story.areAnyDirty &amp;&amp; story.areAnyDirty()))
		return config.messages.confirmExit;
}

// Give the user a chance to save changes before exitting
function checkUnsavedChanges()
{
	if(store &amp;&amp; store.isDirty &amp;&amp; store.isDirty() &amp;&amp; window.hadConfirmExit === false) {
		if(confirm(config.messages.unsavedChangesWarning))
			saveChanges();
	}
}

function updateLanguageAttribute(s)
{
	if(config.locale) {
		var mRE = /(&lt;html(?:.*?)?)(?: xml:lang\="([a-z]+)")?(?: lang\="([a-z]+)")?&gt;/;
		var m = mRE.exec(s);
		if(m) {
			var t = m[1];
			if(m[2])
				t += ' xml:lang="' + config.locale + '"';
			if(m[3])
				t += ' lang="' + config.locale + '"';
			t += "&gt;";
			s = s.substr(0,m.index) + t + s.substr(m.index+m[0].length);
		}
	}
	return s;
}

function updateMarkupBlock(s,blockName,tiddlerName)
{
	return s.replaceChunk(
			"&lt;!--%0-START--&gt;".format([blockName]),
			"&lt;!--%0-END--&gt;".format([blockName]),
			"\n" + store.getRecursiveTiddlerText(tiddlerName,"") + "\n");
}

function updateOriginal(original,posDiv)
{
	if(!posDiv)
		posDiv = locateStoreArea(original);
	if(!posDiv) {
		alert(config.messages.invalidFileError.format([localPath]));
		return null;
	}
	var revised = original.substr(0,posDiv[0] + startSaveArea.length) + "\n" +
				convertUnicodeToUTF8(store.allTiddlersAsHtml()) + "\n" +
				original.substr(posDiv[1]);
	var newSiteTitle = convertUnicodeToUTF8(getPageTitle()).htmlEncode();
	revised = revised.replaceChunk("&lt;title"+"&gt;","&lt;/title"+"&gt;"," " + newSiteTitle + " ");
	revised = updateLanguageAttribute(revised);
	revised = updateMarkupBlock(revised,"PRE-HEAD","MarkupPreHead");
	revised = updateMarkupBlock(revised,"POST-HEAD","MarkupPostHead");
	revised = updateMarkupBlock(revised,"PRE-BODY","MarkupPreBody");
	revised = updateMarkupBlock(revised,"POST-SCRIPT","MarkupPostBody");
	return revised;
}

function locateStoreArea(original)
{
	// Locate the storeArea div's
	var posOpeningDiv = original.indexOf(startSaveArea);
	var limitClosingDiv = original.indexOf("&lt;"+"!--POST-STOREAREA--"+"&gt;");
	if(limitClosingDiv == -1)
		limitClosingDiv = original.indexOf("&lt;"+"!--POST-BODY-START--"+"&gt;");
	var posClosingDiv = original.lastIndexOf(endSaveArea,limitClosingDiv == -1 ? original.length : limitClosingDiv);
	return (posOpeningDiv != -1 &amp;&amp; posClosingDiv != -1) ? [posOpeningDiv,posClosingDiv] : null;
}

function autoSaveChanges(onlyIfDirty,tiddlers)
{
	if(config.options.chkAutoSave)
		saveChanges(onlyIfDirty,tiddlers);
}

// Save this tiddlywiki with the pending changes
function saveChanges(onlyIfDirty,tiddlers)
{
	if(onlyIfDirty &amp;&amp; !store.isDirty())
		return;
	clearMessage();
	// Get the URL of the document
	var originalPath = document.location.toString();
	// Check we were loaded from a file URL
	if(originalPath.substr(0,5) != "file:") {
		alert(config.messages.notFileUrlError);
		if(store.tiddlerExists(config.messages.saveInstructions))
			story.displayTiddler(null,config.messages.saveInstructions);
		return;
	}
	var localPath = getLocalPath(originalPath);
	// Load the original file
	var original = loadFile(localPath);
	if(original == null) {
		alert(config.messages.cantSaveError);
		if(store.tiddlerExists(config.messages.saveInstructions))
			story.displayTiddler(null,config.messages.saveInstructions);
		return;
	}
	// Locate the storeArea div's
	var posDiv = locateStoreArea(original);
	if(!posDiv) {
		alert(config.messages.invalidFileError.format([localPath]));
		return;
	}
	saveBackup(localPath,original);
	saveRss(localPath);
	saveEmpty(localPath,original,posDiv);
	saveMain(localPath,original,posDiv);
}

function saveBackup(localPath,original)
{
	// Save the backup
	if(config.options.chkSaveBackups) {
		var backupPath = getBackupPath(localPath);
		var backup = config.browser.isIE ? ieCopyFile(backupPath,localPath) : saveFile(backupPath,original);
		if(backup)
			displayMessage(config.messages.backupSaved,"file://" + backupPath);
		else
			alert(config.messages.backupFailed);
	}
}

function saveRss(localPath)
{
	if(config.options.chkGenerateAnRssFeed) {
		var rssPath = localPath.substr(0,localPath.lastIndexOf(".")) + ".xml";
		var rssSave = saveFile(rssPath,convertUnicodeToUTF8(generateRss()));
		if(rssSave)
			displayMessage(config.messages.rssSaved,"file://" + rssPath);
		else
			alert(config.messages.rssFailed);
	}
}

function saveEmpty(localPath,original,posDiv)
{
	if(config.options.chkSaveEmptyTemplate) {
		var emptyPath,p;
		if((p = localPath.lastIndexOf("/")) != -1)
			emptyPath = localPath.substr(0,p) + "/empty.html";
		else if((p = localPath.lastIndexOf("\\")) != -1)
			emptyPath = localPath.substr(0,p) + "\\empty.html";
		else
			emptyPath = localPath + ".empty.html";
		var empty = original.substr(0,posDiv[0] + startSaveArea.length) + original.substr(posDiv[1]);
		var emptySave = saveFile(emptyPath,empty);
		if(emptySave)
			displayMessage(config.messages.emptySaved,"file://" + emptyPath);
		else
			alert(config.messages.emptyFailed);
	}
}

function saveMain(localPath,original,posDiv)
{
	var save;
	try {
		var revised = updateOriginal(original,posDiv);
		save = saveFile(localPath,revised);
	} catch (ex) {
		showException(ex);
	}
	if(save) {
		displayMessage(config.messages.mainSaved,"file://" + localPath);
		store.setDirty(false);
	} else {
		alert(config.messages.mainFailed);
	}
}

function getLocalPath(origPath)
{
	var originalPath = convertUriToUTF8(origPath,config.options.txtFileSystemCharSet);
	// Remove any location or query part of the URL
	var argPos = originalPath.indexOf("?");
	if(argPos != -1)
		originalPath = originalPath.substr(0,argPos);
	var hashPos = originalPath.indexOf("#");
	if(hashPos != -1)
		originalPath = originalPath.substr(0,hashPos);
	// Convert file://localhost/ to file:///
	if(originalPath.indexOf("file://localhost/") == 0)
		originalPath = "file://" + originalPath.substr(16);
	// Convert to a native file format
	var localPath;
	if(originalPath.charAt(9) == ":") // pc local file
		localPath = unescape(originalPath.substr(8)).replace(new RegExp("/","g"),"\\");
	else if(originalPath.indexOf("file://///") == 0) // FireFox pc network file
		localPath = "\\\\" + unescape(originalPath.substr(10)).replace(new RegExp("/","g"),"\\");
	else if(originalPath.indexOf("file:///") == 0) // mac/unix local file
		localPath = unescape(originalPath.substr(7));
	else if(originalPath.indexOf("file:/") == 0) // mac/unix local file
		localPath = unescape(originalPath.substr(5));
	else // pc network file
		localPath = "\\\\" + unescape(originalPath.substr(7)).replace(new RegExp("/","g"),"\\");
	return localPath;
}

function getBackupPath(localPath)
{
	var backSlash = true;
	var dirPathPos = localPath.lastIndexOf("\\");
	if(dirPathPos == -1) {
		dirPathPos = localPath.lastIndexOf("/");
		backSlash = false;
	}
	var backupFolder = config.options.txtBackupFolder;
	if(!backupFolder || backupFolder == "")
		backupFolder = ".";
	var backupPath = localPath.substr(0,dirPathPos) + (backSlash ? "\\" : "/") + backupFolder + localPath.substr(dirPathPos);
	backupPath = backupPath.substr(0,backupPath.lastIndexOf(".")) + "." + (new Date()).convertToYYYYMMDDHHMMSSMMM() + ".html";
	return backupPath;
}

function generateRss()
{
	var s = [];
	var d = new Date();
	var u = store.getTiddlerText("SiteUrl");
	// Assemble the header
	s.push("&lt;" + "?xml version=\"1.0\"?" + "&gt;");
	s.push("&lt;rss version=\"2.0\"&gt;");
	s.push("&lt;channel&gt;");
	s.push("&lt;title" + "&gt;" + wikifyPlain("SiteTitle").htmlEncode() + "&lt;/title" + "&gt;");
	if(u)
		s.push("&lt;link&gt;" + u.htmlEncode() + "&lt;/link&gt;");
	s.push("&lt;description&gt;" + wikifyPlain("SiteSubtitle").htmlEncode() + "&lt;/description&gt;");
	s.push("&lt;language&gt;en-us&lt;/language&gt;");
	s.push("&lt;copyright&gt;Copyright " + d.getFullYear() + " " + config.options.txtUserName.htmlEncode() + "&lt;/copyright&gt;");
	s.push("&lt;pubDate&gt;" + d.toGMTString() + "&lt;/pubDate&gt;");
	s.push("&lt;lastBuildDate&gt;" + d.toGMTString() + "&lt;/lastBuildDate&gt;");
	s.push("&lt;docs&gt;http://blogs.law.harvard.edu/tech/rss&lt;/docs&gt;");
	s.push("&lt;generator&gt;TiddlyWiki " + version.major + "." + version.minor + "." + version.revision + "&lt;/generator&gt;");
	// The body
	var tiddlers = store.getTiddlers("modified","excludeLists");
	var n = config.numRssItems &gt; tiddlers.length ? 0 : tiddlers.length-config.numRssItems;
	for (var t=tiddlers.length-1; t&gt;=n; t--)
		s.push(tiddlers[t].saveToRss(u));
	// And footer
	s.push("&lt;/channel&gt;");
	s.push("&lt;/rss&gt;");
	// Save it all
	return s.join("\n");
}

//--
//-- Filesystem code
//--

function convertUTF8ToUnicode(u)
{
	return window.netscape == undefined ? manualConvertUTF8ToUnicode(u) : mozConvertUTF8ToUnicode(u);
}

function manualConvertUTF8ToUnicode(utf)
{
	var uni = utf;
	var src = 0;
	var dst = 0;
	var b1, b2, b3;
	var c;
	while(src &lt; utf.length) {
		b1 = utf.charCodeAt(src++);
		if(b1 &lt; 0x80) {
			dst++;
		} else if(b1 &lt; 0xE0) {
			b2 = utf.charCodeAt(src++);
			c = String.fromCharCode(((b1 &amp; 0x1F) &lt;&lt; 6) | (b2 &amp; 0x3F));
			uni = uni.substring(0,dst++).concat(c,utf.substr(src));
		} else {
			b2 = utf.charCodeAt(src++);
			b3 = utf.charCodeAt(src++);
			c = String.fromCharCode(((b1 &amp; 0xF) &lt;&lt; 12) | ((b2 &amp; 0x3F) &lt;&lt; 6) | (b3 &amp; 0x3F));
			uni = uni.substring(0,dst++).concat(c,utf.substr(src));
		}
	}
	return uni;
}

function mozConvertUTF8ToUnicode(u)
{
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
		converter.charset = "UTF-8";
	} catch(ex) {
		return manualConvertUTF8ToUnicode(u);
	} // fallback
	var s = converter.ConvertToUnicode(u);
	var fin = converter.Finish();
	return (fin.length &gt; 0) ? s+fin : s;
}

function convertUnicodeToUTF8(s)
{
	if(window.netscape == undefined)
		return manualConvertUnicodeToUTF8(s);
	else
		return mozConvertUnicodeToUTF8(s);
}

function manualConvertUnicodeToUTF8(s)
{
	var re = /[^\u0000-\u007F]/g ;
	return s.replace(re,function($0) {return "&amp;#" + $0.charCodeAt(0).toString() + ";";});
}

function mozConvertUnicodeToUTF8(s)
{
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
		converter.charset = "UTF-8";
	} catch(ex) {
		return manualConvertUnicodeToUTF8(s);
	} // fallback
	var u = converter.ConvertFromUnicode(s);
	var fin = converter.Finish();
	return fin.length &gt; 0 ? u + fin : u;
}

function convertUriToUTF8(uri,charSet)
{
	if(window.netscape == undefined || charSet == undefined || charSet == "")
		return uri;
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/utf8converterservice;1"].getService(Components.interfaces.nsIUTF8ConverterService);
	} catch(ex) {
		return uri;
	}
	return converter.convertURISpecToUTF8(uri,charSet);
}

function saveFile(fileUrl,content)
{
	var r = mozillaSaveFile(fileUrl,content);
	if(!r)
		r = ieSaveFile(fileUrl,content);
	if(!r)
		r = javaSaveFile(fileUrl,content);
	return r;
}

function loadFile(fileUrl)
{
	var r = mozillaLoadFile(fileUrl);
	if((r == null) || (r == false))
		r = ieLoadFile(fileUrl);
	if((r == null) || (r == false))
		r = javaLoadFile(fileUrl);
	return r;
}

// Returns null if it can't do it, false if there's an error, true if it saved OK
function ieSaveFile(filePath,content)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
	} catch(ex) {
		return null;
	}
	var file = fso.OpenTextFile(filePath,2,-1,0);
	file.Write(content);
	file.Close();
	return true;
}

// Returns null if it can't do it, false if there's an error, or a string of the content if successful
function ieLoadFile(filePath)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		var file = fso.OpenTextFile(filePath,1);
		var content = file.ReadAll();
		file.Close();
	} catch(ex) {
		return null;
	}
	return content;
}

function ieCopyFile(dest,source)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		fso.GetFile(source).Copy(dest);
	} catch(ex) {
		return false;
	}
	return true;
}

// Returns null if it can't do it, false if there's an error, true if it saved OK
function mozillaSaveFile(filePath,content)
{
	if(window.Components) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
			file.initWithPath(filePath);
			if(!file.exists())
				file.create(0,0664);
			var out = Components.classes["@mozilla.org/network/file-output-stream;1"].createInstance(Components.interfaces.nsIFileOutputStream);
			out.init(file,0x20|0x02,00004,null);
			out.write(content,content.length);
			out.flush();
			out.close();
			return true;
		} catch(ex) {
			return false;
		}
	}
	return null;
}

// Returns null if it can't do it, false if there's an error, or a string of the content if successful
function mozillaLoadFile(filePath)
{
	if(window.Components) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
			file.initWithPath(filePath);
			if(!file.exists())
				return null;
			var inputStream = Components.classes["@mozilla.org/network/file-input-stream;1"].createInstance(Components.interfaces.nsIFileInputStream);
			inputStream.init(file,0x01,00004,null);
			var sInputStream = Components.classes["@mozilla.org/scriptableinputstream;1"].createInstance(Components.interfaces.nsIScriptableInputStream);
			sInputStream.init(inputStream);
			return sInputStream.read(sInputStream.available());
		} catch(ex) {
			return false;
		}
	}
	return null;
}

function javaUrlToFilename(url)
{
	var f = "//localhost";
	if(url.indexOf(f) == 0)
		return url.substring(f.length);
	var i = url.indexOf(":");
	if(i &gt; 0)
		return url.substring(i-1);
	return url;
}

function javaSaveFile(filePath,content)
{
	try {
		if(document.applets["TiddlySaver"])
			return document.applets["TiddlySaver"].saveFile(javaUrlToFilename(filePath),"UTF-8",content);
	} catch(ex) {
	}
	try {
		var s = new java.io.PrintStream(new java.io.FileOutputStream(javaUrlToFilename(filePath)));
		s.print(content);
		s.close();
	} catch(ex) {
		return null;
	}
	return true;
}

function javaLoadFile(filePath)
{
	try {
		if(document.applets["TiddlySaver"])
			return String(document.applets["TiddlySaver"].loadFile(javaUrlToFilename(filePath),"UTF-8"));
	} catch(ex) {
	}
	var content = [];
	try {
		var r = new java.io.BufferedReader(new java.io.FileReader(javaUrlToFilename(filePath)));
		var line;
		while((line = r.readLine()) != null)
			content.push(new String(line));
		r.close();
	} catch(ex) {
		return null;
	}
	return content.join("\n");
}

//--
//-- Server adaptor for talking to static files
//--

function FileAdaptor()
{
	this.host = null;
	this.store = null;
	return this;
}

FileAdaptor.NotLoadedError = "TiddlyWiki file has not been loaded";
FileAdaptor.serverType = 'file';

// Open the specified host/server
FileAdaptor.prototype.openHost = function(host,context,userParams,callback)
{
	this.host = host;
	if(!context)
		context = {};
	context.adaptor = this;
	context.callback = callback;
	context.userParams = userParams;
	var ret = loadRemoteFile(host,FileAdaptor.openHostCallback,context);
	return typeof(ret) == "string" ? ret : true;
};

FileAdaptor.openHostCallback = function(status,context,responseText,url,xhr)
{
	var adaptor = context.adaptor;
	context.status = status;
	if(!status) {
		context.statusText = "Error reading file: " + xhr.statusText;
	} else {
		// Load the content into a TiddlyWiki() object
		adaptor.store = new TiddlyWiki();
		if(!adaptor.store.importTiddlyWiki(responseText))
			context.statusText = config.messages.invalidFileError.format([url]);
	}
	context.callback(context,context.userParams);
};

// Gets the list of workspaces on a given server
FileAdaptor.prototype.getWorkspaceList = function(context,userParams,callback)
{
	if(!context)
		context = {};
	context.workspaces = [{title:"(default)"}];
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Open the specified workspace
FileAdaptor.prototype.openWorkspace = function(workspace,context,userParams,callback)
{
	if(!context)
		context = {};
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Gets the list of tiddlers within a given workspace
FileAdaptor.prototype.getTiddlerList = function(context,userParams,callback,filter)
{
	if(!this.store)
		return FileAdaptor.NotLoadedError;
	if(!context)
		context = {};
	if(filter) {
		context.tiddlers = this.store.filterTiddlers(filter);
	} else {
		context.tiddlers = [];
		this.store.forEachTiddler(function(title,tiddler) {context.tiddlers.push(tiddler);});
	}
	for(var t=0; t&lt;context.tiddlers.length; t++) {
		context.tiddlers[t].fields['server.page.revision'] = context.tiddlers[t].modified.convertToYYYYMMDDHHMM();
	}
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

FileAdaptor.prototype.generateTiddlerInfo = function(tiddler)
{
	var info = {};
	info.uri = tiddler.fields['server.host'] + "#" + tiddler.title;
	return info;
};

// Retrieves a tiddler from a given workspace on a given server
FileAdaptor.prototype.getTiddler = function(title,context,userParams,callback)
{
	if(!this.store)
		return FileAdaptor.NotLoadedError;
	if(!context)
		context = {};
	context.tiddler = this.store.fetchTiddler(title);
	if(context.tiddler) {
		context.tiddler.fields['server.type'] = FileAdaptor.serverType;
		context.tiddler.fields['server.host'] = this.host;
		context.tiddler.fields['server.page.revision'] = context.tiddler.modified.convertToYYYYMMDDHHMM();
	}
	context.status = true;
	if(context.allowSynchronous) {
		context.isSynchronous = true;
		callback(context,userParams);
	} else {
		window.setTimeout(function() {callback(context,userParams);},10);
	}
	return true;
};

FileAdaptor.prototype.close = function()
{
	delete this.store;
	this.store = null;
};

config.adaptors[FileAdaptor.serverType] = FileAdaptor;

//--
//-- Remote HTTP requests
//--

function loadRemoteFile(url,callback,params)
{
	return doHttp("GET",url,null,null,null,null,callback,params,null);
}

// HTTP status codes
var httpStatus = {
	OK: 200,
	ContentCreated: 201,
	NoContent: 204,
	MultiStatus: 207,
	Unauthorized: 401,
	Forbidden: 403,
	NotFound: 404,
	MethodNotAllowed: 405
};

function doHttp(type,url,data,contentType,username,password,callback,params,headers)
{
	var x = getXMLHttpRequest();
	if(!x)
		return "Can't create XMLHttpRequest object";
	x.onreadystatechange = function() {
		if (x.readyState == 4 &amp;&amp; callback &amp;&amp; (x.status !== undefined)) {
			if([0, httpStatus.OK, httpStatus.ContentCreated, httpStatus.NoContent, httpStatus.MultiStatus].contains(x.status))
				callback(true,params,x.responseText,url,x);
			else
				callback(false,params,null,url,x);
			x.onreadystatechange = function(){};
			x = null;
		}
	};
	if(window.Components &amp;&amp; window.netscape &amp;&amp; window.netscape.security &amp;&amp; document.location.protocol.indexOf("http") == -1)
		window.netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	try {
		url = url + (url.indexOf("?") &lt; 0 ? "?" : "&amp;") + "nocache=" + Math.random();
		x.open(type,url,true,username,password);
		if(data)
			x.setRequestHeader("Content-Type", contentType ? contentType : "application/x-www-form-urlencoded");
		if(x.overrideMimeType)
			x.setRequestHeader("Connection", "close");
		if(headers) {
			for(var n in headers)
				x.setRequestHeader(n,headers[n]);
		}
		x.setRequestHeader("X-Requested-With", "TiddlyWiki " + version.major + "." + version.minor + "." + version.revision + (version.beta ? " (beta " + version.beta + ")" : ""));
		x.send(data);
	} catch(ex) {
		return exceptionText(ex);
	}
	return x;
}

function getXMLHttpRequest()
{
	try {
		var x = new XMLHttpRequest(); // Modern
	} catch(ex) {
		try {
			x = new ActiveXObject("Msxml2.XMLHTTP"); // IE 6
		} catch (ex2) {
			return null;
		}
	}
	return x;
}

//--
//-- TiddlyWiki-specific utility functions
//--

function createTiddlyButton(parent,text,tooltip,action,className,id,accessKey,attribs)
{
	var btn = document.createElement("a");
	if(action) {
		btn.onclick = action;
		btn.setAttribute("href","javascript:;");
	}
	if(tooltip)
		btn.setAttribute("title",tooltip);
	if(text)
		btn.appendChild(document.createTextNode(text));
	btn.className = className ? className : "button";
	if(id)
		btn.id = id;
	if(attribs){
		for(var n in attribs){
			e.setAttribute(n,attribs[n]);
		}
	}
	if(parent)
		parent.appendChild(btn);
	if(accessKey)
		btn.setAttribute("accessKey",accessKey);
	return btn;
}

function createTiddlyLink(place,title,includeText,className,isStatic,linkedFromTiddler,noToggle)
{
	var text = includeText ? title : null;
	var i = getTiddlyLinkInfo(title,className);
	var btn = isStatic ? createExternalLink(place,store.getTiddlerText("SiteUrl",null) + "#" + title) : createTiddlyButton(place,text,i.subTitle,onClickTiddlerLink,i.classes);
	btn.setAttribute("refresh","link");
	btn.setAttribute("tiddlyLink",title);
	if(noToggle)
		btn.setAttribute("noToggle","true");
	if(linkedFromTiddler) {
		var fields = linkedFromTiddler.getInheritedFields();
		if(fields)
			btn.setAttribute("tiddlyFields",fields);
	}
	return btn;
}

function refreshTiddlyLink(e,title)
{
	var i = getTiddlyLinkInfo(title,e.className);
	e.className = i.classes;
	e.title = i.subTitle;
}

function getTiddlyLinkInfo(title,currClasses)
{
	var classes = currClasses ? currClasses.split(" ") : [];
	classes.pushUnique("tiddlyLink");
	var tiddler = store.fetchTiddler(title);
	var subTitle;
	if(tiddler) {
		subTitle = tiddler.getSubtitle();
		classes.pushUnique("tiddlyLinkExisting");
		classes.remove("tiddlyLinkNonExisting");
		classes.remove("shadow");
	} else {
		classes.remove("tiddlyLinkExisting");
		classes.pushUnique("tiddlyLinkNonExisting");
		if(store.isShadowTiddler(title)) {
			subTitle = config.messages.shadowedTiddlerToolTip.format([title]);
			classes.pushUnique("shadow");
		} else {
			subTitle = config.messages.undefinedTiddlerToolTip.format([title]);
			classes.remove("shadow");
		}
	}
	if(config.annotations[title])
		subTitle = config.annotations[title];
	return {classes: classes.join(" "),subTitle: subTitle};
}

function createExternalLink(place,url)
{
	var link = document.createElement("a");
	link.className = "externalLink";
	link.href = url;
	link.title = config.messages.externalLinkTooltip.format([url]);
	if(config.options.chkOpenInNewWindow)
		link.target = "_blank";
	place.appendChild(link);
	return link;
}

// Event handler for clicking on a tiddly link
function onClickTiddlerLink(ev)
{
	var e = ev ? ev : window.event;
	var target = resolveTarget(e);
	var link = target;
	var title = null;
	var fields = null;
	var noToggle = null;
	do {
		title = link.getAttribute("tiddlyLink");
		fields = link.getAttribute("tiddlyFields");
		noToggle = link.getAttribute("noToggle");
		link = link.parentNode;
	} while(title == null &amp;&amp; link != null);
	if(!store.isShadowTiddler(title)) {
		var f = fields ? fields.decodeHashMap() : {};
		fields = String.encodeHashMap(merge(f,config.defaultCustomFields,true));
	}
	if(title) {
		var toggling = e.metaKey || e.ctrlKey;
		if(config.options.chkToggleLinks)
			toggling = !toggling;
		if(noToggle)
			toggling = false;
		if(store.getTiddler(title))
			fields = null;
		story.displayTiddler(target,title,null,true,null,fields,toggling);
	}
	clearMessage();
	return false;
}

// Create a button for a tag with a popup listing all the tiddlers that it tags
function createTagButton(place,tag,excludeTiddler)
{
	var btn = createTiddlyButton(place,tag,config.views.wikified.tag.tooltip.format([tag]),onClickTag);
	btn.setAttribute("tag",tag);
	if(excludeTiddler)
		btn.setAttribute("tiddler",excludeTiddler);
	return btn;
}

// Event handler for clicking on a tiddler tag
function onClickTag(ev)
{
	var e = ev ? ev : window.event;
	var popup = Popup.create(this);
	var tag = this.getAttribute("tag");
	var title = this.getAttribute("tiddler");
	if(popup &amp;&amp; tag) {
		var tagged = store.getTaggedTiddlers(tag);
		var titles = [];
		var li,r;
		for(r=0;r&lt;tagged.length;r++) {
			if(tagged[r].title != title)
				titles.push(tagged[r].title);
		}
		var lingo = config.views.wikified.tag;
		if(titles.length &gt; 0) {
			var openAll = createTiddlyButton(createTiddlyElement(popup,"li"),lingo.openAllText.format([tag]),lingo.openAllTooltip,onClickTagOpenAll);
			openAll.setAttribute("tag",tag);
			createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
			for(r=0; r&lt;titles.length; r++) {
				createTiddlyLink(createTiddlyElement(popup,"li"),titles[r],true);
			}
		} else {
			createTiddlyText(createTiddlyElement(popup,"li",null,"disabled"),lingo.popupNone.format([tag]));
		}
		createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
		var h = createTiddlyLink(createTiddlyElement(popup,"li"),tag,false);
		createTiddlyText(h,lingo.openTag.format([tag]));
	}
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
}

// Event handler for 'open all' on a tiddler popup
function onClickTagOpenAll(ev)
{
	var e = ev ? ev : window.event;
	var tag = this.getAttribute("tag");
	var tagged = store.getTaggedTiddlers(tag);
	var titles = [];
	for(var t=0; t&lt;tagged.length; t++)
		titles.push(tagged[t].title);
	story.displayTiddlers(this,titles);
	return false;
}

function onClickError(ev)
{
	var e = ev ? ev : window.event;
	var popup = Popup.create(this);
	var lines = this.getAttribute("errorText").split("\n");
	for(var t=0; t&lt;lines.length; t++)
		createTiddlyElement(popup,"li",null,null,lines[t]);
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
}

function createTiddlyDropDown(place,onchange,options,defaultValue)
{
	var sel = createTiddlyElement(place,"select");
	sel.onchange = onchange;
	for(var t=0; t&lt;options.length; t++) {
		var e = createTiddlyElement(sel,"option",null,null,options[t].caption);
		e.value = options[t].name;
		if(options[t].name == defaultValue)
			e.selected = true;
	}
	return sel;
}

function createTiddlyPopup(place,caption,tooltip,tiddler)
{
	if(tiddler.text) {
		createTiddlyLink(place,caption,true);
		var btn = createTiddlyButton(place,glyph("downArrow"),tooltip,onClickTiddlyPopup,"tiddlerPopupButton");
		btn.tiddler = tiddler;
	} else {
		createTiddlyText(place,caption);
	}
}

function onClickTiddlyPopup(ev)
{
	var e = ev ? ev : window.event;
	var tiddler = this.tiddler;
	if(tiddler.text) {
		var popup = Popup.create(this,"div","popupTiddler");
		wikify(tiddler.text,popup,null,tiddler);
		Popup.show();
	}
	if(e) e.cancelBubble = true;
	if(e &amp;&amp; e.stopPropagation) e.stopPropagation();
	return false;
}

function createTiddlyError(place,title,text)
{
	var btn = createTiddlyButton(place,title,null,onClickError,"errorButton");
	if(text) btn.setAttribute("errorText",text);
}

function merge(dst,src,preserveExisting)
{
	for(p in src) {
		if(!preserveExisting || dst[p] === undefined)
			dst[p] = src[p];
	}
	return dst;
}

// Returns a string containing the description of an exception, optionally prepended by a message
function exceptionText(e,message)
{
	var s = e.description ? e.description : e.toString();
	return message ? "%0:\n%1".format([message,s]) : s;
}

// Displays an alert of an exception description with optional message
function showException(e,message)
{
	alert(exceptionText(e,message));
}

function alertAndThrow(m)
{
	alert(m);
	throw(m);
}

function glyph(name)
{
	var g = config.glyphs;
	var b = g.currBrowser;
	if(b == null) {
		b = 0;
		while(!g.browsers[b]() &amp;&amp; b &lt; g.browsers.length-1)
			b++;
		g.currBrowser = b;
	}
	if(!g.codes[name])
		return "";
	return g.codes[name][b];
}

//-
//- Animation engine
//-

function Animator()
{
	this.running = 0; // Incremented at start of each animation, decremented afterwards. If zero, the interval timer is disabled
	this.timerID = 0; // ID of the timer used for animating
	this.animations = []; // List of animations in progress
	return this;
}

// Start animation engine
Animator.prototype.startAnimating = function() // Variable number of arguments
{
	for(var t=0; t&lt;arguments.length; t++)
		this.animations.push(arguments[t]);
	if(this.running == 0) {
		var me = this;
		this.timerID = window.setInterval(function() {me.doAnimate(me);},10);
	}
	this.running += arguments.length;
};

// Perform an animation engine tick, calling each of the known animation modules
Animator.prototype.doAnimate = function(me)
{
	var a = 0;
	while(a &lt; me.animations.length) {
		var animation = me.animations[a];
		if(animation.tick()) {
			a++;
		} else {
			me.animations.splice(a,1);
			if(--me.running == 0)
				window.clearInterval(me.timerID);
		}
	}
};

// Map a 0..1 value to 0..1, but slow down at the start and end
Animator.slowInSlowOut = function(progress)
{
	return(1-((Math.cos(progress * Math.PI)+1)/2));
};

//--
//-- Morpher animation
//--

// Animate a set of properties of an element
function Morpher(element,duration,properties,callback)
{
	this.element = element;
	this.duration = duration;
	this.properties = properties;
	this.startTime = new Date();
	this.endTime = Number(this.startTime) + duration;
	this.callback = callback;
	this.tick();
	return this;
}

Morpher.prototype.assignStyle = function(element,style,value)
{
	switch(style) {
		case "-tw-vertScroll":
			window.scrollTo(findScrollX(),value);
			break;
		case "-tw-horizScroll":
			window.scrollTo(value,findScrollY());
			break;
		default:
			element.style[style] = value;
			break;
	}
};

Morpher.prototype.stop = function()
{
	for(var t=0; t&lt;this.properties.length; t++) {
		var p = this.properties[t];
		if(p.atEnd !== undefined) {
			this.assignStyle(this.element,p.style,p.atEnd);
		}
	}
	if(this.callback)
		this.callback(this.element,this.properties);
};

Morpher.prototype.tick = function()
{
	var currTime = Number(new Date());
	progress = Animator.slowInSlowOut(Math.min(1,(currTime-this.startTime)/this.duration));
	for(var t=0; t&lt;this.properties.length; t++) {
		var p = this.properties[t];
		if(p.start !== undefined &amp;&amp; p.end !== undefined) {
			var template = p.template ? p.template : "%0";
			switch(p.format) {
				case undefined:
				case "style":
					var v = p.start + (p.end-p.start) * progress;
					this.assignStyle(this.element,p.style,template.format([v]));
					break;
				case "color":
					break;
			}
		}
	}
	if(currTime &gt;= this.endTime) {
		this.stop();
		return false;
	}
	return true;
};

//--
//-- Zoomer animation
//--

function Zoomer(text,startElement,targetElement,unused)
{
	var e = createTiddlyElement(document.body,"div",null,"zoomer");
	createTiddlyElement(e,"div",null,null,text);
	var winWidth = findWindowWidth();
	var winHeight = findWindowHeight();
	var p = [
		{style: 'left', start: findPosX(startElement), end: findPosX(targetElement), template: '%0px'},
		{style: 'top', start: findPosY(startElement), end: findPosY(targetElement), template: '%0px'},
		{style: 'width', start: Math.min(startElement.scrollWidth,winWidth), end: Math.min(targetElement.scrollWidth,winWidth), template: '%0px', atEnd: 'auto'},
		{style: 'height', start: Math.min(startElement.scrollHeight,winHeight), end: Math.min(targetElement.scrollHeight,winHeight), template: '%0px', atEnd: 'auto'},
		{style: 'fontSize', start: 8, end: 24, template: '%0pt'}
	];
	var c = function(element,properties) {removeNode(element);};
	return new Morpher(e,config.animDuration,p,c);
}

//--
//-- Scroller animation
//--

function Scroller(targetElement,unused)
{
	var p = [
		{style: '-tw-vertScroll', start: findScrollY(), end: ensureVisible(targetElement)}
	];
	return new Morpher(targetElement,config.animDuration,p);
}

//--
//-- Slider animation
//--

// deleteMode - "none", "all" [delete target element and it's children], [only] "children" [but not the target element]
function Slider(element,opening,unused,deleteMode)
{
	element.style.overflow = 'hidden';
	if(opening)
		element.style.height = '0px'; // Resolves a Firefox flashing bug
	element.style.display = 'block';
	var left = findPosX(element);
	var width = element.scrollWidth;
	var height = element.scrollHeight;
	var winWidth = findWindowWidth();
	var p = [];
	var c = null;
	if(opening) {
		p.push({style: 'height', start: 0, end: height, template: '%0px', atEnd: 'auto'});
		p.push({style: 'opacity', start: 0, end: 1, template: '%0'});
		p.push({style: 'filter', start: 0, end: 100, template: 'alpha(opacity:%0)'});
	} else {
		p.push({style: 'height', start: height, end: 0, template: '%0px'});
		p.push({style: 'display', atEnd: 'none'});
		p.push({style: 'opacity', start: 1, end: 0, template: '%0'});
		p.push({style: 'filter', start: 100, end: 0, template: 'alpha(opacity:%0)'});
		switch(deleteMode) {
			case "all":
				c = function(element,properties) {removeNode(element);};
				break;
			case "children":
				c = function(element,properties) {removeChildren(element);};
				break;
		}
	}
	return new Morpher(element,config.animDuration,p,c);
}

//--
//-- Popup menu
//--

var Popup = {
	stack: [] // Array of objects with members root: and popup:
	};

Popup.create = function(root,elem,theClass)
{
	Popup.remove();
	var popup = createTiddlyElement(document.body,elem ? elem : "ol","popup",theClass ? theClass : "popup");
	Popup.stack.push({root: root, popup: popup});
	return popup;
};

Popup.onDocumentClick = function(ev)
{
	var e = ev ? ev : window.event;
	if(e.eventPhase == undefined)
		Popup.remove();
	else if(e.eventPhase == Event.BUBBLING_PHASE || e.eventPhase == Event.AT_TARGET)
		Popup.remove();
	return true;
};

Popup.show = function(unused1,unused2)
{
	var curr = Popup.stack[Popup.stack.length-1];
	this.place(curr.root,curr.popup);
	addClass(curr.root,"highlight");
	if(config.options.chkAnimate &amp;&amp; anim &amp;&amp; typeof Scroller == "function")
		anim.startAnimating(new Scroller(curr.popup));
	else
		window.scrollTo(0,ensureVisible(curr.popup));
};

Popup.place = function(root,popup,offset)
{
	if(!offset) var offset = {x:0, y:0};
	var rootLeft = findPosX(root);
	var rootTop = findPosY(root);
	var rootHeight = root.offsetHeight;
	var popupLeft = rootLeft + offset.x;
	var popupTop = rootTop + rootHeight + offset.y;
	var winWidth = findWindowWidth();
	if(popup.offsetWidth &gt; winWidth*0.75)
		popup.style.width = winWidth*0.75 + "px";
	var popupWidth = popup.offsetWidth;
	if(popupLeft + popupWidth &gt; winWidth)
		popupLeft = winWidth - popupWidth;
	popup.style.left = popupLeft + "px";
	popup.style.top = popupTop + "px";
	popup.style.display = "block";
};

Popup.remove = function()
{
	if(Popup.stack.length &gt; 0) {
		Popup.removeFrom(0);
	}
};

Popup.removeFrom = function(from)
{
	for(var t=Popup.stack.length-1; t&gt;=from; t--) {
		var p = Popup.stack[t];
		removeClass(p.root,"highlight");
		removeNode(p.popup);
	}
	Popup.stack = Popup.stack.slice(0,from);
};

//--
//-- Wizard support
//--

function Wizard(elem)
{
	if(elem) {
		this.formElem = findRelated(elem,"wizard","className");
		this.bodyElem = findRelated(this.formElem.firstChild,"wizardBody","className","nextSibling");
		this.footElem = findRelated(this.formElem.firstChild,"wizardFooter","className","nextSibling");
	} else {
		this.formElem = null;
		this.bodyElem = null;
		this.footElem = null;
	}
}

Wizard.prototype.setValue = function(name,value)
{
	if(this.formElem)
		this.formElem[name] = value;
};

Wizard.prototype.getValue = function(name)
{
	return this.formElem ? this.formElem[name] : null;
};

Wizard.prototype.createWizard = function(place,title)
{
	this.formElem = createTiddlyElement(place,"form",null,"wizard");
	createTiddlyElement(this.formElem,"h1",null,null,title);
	this.bodyElem = createTiddlyElement(this.formElem,"div",null,"wizardBody");
	this.footElem = createTiddlyElement(this.formElem,"div",null,"wizardFooter");
};

Wizard.prototype.clear = function()
{
	removeChildren(this.bodyElem);
};

Wizard.prototype.setButtons = function(buttonInfo,status)
{
	removeChildren(this.footElem);
	for(var t=0; t&lt;buttonInfo.length; t++) {
		createTiddlyButton(this.footElem,buttonInfo[t].caption,buttonInfo[t].tooltip,buttonInfo[t].onClick);
		insertSpacer(this.footElem);
		}
	if(typeof status == "string") {
		createTiddlyElement(this.footElem,"span",null,"status",status);
	}
};

Wizard.prototype.addStep = function(stepTitle,html)
{
	removeChildren(this.bodyElem);
	var w = createTiddlyElement(this.bodyElem,"div");
	createTiddlyElement(w,"h2",null,null,stepTitle);
	var step = createTiddlyElement(w,"div",null,"wizardStep");
	step.innerHTML = html;
	applyHtmlMacros(step,tiddler);
};

Wizard.prototype.getElement = function(name)
{
	return this.formElem.elements[name];
};

//--
//-- ListView gadget
//--

var ListView = {};

// Create a listview
ListView.create = function(place,listObject,listTemplate,callback,className)
{
	var table = createTiddlyElement(place,"table",null,className ? className : "listView twtable");
	var thead = createTiddlyElement(table,"thead");
	var r = createTiddlyElement(thead,"tr");
	for(var t=0; t&lt;listTemplate.columns.length; t++) {
		var columnTemplate = listTemplate.columns[t];
		var c = createTiddlyElement(r,"th");
		var colType = ListView.columnTypes[columnTemplate.type];
		if(colType &amp;&amp; colType.createHeader)
			colType.createHeader(c,columnTemplate,t);
	}
	var tbody = createTiddlyElement(table,"tbody");
	for(var rc=0; rc&lt;listObject.length; rc++) {
		rowObject = listObject[rc];
		r = createTiddlyElement(tbody,"tr");
		for(c=0; c&lt;listTemplate.rowClasses.length; c++) {
			if(rowObject[listTemplate.rowClasses[c].field])
				addClass(r,listTemplate.rowClasses[c].className);
		}
		rowObject.rowElement = r;
		rowObject.colElements = {};
		for(var cc=0; cc&lt;listTemplate.columns.length; cc++) {
			c = createTiddlyElement(r,"td");
			columnTemplate = listTemplate.columns[cc];
			var field = columnTemplate.field;
			colType = ListView.columnTypes[columnTemplate.type];
			if(colType &amp;&amp; colType.createItem)
				colType.createItem(c,rowObject,field,columnTemplate,cc,rc);
			rowObject.colElements[field] = c;
		}
	}
	if(callback &amp;&amp; listTemplate.actions)
		createTiddlyDropDown(place,ListView.getCommandHandler(callback),listTemplate.actions);
	if(callback &amp;&amp; listTemplate.buttons) {
		for(t=0; t&lt;listTemplate.buttons.length; t++) {
			var a = listTemplate.buttons[t];
			if(a &amp;&amp; a.name != "")
				createTiddlyButton(place,a.caption,null,ListView.getCommandHandler(callback,a.name,a.allowEmptySelection));
		}
	}
	return table;
};

ListView.getCommandHandler = function(callback,name,allowEmptySelection)
{
	return function(e) {
		var view = findRelated(this,"TABLE",null,"previousSibling");
		var tiddlers = [];
		ListView.forEachSelector(view,function(e,rowName) {
					if(e.checked)
						tiddlers.push(rowName);
					});
		if(tiddlers.length == 0 &amp;&amp; !allowEmptySelection) {
			alert(config.messages.nothingSelected);
		} else {
			if(this.nodeName.toLowerCase() == "select") {
				callback(view,this.value,tiddlers);
				this.selectedIndex = 0;
			} else {
				callback(view,name,tiddlers);
			}
		}
	};
};

// Invoke a callback for each selector checkbox in the listview
ListView.forEachSelector = function(view,callback)
{
	var checkboxes = view.getElementsByTagName("input");
	var hadOne = false;
	for(var t=0; t&lt;checkboxes.length; t++) {
		var cb = checkboxes[t];
		if(cb.getAttribute("type") == "checkbox") {
			var rn = cb.getAttribute("rowName");
			if(rn) {
				callback(cb,rn);
				hadOne = true;
			}
		}
	}
	return hadOne;
};

ListView.getSelectedRows = function(view)
{
	var rowNames = [];
	ListView.forEachSelector(view,function(e,rowName) {
				if(e.checked)
					rowNames.push(rowName);
				});
	return rowNames;
};

ListView.columnTypes = {};

ListView.columnTypes.String = {
	createHeader: function(place,columnTemplate,col)
		{
			createTiddlyText(place,columnTemplate.title);
		},
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				createTiddlyText(place,v);
		}
};

ListView.columnTypes.WikiText = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				wikify(v,place,null,null);
		}
};

ListView.columnTypes.Tiddler = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined &amp;&amp; v.title)
				createTiddlyPopup(place,v.title,config.messages.listView.tiddlerTooltip,v);
		}
};

ListView.columnTypes.Size = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				var t = 0;
				while(t&lt;config.messages.sizeTemplates.length-1 &amp;&amp; v&lt;config.messages.sizeTemplates[t].unit)
					t++;
				createTiddlyText(place,config.messages.sizeTemplates[t].template.format([Math.round(v/config.messages.sizeTemplates[t].unit)]));
			}
		}
};

ListView.columnTypes.Link = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			var c = columnTemplate.text;
			if(v != undefined)
				createTiddlyText(createExternalLink(place,v),c ? c : v);
		}
};

ListView.columnTypes.Date = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				createTiddlyText(place,v.formatString(columnTemplate.dateFormat));
		}
};

ListView.columnTypes.StringList = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				for(var t=0; t&lt;v.length; t++) {
					createTiddlyText(place,v[t]);
					createTiddlyElement(place,"br");
				}
			}
		}
};

ListView.columnTypes.Selector = {
	createHeader: function(place,columnTemplate,col)
		{
			createTiddlyCheckbox(place,null,false,this.onHeaderChange);
		},
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var e = createTiddlyCheckbox(place,null,listObject[field],null);
			e.setAttribute("rowName",listObject[columnTemplate.rowName]);
		},
	onHeaderChange: function(e)
		{
			var state = this.checked;
			var view = findRelated(this,"TABLE");
			if(!view)
				return;
			ListView.forEachSelector(view,function(e,rowName) {
								e.checked = state;
							});
		}
};

ListView.columnTypes.Tags = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var tags = listObject[field];
			createTiddlyText(place,String.encodeTiddlyLinkList(tags));
		}
};

ListView.columnTypes.Boolean = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			if(listObject[field] == true)
				createTiddlyText(place,columnTemplate.trueText);
			if(listObject[field] == false)
				createTiddlyText(place,columnTemplate.falseText);
		}
};

ListView.columnTypes.TagCheckbox = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var e = createTiddlyCheckbox(place,null,listObject[field],this.onChange);
			e.setAttribute("tiddler",listObject.title);
			e.setAttribute("tag",columnTemplate.tag);
		},
	onChange : function(e)
		{
			var tag = this.getAttribute("tag");
			var tiddler = this.getAttribute("tiddler");
			store.setTiddlerTag(tiddler,this.checked,tag);
		}
};

ListView.columnTypes.TiddlerLink = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				var link = createTiddlyLink(place,listObject[columnTemplate.tiddlerLink],false,null);
				createTiddlyText(link,listObject[field]);
			}
		}
};

//--
//-- Augmented methods for the JavaScript Number(), Array(), String() and Date() objects
//--

// Clamp a number to a range
Number.prototype.clamp = function(min,max)
{
	var c = this;
	if(c &lt; min)
		c = min;
	if(c &gt; max)
		c = max;
	return c;
};

// Add indexOf function if browser does not support it
if(!Array.indexOf) {
Array.prototype.indexOf = function(item,from)
{
	if(!from)
		from = 0;
	for(var i=from; i&lt;this.length; i++) {
		if(this[i] === item)
			return i;
	}
	return -1;
};}

// Find an entry in a given field of the members of an array
Array.prototype.findByField = function(field,value)
{
	for(var t=0; t&lt;this.length; t++) {
		if(this[t][field] == value)
			return t;
	}
	return null;
};

// Return whether an entry exists in an array
Array.prototype.contains = function(item)
{
	return this.indexOf(item) != -1;
};

// Adds, removes or toggles a particular value within an array
//  value - value to add
//  mode - +1 to add value, -1 to remove value, 0 to toggle it
Array.prototype.setItem = function(value,mode)
{
	var p = this.indexOf(value);
	if(mode == 0)
		mode = (p == -1) ? +1 : -1;
	if(mode == +1) {
		if(p == -1)
			this.push(value);
	} else if(mode == -1) {
		if(p != -1)
			this.splice(p,1);
	}
};

// Return whether one of a list of values exists in an array
Array.prototype.containsAny = function(items)
{
	for(var i=0; i&lt;items.length; i++) {
		if (this.indexOf(items[i]) != -1)
			return true;
	}
	return false;
};

// Return whether all of a list of values exists in an array
Array.prototype.containsAll = function(items)
{
	for (var i = 0; i&lt;items.length; i++) {
		if (this.indexOf(items[i]) == -1)
			return false;
	}
	return true;
};

// Push a new value into an array only if it is not already present in the array. If the optional unique parameter is false, it reverts to a normal push
Array.prototype.pushUnique = function(item,unique)
{
	if(unique === false) {
		this.push(item);
	} else {
		if(this.indexOf(item) == -1)
			this.push(item);
	}
};

Array.prototype.remove = function(item)
{
	var p = this.indexOf(item);
	if(p != -1)
		this.splice(p,1);
};

// Get characters from the right end of a string
String.prototype.right = function(n)
{
	return n &lt; this.length ? this.slice(this.length-n) : this;
};

// Trim whitespace from both ends of a string
String.prototype.trim = function()
{
	return this.replace(/^\s*|\s*$/g,"");
};

// Convert a string from a CSS style property name to a JavaScript style name ("background-color" -&gt; "backgroundColor")
String.prototype.unDash = function()
{
	var s = this.split("-");
	if(s.length &gt; 1) {
		for(var t=1; t&lt;s.length; t++)
			s[t] = s[t].substr(0,1).toUpperCase() + s[t].substr(1);
	}
	return s.join("");
};

// Substitute substrings from an array into a format string that includes '%1'-type specifiers
String.prototype.format = function(substrings)
{
	var subRegExp = /(?:%(\d+))/mg;
	var currPos = 0;
	var r = [];
	do {
		var match = subRegExp.exec(this);
		if(match &amp;&amp; match[1]) {
			if(match.index &gt; currPos)
				r.push(this.substring(currPos,match.index));
			r.push(substrings[parseInt(match[1])]);
			currPos = subRegExp.lastIndex;
		}
	} while(match);
	if(currPos &lt; this.length)
		r.push(this.substring(currPos,this.length));
	return r.join("");
};

// Escape any special RegExp characters with that character preceded by a backslash
String.prototype.escapeRegExp = function()
{
	var s = "\\^$*+?()=!|,{}[].";
	var c = this;
	for(var t=0; t&lt;s.length; t++)
		c = c.replace(new RegExp("\\" + s.substr(t,1),"g"),"\\" + s.substr(t,1));
	return c;
};

// Convert "\" to "\s", newlines to "\n" (and remove carriage returns)
String.prototype.escapeLineBreaks = function()
{
	return this.replace(/\\/mg,"\\s").replace(/\n/mg,"\\n").replace(/\r/mg,"");
};

// Convert "\n" to newlines, "\b" to " ", "\s" to "\" (and remove carriage returns)
String.prototype.unescapeLineBreaks = function()
{
	return this.replace(/\\n/mg,"\n").replace(/\\b/mg," ").replace(/\\s/mg,"\\").replace(/\r/mg,"");
};

// Convert &amp; to "&amp;amp;", &lt; to "&amp;lt;", &gt; to "&amp;gt;" and " to "&amp;quot;"
String.prototype.htmlEncode = function()
{
	return this.replace(/&amp;/mg,"&amp;amp;").replace(/&lt;/mg,"&amp;lt;").replace(/&gt;/mg,"&amp;gt;").replace(/\"/mg,"&amp;quot;");
};

// Convert "&amp;amp;" to &amp;, "&amp;lt;" to &lt;, "&amp;gt;" to &gt; and "&amp;quot;" to "
String.prototype.htmlDecode = function()
{
	return this.replace(/&amp;lt;/mg,"&lt;").replace(/&amp;gt;/mg,"&gt;").replace(/&amp;quot;/mg,"\"").replace(/&amp;amp;/mg,"&amp;");
};

// Convert a string to it's JSON representation by encoding control characters, double quotes and backslash. See json.org
String.prototype.toJSONString = function()
{
	var m = {
		'\b': '\\b',
		'\f': '\\f',
		'\n': '\\n',
		'\r': '\\r',
		'\t': '\\t',
		'"' : '\\"',
		'\\': '\\\\'
		};
	var replaceFn = function(a,b) {
		var c = m[b];
		if(c)
			return c;
		c = b.charCodeAt();
		return '\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
		};
	//if(/["\\\x00-\x1f]/.test(this))
	//	return '"' + this.replace(/([\x00-\x1f\"])/g,replaceFn) + '"';
	return '"' + this + '"';
};

// Parse a space-separated string of name:value parameters
// The result is an array of objects:
//   result[0] = object with a member for each parameter name, value of that member being an array of values
//   result[1..n] = one object for each parameter, with 'name' and 'value' members
String.prototype.parseParams = function(defaultName,defaultValue,allowEval,noNames,cascadeDefaults)
{
	var parseToken = function(match,p) {
		var n;
		if(match[p]) // Double quoted
			n = match[p];
		else if(match[p+1]) // Single quoted
			n = match[p+1];
		else if(match[p+2]) // Double-square-bracket quoted
			n = match[p+2];
		else if(match[p+3]) // Double-brace quoted
			try {
				n = match[p+3];
				if(allowEval)
					n = window.eval(n);
			} catch(ex) {
				throw "Unable to evaluate {{" + match[p+3] + "}}: " + exceptionText(ex);
			}
		else if(match[p+4]) // Unquoted
			n = match[p+4];
		else if(match[p+5]) // empty quote
			n = "";
		return n;
	};
	var r = [{}];
	var dblQuote = "(?:\"((?:(?:\\\\\")|[^\"])+)\")";
	var sngQuote = "(?:'((?:(?:\\\\\')|[^'])+)')";
	var dblSquare = "(?:\\[\\[((?:\\s|\\S)*?)\\]\\])";
	var dblBrace = "(?:\\{\\{((?:\\s|\\S)*?)\\}\\})";
	var unQuoted = noNames ? "([^\"'\\s]\\S*)" : "([^\"':\\s][^\\s:]*)";
	var emptyQuote = "((?:\"\")|(?:''))";
	var skipSpace = "(?:\\s*)";
	var token = "(?:" + dblQuote + "|" + sngQuote + "|" + dblSquare + "|" + dblBrace + "|" + unQuoted + "|" + emptyQuote + ")";
	var re = noNames ? new RegExp(token,"mg") : new RegExp(skipSpace + token + skipSpace + "(?:(\\:)" + skipSpace + token + ")?","mg");
	var params = [];
	do {
		var match = re.exec(this);
		if(match) {
			var n = parseToken(match,1);
			if(noNames) {
				r.push({name:"",value:n});
			} else {
				var v = parseToken(match,8);
				if(v == null &amp;&amp; defaultName) {
					v = n;
					n = defaultName;
				} else if(v == null &amp;&amp; defaultValue) {
					v = defaultValue;
				}
				r.push({name:n,value:v});
				if(cascadeDefaults) {
					defaultName = n;
					defaultValue = v;
				}
			}
		}
	} while(match);
	// Summarise parameters into first element
	for(var t=1; t&lt;r.length; t++) {
		if(r[0][r[t].name])
			r[0][r[t].name].push(r[t].value);
		else
			r[0][r[t].name] = [r[t].value];
	}
	return r;
};

// Process a string list of macro parameters into an array. Parameters can be quoted with "", '',
// [[]], {{ }} or left unquoted (and therefore space-separated). Double-braces {{}} results in
// an *evaluated* parameter: e.g. {{config.options.txtUserName}} results in the current user's name.
String.prototype.readMacroParams = function()
{
	var p = this.parseParams("list",null,true,true);
	var n = [];
	for(var t=1; t&lt;p.length; t++)
		n.push(p[t].value);
	return n;
};

// Process a string list of unique tiddler names into an array. Tiddler names that have spaces in them must be [[bracketed]]
String.prototype.readBracketedList = function(unique)
{
	var p = this.parseParams("list",null,false,true);
	var n = [];
	for(var t=1; t&lt;p.length; t++) {
		if(p[t].value)
			n.pushUnique(p[t].value,unique);
	}
	return n;
};

// Returns array with start and end index of chunk between given start and end marker, or undefined.
String.prototype.getChunkRange = function(start,end)
{
	var s = this.indexOf(start);
	if(s != -1) {
		s += start.length;
		var e = this.indexOf(end,s);
		if(e != -1)
			return [s,e];
	}
};

// Replace a chunk of a string given start and end markers
String.prototype.replaceChunk = function(start,end,sub)
{
	var r = this.getChunkRange(start,end);
	return r ? this.substring(0,r[0]) + sub + this.substring(r[1]) : this;
};

// Returns a chunk of a string between start and end markers, or undefined
String.prototype.getChunk = function(start,end)
{
	var r = this.getChunkRange(start,end);
	if(r)
		return this.substring(r[0],r[1]);
};


// Static method to bracket a string with double square brackets if it contains a space
String.encodeTiddlyLink = function(title)
{
	return title.indexOf(" ") == -1 ? title : "[[" + title + "]]";
};

// Static method to encodeTiddlyLink for every item in an array and join them with spaces
String.encodeTiddlyLinkList = function(list)
{
	if(list) {
		var results = [];
		for(var t=0; t&lt;list.length; t++)
			results.push(String.encodeTiddlyLink(list[t]));
		return results.join(" ");
	} else {
		return "";
	}
};

// Convert a string as a sequence of name:"value" pairs into a hashmap
String.prototype.decodeHashMap = function()
{
	var fields = this.parseParams("anon","",false);
	var r = {};
	for(var t=1; t&lt;fields.length; t++)
		r[fields[t].name] = fields[t].value;
	return r;
};

// Static method to encode a hashmap into a name:"value"... string
String.encodeHashMap = function(hashmap)
{
	var r = [];
	for(var t in hashmap)
		r.push(t + ':"' + hashmap[t] + '"');
	return r.join(" ");
};

// Static method to left-pad a string with 0s to a certain width
String.zeroPad = function(n,d)
{
	var s = n.toString();
	if(s.length &lt; d)
		s = "000000000000000000000000000".substr(0,d-s.length) + s;
	return s;
};

String.prototype.startsWith = function(prefix)
{
	return !prefix || this.substring(0,prefix.length) == prefix;
};

// Returns the first value of the given named parameter.
function getParam(params,name,defaultValue)
{
	if(!params)
		return defaultValue;
	var p = params[0][name];
	return p ? p[0] : defaultValue;
}

// Returns the first value of the given boolean named parameter.
function getFlag(params,name,defaultValue)
{
	return !!getParam(params,name,defaultValue);
}

// Substitute date components into a string
Date.prototype.formatString = function(template)
{
	var t = template.replace(/0hh12/g,String.zeroPad(this.getHours12(),2));
	t = t.replace(/hh12/g,this.getHours12());
	t = t.replace(/0hh/g,String.zeroPad(this.getHours(),2));
	t = t.replace(/hh/g,this.getHours());
	t = t.replace(/mmm/g,config.messages.dates.shortMonths[this.getMonth()]);
	t = t.replace(/0mm/g,String.zeroPad(this.getMinutes(),2));
	t = t.replace(/mm/g,this.getMinutes());
	t = t.replace(/0ss/g,String.zeroPad(this.getSeconds(),2));
	t = t.replace(/ss/g,this.getSeconds());
	t = t.replace(/[ap]m/g,this.getAmPm().toLowerCase());
	t = t.replace(/[AP]M/g,this.getAmPm().toUpperCase());
	t = t.replace(/wYYYY/g,this.getYearForWeekNo());
	t = t.replace(/wYY/g,String.zeroPad(this.getYearForWeekNo()-2000,2));
	t = t.replace(/YYYY/g,this.getFullYear());
	t = t.replace(/YY/g,String.zeroPad(this.getFullYear()-2000,2));
	t = t.replace(/MMM/g,config.messages.dates.months[this.getMonth()]);
	t = t.replace(/0MM/g,String.zeroPad(this.getMonth()+1,2));
	t = t.replace(/MM/g,this.getMonth()+1);
	t = t.replace(/0WW/g,String.zeroPad(this.getWeek(),2));
	t = t.replace(/WW/g,this.getWeek());
	t = t.replace(/DDD/g,config.messages.dates.days[this.getDay()]);
	t = t.replace(/ddd/g,config.messages.dates.shortDays[this.getDay()]);
	t = t.replace(/0DD/g,String.zeroPad(this.getDate(),2));
	t = t.replace(/DDth/g,this.getDate()+this.daySuffix());
	t = t.replace(/DD/g,this.getDate());
	return t;
};

Date.prototype.getWeek = function()
{
	var dt = new Date(this.getTime());
	var d = dt.getDay();
	if (d==0) d=7;// JavaScript Sun=0, ISO Sun=7
	dt.setTime(dt.getTime()+(4-d)*86400000);// shift day to Thurs of same week to calculate weekNo
	var n = Math.floor((dt.getTime()-new Date(dt.getFullYear(),0,1)+3600000)/86400000);
	return Math.floor(n/7)+1;
};

Date.prototype.getYearForWeekNo = function()
{
	var dt = new Date(this.getTime());
	var d = dt.getDay();
	if (d==0) d=7;// JavaScript Sun=0, ISO Sun=7
	dt.setTime(dt.getTime()+(4-d)*86400000);// shift day to Thurs of same week
	return dt.getFullYear();
};

Date.prototype.getHours12 = function()
{
	var h = this.getHours();
	return h &gt; 12 ? h-12 : ( h &gt; 0 ? h : 12 );
};

Date.prototype.getAmPm = function()
{
	return this.getHours() &gt;= 12 ? config.messages.dates.pm : config.messages.dates.am;
};

Date.prototype.daySuffix = function()
{
	return config.messages.dates.daySuffixes[this.getDate()-1];
};

// Convert a date to local YYYYMMDDHHMM string format
Date.prototype.convertToLocalYYYYMMDDHHMM = function()
{
	return String.zeroPad(this.getFullYear(),4) + String.zeroPad(this.getMonth()+1,2) + String.zeroPad(this.getDate(),2) + String.zeroPad(this.getHours(),2) + String.zeroPad(this.getMinutes(),2);
};

// Convert a date to UTC YYYYMMDDHHMM string format
Date.prototype.convertToYYYYMMDDHHMM = function()
{
	return String.zeroPad(this.getUTCFullYear(),4) + String.zeroPad(this.getUTCMonth()+1,2) + String.zeroPad(this.getUTCDate(),2) + String.zeroPad(this.getUTCHours(),2) + String.zeroPad(this.getUTCMinutes(),2);
};

// Convert a date to UTC YYYYMMDD.HHMMSSMMM string format
Date.prototype.convertToYYYYMMDDHHMMSSMMM = function()
{
	return String.zeroPad(this.getUTCFullYear(),4) + String.zeroPad(this.getUTCMonth()+1,2) + String.zeroPad(this.getUTCDate(),2) + "." + String.zeroPad(this.getUTCHours(),2) + String.zeroPad(this.getUTCMinutes(),2) + String.zeroPad(this.getUTCSeconds(),2) + String.zeroPad(this.getUTCMilliseconds(),4);
};

// Static method to create a date from a UTC YYYYMMDDHHMM format string
Date.convertFromYYYYMMDDHHMM = function(d)
{
	return new Date(Date.UTC(parseInt(d.substr(0,4),10),
			parseInt(d.substr(4,2),10)-1,
			parseInt(d.substr(6,2),10),
			parseInt(d.substr(8,2),10),
			parseInt(d.substr(10,2),10),0,0));
};

//--
//-- Crypto functions and associated conversion routines
//--

// Crypto "namespace"
function Crypto() {}

// Convert a string to an array of big-endian 32-bit words
Crypto.strToBe32s = function(str)
{
	var be = Array();
	var len = Math.floor(str.length/4);
	var i, j;
	for(i=0, j=0; i&lt;len; i++, j+=4) {
		be[i] = ((str.charCodeAt(j)&amp;0xff) &lt;&lt; 24)|((str.charCodeAt(j+1)&amp;0xff) &lt;&lt; 16)|((str.charCodeAt(j+2)&amp;0xff) &lt;&lt; 8)|(str.charCodeAt(j+3)&amp;0xff);
	}
	while (j&lt;str.length) {
		be[j&gt;&gt;2] |= (str.charCodeAt(j)&amp;0xff)&lt;&lt;(24-(j*8)%32);
		j++;
	}
	return be;
};

// Convert an array of big-endian 32-bit words to a string
Crypto.be32sToStr = function(be)
{
	var str = "";
	for(var i=0;i&lt;be.length*32;i+=8)
		str += String.fromCharCode((be[i&gt;&gt;5]&gt;&gt;&gt;(24-i%32)) &amp; 0xff);
	return str;
};

// Convert an array of big-endian 32-bit words to a hex string
Crypto.be32sToHex = function(be)
{
	var hex = "0123456789ABCDEF";
	var str = "";
	for(var i=0;i&lt;be.length*4;i++)
		str += hex.charAt((be[i&gt;&gt;2]&gt;&gt;((3-i%4)*8+4))&amp;0xF) + hex.charAt((be[i&gt;&gt;2]&gt;&gt;((3-i%4)*8))&amp;0xF);
	return str;
};

// Return, in hex, the SHA-1 hash of a string
Crypto.hexSha1Str = function(str)
{
	return Crypto.be32sToHex(Crypto.sha1Str(str));
};

// Return the SHA-1 hash of a string
Crypto.sha1Str = function(str)
{
	return Crypto.sha1(Crypto.strToBe32s(str),str.length);
};

// Calculate the SHA-1 hash of an array of blen bytes of big-endian 32-bit words
Crypto.sha1 = function(x,blen)
{
	// Add 32-bit integers, wrapping at 32 bits
	add32 = function(a,b)
	{
		var lsw = (a&amp;0xFFFF)+(b&amp;0xFFFF);
		var msw = (a&gt;&gt;16)+(b&gt;&gt;16)+(lsw&gt;&gt;16);
		return (msw&lt;&lt;16)|(lsw&amp;0xFFFF);
	};
	// Add five 32-bit integers, wrapping at 32 bits
	add32x5 = function(a,b,c,d,e)
	{
		var lsw = (a&amp;0xFFFF)+(b&amp;0xFFFF)+(c&amp;0xFFFF)+(d&amp;0xFFFF)+(e&amp;0xFFFF);
		var msw = (a&gt;&gt;16)+(b&gt;&gt;16)+(c&gt;&gt;16)+(d&gt;&gt;16)+(e&gt;&gt;16)+(lsw&gt;&gt;16);
		return (msw&lt;&lt;16)|(lsw&amp;0xFFFF);
	};
	// Bitwise rotate left a 32-bit integer by 1 bit
	rol32 = function(n)
	{
		return (n&gt;&gt;&gt;31)|(n&lt;&lt;1);
	};

	var len = blen*8;
	// Append padding so length in bits is 448 mod 512
	x[len&gt;&gt;5] |= 0x80 &lt;&lt; (24-len%32);
	// Append length
	x[((len+64&gt;&gt;9)&lt;&lt;4)+15] = len;
	var w = Array(80);

	var k1 = 0x5A827999;
	var k2 = 0x6ED9EBA1;
	var k3 = 0x8F1BBCDC;
	var k4 = 0xCA62C1D6;

	var h0 = 0x67452301;
	var h1 = 0xEFCDAB89;
	var h2 = 0x98BADCFE;
	var h3 = 0x10325476;
	var h4 = 0xC3D2E1F0;

	for(var i=0;i&lt;x.length;i+=16) {
		var j,t;
		var a = h0;
		var b = h1;
		var c = h2;
		var d = h3;
		var e = h4;
		for(j = 0;j&lt;16;j++) {
			w[j] = x[i+j];
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),d^(b&amp;(c^d)),w[j],k1);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=16;j&lt;20;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),d^(b&amp;(c^d)),w[j],k1);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=20;j&lt;40;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),b^c^d,w[j],k2);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=40;j&lt;60;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),(b&amp;c)|(d&amp;(b|c)),w[j],k3);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}
		for(j=60;j&lt;80;j++) {
			w[j] = rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16]);
			t = add32x5(e,(a&gt;&gt;&gt;27)|(a&lt;&lt;5),b^c^d,w[j],k4);
			e=d; d=c; c=(b&gt;&gt;&gt;2)|(b&lt;&lt;30); b=a; a = t;
		}

		h0 = add32(h0,a);
		h1 = add32(h1,b);
		h2 = add32(h2,c);
		h3 = add32(h3,d);
		h4 = add32(h4,e);
	}
	return Array(h0,h1,h2,h3,h4);
};

//--
//-- RGB colour object
//--

// Construct an RGB colour object from a '#rrggbb', '#rgb' or 'rgb(n,n,n)' string or from separate r,g,b values
function RGB(r,g,b)
{
	this.r = 0;
	this.g = 0;
	this.b = 0;
	if(typeof r == "string") {
		if(r.substr(0,1) == "#") {
			if(r.length == 7) {
				this.r = parseInt(r.substr(1,2),16)/255;
				this.g = parseInt(r.substr(3,2),16)/255;
				this.b = parseInt(r.substr(5,2),16)/255;
			} else {
				this.r = parseInt(r.substr(1,1),16)/15;
				this.g = parseInt(r.substr(2,1),16)/15;
				this.b = parseInt(r.substr(3,1),16)/15;
			}
		} else {
			var rgbPattern = /rgb\s*\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)/;
			var c = r.match(rgbPattern);
			if(c) {
				this.r = parseInt(c[1],10)/255;
				this.g = parseInt(c[2],10)/255;
				this.b = parseInt(c[3],10)/255;
			}
		}
	} else {
		this.r = r;
		this.g = g;
		this.b = b;
	}
	return this;
}

// Mixes this colour with another in a specified proportion
// c = other colour to mix
// f = 0..1 where 0 is this colour and 1 is the new colour
// Returns an RGB object
RGB.prototype.mix = function(c,f)
{
	return new RGB(this.r + (c.r-this.r) * f,this.g + (c.g-this.g) * f,this.b + (c.b-this.b) * f);
};

// Return an rgb colour as a #rrggbb format hex string
RGB.prototype.toString = function()
{
	return "#" + ("0" + Math.floor(this.r.clamp(0,1) * 255).toString(16)).right(2) +
				 ("0" + Math.floor(this.g.clamp(0,1) * 255).toString(16)).right(2) +
				 ("0" + Math.floor(this.b.clamp(0,1) * 255).toString(16)).right(2);
};

//--
//-- DOM utilities - many derived from www.quirksmode.org
//--

function drawGradient(place,horiz,colours)
{
	for(var t=0; t&lt;= 100; t+=2) {
		var bar = document.createElement("div");
		place.appendChild(bar);
		bar.style.position = "absolute";
		bar.style.left = horiz ? t + "%" : 0;
		bar.style.top = horiz ? 0 : t + "%";
		bar.style.width = horiz ? (101-t) + "%" : "100%";
		bar.style.height = horiz ? "100%" : (101-t) + "%";
		bar.style.zIndex = -1;
		var f = t/100;
		var p = f*(colours.length-1);
		bar.style.backgroundColor = colours[Math.floor(p)].mix(colours[Math.ceil(p)],p-Math.floor(p)).toString();
	}
}

function createTiddlyText(theParent,theText)
{
	return theParent.appendChild(document.createTextNode(theText));
}

function createTiddlyCheckbox(theParent,caption,checked,onChange)
{
	var cb = document.createElement("input");
	cb.setAttribute("type","checkbox");
	cb.onclick = onChange;
	theParent.appendChild(cb);
	cb.checked = checked;
	cb.className = "chkOptionInput";
	if(caption)
		wikify(caption,theParent);
	return cb;
}

function createTiddlyElement(theParent,theElement,theID,theClass,theText,attribs)
{
	var e = document.createElement(theElement);
	if(theClass != null)
		e.className = theClass;
	if(theID != null)
		e.setAttribute("id",theID);
	if(theText != null)
		e.appendChild(document.createTextNode(theText));
	if(attribs){
		for(var n in attribs){
			e.setAttribute(n,attribs[n]);
		}
	}
	if(theParent != null)
		theParent.appendChild(e);
	return e;
}

function addEvent(obj,type,fn)
{
	if(obj.attachEvent) {
		obj['e'+type+fn] = fn;
		obj[type+fn] = function(){obj['e'+type+fn](window.event);};
		obj.attachEvent('on'+type,obj[type+fn]);
	} else {
		obj.addEventListener(type,fn,false);
	}
}

function removeEvent(obj,type,fn)
{
	if(obj.detachEvent) {
		obj.detachEvent('on'+type,obj[type+fn]);
		obj[type+fn] = null;
	} else {
		obj.removeEventListener(type,fn,false);
	}
}

function addClass(e,theClass)
{
	var currClass = e.className.split(" ");
	if(currClass.indexOf(theClass) == -1)
		e.className += " " + theClass;
}

function removeClass(e,theClass)
{
	var currClass = e.className.split(" ");
	var i = currClass.indexOf(theClass);
	while(i != -1) {
		currClass.splice(i,1);
		i = currClass.indexOf(theClass);
	}
	e.className = currClass.join(" ");
}

function hasClass(e,theClass)
{
	if(e.className) {
		if(e.className.split(" ").indexOf(theClass) != -1)
			return true;
	}
	return false;
}

// Find the closest relative with a given property value (property defaults to tagName, relative defaults to parentNode)
function findRelated(e,value,name,relative)
{
	name = name ? name : "tagName";
	relative = relative ? relative : "parentNode";
	if(name == "className") {
		while(e &amp;&amp; !hasClass(e,value)) {
			e = e[relative];
		}
	} else {
		while(e &amp;&amp; e[name] != value) {
			e = e[relative];
		}
	}
	return e;
}

// Resolve the target object of an event
function resolveTarget(e)
{
	var obj;
	if(e.target)
		obj = e.target;
	else if(e.srcElement)
		obj = e.srcElement;
	if(obj.nodeType == 3) // defeat Safari bug
		obj = obj.parentNode;
	return obj;
}

// Return the content of an element as plain text with no formatting
function getPlainText(e)
{
	var text = "";
	if(e.innerText)
		text = e.innerText;
	else if(e.textContent)
		text = e.textContent;
	return text;
}

// Get the scroll position for window.scrollTo necessary to scroll a given element into view
function ensureVisible(e)
{
	var posTop = findPosY(e);
	var posBot = posTop + e.offsetHeight;
	var winTop = findScrollY();
	var winHeight = findWindowHeight();
	var winBot = winTop + winHeight;
	if(posTop &lt; winTop) {
		return posTop;
	} else if(posBot &gt; winBot) {
		if(e.offsetHeight &lt; winHeight)
			return posTop - (winHeight - e.offsetHeight);
		else
			return posTop;
	} else {
		return winTop;
	}
}

// Get the current width of the display window
function findWindowWidth()
{
	return window.innerWidth ? window.innerWidth : document.documentElement.clientWidth;
}

// Get the current height of the display window
function findWindowHeight()
{
	return window.innerHeight ? window.innerHeight : document.documentElement.clientHeight;
}

// Get the current horizontal page scroll position
function findScrollX()
{
	return window.scrollX ? window.scrollX : document.documentElement.scrollLeft;
}

// Get the current vertical page scroll position
function findScrollY()
{
	return window.scrollY ? window.scrollY : document.documentElement.scrollTop;
}

function findPosX(obj)
{
	var curleft = 0;
	while(obj.offsetParent) {
		curleft += obj.offsetLeft;
		obj = obj.offsetParent;
	}
	return curleft;
}

function findPosY(obj)
{
	var curtop = 0;
	while(obj.offsetParent) {
		curtop += obj.offsetTop;
		obj = obj.offsetParent;
	}
	return curtop;
}

// Blur a particular element
function blurElement(e)
{
	if(e != null &amp;&amp; e.focus &amp;&amp; e.blur) {
		e.focus();
		e.blur();
	}
}

// Create a non-breaking space
function insertSpacer(place)
{
	var e = document.createTextNode(String.fromCharCode(160));
	if(place)
		place.appendChild(e);
	return e;
}

// Remove all children of a node
function removeChildren(e)
{
	while(e &amp;&amp; e.hasChildNodes())
		removeNode(e.firstChild);
}

// Remove a node and all it's children
function removeNode(e)
{
	scrubNode(e);
	e.parentNode.removeChild(e);
}

// Remove any event handlers or non-primitve custom attributes
function scrubNode(e)
{
	if(!config.browser.isIE)
		return;
	var att = e.attributes;
	if(att) {
		for(var t=0; t&lt;att.length; t++) {
			var n = att[t].name;
			if(n !== 'style' &amp;&amp; (typeof e[n] === 'function' || (typeof e[n] === 'object' &amp;&amp; e[n] != null))) {
				try {
					e[n] = null;
				} catch(ex) {
				}
			}
		}
	}
	var c = e.firstChild;
	while(c) {
		scrubNode(c);
		c = c.nextSibling;
	}
}

// Add a stylesheet, replacing any previous custom stylesheet
function setStylesheet(s,id,doc)
{
	if(!id)
		id = "customStyleSheet";
	if(!doc)
		doc = document;
	var n = doc.getElementById(id);
	if(doc.createStyleSheet) {
		// Test for IE's non-standard createStyleSheet method
		if(n)
			n.parentNode.removeChild(n);
		// This failed without the &amp;nbsp;
		doc.getElementsByTagName("head")[0].insertAdjacentHTML("beforeEnd","&amp;nbsp;&lt;style id='" + id + "'&gt;" + s + "&lt;/style&gt;");
	} else {
		if(n) {
			n.replaceChild(doc.createTextNode(s),n.firstChild);
		} else {
			n = doc.createElement("style");
			n.type = "text/css";
			n.id = id;
			n.appendChild(doc.createTextNode(s));
			doc.getElementsByTagName("head")[0].appendChild(n);
		}
	}
}

// Force the browser to do a document reflow when needed to workaround browser bugs
function forceReflow()
{
	if(config.browser.isGecko) {
		setStylesheet("body {top:-1em;margin-top:1em;}");
		setStylesheet("");
	}
}

// Replace the current selection of a textarea or text input and scroll it into view
function replaceSelection(e,text)
{
	if(e.setSelectionRange) {
		var oldpos = e.selectionStart;
		var isRange = e.selectionEnd &gt; e.selectionStart;
		e.value = e.value.substr(0,e.selectionStart) + text + e.value.substr(e.selectionEnd);
		e.setSelectionRange(isRange ? oldpos : oldpos + text.length,oldpos + text.length);
		var linecount = e.value.split('\n').length;
		var thisline = e.value.substr(0,e.selectionStart).split('\n').length-1;
		e.scrollTop = Math.floor((thisline - e.rows / 2) * e.scrollHeight / linecount);
	} else if(document.selection) {
		var range = document.selection.createRange();
		if(range.parentElement() == e) {
			var isCollapsed = range.text == "";
			range.text = text;
			if(!isCollapsed) {
				range.moveStart('character', -text.length);
				range.select();
			}
		}
	}
}

// Returns the text of the given (text) node, possibly merging subsequent text nodes
function getNodeText(e)
{
	var t = "";
	while(e &amp;&amp; e.nodeName == "#text") {
		t += e.nodeValue;
		e = e.nextSibling;
	}
	return t;
}

//--
//-- LoaderBase and SaverBase
//--

function LoaderBase() {}

LoaderBase.prototype.loadTiddler = function(store,node,tiddlers)
{
	var title = this.getTitle(store,node);
	if(title) {
		var tiddler = store.createTiddler(title);
		this.internalizeTiddler(store,tiddler,title,node);
		tiddlers.push(tiddler);
	}
};

LoaderBase.prototype.loadTiddlers = function(store,nodes)
{
	var tiddlers = [];
	for(var t = 0; t &lt; nodes.length; t++) {
		try {
			this.loadTiddler(store,nodes[t],tiddlers);
		} catch(ex) {
			showException(ex,config.messages.tiddlerLoadError.format([this.getTitle(store,nodes[t])]));
		}
	}
	return tiddlers;
};

function SaverBase() {}

SaverBase.prototype.externalize = function(store)
{
	var results = [];
	var tiddlers = store.getTiddlers("title");
	for(var t = 0; t &lt; tiddlers.length; t++)
		results.push(this.externalizeTiddler(store,tiddlers[t]));
	return results.join("\n");
};

//--
//-- TW21Loader (inherits from LoaderBase)
//--

function TW21Loader() {}

TW21Loader.prototype = new LoaderBase();

TW21Loader.prototype.getTitle = function(store,node)
{
	var title = null;
	if(node.getAttribute) {
		title = node.getAttribute("title");
		if(!title)
			title = node.getAttribute("tiddler");
	}
	if(!title &amp;&amp; node.id) {
		var lenPrefix = store.idPrefix.length;
		if (node.id.substr(0,lenPrefix) == store.idPrefix)
			title = node.id.substr(lenPrefix);
	}
	return title;
};

TW21Loader.prototype.internalizeTiddler = function(store,tiddler,title,node)
{
	var e = node.firstChild;
	var text = null;
	if(node.getAttribute("tiddler")) {
		text = getNodeText(e).unescapeLineBreaks();
	} else {
		while(e.nodeName!="PRE" &amp;&amp; e.nodeName!="pre") {
			e = e.nextSibling;
		}
		text = e.innerHTML.replace(/\r/mg,"").htmlDecode();
	}
	var modifier = node.getAttribute("modifier");
	var c = node.getAttribute("created");
	var m = node.getAttribute("modified");
	var created = c ? Date.convertFromYYYYMMDDHHMM(c) : version.date;
	var modified = m ? Date.convertFromYYYYMMDDHHMM(m) : created;
	var tags = node.getAttribute("tags");
	var fields = {};
	var attrs = node.attributes;
	for(var i = attrs.length-1; i &gt;= 0; i--) {
		var name = attrs[i].name;
		if (attrs[i].specified &amp;&amp; !TiddlyWiki.isStandardField(name)) {
			fields[name] = attrs[i].value.unescapeLineBreaks();
		}
	}
	tiddler.assign(title,text,modifier,modified,tags,created,fields);
	return tiddler;
};

//--
//-- TW21Saver (inherits from SaverBase)
//--

function TW21Saver() {}

TW21Saver.prototype = new SaverBase();

TW21Saver.prototype.externalizeTiddler = function(store,tiddler)
{
	try {
		var extendedAttributes = "";
		var usePre = config.options.chkUsePreForStorage;
		store.forEachField(tiddler,
			function(tiddler,fieldName,value) {
				// don't store stuff from the temp namespace
				if(typeof value != "string")
					value = "";
				if (!fieldName.match(/^temp\./))
					extendedAttributes += ' %0="%1"'.format([fieldName,value.escapeLineBreaks().htmlEncode()]);
			},true);
		var created = tiddler.created.convertToYYYYMMDDHHMM();
		var modified = tiddler.modified.convertToYYYYMMDDHHMM();
		var vdate = version.date.convertToYYYYMMDDHHMM();
		var attributes = tiddler.modifier ? ' modifier="' + tiddler.modifier.htmlEncode() + '"' : "";
		attributes += (usePre &amp;&amp; modified == created) ? "" : ' modified="' + modified +'"';
		attributes += (usePre &amp;&amp; created == vdate) ? "" :' created="' + created + '"';
		var tags = tiddler.getTags();
		if(!usePre || tags)
			attributes += ' tags="' + tags.htmlEncode() + '"';
		return ('&lt;div %0="%1"%2%3&gt;%4&lt;/'+'div&gt;').format([
				usePre ? "title" : "tiddler",
				tiddler.title.htmlEncode(),
				attributes,
				extendedAttributes,
				usePre ? "\n&lt;pre&gt;" + tiddler.text.htmlEncode() + "&lt;/pre&gt;\n" : tiddler.text.escapeLineBreaks().htmlEncode()
			]);
	} catch (ex) {
		throw exceptionText(ex,config.messages.tiddlerSaveError.format([tiddler.title]));
	}
};

//--
//-- Deprecated code
//--

// @Deprecated: Use createElementAndWikify and this.termRegExp instead
config.formatterHelpers.charFormatHelper = function(w)
{
	w.subWikify(createTiddlyElement(w.output,this.element),this.terminator);
};

// @Deprecated: Use enclosedTextHelper and this.lookaheadRegExp instead
config.formatterHelpers.monospacedByLineHelper = function(w)
{
	var lookaheadRegExp = new RegExp(this.lookahead,"mg");
	lookaheadRegExp.lastIndex = w.matchStart;
	var lookaheadMatch = lookaheadRegExp.exec(w.source);
	if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
		var text = lookaheadMatch[1];
		if(config.browser.isIE)
			text = text.replace(/\n/g,"\r");
		createTiddlyElement(w.output,"pre",null,null,text);
		w.nextMatch = lookaheadRegExp.lastIndex;
	}
};

// @Deprecated: Use &lt;br&gt; or &lt;br /&gt; instead of &lt;&lt;br&gt;&gt;
config.macros.br = {};
config.macros.br.handler = function(place)
{
	createTiddlyElement(place,"br");
};

// Find an entry in an array. Returns the array index or null
// @Deprecated: Use indexOf instead
Array.prototype.find = function(item)
{
	var i = this.indexOf(item);
	return i == -1 ? null : i;
};

// Load a tiddler from an HTML DIV. The caller should make sure to later call Tiddler.changed()
// @Deprecated: Use store.getLoader().internalizeTiddler instead
Tiddler.prototype.loadFromDiv = function(divRef,title)
{
	return store.getLoader().internalizeTiddler(store,this,title,divRef);
};

// Format the text for storage in an HTML DIV
// @Deprecated Use store.getSaver().externalizeTiddler instead.
Tiddler.prototype.saveToDiv = function()
{
	return store.getSaver().externalizeTiddler(store,this);
};

// @Deprecated: Use store.allTiddlersAsHtml() instead
function allTiddlersAsHtml()
{
	return store.allTiddlersAsHtml();
}

// @Deprecated: Use refreshPageTemplate instead
function applyPageTemplate(title)
{
	refreshPageTemplate(title);
}

// @Deprecated: Use story.displayTiddlers instead
function displayTiddlers(srcElement,titles,template,unused1,unused2,animate,unused3)
{
	story.displayTiddlers(srcElement,titles,template,animate);
}

// @Deprecated: Use story.displayTiddler instead
function displayTiddler(srcElement,title,template,unused1,unused2,animate,unused3)
{
	story.displayTiddler(srcElement,title,template,animate);
}

// @Deprecated: Use functions on right hand side directly instead
var createTiddlerPopup = Popup.create;
var scrollToTiddlerPopup = Popup.show;
var hideTiddlerPopup = Popup.remove;

// @Deprecated: Use right hand side directly instead
var regexpBackSlashEn = new RegExp("\\\\n","mg");
var regexpBackSlash = new RegExp("\\\\","mg");
var regexpBackSlashEss = new RegExp("\\\\s","mg");
var regexpNewLine = new RegExp("\n","mg");
var regexpCarriageReturn = new RegExp("\r","mg");
//--
//-- End of scripts
//--
</t>
<t tx="ekr.20071030094853">@language java
@tabwidth 8</t>
<t tx="ekr.20071030102858.3">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030103209">@tabwidth -4
@language python

if 0: # List all java files: this was used to create the 'files' node.
    import glob
    for s in glob.glob(r'c:\prog\test\from-victor\*.java'):
        g.es('@auto %s' % (s))

if 0: # Create a child for every line in the 'files' node.
    p = p.firstChild()
    if p:
        s = p.bodyString()
        lines = g.splitLines(s)
        c.beginUpdate()
        try:
            for line in lines:
                if line.strip():
                    p2 = p.v.insertAsNthChild(0)
                    p2.initHeadString(line)
        finally:
            c.endUpdate()

if 1: # Disable all child @auto nodes and delete the children.
    c.beginUpdate()
    try:
        for p in p.siblings_iter():
            h = p.headString()
            if h.startswith('@auto'):
                p.initHeadString('@'+h)
                while p.hasChildren():
                    p.firstChild().doDelete()
    finally:
        c.endUpdate()

if 0: # Enable all child @@auto nodes and delete the children.
    c.beginUpdate()
    try:
        for p in p.siblings_iter():
            h = p.headString()
            if h.startswith('@@auto'):
                p.initHeadString(h[1:])
                while p.hasChildren():
                    p.firstChild().doDelete()
    finally:
        c.endUpdate()
</t>
<t tx="ekr.20071030103258">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030103909">@auto c:\prog\test\from-victor\Bundle.java
@auto c:\prog\test\from-victor\BundleActivator.java
@auto c:\prog\test\from-victor\BundleContext.java
@auto c:\prog\test\from-victor\BundleEvent.java
@auto c:\prog\test\from-victor\BundleListener.java
@auto c:\prog\test\from-victor\BundlePermission.java
@auto c:\prog\test\from-victor\Configurable.java
@auto c:\prog\test\from-victor\Constants.java
@auto c:\prog\test\from-victor\Filter.java
@auto c:\prog\test\from-victor\FrameworkEvent.java
@auto c:\prog\test\from-victor\FrameworkListener.java
@auto c:\prog\test\from-victor\FrameworkUtil.java
@auto c:\prog\test\from-victor\InvalidSyntaxException.java
@auto c:\prog\test\from-victor\PackagePermission.java
@auto c:\prog\test\from-victor\ServiceEvent.java
@auto c:\prog\test\from-victor\ServiceFactory.java
@auto c:\prog\test\from-victor\ServiceListener.java
@auto c:\prog\test\from-victor\ServicePermission.java
@auto c:\prog\test\from-victor\ServiceReference.java
@auto c:\prog\test\from-victor\ServiceRegistration.java
@auto c:\prog\test\from-victor\shortBundleException.java
@auto c:\prog\test\from-victor\SynchronousBundleListener.java
@auto c:\prog\test\from-victor\Version.java</t>
<t tx="ekr.20071030103909.19">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.1">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.2">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.3">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.4">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.5">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.6">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.7">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.8">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.9">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.10">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.11">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.12">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.13">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.14">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.15">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.16">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.17">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.18">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.19">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.20">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.21">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.22">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071030104140.23">@language java
@tabwidth 8
@others
</t>
<t tx="ekr.20071101163934">import leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        controller.processTopTree(p)
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20071105085941" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071110092702.1"></t>
<t tx="ekr.20071113100456">@@markup wiki

@
__bold__

~~#80ff00:~~~~#80ff80:this is a test~~


actions\add.png {picture file=c:\prog\tigris-cvs\leo\Icons\Tango\16x16\actions\add.png}


The wiki text must be in the range of an @markup wiki directive **and** in a Leo
doc part (starting with '@') **or** a Python triple-quoted string.

File "..\Icons\Tango\16x16\actions\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\animations"
File "..\Icons\Tango\16x16\animations\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\apps"
File "..\Icons\Tango\16x16\apps\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\categories"
File "..\Icons\Tango\16x16\categories\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\devices"
File "..\Icons\Tango\16x16\devices\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\emblems"
File "..\Icons\Tango\16x16\emblems\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\emotes"
File "..\Icons\Tango\16x16\emotes\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\mimetypes"
File "..\Icons\Tango\16x16\mimetypes\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\places"
File "..\Icons\Tango\16x16\places\*.*"

SetOutPath "$INSTDIR\Icons\Tango\16x16\status"
File "..\Icons\Tango\16x16\status\*.*"
</t>
<t tx="ekr.20071114053401"># This is a test.</t>
<t tx="ekr.20071114071901"></t>
<t tx="ekr.20071114084053" lineYOffset="4b032e" icons="5d71007d7101285504747970657102550466696c6571035507796f666673657471044b016803583e000000433a5c70726f675c7469677269732d6376735c6c656f5c49636f6e735c54616e676f5c31367831365c656d6f7465735c666163652d616e67656c2e706e67710555047870616471064afeffffff550577686572657107550e6265666f7265486561646c696e6571085507786f666673657471094b02550772656c50617468710a582100000054616e676f5c31367831365c656d6f7465735c666163652d616e67656c2e706e67710b75612e"></t>
<t tx="ekr.20071114092813" lineYOffset="4b002e" icons="5d71002e">@

** Note **: icons will appear only if they are found on your system.

To do:
    
- Icon menu.
- Left click to delete icons.
- Tree control recomputes height of each line.</t>
<t tx="ekr.20071114092813.1" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071114092813.2" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071114092813.3"></t>
<t tx="ekr.20071114092813.4" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071114092813.5"></t>
<t tx="ekr.20071114092813.6" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071114092813.7"></t>
<t tx="ekr.20071114092813.8" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071114092813.9"></t>
<t tx="ekr.20071114092813.10"></t>
<t tx="ekr.20071114092813.11"></t>
<t tx="ekr.20071114092813.12" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20071114092813.13">for p in c.allNodes_iter():

    if hasattr(p.v.t,"unknownAttributes"):
        a = p.v.t.unknownAttributes
        iconsList = a.get("icons")
        if dict:
            a["icons"] = []
            a["lineYOffset"] = 0

c.redraw()
</t>
<t tx="ekr.20071114092813.14">if hasattr(p.v.t,"unknownAttributes"):
    a = p.v.t.unknownAttributes
    iconsList = a.get("icons")
    if dict:
        a["icons"] = []
        a["lineYOffset"] = 0
        c.redraw()</t>
<t tx="ekr.20071114092813.15" lineYOffset="4b002e" icons="5d71002e">p.v.t.unknownAttributes = {}
a = p.v.t.unknownAttributes

&lt;&lt; define event callbacks &gt;&gt;

path = g.os_path_join(g.app.loadDir,"..","Icons")
icon1 = g.os_path_join(path,"lt_arrow_enabled.gif")
icon2 = g.os_path_join(path,"rt_arrow_enabled.gif")

d1 = {
    "type" : "file", "file" : icon1,
    "where" : "beforeIcon",
    "yoffset" : -3,
    # "yoffset" : 5, "ypad" : -5,
    # "height" : 40, # automatically adjust headline y position.
    "xpad": 2
}

# Classes and functions can only be pickled if they are at the top level of a module.
    #"onClick" : onClick,
    #"onRightClick" : onRightClick,
    #"onDoubleClick" : onDoubleClick }

d2 = {
    "type" : "file", "file" : icon2,
    "where" : "beforeHeadline",
    "yoffset" : -3,
    "xoffset" : 2, "xpad" : -2 }

a["icons"] = [d1,d2]
a["lineYOffset"] = 3

c.redraw()
</t>
<t tx="ekr.20071114092813.16">def onClick(p=p):

    g.trace(p)

def onRightClick(p=p):

    g.trace(p)

def onDoubleClick(p=p):

    g.trace(p)
</t>
<t tx="ekr.20071114092813.17" lineYOffset="4b002e" icons="5d71002e">import Tkinter as Tk
import os, sys

tree = c.frame.tree

@others

os.chdir(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons")))

paths = g.app.gui.runOpenFileDialog(
    title='Get Icons',
    filetypes=[('All files','*'),('Gif','*.gif'), ('Bitmap','*.bmp'),('Icon','*.ico'),],
    defaultextension=None,
    multiple=True)

aList = [] ; xoffset = 2
for path in paths:
    path = g.os_path_abspath(g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",path)))
    image_height = getImageHeight(path)
    if image_height is None:
        yoffset = 0
    else:
        yoffset = (tree.line_height-image_height)/2

    aList.append ({
        'type' : 'file', 'file' : path,
        'where' : 'beforeHeadline',
        'yoffset' : yoffset, 'xoffset' : xoffset, 'xpad' : -2,
    })
    xoffset += 2

# aList.reverse()

if not hasattr(p.v.t,'unknownAttributes'):
    p.v.t.unknownAttributes = {}

aList2 = p.v.t.unknownAttributes.get('icons',[])
aList2.extend(aList)
p.v.t.unknownAttributes ['icons'] = aList2
p.v.t.unknownAttributes ['lineYOffset'] = 3
c.redraw()

# Classes and functions can only be pickled if they are at the top level of a module.
#"onClick" : onClick,
#"onRightClick" : onRightClick,
#"onDoubleClick" : onDoubleClick }
</t>
<t tx="ekr.20071114092813.18">def getImageHeight (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=tree.canvas,file=path)
        return image.height()
    except Exception:
        return None
</t>
<t tx="ekr.20071114092813.19"># A script to get the proper height of icons.
# The XP file browser doesn't show or report the correct values.

import glob

@others

for z in ('LargeIcons','MediumIcons','SmallIcons'):
    theDir = g.os_path_normpath(g.os_path_join(g.app.loadDir,"..","Icons",'UserIcons',z))
    for name in glob.glob(g.os_path_join(theDir,'*.*')):
        h,w = getImageStats(name)
        if h is not None:
            print h,w,name
</t>
<t tx="ekr.20071114092813.20">def getImageStats (path):

    try:
        from PIL import Image, ImageTk
    except ImportError:
        Image = None

    try:
        if Image:
            image1 = Image.open(path)
            image = ImageTk.PhotoImage(image1)
        else:
            image = Tk.PhotoImage(master=c.frame.tree.canvas,file=path)
        return image.height(),image.width()

    except Exception:
        #g.es_exception()
        return None,None
</t>
<t tx="ekr.20071114092813.21">seen = {}
print '----'
for p in c.allNodes_iter():
    if p.v.t not in seen:
        seen[p.v.t] = True
        if hasattr(p.v.t,'unknownAttributes'):
            aList = p.v.t.unknownAttributes.get('icons',[])
            for d in aList:
                name = d.get('file')
                if name: print 'p: %-20s icon: %s' % (p.headString(),g.os_path_abspath(name))</t>
<t tx="ekr.20071115061426">@ @rst-options
code_mode=False
generate_rst=True
http_server_support = False
show_organizer_nodes=True
show_headlines=True
show_leo_directives=True
stylesheet_path=..\doc
write_intermediate_file = False
verbose=True
@c

|back| |leo| |next|

##########################################
Chapter 0: Preformat test
##########################################

This is a test of the @rst-preformat option

.. contents::</t>
<t tx="ekr.20071115061426.1">.. Links used in this document...

.. WARNING: image targets may not have upper case letters!

.. |back| image:: arrow_lt.gif
    :target: FAQ.html

.. |leo|   image:: leo.gif
    :target: front.html

.. |next| image:: arrow_rt.gif
    :target: intro.html</t>
<t tx="ekr.20071115061426.2">Before section.</t>
<t tx="ekr.20071115061426.3">def writePreformat (self,p):

    '''Write all p's body text lines as if preformatted.'''

    lines = p.bodyString().split('\n')
    lines = ['\t' + z for z in lines]
    lines.insert(0,'::\n\n')

    s = '\n'.join(lines)
    if s.strip()
        self.write('%s\n\n' % s)
</t>
<t tx="ekr.20071115061426.12">-------------

|back| |leo| |next|</t>
<t tx="ekr.20071115061535.1">This is the following section.</t>
<t tx="ekr.20071116113202"># Enable this @markup wiki directive to see all icons in the Icons/Tango directory.
# The color_markup and add_directives plugins must be enabled.
# Be patient: it may take a while to render all the icons.

@@markup wiki

@

actions
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\add.png} add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\address-book-new.png} address-book-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\appointment-new.png} appointment-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\appointment.png} appointment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\back.png} back.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bookmark-new.png} bookmark-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bookmark_add.png} bookmark_add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bookmarks_list_add.png} bookmarks_list_add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\bottom.png} bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\centrejust.png} centrejust.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\contact-new.png} contact-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-new.png} document-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-open.png} document-open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-print-preview.png} document-print-preview.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-print.png} document-print.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-properties.png} document-properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-save-as.png} document-save-as.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\document-save.png} document-save.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\down.png} down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-clear.png} edit-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-copy.png} edit-copy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-cut.png} edit-cut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-delete.png} edit-delete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-find-replace.png} edit-find-replace.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-find.png} edit-find.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-paste.png} edit-paste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-redo.png} edit-redo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-select-all.png} edit-select-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\edit-undo.png} edit-undo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editclear.png} editclear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editcopy.png} editcopy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editcut.png} editcut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editdelete.png} editdelete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\editpaste.png} editpaste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\exit.png} exit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filefind.png} filefind.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filenew.png} filenew.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\fileopen.png} fileopen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\fileprint.png} fileprint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filequickprint.png} filequickprint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filesave.png} filesave.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\filesaveas.png} filesaveas.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\find.png} find.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\finish.png} finish.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\folder-new.png} folder-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\folder_new.png} folder_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-indent-less.png} format-indent-less.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-indent-more.png} format-indent-more.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-center.png} format-justify-center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-fill.png} format-justify-fill.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-left.png} format-justify-left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-justify-right.png} format-justify-right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-bold.png} format-text-bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-italic.png} format-text-italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-strikethrough.png} format-text-strikethrough.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\format-text-underline.png} format-text-underline.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\forward.png} forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-lockscreen.png} gnome-lockscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-logout.png} gnome-logout.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-searchtool.png} gnome-searchtool.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-session-logout.png} gnome-session-logout.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-mail-fwd.png} gnome-stock-mail-fwd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-mail-new.png} gnome-stock-mail-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-mail-rpl.png} gnome-stock-mail-rpl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-text-indent.png} gnome-stock-text-indent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gnome-stock-text-unindent.png} gnome-stock-text-unindent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-bottom.png} go-bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-down.png} go-down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-first.png} go-first.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-home.png} go-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-jump.png} go-jump.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-last.png} go-last.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-next.png} go-next.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-previous.png} go-previous.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-top.png} go-top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\go-up.png} go-up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gohome.png} gohome.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-add.png} gtk-add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-bold.png} gtk-bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-cancel.png} gtk-cancel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-clear.png} gtk-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-copy.png} gtk-copy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-cut.png} gtk-cut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-delete.png} gtk-delete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-find-and-replace.png} gtk-find-and-replace.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-find.png} gtk-find.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-fullscreen.png} gtk-fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-back-ltr.png} gtk-go-back-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-back-rtl.png} gtk-go-back-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-down.png} gtk-go-down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-forward-ltr.png} gtk-go-forward-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-forward-rtl.png} gtk-go-forward-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-go-up.png} gtk-go-up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-bottom.png} gtk-goto-bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-first-ltr.png} gtk-goto-first-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-first-rtl.png} gtk-goto-first-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-last-ltr.png} gtk-goto-last-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-last-rtl.png} gtk-goto-last-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-goto-top.png} gtk-goto-top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-home.png} gtk-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-indent-ltr.png} gtk-indent-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-indent-rtl.png} gtk-indent-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-indent.png} gtk-indent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-italic.png} gtk-italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-jump-to-ltr.png} gtk-jump-to-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-jump-to-rtl.png} gtk-jump-to-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-center.png} gtk-justify-center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-fill.png} gtk-justify-fill.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-left.png} gtk-justify-left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-justify-right.png} gtk-justify-right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-forward-ltr.png} gtk-media-forward-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-forward-rtl.png} gtk-media-forward-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-next-ltr.png} gtk-media-next-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-next-rtl.png} gtk-media-next-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-pause.png} gtk-media-pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-play-ltr.png} gtk-media-play-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-previous-ltr.png} gtk-media-previous-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-previous-rtl.png} gtk-media-previous-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-record.png} gtk-media-record.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-rewind-ltr.png} gtk-media-rewind-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-rewind-rtl.png} gtk-media-rewind-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-media-stop.png} gtk-media-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-new.png} gtk-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-open.png} gtk-open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-paste.png} gtk-paste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-print-preview.png} gtk-print-preview.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-print.png} gtk-print.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-properties.png} gtk-properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-redo-ltr.png} gtk-redo-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-refresh.png} gtk-refresh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-remove.png} gtk-remove.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-save-as.png} gtk-save-as.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-save.png} gtk-save.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-select-all.png} gtk-select-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-stop.png} gtk-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-strikethrough.png} gtk-strikethrough.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-underline.png} gtk-underline.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-undo-ltr.png} gtk-undo-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-unindent-ltr.png} gtk-unindent-ltr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-unindent-rtl.png} gtk-unindent-rtl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\gtk-unindent.png} gtk-unindent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\kfind.png} kfind.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\kfm_home.png} kfm_home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\leftjust.png} leftjust.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\list-add.png} list-add.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\list-remove.png} list-remove.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\lock.png} lock.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-forward.png} mail-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-mark-junk.png} mail-mark-junk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-mark-not-junk.png} mail-mark-not-junk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-message-new.png} mail-message-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-reply-all.png} mail-reply-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-reply-sender.png} mail-reply-sender.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail-send-receive.png} mail-send-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_forward.png} mail_forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_new.png} mail_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_reply.png} mail_reply.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_replyall.png} mail_replyall.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\mail_spam.png} mail_spam.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-eject.png} media-eject.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-playback-pause.png} media-playback-pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-playback-start.png} media-playback-start.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-playback-stop.png} media-playback-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-record.png} media-record.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-seek-backward.png} media-seek-backward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-seek-forward.png} media-seek-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-skip-backward.png} media-skip-backward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\media-skip-forward.png} media-skip-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\next.png} next.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_eject.png} player_eject.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_end.png} player_end.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_fwd.png} player_fwd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_pause.png} player_pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_play.png} player_play.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_record.png} player_record.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_rew.png} player_rew.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_start.png} player_start.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\player_stop.png} player_stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\previous.png} previous.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\process-stop.png} process-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\redhat-home.png} redhat-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\redo.png} redo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload.png} reload.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload3.png} reload3.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload_all_tabs.png} reload_all_tabs.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\reload_page.png} reload_page.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\remove.png} remove.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\rightjust.png} rightjust.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\search.png} search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\start.png} start.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_add-bookmark.png} stock_add-bookmark.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_bottom.png} stock_bottom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_copy.png} stock_copy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_cut.png} stock_cut.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_delete.png} stock_delete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_down.png} stock_down.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_file-properites.png} stock_file-properites.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_first.png} stock_first.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_fullscreen.png} stock_fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_help-add-bookmark.png} stock_help-add-bookmark.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_home.png} stock_home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_last.png} stock_last.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_left.png} stock_left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-compose.png} stock_mail-compose.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-forward.png} stock_mail-forward.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-reply-to-all.png} stock_mail-reply-to-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-reply.png} stock_mail-reply.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_mail-send-receive.png} stock_mail-send-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-fwd.png} stock_media-fwd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-next.png} stock_media-next.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-pause.png} stock_media-pause.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-play.png} stock_media-play.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-prev.png} stock_media-prev.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-rec.png} stock_media-rec.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-rew.png} stock_media-rew.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_media-stop.png} stock_media-stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-address-book.png} stock_new-address-book.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-appointment.png} stock_new-appointment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-bcard.png} stock_new-bcard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-dir.png} stock_new-dir.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-tab.png} stock_new-tab.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-text.png} stock_new-text.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_new-window.png} stock_new-window.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_not-spam.png} stock_not-spam.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_paste.png} stock_paste.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_print-preview.png} stock_print-preview.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_print.png} stock_print.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_properties.png} stock_properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_redo.png} stock_redo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_refresh.png} stock_refresh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_right.png} stock_right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_save-as.png} stock_save-as.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_save.png} stock_save.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_search-and-replace.png} stock_search-and-replace.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_search.png} stock_search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_select-all.png} stock_select-all.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_spam.png} stock_spam.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_stop.png} stock_stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text-strikethrough.png} stock_text-strikethrough.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_bold.png} stock_text_bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_center.png} stock_text_center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_indent.png} stock_text_indent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_italic.png} stock_text_italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_justify.png} stock_text_justify.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_left.png} stock_text_left.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_right.png} stock_text_right.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_underlined.png} stock_text_underlined.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_text_unindent.png} stock_text_unindent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_top.png} stock_top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_undo.png} stock_undo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stock_up.png} stock_up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\stop.png} stop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-lock-screen.png} system-lock-screen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-log-out.png} system-log-out.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-search.png} system-search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\system-shutdown.png} system-shutdown.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\tab-new.png} tab-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\tab_new.png} tab_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_bold.png} text_bold.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_italic.png} text_italic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_strike.png} text_strike.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\text_under.png} text_under.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\top.png} top.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\undo.png} undo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\up.png} up.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\view-fullscreen.png} view-fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\view-refresh.png} view-refresh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\window-new.png} window-new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\window_fullscreen.png} window_fullscreen.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\window_new.png} window_new.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\actions\\xfce-system-lock.png} xfce-system-lock.png

animations
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\animations\\gnome-spinner.png} gnome-spinner.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\animations\\process-working.png} process-working.png

apps
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\access.png} access.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessibility-directory.png} accessibility-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-calculator.png} accessories-calculator.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-character-map.png} accessories-character-map.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-dictionary.png} accessories-dictionary.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\accessories-text-editor.png} accessories-text-editor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\amarok.png} amarok.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\background.png} background.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\browser.png} browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\calc.png} calc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\compose.png} compose.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\config-date.png} config-date.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\config-language.png} config-language.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\config-users.png} config-users.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\date.png} date.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\email.png} email.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\file-manager.png} file-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\fonts.png} fonts.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\force-exit.png} force-exit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gaim.png} gaim.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-calculator.png} gnome-calculator.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-character-map.png} gnome-character-map.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-fs-blockdev.png} gnome-fs-blockdev.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-help.png} gnome-help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-keyring-manager.png} gnome-keyring-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-monitor.png} gnome-monitor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-remote-desktop.png} gnome-remote-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-session.png} gnome-session.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-accessibility-technologies.png} gnome-settings-accessibility-techno
logies.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-background.png} gnome-settings-background.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-font.png} gnome-settings-font.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-keybindings.png} gnome-settings-keybindings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-sound.png} gnome-settings-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-settings-theme.png} gnome-settings-theme.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-terminal.png} gnome-terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gnome-window-manager.png} gnome-window-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gtk-help.png} gtk-help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\gucharmap.png} gucharmap.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\help-browser.png} help-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\help.png} help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\inkscape.png} inkscape.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-group-chat.png} internet-group-chat.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-mail.png} internet-mail.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-news-reader.png} internet-news-reader.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\internet-web-browser.png} internet-web-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\k3b.png} k3b.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kcalc.png} kcalc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kcharselect.png} kcharselect.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kcmkwm.png} kcmkwm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kedit.png} kedit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\key_bindings.png} key_bindings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kfm.png} kfm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\khelpcenter.png} khelpcenter.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\knotify.png} knotify.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\konqueror.png} konqueror.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\konsole.png} konsole.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kontact.png} kontact.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\konversation.png} konversation.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kopete.png} kopete.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\krfb.png} krfb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kscreensaver.png} kscreensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\ksysguard.png} ksysguard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kuser.png} kuser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\kwin.png} kwin.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\locale.png} locale.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\mail_generic.png} mail_generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\office-calendar.png} office-calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\openterm.png} openterm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\package_edutainment.png} package_edutainment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-accessibility.png} preferences-desktop-accessibility.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-assistive-technology.png} preferences-desktop-assistive-techno
logy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-font.png} preferences-desktop-font.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-keyboard-shortcuts.png} preferences-desktop-keyboard-shortcuts
.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-locale.png} preferences-desktop-locale.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-multimedia.png} preferences-desktop-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-remote-desktop.png} preferences-desktop-remote-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-screensaver.png} preferences-desktop-screensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-sound.png} preferences-desktop-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-theme.png} preferences-desktop-theme.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-desktop-wallpaper.png} preferences-desktop-wallpaper.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-system-network-proxy.png} preferences-system-network-proxy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-system-session.png} preferences-system-session.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\preferences-system-windows.png} preferences-system-windows.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\proxy-config.png} proxy-config.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\proxy.png} proxy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\redhat-email.png} redhat-email.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\redhat-filemanager.png} redhat-filemanager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\redhat-web-browser.png} redhat-web-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\screensaver.png} screensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\software-properties.png} software-properties.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\stock_help.png} stock_help.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\stock_proxy.png} stock_proxy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\style.png} style.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\susehelpcenter.png} susehelpcenter.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\synaptic.png} synaptic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-config-users.png} system-config-users.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-file-manager.png} system-file-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-installer.png} system-installer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-software-update.png} system-software-update.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\system-users.png} system-users.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\terminal.png} terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\text-editor.png} text-editor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\update-manager.png} update-manager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\user-info.png} user-info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\utilities-system-monitor.png} utilities-system-monitor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\utilities-terminal.png} utilities-terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\wallpaper.png} wallpaper.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\web-browser.png} web-browser.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\wmtweaks.png} wmtweaks.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xchat-gnome.png} xchat-gnome.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfcalendar.png} xfcalendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-edit.png} xfce-edit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-filemanager.png} xfce-filemanager.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-mail.png} xfce-mail.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-man.png} xfce-man.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-sound.png} xfce-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce-terminal.png} xfce-terminal.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-backdrop.png} xfce4-backdrop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-panel.png} xfce4-panel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-session.png} xfce4-session.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-sound.png} xfce4-sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-splash.png} xfce4-splash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-taskbar.png} xfce4-taskbar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-ui.png} xfce4-ui.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfce4-workspaces.png} xfce4-workspaces.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xfwm4.png} xfwm4.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\ximian-evolution-calendar.png} ximian-evolution-calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\xscreensaver.png} xscreensaver.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\apps\\zen-icon.png} zen-icon.png

categories
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-accessories.png} applications-accessories.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-development.png} applications-development.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-games.png} applications-games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-graphics.png} applications-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-internet.png} applications-internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-multimedia.png} applications-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-office.png} applications-office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-other.png} applications-other.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\applications-system.png} applications-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-applications.png} gnome-applications.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-control-center.png} gnome-control-center.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-devel.png} gnome-devel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-globe.png} gnome-globe.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-graphics.png} gnome-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-joystick.png} gnome-joystick.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-multimedia.png} gnome-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-other.png} gnome-other.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-settings.png} gnome-settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-system.png} gnome-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gnome-util.png} gnome-util.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\gtk-preferences.png} gtk-preferences.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\input_devices_settings.png} input_devices_settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\kcontrol.png} kcontrol.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_development.png} package_development.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_games.png} package_games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_graphics.png} package_graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_multimedia.png} package_multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_network.png} package_network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_office.png} package_office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_settings.png} package_settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_system.png} package_system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\package_utilities.png} package_utilities.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\preferences-desktop-peripherals.png} preferences-desktop-peripherals.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\preferences-desktop.png} preferences-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\preferences-system.png} preferences-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-accessories.png} redhat-accessories.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-games.png} redhat-games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-graphics.png} redhat-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-internet.png} redhat-internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-office.png} redhat-office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-preferences.png} redhat-preferences.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-programming.png} redhat-programming.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-sound_video.png} redhat-sound_video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-system_settings.png} redhat-system_settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\redhat-system_tools.png} redhat-system_tools.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\stock_internet.png} stock_internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-devel.png} xfce-devel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-games.png} xfce-games.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-graphics.png} xfce-graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-internet.png} xfce-internet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-multimedia.png} xfce-multimedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-office.png} xfce-office.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-system-settings.png} xfce-system-settings.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-system.png} xfce-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce-utils.png} xfce-utils.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\categories\\xfce4-settings.png} xfce4-settings.png

devices
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\3floppy_unmount.png} 3floppy_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\audio-card.png} audio-card.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\audio-input-microphone.png} audio-input-microphone.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\battery.png} battery.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera-photo.png} camera-photo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera-video.png} camera-video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera.png} camera.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\camera_unmount.png} camera_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\cdrom_unmount.png} cdrom_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\cdwriter_unmount.png} cdwriter_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\chardevice.png} chardevice.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\computer.png} computer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\display.png} display.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-cdrom.png} drive-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-harddisk.png} drive-harddisk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-optical.png} drive-optical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\drive-removable-media.png} drive-removable-media.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\dvd_unmount.png} dvd_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-battery.png} gnome-dev-battery.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-cdrom-audio.png} gnome-dev-cdrom-audio.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-cdrom.png} gnome-dev-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-computer.png} gnome-dev-computer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-cdr.png} gnome-dev-disc-cdr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-cdrw.png} gnome-dev-disc-cdrw.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdr-plus.png} gnome-dev-disc-dvdr-plus.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdr.png} gnome-dev-disc-dvdr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdram.png} gnome-dev-disc-dvdram.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdrom.png} gnome-dev-disc-dvdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-disc-dvdrw.png} gnome-dev-disc-dvdrw.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-dvd.png} gnome-dev-dvd.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-ethernet.png} gnome-dev-ethernet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-floppy.png} gnome-dev-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-harddisk-1394.png} gnome-dev-harddisk-1394.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-harddisk-usb.png} gnome-dev-harddisk-usb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-harddisk.png} gnome-dev-harddisk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-ipod.png} gnome-dev-ipod.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-keyboard.png} gnome-dev-keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-cf.png} gnome-dev-media-cf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-ms.png} gnome-dev-media-ms.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-sdmmc.png} gnome-dev-media-sdmmc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-media-sm.png} gnome-dev-media-sm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-mouse-ball.png} gnome-dev-mouse-ball.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-mouse-optical.png} gnome-dev-mouse-optical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-printer.png} gnome-dev-printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-removable-1394.png} gnome-dev-removable-1394.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-removable-usb.png} gnome-dev-removable-usb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-removable.png} gnome-dev-removable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-dev-wavelan.png} gnome-dev-wavelan.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-fs-client.png} gnome-fs-client.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gnome-stock-mic.png} gnome-stock-mic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gtk-cdrom.png} gtk-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gtk-floppy.png} gtk-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\gtk-harddisk.png} gtk-harddisk.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\harddrive.png} harddrive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\hdd_unmount.png} hdd_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\input-gaming.png} input-gaming.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\input-keyboard.png} input-keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\input-mouse.png} input-mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\ipod_mount.png} ipod_mount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\joystick.png} joystick.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\keyboard.png} keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\kjobviewer.png} kjobviewer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\kxkb.png} kxkb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-cdrom.png} media-cdrom.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-flash.png} media-flash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-floppy.png} media-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\media-optical.png} media-optical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\mouse.png} mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\multimedia-player.png} multimedia-player.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\network-wired.png} network-wired.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\network-wireless.png} network-wireless.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printer-remote.png} printer-remote.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printer.png} printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printer1.png} printer1.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\printmgr.png} printmgr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\stock_mic.png} stock_mic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\stock_printers.png} stock_printers.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\system-floppy.png} system-floppy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\system.png} system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\usbpendrive_unmount.png} usbpendrive_unmount.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\video-display.png} video-display.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce-printer.png} xfce-printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce4-display.png} xfce4-display.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce4-keyboard.png} xfce4-keyboard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\xfce4-mouse.png} xfce4-mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_HD.png} yast_HD.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_idetude.png} yast_idetude.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_joystick.png} yast_joystick.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_mouse.png} yast_mouse.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_printer.png} yast_printer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\devices\\yast_soundcard.png} yast_soundcard.png

emblems
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-favorite.png} emblem-favorite.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-important.png} emblem-important.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-noread.png} emblem-noread.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-nowrite.png} emblem-nowrite.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-photos.png} emblem-photos.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-readonly.png} emblem-readonly.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-symbolic-link.png} emblem-symbolic-link.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-system.png} emblem-system.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\emblem-unreadable.png} emblem-unreadable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emblems\\stock_mail-priority-high.png} stock_mail-priority-high.png

emotes
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-angel.png} face-angel.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-crying.png} face-crying.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-devilish.png} face-devilish.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-glasses.png} face-glasses.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-grin.png} face-grin.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-kiss.png} face-kiss.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-monkey.png} face-monkey.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-plain.png} face-plain.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-sad.png} face-sad.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-smile-big.png} face-smile-big.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-smile.png} face-smile.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-surprise.png} face-surprise.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\face-wink.png} face-wink.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-1.png} stock_smiley-1.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-11.png} stock_smiley-11.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-13.png} stock_smiley-13.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-18.png} stock_smiley-18.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-2.png} stock_smiley-2.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-22.png} stock_smiley-22.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-3.png} stock_smiley-3.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-4.png} stock_smiley-4.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-5.png} stock_smiley-5.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-6.png} stock_smiley-6.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-7.png} stock_smiley-7.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\emotes\\stock_smiley-8.png} stock_smiley-8.png

mimetypes
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\application-certificate.png} application-certificate.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\application-x-executable.png} application-x-executable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\ascii.png} ascii.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\audio-x-generic.png} audio-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\binary.png} binary.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\contents2.png} contents2.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\deb.png} deb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\document.png} document.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\empty.png} empty.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\exec.png} exec.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\folder_tar.png} folder_tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font-x-generic.png} font-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font.png} font.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font_bitmap.png} font_bitmap.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font_truetype.png} font_truetype.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\font_type1.png} font_type1.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-fs-executable.png} gnome-fs-executable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-magicpoint.png} gnome-mime-application-magicpoint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-msword.png} gnome-mime-application-msword.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-ogg.png} gnome-mime-application-ogg.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-pdf.png} gnome-mime-application-pdf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-postscript.png} gnome-mime-application-postscript.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-rtf.png} gnome-mime-application-rtf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.lotus-1-2-3.png} gnome-mime-application-vnd.lotus-
1-2-3.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.ms-excel.png} gnome-mime-application-vnd.ms-excel.
png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.ms-powerpoint.png} gnome-mime-application-vnd.ms-p
owerpoint.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.graphics-template.png} gnome-mi
me-application-vnd.oasis.opendocument.graphics-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.graphics.png} gnome-mime-applic
ation-vnd.oasis.opendocument.graphics.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.image.png} gnome-mime-applicati
on-vnd.oasis.opendocument.image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.presentation-template.png} gnom
e-mime-application-vnd.oasis.opendocument.presentation-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.presentation.png} gnome-mime-ap
plication-vnd.oasis.opendocument.presentation.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.spreadsheet-template.png} gnome
-mime-application-vnd.oasis.opendocument.spreadsheet-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.spreadsheet.png} gnome-mime-app
lication-vnd.oasis.opendocument.spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.text-template.png} gnome-mime-a
pplication-vnd.oasis.opendocument.text-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.text-web.png} gnome-mime-applic
ation-vnd.oasis.opendocument.text-web.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.oasis.opendocument.text.png} gnome-mime-applicatio
n-vnd.oasis.opendocument.text.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.rn-realmedia-secure.png} gnome-mime-application-vn
d.rn-realmedia-secure.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.rn-realmedia-vbr.png} gnome-mime-application-vnd.r
n-realmedia-vbr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.rn-realmedia.png} gnome-mime-application-vnd.rn-re
almedia.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.stardivision.calc.png} gnome-mime-application-vnd.
stardivision.calc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.stardivision.impress.png} gnome-mime-application-v
nd.stardivision.impress.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.stardivision.writer.png} gnome-mime-application-vn
d.stardivision.writer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.calc.png} gnome-mime-application-vnd.sun.x
ml.calc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.calc.template.png} gnome-mime-application-
vnd.sun.xml.calc.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.draw.png} gnome-mime-application-vnd.sun.x
ml.draw.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.draw.template.png} gnome-mime-application-
vnd.sun.xml.draw.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.impress.png} gnome-mime-application-vnd.su
n.xml.impress.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.impress.template.png} gnome-mime-applicati
on-vnd.sun.xml.impress.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.writer.png} gnome-mime-application-vnd.sun
.xml.writer.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-vnd.sun.xml.writer.template.png} gnome-mime-applicatio
n-vnd.sun.xml.writer.template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-wordperfect.png} gnome-mime-application-wordperfect.pn
g
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-7z-compressed.png} gnome-mime-application-x-7z-compr
essed.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-abiword.png} gnome-mime-application-x-abiword.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-applix-spreadsheet.png} gnome-mime-application-x-app
lix-spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-applix-word.png} gnome-mime-application-x-applix-wor
d.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-archive.png} gnome-mime-application-x-archive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-arj.png} gnome-mime-application-x-arj.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-bzip-compressed-tar.png} gnome-mime-application-x-bz
ip-compressed-tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-bzip.png} gnome-mime-application-x-bzip.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-compress.png} gnome-mime-application-x-compress.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-compressed-tar.png} gnome-mime-application-x-compres
sed-tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-cpio-compressed.png} gnome-mime-application-x-cpio-c
ompressed.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-cpio.png} gnome-mime-application-x-cpio.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-deb.png} gnome-mime-application-x-deb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-dvi.png} gnome-mime-application-x-dvi.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-executable.png} gnome-mime-application-x-executable.
png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-afm.png} gnome-mime-application-x-font-afm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-bdf.png} gnome-mime-application-x-font-bdf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-linux-psf.png} gnome-mime-application-x-font-li
nux-psf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-pcf.png} gnome-mime-application-x-font-pcf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-sunos-news.png} gnome-mime-application-x-font-s
unos-news.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-font-ttf.png} gnome-mime-application-x-font-ttf.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-gnumeric.png} gnome-mime-application-x-gnumeric.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-gzip.png} gnome-mime-application-x-gzip.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-gzpostscript.png} gnome-mime-application-x-gzpostscr
ipt.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-jar.png} gnome-mime-application-x-jar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-killustrator.png} gnome-mime-application-x-killustra
tor.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-kpresenter.png} gnome-mime-application-x-kpresenter.
png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-kspread.png} gnome-mime-application-x-kspread.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-kword.png} gnome-mime-application-x-kword.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-lha.png} gnome-mime-application-x-lha.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-lhz.png} gnome-mime-application-x-lhz.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-ms-dos-executable.png} gnome-mime-application-x-ms-d
os-executable.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-perl.png} gnome-mime-application-x-perl.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-php.png} gnome-mime-application-x-php.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-python-bytecode.png} gnome-mime-application-x-python
-bytecode.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-rar.png} gnome-mime-application-x-rar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-rpm.png} gnome-mime-application-x-rpm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-scribus.png} gnome-mime-application-x-scribus.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-shellscript.png} gnome-mime-application-x-shellscrip
t.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-shockwave-flash.png} gnome-mime-application-x-shockw
ave-flash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-stuffit.png} gnome-mime-application-x-stuffit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-tar.png} gnome-mime-application-x-tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-tarz.png} gnome-mime-application-x-tarz.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-x-tex.png} gnome-mime-application-x-tex.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-xhtml+xml.png} gnome-mime-application-xhtml+xml.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-application-zip.png} gnome-mime-application-zip.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-audio.png} gnome-mime-audio.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-image.png} gnome-mime-image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-html.png} gnome-mime-text-html.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-vnd.wap.wml.png} gnome-mime-text-vnd.wap.wml.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-csh.png} gnome-mime-text-x-csh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-python.png} gnome-mime-text-x-python.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-sh.png} gnome-mime-text-x-sh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-vcalendar.png} gnome-mime-text-x-vcalendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-vcard.png} gnome-mime-text-x-vcard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text-x-zsh.png} gnome-mime-text-x-zsh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-text.png} gnome-mime-text.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-video.png} gnome-mime-video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-mime-x-font-afm.png} gnome-mime-x-font-afm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\gnome-package.png} gnome-package.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\html.png} html.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\image-x-generic.png} image-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\image.png} image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\kpresenter_kpr.png} kpresenter_kpr.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\mime_ascii.png} mime_ascii.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\misc.png} misc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package-x-generic.png} package-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package.png} package.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package_editors.png} package_editors.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\package_wordprocessing.png} package_wordprocessing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\plan.png} plan.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\rpm.png} rpm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\shellscript.png} shellscript.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\sound.png} sound.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\spreadsheet.png} spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_addressbook.png} stock_addressbook.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_calendar.png} stock_calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_certificate.png} stock_certificate.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\stock_script.png} stock_script.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\tar.png} tar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\template_source.png} template_source.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-html.png} text-html.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-x-generic-template.png} text-x-generic-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-x-generic.png} text-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\text-x-script.png} text-x-script.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\tgz.png} tgz.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\txt.png} txt.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\txt2.png} txt2.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\unknown.png} unknown.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\vcalendar.png} vcalendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\vcard.png} vcard.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\video-x-generic.png} video-x-generic.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\video.png} video.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\wordprocessing.png} wordprocessing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\www.png} www.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-address-book.png} x-office-address-book.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-calendar.png} x-office-calendar.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-document-template.png} x-office-document-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-document.png} x-office-document.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-drawing-template.png} x-office-drawing-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-drawing.png} x-office-drawing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-presentation-template.png} x-office-presentation-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-presentation.png} x-office-presentation.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-spreadsheet-template.png} x-office-spreadsheet-template.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\x-office-spreadsheet.png} x-office-spreadsheet.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\mimetypes\\zip.png} zip.png

places
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\application-x-gnome-saved-search.png} application-x-gnome-saved-search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\desktop.png} desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\distributor-logo.png} distributor-logo.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\emptytrash.png} emptytrash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder-remote.png} folder-remote.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder-saved-search.png} folder-saved-search.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder.png} folder.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\folder_home.png} folder_home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-desktop.png} gnome-fs-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-directory.png} gnome-fs-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-ftp.png} gnome-fs-ftp.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-home.png} gnome-fs-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-network.png} gnome-fs-network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-nfs.png} gnome-fs-nfs.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-server.png} gnome-fs-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-share.png} gnome-fs-share.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-smb.png} gnome-fs-smb.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-ssh.png} gnome-fs-ssh.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-fs-trash-empty.png} gnome-fs-trash-empty.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-main-menu.png} gnome-main-menu.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-nfs-server.png} gnome-mime-x-directory-nfs-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-smb-server.png} gnome-mime-x-directory-smb-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-smb-share.png} gnome-mime-x-directory-smb-share.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-mime-x-directory-smb-workgroup.png} gnome-mime-x-directory-smb-workgroup.p
ng
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gnome-stock-trash.png} gnome-stock-trash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gtk-directory.png} gtk-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\gtk-network.png} gtk-network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network-server.png} network-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network-workgroup.png} network-workgroup.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network.png} network.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\network_local.png} network_local.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\novell-button.png} novell-button.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\redhat-network-server.png} redhat-network-server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\server.png} server.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\start-here.png} start-here.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\stock_folder.png} stock_folder.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\trashcan_empty.png} trashcan_empty.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\user-desktop.png} user-desktop.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\user-home.png} user-home.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\user-trash.png} user-trash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\places\\xfce-trash_empty.png} xfce-trash_empty.png

status
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-high.png} audio-volume-high.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-low.png} audio-volume-low.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-medium.png} audio-volume-medium.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\audio-volume-muted.png} audio-volume-muted.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\battery-caution.png} battery-caution.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\connect_creating.png} connect_creating.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\connect_established.png} connect_established.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\connect_no.png} connect_no.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\dialog-error.png} dialog-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\dialog-information.png} dialog-information.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\dialog-warning.png} dialog-warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\edittrash.png} edittrash.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\error.png} error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder-drag-accept.png} folder-drag-accept.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder-open.png} folder-open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder-visiting.png} folder-visiting.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\folder_open.png} folder_open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-dev-wavelan-encrypted.png} gnome-dev-wavelan-encrypted.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-directory-accept.png} gnome-fs-directory-accept.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-directory-visiting.png} gnome-fs-directory-visiting.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-loading-icon.png} gnome-fs-loading-icon.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-fs-trash-full.png} gnome-fs-trash-full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-disconn.png} gnome-netstatus-disconn.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-error.png} gnome-netstatus-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-idle.png} gnome-netstatus-idle.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-rx.png} gnome-netstatus-rx.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-tx.png} gnome-netstatus-tx.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-netstatus-txrx.png} gnome-netstatus-txrx.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gnome-stock-trash-full.png} gnome-stock-trash-full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-dialog-error.png} gtk-dialog-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-dialog-info.png} gtk-dialog-info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-dialog-warning.png} gtk-dialog-warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-directory.png} gtk-directory.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\gtk-missing-image.png} gtk-missing-image.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\image-loading.png} image-loading.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\image-missing.png} image-missing.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\important.png} important.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\info.png} info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\mail-attachment.png} mail-attachment.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\messagebox_critical.png} messagebox_critical.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\messagebox_info.png} messagebox_info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\messagebox_warning.png} messagebox_warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-error.png} network-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-idle.png} network-idle.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-offline.png} network-offline.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-receive.png} network-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-transmit-receive.png} network-transmit-receive.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-transmit.png} network-transmit.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\network-wireless-encrypted.png} network-wireless-encrypted.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-adhoc.png} nm-adhoc.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-device-wired.png} nm-device-wired.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-device-wireless.png} nm-device-wireless.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\nm-no-connection.png} nm-no-connection.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\printer-error.png} printer-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\software-update-available.png} software-update-available.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\software-update-urgent.png} software-update-urgent.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_attach.png} stock_attach.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_dialog-error.png} stock_dialog-error.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_dialog-info.png} stock_dialog-info.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_dialog-warning.png} stock_dialog-warning.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_open.png} stock_open.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_trash_full.png} stock_trash_full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-0.png} stock_volume-0.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-max.png} stock_volume-max.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-med.png} stock_volume-med.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-min.png} stock_volume-min.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume-mute.png} stock_volume-mute.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_volume.png} stock_volume.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-cloudy.png} stock_weather-cloudy.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-few-clouds.png} stock_weather-few-clouds.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-night-clear.png} stock_weather-night-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-night-few-clouds.png} stock_weather-night-few-clouds.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-showers.png} stock_weather-showers.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-snow.png} stock_weather-snow.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-storm.png} stock_weather-storm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\stock_weather-sunny.png} stock_weather-sunny.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\sunny.png} sunny.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\trashcan_full.png} trashcan_full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\user-trash-full.png} user-trash-full.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-clear-night.png} weather-clear-night.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-clear.png} weather-clear.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-few-clouds-night.png} weather-few-clouds-night.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-few-clouds.png} weather-few-clouds.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-overcast.png} weather-overcast.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-severe-alert.png} weather-severe-alert.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-showers-scattered.png} weather-showers-scattered.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-showers.png} weather-showers.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-snow.png} weather-snow.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\weather-storm.png} weather-storm.png
{picture file=C:\\prog\\tigris-cvs\\leo\\Icons\\Tango\\16x16\\status\\xfce-trash_full.png} xfce-trash_full.png

</t>
<t tx="ekr.20071117152614">import sys

at = c.atFileCommands

at.outputFile = sys.stdout
print '0123456789' * 2
at.putBuffered('\ta\n    \tb\nc\n')
print ; print 'done'</t>
<t tx="ekr.20071124153244"># A minimal python server for testing.
# To access this server, type this url in a web browser: http://localhost:8080/
# The server will print the contents of the directory from which it was invoked.
# Choose hello.html to see the 'Hello World' test page.

import CGIHTTPServer
import SocketServer

port = 8080

Handler = CGIHTTPServer.CGIHTTPRequestHandler
s = SocketServer.TCPServer(("", port), Handler)

# def myExecutable(path):
#    return True
# SocketServer.executable = myExecutable

s.server_name = '127.0.0.1' # represents local host.
s.server_port = port

# import os ; print 'cwd', os.getcwd()

print "server.py: serving at port", port
s.serve_forever()
</t>
<t tx="ekr.20071124155034">@language html

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;&lt;/title&gt;

&lt;!-- Used by edward.old.py
&lt;script language="JavaScript" type="text/javascript"&gt;
   var openImg = new Image();
   openImg.src = "open.gif";
   var closedImg = new Image();
   closedImg.src = "closed.gif";

   function showNode(node) {
      var objBranch = 
         document.getElementById(node).style;
      if(objBranch.display=="block")
         objBranch.display="none";
      else
         objBranch.display="block";
   }

   function swapFolder(img) {
      objImg = document.getElementById(img);
      if(objImg.src.indexOf('closed.gif')&gt;-1)
         objImg.src = openImg.src;
      else
         objImg.src = closedImg.src;
   }
&lt;/script&gt;
--&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;form action="cgi-bin/edward.py" method="GET"&gt;
&lt;input type="submit" name="George"&gt;
&lt;/form&gt;

&lt;p&gt;This is the hello world test page.
The server in server.py should be running when using this page.

&lt;p&gt;The button (form) above should cause the server to send a "GET" request
to the edward.py script, which will respond with a new page.

&lt;/body&gt;
&lt;/html&gt;
</t>
<t tx="ekr.20071124160243">@first #! c:\python25\python.exe
@first # -*- coding: utf-8 -*-

# To do: use cgi.FieldStorage.

'''This is the cgi script called from hello.html when the user hits the button.'''

@language python
@tabwidth -4
import leoBridge
import cgi
import cgitb ; cgitb.enable()
&lt;&lt; define dhtml stuff &gt;&gt;
@others

path = r'c:\prog\tigris-cvs\leo\test\test.leo'

b = leoBridge.controller(gui='nullGui',loadPlugins=False,readSettings=False,verbose=False)
g = b.globals()
c = b.openLeoFile(path)
p = c.rootPosition()
# import os; print os.getcwd()

# import pdb ; pdb.Pdb() # Doesn't work.
print_all(c)</t>
<t tx="ekr.20071124195608" lineYOffset="4b002e" icons="5d71002e"># The html has been validated by html-tidy: http://tidy.sourceforge.net/
</t>
<t tx="ekr.20071126145358">@

edward.py:
    
How can we get the content of an input form?</t>
<t tx="ekr.20071127232245">#!/usr/bin/env python
from Tkinter import *
root = Tk()
w = Label(root, text="Hello world!")
w.pack()
root.mainloop()
</t>
<t tx="ekr.20071128122043">log = c.frame.log ; tag = 'Shell'
frame1 = log.frameDict.get(tag)
shellKind = 'text' # in ('plain','text','canvas')

if frame1:
    log.selectTab(tag)
elif shellKind == 'plain':
    log.selectTab (tag,createText=False)
    frame = log.frameDict.get(tag)
elif shellKind == 'text':
    log.selectTab (tag,createText=True)
    frame = log.textDict.get(tag)
elif shellKind == 'canvas':
    log.createCanvas(tag)
    log.selectTab(tag)
    frame = log.canvasDict.get(tag)
else:
    frame = None
    g.es('bad shellKind',shellKind)

if frame and not frame1:
    frame.configure(bg='white')
    print 'logFrame',log.frameDict.get(tag)
</t>
<t tx="ekr.20071129090337">@language perl

# comment.

print "abc"

foreach (keys(%entries)) {

    next if ($_ eq '.snapshot' or
        $_ eq '.' or
        $_ eq '..');
}</t>
<t tx="ekr.20071129103842"># A script to create @auto nodes from all .py files in a directory.

import glob,os

reallyCreate = False
baseDir = r'c:\Python25\Lib\site-packages\pubsub'
dirs = ('',) #'Extensions','UserConfig',)
print '-----'

c.beginUpdate()
try:
    for theDir in dirs:
        pattern = g.os_path_join(baseDir,theDir,'*.py')
        files = glob.glob(pattern)
        print pattern
        # print g.listToString(files)
        for name in files:
            h = '@auto %s' % (name[len(baseDir) + 1:].strip())
            print 'creating',h
            if reallyCreate:
                child = p.insertAsLastChild()
                child.initHeadString(h)
finally:
    c.endUpdate()
</t>
<t tx="ekr.20071201065815">@language python
@tabwidth -4
@others
</t>
<t tx="ekr.20071201073632">
class Index: 
    pass 
 
</t>
<t tx="ekr.20071201073632.1">def main(): 
    pass 
</t>
<t tx="ekr.20071205142535">@

LeoToHTML by Dan Rahmel, modified by EKR.

This @button script creates an .htm file containing the contents of the selected tree.
The file is called x.htm, where x is the name of the .leo file containing the script.
This file is written to the leo/test folder.

The script inserts javascript into the page so that nodes can be expanded and contracted.

The script presently works well.  This script may become the basis for a facebook app.

The generated html passes html-tidy: http://www.w3.org/People/Raggett/tidy/
</t>
<t tx="ekr.20071205144151"># def writePreamble(f):

    # '''Write HTML header information.'''

    # header_start = '''\


# &lt;body class="st" onload="format()"&gt;
# '''

    # for s in (header_start,style,javascript,header_end):
        # # f.write(g.adjustTripleString(s,c.tab_width))
        # f.write(s)
</t>
<t tx="ekr.20071205144151.1">def writeContents(f):

    div = "&lt;div class='c' STYLE='margin-left:4em;margin-top:0em; margin-bottom:0em;'&gt;\n&lt;pre&gt;\n%s\n&lt;/pre&gt;\n&lt;/div&gt;"
    end_div = "&lt;/div&gt;\n&lt;/div&gt;\n"
    n = 1 # The node number
    current = c.currentPosition()
    prev_level = current.level()
    open_divs = 0
    for p in current.self_and_subtree_iter():
        h = p.headString()
        while prev_level &gt;= p.level() and open_divs &gt; 0:
            f.write(end_div)
            prev_level -= 1
            open_divs -= 1
        body = p.bodyString().encode( "utf-8" )
        body = body.rstrip().rstrip("\n")
        f.write(division % (n,escape(h),n))
        open_divs += 1
        if body:
            f.write(div % escape(body))
        prev_level = p.level()
        n += 1

    # Close all divisions.
    while open_divs &gt; 0:
        f.write(end_div)
        open_divs -= 1
</t>
<t tx="ekr.20071205152904">division = """
&lt;div STYLE="margin-left:3em;text-indent:0em;margin-top:0em; margin-bottom:0em;"&gt;
&lt;h3 onClick="expandcontent('sc%d')" style="cursor:hand; cursor:pointer; margin-top:0em; margin-bottom:0em"&gt;+ %s&lt;/h3&gt;
    &lt;div id="sc%d" class="switchcontent" style="margin-top:0em; margin-bottom:0em;"&gt;
"""

javascript  = """
&lt;script src="cgi-bin/leo.js" type="text/javascript"&gt;&lt;/script&gt;
"""

style = '''
&lt;STYLE type="text/css"&gt;
    BODY {font:x-medium 'Verdana'; margin-right:1.5em}
    PRE {margin:0px; display:inline}
&lt;/STYLE&gt;
'''
</t>
<t tx="ekr.20071205160026">def escape (s):

    return s.replace('&amp;','&amp;amp;').replace('&lt;','&amp;lt;').replace('&gt;','&amp;gt;')
</t>
<t tx="ekr.20071206070207"></t>
<t tx="ekr.20071207164625"># def writePostamble (f):

    # pass

</t>
<t tx="ekr.20071210125008"></t>
<t tx="ekr.20071210145720">def print_all(c):

    # This line is required (with extra newline), but does not show on the page.
    print "Content-type:text/html\n"

    print '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt;'
    print '&lt;html&gt;'
    print_head(c)
    print_body(c)
    print '&lt;/html&gt;'
</t>
<t tx="ekr.20071210145720.1">def print_body(c):

    print '&lt;body class="st" onload="format()"&gt;'

    form = cgi.FieldStorage()
    print repr(form)
    # if form.has_key('name'):
        # print 'name',form['name'].value
    # else:
        # print 'no name'
    print_tree(c)
    print '&lt;/body&gt;'
</t>
<t tx="ekr.20071210145720.2">def print_head(c):

    print '&lt;head&gt;'

    if 1: # Copy the entire leo.js file into the page.
        print '&lt;script type="text/javascript"&gt;'
        print_leo_dot_js(c)
        print '&lt;/script&gt;'

    else: # Possible bug in the python server??
        # The Python says leo.js is not executable(!)
        print '&lt;script src="leo.js" type="text/javascript"&gt;&lt;/script&gt;'

    print '&lt;title&gt;%s&lt;/title&gt;' % (c.shortFileName())
    print '&lt;/head&gt;'
</t>
<t tx="ekr.20071210150314.2">division = """
&lt;div STYLE="margin-left:3em;text-indent:0em;margin-top:0em; margin-bottom:0em;"&gt;
&lt;h3 onClick="expandcontent('sc%d')" style="cursor:hand; cursor:pointer; margin-top:0em; margin-bottom:0em"&gt;+ %s&lt;/h3&gt;
    &lt;div id="sc%d" class="switchcontent" style="margin-top:0em; margin-bottom:0em;"&gt;
"""

style = """
&lt;STYLE type="text/css"&gt;
    BODY {font:x-medium 'Verdana'; margin-right:1.5em}
    PRE {margin:0px; display:inline}
&lt;/STYLE&gt;
"""</t>
<t tx="ekr.20071210150314.6">def escape (s):

    return s.replace('&amp;','&amp;amp;').replace('&lt;','&amp;lt;').replace('&gt;','&amp;gt;')
</t>
<t tx="ekr.20071210150314.7">def print_tree(c):

    div = "&lt;div class='c' STYLE='margin-left:4em;margin-top:0em; margin-bottom:0em;'&gt;\n&lt;pre&gt;\n%s\n&lt;/pre&gt;\n&lt;/div&gt;"
    end_div = "&lt;/div&gt;\n&lt;/div&gt;\n"
    n = 1 # The node number
    prev_level = 0
    open_divs = 0
    for p in c.allNodes_iter():
        h = p.headString()
        while prev_level &gt;= p.level() and open_divs &gt; 0:
            print end_div
            prev_level -= 1
            open_divs -= 1
        body = p.bodyString().encode( "utf-8" )
        body = body.rstrip().rstrip("\n")
        print division % (n,escape(h),n)
        open_divs += 1
        if body: print div % escape(body)
        prev_level = p.level()
        n += 1

    # Close all divisions.
    while open_divs &gt; 0:
        print end_div
        open_divs -= 1
</t>
<t tx="ekr.20071210155555">def print_leo_dot_js(c):

    path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','cgi-bin','leo.js'))

    try:
        f = file(path)
    except IOError:
        print 'can not open',path
        return

    for line in f.readlines():
        print line,

    f.close()
</t>
<t tx="ekr.20071210181436">def writeAll(f):

    f.write('&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt;')
    f.write('&lt;html&gt;')
    writeHead(f)
    writeBody(f)
    f.write("&lt;/html&gt;")
</t>
<t tx="ekr.20071210181436.1">def writeBody(f):

    f.write('&lt;body class="st" onload="format()"&gt;')
    writeContents(f)
    f.write("&lt;/body&gt;")
</t>
<t tx="ekr.20071210181436.2">def writeHead(f):

    f.write('&lt;head&gt;')
    f.write(style)
    f.write(javascript)
    f.write('&lt;title&gt;%s&lt;/title&gt;' % c.shortFileName())
    f.write('&lt;/head&gt;')
</t>
<t tx="ekr.20080105115712"># This hangs Leo while pylint is running.
import pylint.lint as lint
import sys

rcFile = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','pylint-leo-rc.txt'))
rcArg = '--rcfile=%s' % rcFile
&lt;&lt; define data &gt;&gt;

# We expect only one W104 error, in leoGlobals.py
print ; print '=' * 40
for name,s in data:
    name2 = g.os_path_abspath(g.os_path_join(g.app.loadDir,name))
    args = [name2,rcArg]
    if s.strip():
        args.append('--disable-msg=%s' % s)
    print name,s
    lint.Run(args)
print ; print 'End of pylint run'</t>
<t tx="ekr.20080105120559">data = (
    ('leoAtFile.py',''), 
    ('leoChapters.py',''),
    ('leoCommands.py',''), 
    ('leoEditCommands.py','E1101'),
    ('leoFileCommands.py',''), 
    ('leoFind.py',''),
    ('leoFrame.py',''),
    ('leoGlobals.py','E0602,E1101'),
    ('leoGui.py',''),
    ('leoImport.py',''),
    ('leoMenu.py',''),
    ('leoNodes.py',''),
    ('leoPlugins.py',''),
    ('leoTangle.py',''),
    ('leoUndo.py','W0102'),
    ('leoTkinterDialog.py',''),
    ('leoTkinterFind.py',''),
    ('leoTkinterGui.py',''),
    ('leoTkinterFrame.py','W0221'),
    ('leoTkinterKeys.py',''), 
    ('leoTkinterMenu.py',''), 
    ('leoTkinterTree.py',''),
)
</t>
<t tx="ekr.20080105130903">@nocolor
@
C0111 Missing docstring
C0301 Line too long
C0311 Bad indentation
C0321 More than one statement on a single line
C0322 Operator not preceded by a space
C0323 Operator not followed by a space
C0324 Comma not followed by a space

R0201 Method could be a function.
R0903 Too few public methods (0/1)

W0102 Dangerous default value [] as argument
W0104 Statement seems to have no effect
W0106 Unnecessary semicolon
W0107 Unnecessary pass statement
W0122 Use of the exec statement
W0141 Used builtin function 'map'
W0142 Used * or * magic*
W0201 Attribute defined outside __init__
W0212 Access to a protected member of a client class
W0231 __init__ method from base class is not called
W0232 Class has no __init__ method
W0401 Wildcard import (pychecker)
W0402 Uses of a deprecated module (like string)
W0404 Reimport &lt;module&gt;: let pychecker do this.
W0406 Module import itself
W0602 Using global for x but no assigment is done (leoEditCommands defines classList after all classes).
W0603 Using the global statement
W0612 Unused variable
W0613 Unused argument (sometimes used for debugging)
W0621 Redefining &lt;name&gt; from outer scope: especially __pychecker__
W0622 Redefining built-in
W0631 Using possibly undefined loop variable
W0702 No exception type specified
W0703 Catch "Exception"
W0704 Except doesn't do anything (Except: pass)
W1111 Assigning to a function call that only returns None</t>
<t tx="ekr.20080108091619" lineYOffset="4b002e" icons="5d71002e"></t>
<t tx="ekr.20080108092210" lineYOffset="4b002e" icons="5d71002e"># Inserts the icon in the presently selected node.
# path is an absolute path or a path relative to the leo/Icons folder.

path = 'rt_arrow_disabled.gif'
c.editCommands.insertIconFromFile(path)</t>
<t tx="ekr.20080108092210.1"># Deletes all icons from the presently selected node.
c.editCommands.deleteNodeIcons()</t>
<t tx="ekr.20080115085447">@nocolor
@

************* Module leoGlobals
W0104:3871: Statement seems to have no effect
</t>
<t tx="ekr.20080118100049">#!/usr/bin/env python
"""/cairo-demo/cairo_snippets/gradient.cairo translated to Python
"""

import math
import cairo

WIDTH, HEIGHT  = 256, 256

surface = cairo.ImageSurface(cairo.FORMAT_ARGB32, WIDTH, HEIGHT)
ctx = cairo.Context(surface)

ctx.scale (WIDTH/1.0, HEIGHT/1.0)

pat = cairo.LinearGradient (0.0, 0.0, 0.0, 1.0)
pat.add_color_stop_rgba (1, 0, 0, 0, 1)
pat.add_color_stop_rgba (0, 1, 1, 1, 1)

ctx.rectangle (0,0,1,1)
ctx.set_source (pat)
ctx.fill ()

pat = cairo.RadialGradient (0.45, 0.4, 0.1,
                            0.4,  0.4, 0.5)
pat.add_color_stop_rgba (0, 1, 1, 1, 1)
pat.add_color_stop_rgba (1, 0, 0, 0, 1)

ctx.set_source (pat)
ctx.arc (0.5, 0.5, 0.3, 0, 2 * math.pi)
ctx.fill ()

surface.write_to_png('gradient.png')

g.es_print('wrote leo/test/gradient.png',color='blue')
</t>
<t tx="ekr.20080127215337">pat1 = 'import leo'
pat2 = 'import leo.core.' # use 'import leo.plugins.' for plugins.
pat3 = 'import leo.core.leo'
replace = False
print '=' * 20

for p in c.allNodes_iter():
    s = p.bodyString() ; h = p.headString()
    lines = g.splitLines(s)
    result = [] ; changed = False
    for line in lines:
        s2 = line.strip()
        if s2.startswith(pat1):
            changed = True
            if s2 == pat1:
                z = line.replace(pat1,pat3)
            else:
                i = line.find(pat1)
                n = i + len(pat1)
                line2 = line[:n] + line[n:n+1].lower() + line[n+1:]
                z = line2.replace(pat1,pat2)
            result.append(z)
            # print ('%35s: %s' % (h,line)),
            print ('%35s: %s' % (h,z)),
        else:
            result.append(line)
    result = ''.join(result)
    if replace and changed:
        c.setBodyString(p,result)
</t>
<t tx="ekr.20080128143841">import sys
# for z in sys.path: print z

from pkg_resources import require
require("ekrProj&gt;=0.0.1")

import ekrProj
print ekrProj</t>
<t tx="ekr.20080206055658">print 'settings...'
for z in ('body','button','headline','log','menu','outline'):
    for z2 in ('family','size','slant','weight',):
        setting = '%s_text_font_%s' % (z,z2)
        print setting,c.config.get(setting,z2)

print 'default sizes...'
for z in ('Body','Log','Menu','Tree'):
    setting = 'default%sFontSize' % z
    print setting,getattr(c.config,setting)

print 'actual fonts...'
for z in ('body','button','headline','log','menu','outline'):
    kind = ('family','size','slant','weight')
    arg0,arg1,arg2,arg3 = args = ['%s_text_font_%s' % (z,z2) for z2 in kind]
    setting = '%s_text_font' % (z)
    print '%20s' % (setting),c.config.getFontFromParams(arg0,arg1,arg2,arg3,defaultSize=12)
</t>
<t tx="ekr.20080210201921">@language pascal
@tabwidth -4
@others
</t>
<t tx="ekr.20080211085709">aList = range(10)

def isEven(x): return (x%2) == 0
def plusOne(x): return x + 1
def larger(x,y): return g.choose(x&gt;y,x,y)
def add(x,y): return x+y

# print filter(isEven,aList)

# print map(plusOne,aList)

print reduce(add,aList)

print [z for z in filter(isEven,aList)]</t>
<t tx="ekr.20080211090819"></t>
<t tx="ekr.20080211172530">unit Unit1;

</t>
<t tx="ekr.20080211172530.1">interface

uses
Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls,
Forms,
Dialogs;

type
TForm1 = class(TForm)
procedure FormCreate(Sender: TObject);
private
{ Private declarations }
public
{ Public declarations }
end;

var
Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
var
x,y: double;
begin
x:= 4;
Y := x/2;
end;

end.
</t>
<t tx="ekr.20080212035042">@language python
@tabwidth -4
@others
</t>
<t tx="ekr.20080212114457"># -*- coding: utf-8 -*-
r"""
changed ekr
&gt;&gt;&gt; import os
&gt;&gt;&gt; from django import newforms as forms
&gt;&gt;&gt; from tagging.forms import TagField
&gt;&gt;&gt; from tagging import settings
&gt;&gt;&gt; from tagging.models import Tag, TaggedItem
&gt;&gt;&gt; from tagging.tests.models import Article, Link, Perch, Parrot, FormTest
&gt;&gt;&gt; from tagging.utils import calculate_cloud, get_tag_list, get_tag, parse_tag_input
&gt;&gt;&gt; from tagging.utils import LINEAR
&gt;&gt;&gt; from tagging.validators import isTagList, isTag

#############
# Utilities #
#############

# Tag input ###################################################################

# Simple space-delimited tags
&gt;&gt;&gt; parse_tag_input('one')
[u'one']
&gt;&gt;&gt; parse_tag_input('one two')
[u'one', u'two']
&gt;&gt;&gt; parse_tag_input('one two three')
[u'one', u'three', u'two']
&gt;&gt;&gt; parse_tag_input('one one two two')
[u'one', u'two']

# Comma-delimited multiple words - an unquoted comma in the input will trigger
# this.
&gt;&gt;&gt; parse_tag_input(',one')
[u'one']
&gt;&gt;&gt; parse_tag_input(',one two')
[u'one two']
&gt;&gt;&gt; parse_tag_input(',one two three')
[u'one two three']
&gt;&gt;&gt; parse_tag_input('a-one, a-two and a-three')
[u'a-one', u'a-two and a-three']

# Double-quoted multiple words - a completed quote will trigger this.
# Unclosed quotes are ignored.
&gt;&gt;&gt; parse_tag_input('"one')
[u'one']
&gt;&gt;&gt; parse_tag_input('"one two')
[u'one', u'two']
&gt;&gt;&gt; parse_tag_input('"one two three')
[u'one', u'three', u'two']
&gt;&gt;&gt; parse_tag_input('"one two"')
[u'one two']
&gt;&gt;&gt; parse_tag_input('a-one "a-two and a-three"')
[u'a-one', u'a-two and a-three']

# No loose commas - split on spaces
&gt;&gt;&gt; parse_tag_input('one two "thr,ee"')
[u'one', u'thr,ee', u'two']

# Loose commas - split on commas
&gt;&gt;&gt; parse_tag_input('"one", two three')
[u'one', u'two three']

# Double quotes can contain commas
&gt;&gt;&gt; parse_tag_input('a-one "a-two, and a-three"')
[u'a-one', u'a-two, and a-three']
&gt;&gt;&gt; parse_tag_input('"two", one, one, two, "one"')
[u'one', u'two']

# Bad users! Naughty users!
&gt;&gt;&gt; parse_tag_input(None)
[]
&gt;&gt;&gt; parse_tag_input('')
[]
&gt;&gt;&gt; parse_tag_input('"')
[]
&gt;&gt;&gt; parse_tag_input('""')
[]
&gt;&gt;&gt; parse_tag_input('"' * 7)
[]
&gt;&gt;&gt; parse_tag_input(',,,,,,')
[]
&gt;&gt;&gt; parse_tag_input('",",",",",",","')
[u',']
&gt;&gt;&gt; parse_tag_input('a-one "a-two" and "a-three')
[u'a-one', u'a-three', u'a-two', u'and']

# Normalised Tag list input ###################################################
&gt;&gt;&gt; cheese = Tag.objects.create(name='cheese')
&gt;&gt;&gt; toast = Tag.objects.create(name='toast')
&gt;&gt;&gt; get_tag_list(cheese)
[&lt;Tag: cheese&gt;]
&gt;&gt;&gt; get_tag_list('cheese toast')
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list('cheese,toast')
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list([])
[]
&gt;&gt;&gt; get_tag_list(['cheese', 'toast'])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list([cheese.id, toast.id])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list(['cheese', 'toast', 'ŠĐĆŽćžšđ'])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list([cheese, toast])
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list((cheese, toast))
(&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;)
&gt;&gt;&gt; get_tag_list(Tag.objects.filter(name__in=['cheese', 'toast']))
[&lt;Tag: cheese&gt;, &lt;Tag: toast&gt;]
&gt;&gt;&gt; get_tag_list(['cheese', toast])
Traceback (most recent call last):
    ...
ValueError: If a list or tuple of tags is provided, they must all be tag names, Tag objects or Tag ids.
&gt;&gt;&gt; get_tag_list(29)
Traceback (most recent call last):
    ...
ValueError: The tag input given was invalid.

# Normalised Tag input
&gt;&gt;&gt; get_tag(cheese)
&lt;Tag: cheese&gt;
&gt;&gt;&gt; get_tag('cheese')
&lt;Tag: cheese&gt;
&gt;&gt;&gt; get_tag(cheese.id)
&lt;Tag: cheese&gt;
&gt;&gt;&gt; get_tag('mouse')

# Tag clouds ##################################################################
&gt;&gt;&gt; tags = []
&gt;&gt;&gt; for line in open(os.path.join(os.path.dirname(__file__), 'tags.txt')).readlines():
...     name, count = line.rstrip().split()
...     tag = Tag(name=name)
...     tag.count = int(count)
...     tags.append(tag)

&gt;&gt;&gt; sizes = {}
&gt;&gt;&gt; for tag in calculate_cloud(tags, steps=5):
...     sizes[tag.font_size] = sizes.get(tag.font_size, 0) + 1

# This isn't a pre-calculated test, just making sure it's consistent
&gt;&gt;&gt; sizes
{1: 48, 2: 30, 3: 19, 4: 15, 5: 10}

&gt;&gt;&gt; sizes = {}
&gt;&gt;&gt; for tag in calculate_cloud(tags, steps=5, distribution=LINEAR):
...     sizes[tag.font_size] = sizes.get(tag.font_size, 0) + 1

# This isn't a pre-calculated test, just making sure it's consistent
&gt;&gt;&gt; sizes
{1: 97, 2: 12, 3: 7, 4: 2, 5: 4}

&gt;&gt;&gt; calculate_cloud(tags, steps=5, distribution='cheese')
Traceback (most recent call last):
    ...
ValueError: Invalid distribution algorithm specified: cheese.

# Validators ##################################################################

&gt;&gt;&gt; isTagList('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbn bar', {})
Traceback (most recent call last):
    ...
ValidationError: [u'Each tag may be no more than 50 characters long.']

&gt;&gt;&gt; isTag('"test"', {})
&gt;&gt;&gt; isTag(',test', {})
&gt;&gt;&gt; isTag('f o o', {})
Traceback (most recent call last):
    ...
ValidationError: [u'Multiple tags were given.']
&gt;&gt;&gt; isTagList('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbn bar', {})
Traceback (most recent call last):
    ...
ValidationError: [u'Each tag may be no more than 50 characters long.']

###########
# Tagging #
###########

# Basic tagging ###############################################################

&gt;&gt;&gt; dead = Parrot.objects.create(state='dead')
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'foo,bar,"ter"')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: foo&gt;, &lt;Tag: ter&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(dead, '"foo" bar "baz"')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'foo')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'zip')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;, &lt;Tag: zip&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, '    ')
Traceback (most recent call last):
    ...
AttributeError: No tags were given: "    ".
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'one two')
Traceback (most recent call last):
    ...
AttributeError: Multiple tags were given: "one two".

# Note that doctest in Python 2.4 (and maybe 2.5?) doesn't support non-ascii
# characters in output, so we're displaying the repr() here.
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'ŠĐĆŽćžšđ')
&gt;&gt;&gt; repr(Tag.objects.get_for_object(dead))
'[&lt;Tag: \xc5\xa0\xc4\x90\xc4\x86\xc5\xbd\xc4\x87\xc5\xbe\xc5\xa1\xc4\x91&gt;]'

&gt;&gt;&gt; Tag.objects.update_tags(dead, None)
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[]

# Using a model's TagField
&gt;&gt;&gt; f1 = FormTest.objects.create(tags=u'test3 test2 test1')
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[&lt;Tag: test1&gt;, &lt;Tag: test2&gt;, &lt;Tag: test3&gt;]
&gt;&gt;&gt; f1.tags = u'test4'
&gt;&gt;&gt; f1.save()
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[&lt;Tag: test4&gt;]
&gt;&gt;&gt; f1.tags = ''
&gt;&gt;&gt; f1.save()
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[]

# Forcing tags to lowercase
&gt;&gt;&gt; settings.FORCE_LOWERCASE_TAGS = True
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'foO bAr Ter')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: foo&gt;, &lt;Tag: ter&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(dead, 'foO bAr baZ')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'FOO')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;]
&gt;&gt;&gt; Tag.objects.add_tag(dead, 'Zip')
&gt;&gt;&gt; Tag.objects.get_for_object(dead)
[&lt;Tag: bar&gt;, &lt;Tag: baz&gt;, &lt;Tag: foo&gt;, &lt;Tag: zip&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(dead, None)
&gt;&gt;&gt; f1.tags = u'TEST5'
&gt;&gt;&gt; f1.save()
&gt;&gt;&gt; Tag.objects.get_for_object(f1)
[&lt;Tag: test5&gt;]
&gt;&gt;&gt; f1.tags
u'test5'

# Retrieving tags by Model ####################################################

&gt;&gt;&gt; Tag.objects.usage_for_model(Parrot)
[]
&gt;&gt;&gt; parrot_details = (
...     ('pining for the fjords', 9, True,  'foo bar'),
...     ('passed on',             6, False, 'bar baz ter'),
...     ('no more',               4, True,  'foo ter'),
...     ('late',                  2, False, 'bar ter'),
... )

&gt;&gt;&gt; for state, perch_size, perch_smelly, tags in parrot_details:
...     perch = Perch.objects.create(size=perch_size, smelly=perch_smelly)
...     parrot = Parrot.objects.create(state=state, perch=perch)
...     Tag.objects.update_tags(parrot, tags)

&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True)]
[(u'bar', 3), (u'baz', 1), (u'foo', 2), (u'ter', 3)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, min_count=2)]
[(u'bar', 3), (u'foo', 2), (u'ter', 3)]

# Limiting results to a subset of the model
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(state='no more'))]
[(u'foo', 1), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(state__startswith='p'))]
[(u'bar', 2), (u'baz', 1), (u'foo', 1), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(perch__size__gt=4))]
[(u'bar', 2), (u'baz', 1), (u'foo', 1), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, counts=True, filters=dict(perch__smelly=True))]
[(u'bar', 1), (u'foo', 2), (u'ter', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.usage_for_model(Parrot, min_count=2, filters=dict(perch__smelly=True))]
[(u'foo', 2)]
&gt;&gt;&gt; [(tag.name, hasattr(tag, 'counts')) for tag in Tag.objects.usage_for_model(Parrot, filters=dict(perch__size__gt=4))]
[(u'bar', False), (u'baz', False), (u'foo', False), (u'ter', False)]
&gt;&gt;&gt; [(tag.name, hasattr(tag, 'counts')) for tag in Tag.objects.usage_for_model(Parrot, filters=dict(perch__size__gt=99))]
[]

# Related tags
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar']), Parrot, counts=True)]
[(u'baz', 1), (u'foo', 1), (u'ter', 2)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar']), Parrot, min_count=2)]
[(u'ter', 2)]
&gt;&gt;&gt; [tag.name for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar']), Parrot, counts=False)]
[u'baz', u'foo', u'ter']
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar', 'ter']), Parrot, counts=True)]
[(u'baz', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(Tag.objects.filter(name__in=['bar', 'ter', 'baz']), Parrot, counts=True)]
[]

# Once again, with feeling (strings)
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model('bar', Parrot, counts=True)]
[(u'baz', 1), (u'foo', 1), (u'ter', 2)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model('bar', Parrot, min_count=2)]
[(u'ter', 2)]
&gt;&gt;&gt; [tag.name for tag in Tag.objects.related_for_model('bar', Parrot, counts=False)]
[u'baz', u'foo', u'ter']
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(['bar', 'ter'], Parrot, counts=True)]
[(u'baz', 1)]
&gt;&gt;&gt; [(tag.name, tag.count) for tag in Tag.objects.related_for_model(['bar', 'ter', 'baz'], Parrot, counts=True)]
[]

# Retrieving tagged objects by Model ##########################################

&gt;&gt;&gt; foo = Tag.objects.get(name='foo')
&gt;&gt;&gt; bar = Tag.objects.get(name='bar')
&gt;&gt;&gt; baz = Tag.objects.get(name='baz')
&gt;&gt;&gt; ter = Tag.objects.get(name='ter')
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, foo)
[&lt;Parrot: no more&gt;, &lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, bar)
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;, &lt;Parrot: pining for the fjords&gt;]

# Intersections are supported
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, [foo, baz])
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, [foo, bar])
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, [bar, ter])
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]

# You can also pass Tag QuerySets
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, Tag.objects.filter(name__in=['foo', 'baz']))
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, Tag.objects.filter(name__in=['foo', 'bar']))
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, Tag.objects.filter(name__in=['bar', 'ter']))
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]

# You can also pass strings and lists of strings
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'foo baz')
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'foo bar')
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'bar ter')
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, ['foo', 'baz'])
[]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, ['foo', 'bar'])
[&lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, ['bar', 'ter'])
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;]

# Issue 50 - Get by non-existent tag
&gt;&gt;&gt; TaggedItem.objects.get_by_model(Parrot, 'argatrons')
[]

# Unions
&gt;&gt;&gt; TaggedItem.objects.get_union_by_model(Parrot, ['foo', 'ter'])
[&lt;Parrot: late&gt;, &lt;Parrot: no more&gt;, &lt;Parrot: passed on&gt;, &lt;Parrot: pining for the fjords&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_union_by_model(Parrot, ['bar', 'baz'])
[&lt;Parrot: late&gt;, &lt;Parrot: passed on&gt;, &lt;Parrot: pining for the fjords&gt;]

# Retrieving related objects by Model #########################################

# Related instances of the same Model
&gt;&gt;&gt; l1 = Link.objects.create(name='link 1')
&gt;&gt;&gt; Tag.objects.update_tags(l1, 'tag1 tag2 tag3 tag4 tag5')
&gt;&gt;&gt; l2 = Link.objects.create(name='link 2')
&gt;&gt;&gt; Tag.objects.update_tags(l2, 'tag1 tag2 tag3')
&gt;&gt;&gt; l3 = Link.objects.create(name='link 3')
&gt;&gt;&gt; Tag.objects.update_tags(l3, 'tag1')
&gt;&gt;&gt; l4 = Link.objects.create(name='link 4')
&gt;&gt;&gt; TaggedItem.objects.get_related(l1, Link)
[&lt;Link: link 2&gt;, &lt;Link: link 3&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_related(l1, Link, num=1)
[&lt;Link: link 2&gt;]
&gt;&gt;&gt; TaggedItem.objects.get_related(l4, Link)
[]

# Related instance of a different Model
&gt;&gt;&gt; a1 = Article.objects.create(name='article 1')
&gt;&gt;&gt; Tag.objects.update_tags(a1, 'tag1 tag2 tag3 tag4')
&gt;&gt;&gt; TaggedItem.objects.get_related(a1, Link)
[&lt;Link: link 1&gt;, &lt;Link: link 2&gt;, &lt;Link: link 3&gt;]
&gt;&gt;&gt; Tag.objects.update_tags(a1, 'tag6')
&gt;&gt;&gt; TaggedItem.objects.get_related(a1, Link)
[]

################
# Model Fields #
################

# TagField ####################################################################

# Ensure that automatically created forms use TagField
&gt;&gt;&gt; class TestForm(forms.ModelForm):
...     class Meta:
...         model = FormTest
&gt;&gt;&gt; form = TestForm()
&gt;&gt;&gt; form.fields['tags'].__class__.__name__
'TagField'

# Recreating string representaions of tag lists ###############################
&gt;&gt;&gt; plain = Tag.objects.create(name='plain')
&gt;&gt;&gt; spaces = Tag.objects.create(name='spa ces')
&gt;&gt;&gt; comma = Tag.objects.create(name='com,ma')

&gt;&gt;&gt; from tagging.utils import edit_string_for_tags
&gt;&gt;&gt; edit_string_for_tags([plain])
u'plain'
&gt;&gt;&gt; edit_string_for_tags([plain, spaces])
u'plain, spa ces'
&gt;&gt;&gt; edit_string_for_tags([plain, spaces, comma])
u'plain, spa ces, "com,ma"'
&gt;&gt;&gt; edit_string_for_tags([plain, comma])
u'plain "com,ma"'
&gt;&gt;&gt; edit_string_for_tags([comma, spaces])
u'"com,ma", spa ces'

###############
# Form Fields #
###############

&gt;&gt;&gt; t = TagField()
&gt;&gt;&gt; t.clean('foo')
u'foo'
&gt;&gt;&gt; t.clean('foo bar baz')
u'foo bar baz'
&gt;&gt;&gt; t.clean('foo,bar,baz')
u'foo,bar,baz'
&gt;&gt;&gt; t.clean('foo, bar, baz')
u'foo, bar, baz'
&gt;&gt;&gt; t.clean('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvb bar')
u'foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvb bar'
&gt;&gt;&gt; t.clean('foo qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbn bar')
Traceback (most recent call last):
    ...
ValidationError: [u'Each tag may be no more than 50 characters long.']
"""
</t>
<t tx="ekr.20080214091706.2">print 'hello from ekr'</t>
<t tx="ekr.20080223084414">def test (s,color='red',*args,**keys):
    g.es(args,keys)

test('s',color='red',newline=False)

test('s',newline=False,color='red')

# This fails, illustrating that we can't reliably mix keyword args with *args.
test('a','b',color='red',newline=False)
</t>
<t tx="ekr.20080229140820">if 0: # passed
    c.k.simulateCommand('about-leo')
elif 0: # passed.
    fileName = r'c:\prog\test\test2.leo'
    c.k.simulateCommand('save-file-as %s' % fileName)
elif 0: # passed
    fileName = r'c:\prog\test\test2.leo'
    c.k.simulateCommand('save-file-to %s' % fileName)
elif 0: # passed
    fileName = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))
    c.k.simulateCommand('open-outline %s' % fileName)
else: # passed
    fileName = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))
    c.k.simulateCommand('open-outline-by-name %s' % fileName)</t>
<t tx="ekr.20080310111916.1">def myTranslateString (s):

    i = s.lower().find('can not')
    if i == -1:
        return s
    else:
        return s[:i+1] + "an't" + s[i+7:]

g.translateString = myTranslateString

</t>
<t tx="ekr.20080310164329.2"></t>
<t tx="ekr.20080310164329.3"></t>
<t tx="ekr.20080310164329.4"></t>
<t tx="ekr.20080310164329.5">&amp;Open...</t>
<t tx="ekr.20080310164329.6"></t>
<t tx="ekr.20080310164329.7"></t>
<t tx="ekr.20080310164329.8">&amp;Close</t>
<t tx="ekr.20080310164329.9">&amp;Save</t>
<t tx="ekr.20080310164329.10">Save &amp;As</t>
<t tx="ekr.20080310164329.11">Save As &amp;Unzipped</t>
<t tx="ekr.20080310164329.12">Save As &amp;Zipped</t>
<t tx="ekr.20080310164329.13">Save &amp;To</t>
<t tx="ekr.20080310164329.14">Re&amp;vert To Saved</t>
<t tx="ekr.20080310164329.15">A placeholder for the actual menu.
Leo's init code populates this menu as a special case.</t>
<t tx="ekr.20080310164329.16"></t>
<t tx="ekr.20080310164329.17"></t>
<t tx="ekr.20080310164329.18"></t>
<t tx="ekr.20080310164329.19"></t>
<t tx="ekr.20080310164329.20"></t>
<t tx="ekr.20080310164329.21"></t>
<t tx="ekr.20080310164329.22"></t>
<t tx="ekr.20080310164329.23"></t>
<t tx="ekr.20080310164329.24"></t>
<t tx="ekr.20080310164329.25"></t>
<t tx="ekr.20080310164329.26"></t>
<t tx="ekr.20080310164329.27"></t>
<t tx="ekr.20080310164329.28">Read @&amp;auto Nodes</t>
<t tx="ekr.20080310164329.29">Write @a&amp;uto Nodes</t>
<t tx="ekr.20080310164329.30">Write D&amp;irty @a&amp;uto Nodes</t>
<t tx="ekr.20080310164329.31"></t>
<t tx="ekr.20080310164329.32">Read @file &amp;Nodes</t>
<t tx="ekr.20080310164329.33">Write &amp;Dirty @file Nodes</t>
<t tx="ekr.20080310164329.34">Write &amp;Missing @file Nodes</t>
<t tx="ekr.20080310164329.35">&amp;Write @file Nodes</t>
<t tx="ekr.20080310164329.36"></t>
<t tx="ekr.20080310164329.37"></t>
<t tx="ekr.20080310164329.38"></t>
<t tx="ekr.20080310164329.39"></t>
<t tx="ekr.20080310164329.40"></t>
<t tx="ekr.20080310164329.41"></t>
<t tx="ekr.20080310164329.42"></t>
<t tx="ekr.20080310164329.43"></t>
<t tx="ekr.20080310164329.44"></t>
<t tx="ekr.20080310164329.45"></t>
<t tx="ekr.20080310164329.46">Import To @&amp;file</t>
<t tx="ekr.20080310164329.47">Import To @&amp;root</t>
<t tx="ekr.20080310164329.48"></t>
<t tx="ekr.20080310164329.49"></t>
<t tx="ekr.20080310164329.50"></t>
<t tx="ekr.20080310164329.51"></t>
<t tx="ekr.20080310164329.52"></t>
<t tx="ekr.20080310164329.53"></t>
<t tx="ekr.20080310164329.54"></t>
<t tx="ekr.20080310164329.55"></t>
<t tx="ekr.20080310164329.56"></t>
<t tx="ekr.20080310164329.57"></t>
<t tx="ekr.20080310164329.58"></t>
<t tx="ekr.20080310164329.59">E&amp;xit</t>
<t tx="ekr.20080310164329.60"></t>
<t tx="ekr.20080310164329.61">Can't Undo</t>
<t tx="ekr.20080310164329.62">Can't Redo</t>
<t tx="ekr.20080310164329.63"></t>
<t tx="ekr.20080310164329.64">Cu&amp;t</t>
<t tx="ekr.20080310164329.65">Cop&amp;y</t>
<t tx="ekr.20080310164329.66">&amp;Paste</t>
<t tx="ekr.20080310164329.67">&amp;Delete</t>
<t tx="ekr.20080310164329.68">Select &amp;All</t>
<t tx="ekr.20080310164329.69"></t>
<t tx="ekr.20080310164329.70"></t>
<t tx="ekr.20080310164329.71"></t>
<t tx="ekr.20080310164329.72"></t>
<t tx="ekr.20080310164329.73"></t>
<t tx="ekr.20080310164329.74"></t>
<t tx="ekr.20080310164329.75"></t>
<t tx="ekr.20080310164329.76"></t>
<t tx="ekr.20080310164329.77"></t>
<t tx="ekr.20080310164329.78"></t>
<t tx="ekr.20080310164329.79"></t>
<t tx="ekr.20080310164329.80"></t>
<t tx="ekr.20080310164329.81"></t>
<t tx="ekr.20080310164329.82"></t>
<t tx="ekr.20080310164329.83"></t>
<t tx="ekr.20080310164329.84"></t>
<t tx="ekr.20080310164329.85"></t>
<t tx="ekr.20080310164329.86"></t>
<t tx="ekr.20080310164329.87"></t>
<t tx="ekr.20080310164329.88"></t>
<t tx="ekr.20080310164329.89"></t>
<t tx="ekr.20080310164329.90"></t>
<t tx="ekr.20080310164329.91"></t>
<t tx="ekr.20080310164329.92"></t>
<t tx="ekr.20080310164329.93"></t>
<t tx="ekr.20080310164329.94"></t>
<t tx="ekr.20080310164329.95"></t>
<t tx="ekr.20080310164329.96"></t>
<t tx="ekr.20080310164329.97"></t>
<t tx="ekr.20080310164329.98"></t>
<t tx="ekr.20080310164329.99"></t>
<t tx="ekr.20080310164329.100"></t>
<t tx="ekr.20080310164329.101"></t>
<t tx="ekr.20080310164329.102"></t>
<t tx="ekr.20080310164329.103"></t>
<t tx="ekr.20080310164329.104"></t>
<t tx="ekr.20080310164329.105"></t>
<t tx="ekr.20080310164329.106"></t>
<t tx="ekr.20080310164329.107"></t>
<t tx="ekr.20080310164329.108"></t>
<t tx="ekr.20080310164329.109"></t>
<t tx="ekr.20080310164329.110"></t>
<t tx="ekr.20080310164329.111"></t>
<t tx="ekr.20080310164329.112"></t>
<t tx="ekr.20080310164329.113"></t>
<t tx="ekr.20080310164329.114"></t>
<t tx="ekr.20080310164329.115"></t>
<t tx="ekr.20080310164329.116"></t>
<t tx="ekr.20080310164329.117"></t>
<t tx="ekr.20080310164329.118"></t>
<t tx="ekr.20080310164329.119">Show In&amp;visibles</t>
<t tx="ekr.20080310164329.120">Setti&amp;ngs</t>
<t tx="ekr.20080310164329.121"></t>
<t tx="ekr.20080310164329.122"></t>
<t tx="ekr.20080310164329.123"></t>
<t tx="ekr.20080310164329.124"></t>
<t tx="ekr.20080310164329.125">Pas&amp;te Node As Clone</t>
<t tx="ekr.20080310164329.126"></t>
<t tx="ekr.20080310164329.127"></t>
<t tx="ekr.20080310164329.128"></t>
<t tx="ekr.20080310164329.129"></t>
<t tx="ekr.20080310164329.130"></t>
<t tx="ekr.20080310164329.131"></t>
<t tx="ekr.20080310164329.132"></t>
<t tx="ekr.20080310164329.133"></t>
<t tx="ekr.20080310164329.134"></t>
<t tx="ekr.20080310164329.135">D&amp;e-Hoist</t>
<t tx="ekr.20080310164329.136"></t>
<t tx="ekr.20080310164329.137"></t>
<t tx="ekr.20080310164329.138"></t>
<t tx="ekr.20080310164329.139"></t>
<t tx="ekr.20080310164329.140"></t>
<t tx="ekr.20080310164329.141"></t>
<t tx="ekr.20080310164329.142"></t>
<t tx="ekr.20080310164329.143"></t>
<t tx="ekr.20080310164329.144"></t>
<t tx="ekr.20080310164329.145"></t>
<t tx="ekr.20080310164329.146"></t>
<t tx="ekr.20080310164329.147"></t>
<t tx="ekr.20080310164329.148"></t>
<t tx="ekr.20080310164329.149"></t>
<t tx="ekr.20080310164329.150"></t>
<t tx="ekr.20080310164329.151"></t>
<t tx="ekr.20080310164329.152"></t>
<t tx="ekr.20080310164329.153"></t>
<t tx="ekr.20080310164329.154"></t>
<t tx="ekr.20080310164329.155"></t>
<t tx="ekr.20080310164329.156"></t>
<t tx="ekr.20080310164329.157"></t>
<t tx="ekr.20080310164329.158"></t>
<t tx="ekr.20080310164329.159"></t>
<t tx="ekr.20080310164329.160"></t>
<t tx="ekr.20080310164329.161"></t>
<t tx="ekr.20080310164329.162"></t>
<t tx="ekr.20080310164329.163"></t>
<t tx="ekr.20080310164329.164"></t>
<t tx="ekr.20080310164329.165"></t>
<t tx="ekr.20080310164329.166">Move &amp;Down</t>
<t tx="ekr.20080310164329.167">Move &amp;Left</t>
<t tx="ekr.20080310164329.168">Move &amp;Right</t>
<t tx="ekr.20080310164329.169">Move &amp;Up</t>
<t tx="ekr.20080310164329.170"></t>
<t tx="ekr.20080310164329.171"></t>
<t tx="ekr.20080310164329.172"></t>
<t tx="ekr.20080310164329.173"></t>
<t tx="ekr.20080310164329.174"></t>
<t tx="ekr.20080310164329.175"></t>
<t tx="ekr.20080310164329.176"></t>
<t tx="ekr.20080310164329.177"></t>
<t tx="ekr.20080310164329.178"></t>
<t tx="ekr.20080310164329.179"></t>
<t tx="ekr.20080310164329.180"></t>
<t tx="ekr.20080310164329.181"></t>
<t tx="ekr.20080310164329.182">Go To &amp;First Node</t>
<t tx="ekr.20080310164329.183">Go To First V&amp;isible</t>
<t tx="ekr.20080310164329.184">Go To First Si&amp;bling</t>
<t tx="ekr.20080310164329.185"></t>
<t tx="ekr.20080310164329.186">Go To Next C&amp;hanged</t>
<t tx="ekr.20080310164329.187">Go To Next &amp;Clone</t>
<t tx="ekr.20080310164329.188">Go To Next &amp;Marked</t>
<t tx="ekr.20080310164329.189">Go To Next N&amp;ode</t>
<t tx="ekr.20080310164329.190">Go To Next &amp;Sibling</t>
<t tx="ekr.20080310164329.191">Go To Next Visibl&amp;e</t>
<t tx="ekr.20080310164329.192">Go To Next Visite&amp;d</t>
<t tx="ekr.20080310164329.193"></t>
<t tx="ekr.20080310164329.194">Go To P&amp;arent</t>
<t tx="ekr.20080310164329.195"></t>
<t tx="ekr.20080310164329.196">Go To &amp;Prev Node</t>
<t tx="ekr.20080310164329.197">Go To P&amp;rev Sibling</t>
<t tx="ekr.20080310164329.198">Go To Pre&amp;v Visible</t>
<t tx="ekr.20080310164329.199">Go To Prev Visi&amp;ted</t>
<t tx="ekr.20080310164329.200"></t>
<t tx="ekr.20080310164329.201">Go To Last Node</t>
<t tx="ekr.20080310164329.202">Go To Last Siblin&amp;g</t>
<t tx="ekr.20080310164329.203">Go To &amp;Last Visible</t>
<t tx="ekr.20080310164329.204"></t>
<t tx="ekr.20080310164329.205"></t>
<t tx="ekr.20080310164329.206"></t>
<t tx="ekr.20080310164329.207"></t>
<t tx="ekr.20080310164329.208"></t>
<t tx="ekr.20080310164329.209"></t>
<t tx="ekr.20080310164329.210"></t>
<t tx="ekr.20080310164329.211"></t>
<t tx="ekr.20080310164329.212"></t>
<t tx="ekr.20080310164329.213"></t>
<t tx="ekr.20080310164329.214"></t>
<t tx="ekr.20080310164329.215"></t>
<t tx="ekr.20080310164329.216"></t>
<t tx="ekr.20080310164329.217"></t>
<t tx="ekr.20080310164329.218"></t>
<t tx="ekr.20080310164329.219"></t>
<t tx="ekr.20080310164329.220"></t>
<t tx="ekr.20080310164329.221"></t>
<t tx="ekr.20080310164329.222"></t>
<t tx="ekr.20080310164329.223"></t>
<t tx="ekr.20080310164329.224"></t>
<t tx="ekr.20080310164329.225"></t>
<t tx="ekr.20080310164329.226"></t>
<t tx="ekr.20080310164329.227"></t>
<t tx="ekr.20080310164329.228"></t>
<t tx="ekr.20080310164329.229"></t>
<t tx="ekr.20080310164329.230"></t>
<t tx="ekr.20080310164329.231"></t>
<t tx="ekr.20080310164329.232"></t>
<t tx="ekr.20080310164329.233"></t>
<t tx="ekr.20080310164329.234"></t>
<t tx="ekr.20080310164329.235"></t>
<t tx="ekr.20080310164329.236"></t>
<t tx="ekr.20080310164329.237"></t>
<t tx="ekr.20080310164329.238"></t>
<t tx="ekr.20080310164329.239"></t>
<t tx="ekr.20080310164329.240"></t>
<t tx="ekr.20080310164329.241"></t>
<t tx="ekr.20080310164329.242"></t>
<t tx="ekr.20080310164329.243"></t>
<t tx="ekr.20080310164329.244"></t>
<t tx="ekr.20080310164329.245"></t>
<t tx="ekr.20080310164329.246"></t>
<t tx="ekr.20080310164329.247"></t>
<t tx="ekr.20080310164329.248"></t>
<t tx="ekr.20080310164329.249"></t>
<t tx="ekr.20080310164329.250"></t>
<t tx="ekr.20080310164329.251"></t>
<t tx="ekr.20080310164329.252"></t>
<t tx="ekr.20080310164329.253"></t>
<t tx="ekr.20080310164329.254"></t>
<t tx="ekr.20080310164329.255"></t>
<t tx="ekr.20080310164329.256"></t>
<t tx="ekr.20080310164329.257"></t>
<t tx="ekr.20080310164329.258"></t>
<t tx="ekr.20080310164329.259"></t>
<t tx="ekr.20080310164329.260"></t>
<t tx="ekr.20080310164329.261"></t>
<t tx="ekr.20080310164329.262"></t>
<t tx="ekr.20080310164329.263"></t>
<t tx="ekr.20080310164329.264"></t>
<t tx="ekr.20080310164329.265"></t>
<t tx="ekr.20080310164329.266"></t>
<t tx="ekr.20080310164329.267"></t>
<t tx="ekr.20080310164329.268"></t>
<t tx="ekr.20080310164329.269"></t>
<t tx="ekr.20080310164329.270"></t>
<t tx="ekr.20080310164329.271"></t>
<t tx="ekr.20080310164329.272"></t>
<t tx="ekr.20080310164329.273"></t>
<t tx="ekr.20080310164329.274"></t>
<t tx="ekr.20080310164329.275"></t>
<t tx="ekr.20080310164329.276"></t>
<t tx="ekr.20080310164329.277"></t>
<t tx="ekr.20080310164329.278"></t>
<t tx="ekr.20080310164329.279"></t>
<t tx="ekr.20080310164329.280"></t>
<t tx="ekr.20080310164329.281"></t>
<t tx="ekr.20080310164329.282"></t>
<t tx="ekr.20080310164329.283"></t>
<t tx="ekr.20080310164329.284"></t>
<t tx="ekr.20080310164329.285"></t>
<t tx="ekr.20080310164329.286"></t>
<t tx="ekr.20080310164329.287"></t>
<t tx="ekr.20080310164329.288"></t>
<t tx="ekr.20080310164329.289"></t>
<t tx="ekr.20080310164329.290"></t>
<t tx="ekr.20080310164329.291"></t>
<t tx="ekr.20080310164329.292"></t>
<t tx="ekr.20080310164329.293"></t>
<t tx="ekr.20080310164329.294"></t>
<t tx="ekr.20080310164329.295"></t>
<t tx="ekr.20080310164329.296"></t>
<t tx="ekr.20080310164329.297"></t>
<t tx="ekr.20080310164329.298"></t>
<t tx="ekr.20080310164329.299"></t>
<t tx="ekr.20080310164329.300"></t>
<t tx="ekr.20080310164329.301"></t>
<t tx="ekr.20080310164329.302"></t>
<t tx="ekr.20080310164329.303"></t>
<t tx="ekr.20080310164329.304"></t>
<t tx="ekr.20080310164329.305"></t>
<t tx="ekr.20080310164329.306"></t>
<t tx="ekr.20080310164329.307"></t>
<t tx="ekr.20080310164329.308"></t>
<t tx="ekr.20080310164329.309"></t>
<t tx="ekr.20080310164329.310"></t>
<t tx="ekr.20080310164329.311"></t>
<t tx="ekr.20080310164329.312"></t>
<t tx="ekr.20080310164329.313"></t>
<t tx="ekr.20080310164329.314"></t>
<t tx="ekr.20080310164329.315"></t>
<t tx="ekr.20080310164329.316"></t>
<t tx="ekr.20080310164329.317"></t>
<t tx="ekr.20080310164329.318"></t>
<t tx="ekr.20080310164329.319"></t>
<t tx="ekr.20080310164329.320"></t>
<t tx="ekr.20080310164329.321"></t>
<t tx="ekr.20080310164329.322"></t>
<t tx="ekr.20080310164329.323"></t>
<t tx="ekr.20080310164329.324"></t>
<t tx="ekr.20080310164329.325"></t>
<t tx="ekr.20080310164329.326"></t>
<t tx="ekr.20080310164329.327"></t>
<t tx="ekr.20080310164329.328"></t>
<t tx="ekr.20080310164329.329"></t>
<t tx="ekr.20080310164329.330"></t>
<t tx="ekr.20080310164329.331"></t>
<t tx="ekr.20080310164329.332"></t>
<t tx="ekr.20080310164329.333"></t>
<t tx="ekr.20080310164329.334"></t>
<t tx="ekr.20080310164329.335"></t>
<t tx="ekr.20080310164329.336"></t>
<t tx="ekr.20080310164329.337"></t>
<t tx="ekr.20080310164329.338"></t>
<t tx="ekr.20080310164329.339"></t>
<t tx="ekr.20080310164329.340"></t>
<t tx="ekr.20080310164329.341"></t>
<t tx="ekr.20080310164329.342"></t>
<t tx="ekr.20080310164329.343"></t>
<t tx="ekr.20080310164329.344"></t>
<t tx="ekr.20080310164329.345"></t>
<t tx="ekr.20080310164329.346"></t>
<t tx="ekr.20080310164329.347"></t>
<t tx="ekr.20080310164329.348"></t>
<t tx="ekr.20080310164329.349"></t>
<t tx="ekr.20080310164329.350"></t>
<t tx="ekr.20080310164329.351"></t>
<t tx="ekr.20080310164329.352"></t>
<t tx="ekr.20080310164329.353"></t>
<t tx="ekr.20080310164329.354"></t>
<t tx="ekr.20080310164329.355"></t>
<t tx="ekr.20080310164329.356"></t>
<t tx="ekr.20080310164329.357"></t>
<t tx="ekr.20080310164329.358"></t>
<t tx="ekr.20080310164329.359"></t>
<t tx="ekr.20080310164329.360"></t>
<t tx="ekr.20080310164329.361"></t>
<t tx="ekr.20080310164329.362"></t>
<t tx="ekr.20080310164329.363"></t>
<t tx="ekr.20080310164329.364"></t>
<t tx="ekr.20080310164329.365"></t>
<t tx="ekr.20080310164329.366"></t>
<t tx="ekr.20080310164329.367"></t>
<t tx="ekr.20080310164329.368"></t>
<t tx="ekr.20080310164329.369"></t>
<t tx="ekr.20080310164329.370"></t>
<t tx="ekr.20080310164329.371"></t>
<t tx="ekr.20080310164329.372"></t>
<t tx="ekr.20080310164329.373"></t>
<t tx="ekr.20080310164329.374"></t>
<t tx="ekr.20080310164329.375"></t>
<t tx="ekr.20080310164329.376"></t>
<t tx="ekr.20080310164329.377"></t>
<t tx="ekr.20080310164329.378"></t>
<t tx="ekr.20080310164329.379"></t>
<t tx="ekr.20080310164329.380"></t>
<t tx="ekr.20080310164329.381"></t>
<t tx="ekr.20080310164329.382"># accel: a,b,c,d,e,f,h,i,m,p,r,s,t,u,v,w,x</t>
<t tx="ekr.20080310164329.383"></t>
<t tx="ekr.20080310164329.384"></t>
<t tx="ekr.20080310164329.385"></t>
<t tx="ekr.20080310164329.386"></t>
<t tx="ekr.20080310164329.387"></t>
<t tx="ekr.20080310164329.388"></t>
<t tx="ekr.20080310164329.389"></t>
<t tx="ekr.20080310164329.390"></t>
<t tx="ekr.20080310164329.391"></t>
<t tx="ekr.20080310164329.392"></t>
<t tx="ekr.20080310164329.393"></t>
<t tx="ekr.20080310164329.394"></t>
<t tx="ekr.20080310164329.395"></t>
<t tx="ekr.20080310164329.396"></t>
<t tx="ekr.20080310164329.397"></t>
<t tx="ekr.20080310164329.398"></t>
<t tx="ekr.20080310164329.399"></t>
<t tx="ekr.20080310164329.400"></t>
<t tx="ekr.20080310164329.401"></t>
<t tx="ekr.20080310164329.402"></t>
<t tx="ekr.20080310164329.403"></t>
<t tx="ekr.20080310164329.404"></t>
<t tx="ekr.20080310164329.405"></t>
<t tx="ekr.20080310164329.406"></t>
<t tx="ekr.20080310164329.407"></t>
<t tx="ekr.20080310164329.408"></t>
<t tx="ekr.20080310164329.409"></t>
<t tx="ekr.20080310164329.410"></t>
<t tx="ekr.20080310164329.411"></t>
<t tx="ekr.20080310164329.412"></t>
<t tx="ekr.20080310164329.413"></t>
<t tx="ekr.20080310164329.414"></t>
<t tx="ekr.20080310164329.415"></t>
<t tx="ekr.20080310164329.416"></t>
<t tx="ekr.20080310164329.417"></t>
<t tx="ekr.20080310164329.418"></t>
<t tx="ekr.20080310164329.419"></t>
<t tx="ekr.20080310164329.420"></t>
<t tx="ekr.20080310164329.421"></t>
<t tx="ekr.20080310164329.422"></t>
<t tx="ekr.20080310164329.423"></t>
<t tx="ekr.20080310164329.424"></t>
<t tx="ekr.20080310164329.425"></t>
<t tx="ekr.20080310164329.426"></t>
<t tx="ekr.20080310164329.427"></t>
<t tx="ekr.20080310164329.428"></t>
<t tx="ekr.20080310164329.429"></t>
<t tx="ekr.20080310164329.430"></t>
<t tx="ekr.20080310164329.431"></t>
<t tx="ekr.20080310164329.432"></t>
<t tx="ekr.20080310164329.433"></t>
<t tx="ekr.20080310164329.434"></t>
<t tx="ekr.20080310164329.435"></t>
<t tx="ekr.20080310164329.436"></t>
<t tx="ekr.20080310164329.437"></t>
<t tx="ekr.20080310164329.438"></t>
<t tx="ekr.20080310164329.439"></t>
<t tx="ekr.20080310164329.440"></t>
<t tx="ekr.20080310164329.441">&amp;About Leo...</t>
<t tx="ekr.20080310164329.442">Online &amp;Home Page</t>
<t tx="ekr.20080310164329.443"></t>
<t tx="ekr.20080310164329.444"></t>
<t tx="ekr.20080310164329.445"></t>
<t tx="ekr.20080310164329.446">Open Leo&amp;Docs.leo</t>
<t tx="ekr.20080310164329.447">Open Leo&amp;Plugins.leo</t>
<t tx="ekr.20080310164329.448">Open Leo&amp;Settings.leo</t>
<t tx="ekr.20080310164329.449">Open &amp;myLeoSettings.leo</t>
<t tx="ekr.20080310164329.450">Open scr&amp;ipts.leo</t>
<t tx="ekr.20080310164329.451"></t>
<t tx="ekr.20080310164329.452"></t>
<t tx="ekr.20080310164329.453"></t>
<t tx="ekr.20080310164329.454"></t>
<t tx="ekr.20080310164329.455"></t>
<t tx="ekr.20080310164329.456"></t>
<t tx="ekr.20080310164329.457"></t>
<t tx="ekr.20080310164329.458"></t>
<t tx="ekr.20080310164329.459"></t>
<t tx="ekr.20080310164329.460"></t>
<t tx="ekr.20080310164329.461"></t>
<t tx="ekr.20080310164329.465"></t>
<t tx="ekr.20080310164329.466"></t>
<t tx="ekr.20080310164329.467"></t>
<t tx="ekr.20080310164713.2"></t>
<t tx="mcrowe.20060823083143.7">@first # -*- coding: utf-8 -*-
@language python
@tabwidth -4

&lt;&lt; about LeoToHTML &gt;&gt;
import leoGlobals as g
&lt;&lt; define dhtml stuff &gt;&gt;
@others

fileName = c.frame.shortFileName() # Get current outline file name
if fileName.endswith('.leo'): fileName = fileName[:-4] # Remove .leo suffix
path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test',fileName)) + '.htm'

# Write the file.
f=open(path, 'w')
writeAll(f)
f.close() 
g.es('wrote: %s' % (path),color="turquoise4") 
</t>
</tnodes>
</leo_file>
