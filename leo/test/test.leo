<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet ekr_test?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5">
	<global_window_position top="74" left="372" height="800" width="898"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20070416075121" a="E" str_leo_pos="0,2"><vh>Startup</vh>
<v t="ekr.20070529172620"><vh>@chapters</vh>
<v t="ekr.20070529173219"><vh>@chapter abc</vh>
<v t="ekr.20070529173219.1"><vh>abc node 1</vh></v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
</v>
<v t="ekr.20070603190944"><vh>@chapter xyz</vh>
<v t="ekr.20070603190944.1"><vh>xyz node 1</vh></v>
<v t="ekr.20071206070207"><vh>cross-chapter-clone-test</vh></v>
</v>
</v>
<v t="ekr.20070224123943"><vh>@settings</vh>
<v t="ekr.20070701090143"><vh>@@bool force_newlines_in_at_nosent_bodies = False</vh></v>
<v t="ekr.20070504080933"><vh>@bool create_nonexistent_directories = True</vh></v>
<v t="ekr.20080412082246.1"><vh>@bool fixedWindow = False</vh></v>
<v t="ekr.20070604100125"><vh>@bool use_chapter_tabs = True</vh></v>
<v t="ekr.20070503085527"><vh>@bool use_chapters = True</vh></v>
<v t="ekr.20071025193940"><vh>@enabled-plugins</vh></v>
<v t="ekr.20080529111617.1"><vh>plugins</vh>
<v t="ekr.20070723091227"><vh>http plugin</vh>
<v t="ekr.20070723091227.1"><vh>@bool http_active = True</vh></v>
<v t="ekr.20070723091227.2"><vh>@int  port = 8080</vh></v>
<v t="ekr.20070723091227.3"><vh>@string rst_http_attributename = 'rst_http_attribute'</vh></v>
</v>
<v t="ekr.20070305085403"><vh>vim plugin</vh>
<v t="ekr.20070305085403.1"><vh>@string vim_cmd = c:\vim\vim63\gvim --servername LEO</vh></v>
<v t="ekr.20070305085403.2"><vh>@string vim_exe = c:\vim\vim63\gvim</vh></v>
</v>
<v t="ekr.20080529111617.2"><vh>cleo</vh>
<v t="ekr.20080529111617.3"><vh>@color cleo_color_prog_green =</vh></v>
<v t="ekr.20080529111617.4"><vh>@color cleo_color_prog_red =</vh></v>
<v t="ekr.20080529111617.5"><vh>@data cleo_color_file_node_list</vh></v>
<v t="ekr.20080529111617.6"><vh>@int cleo_prog_width = 18</vh></v>
<v t="ekr.20080529111617.7"><vh>@float cleo_time_init = 1.0</vh></v>
<v t="ekr.20080529111617.8"><vh>@int cleo_prog_scale = 1</vh></v>
<v t="ekr.20080529111617.9"><vh>@float cleo_prog_extra = 4</vh></v>
<v t="ekr.20080529111617.10"><vh>@string cleo_time_name = 'days'</vh></v>
</v>
</v>
</v>
<v t="ekr.20080603071026.1"><vh>@menus</vh>
<v t="ekr.20080603071026.2"><vh>@menu &amp;File</vh>
<v t="ekr.20080603071026.3"><vh>@item *&amp;new</vh></v>
<v t="ekr.20080603071026.4"><vh>@item open-outline</vh></v>
<v t="ekr.20080603071026.5"><vh>@menu Open &amp;With...</vh></v>
<v t="ekr.20080603071026.6"><vh>@item -</vh></v>
<v t="ekr.20080603071026.7"><vh>@item close-window</vh></v>
<v t="ekr.20080603071026.8"><vh>@item save-file</vh></v>
<v t="ekr.20080603071026.9"><vh>@item save-file-as</vh></v>
<v t="ekr.20080603071026.10"><vh>@item save-file-as-unzipped</vh></v>
<v t="ekr.20080603071026.11"><vh>@item save-file-as-zipped</vh></v>
<v t="ekr.20080603071026.12"><vh>@item save-file-to</vh></v>
<v t="ekr.20080603071026.13"><vh>@item revert</vh></v>
<v t="ekr.20080603071026.14"><vh>@menu Recent &amp;Files</vh></v>
<v t="ekr.20080603071026.15"><vh>@item -</vh></v>
<v t="ekr.20080603071026.16"><vh>@menu &amp;Read/Write...</vh>
<v t="ekr.20080603071026.17"><vh>@item *&amp;check-derived-file</vh></v>
<v t="ekr.20080603071026.18"><vh>@item *check-le&amp;o-file</vh></v>
<v t="ekr.20080603071026.19"><vh>@item *compare-leo-file&amp;s</vh></v>
<v t="ekr.20080603071026.20"><vh>@item -</vh></v>
<v t="ekr.20080603071026.21"><vh>@item *&amp;read-outline-only</vh></v>
<v t="ekr.20080603071026.22"><vh>@item *write-&amp;outline-only</vh></v>
<v t="ekr.20080603071026.23"><vh>@item -</vh></v>
<v t="ekr.20080603071026.24"><vh>@item *read-&amp;file-into-node</vh></v>
<v t="ekr.20080603071026.25"><vh>@item *writ&amp;e-file-from-node</vh></v>
<v t="ekr.20080603071026.26"><vh>@item -</vh></v>
<v t="ekr.20080603071026.27"><vh>@item read-at-auto-nodes</vh></v>
<v t="ekr.20080603071026.28"><vh>@item write-at-auto-nodes</vh></v>
<v t="ekr.20080603071026.29"><vh>@item write-dirty-at-auto-nodes</vh></v>
<v t="ekr.20080603071026.30"><vh>@item -</vh></v>
<v t="ekr.20080603071026.31"><vh>@item read-at-file-nodes</vh></v>
<v t="ekr.20080603071026.32"><vh>@item write-dirty-at-file-nodes</vh></v>
<v t="ekr.20080603071026.33"><vh>@item write-missing-at-file-nodes</vh></v>
<v t="ekr.20080603071026.34"><vh>@item write-at-file-nodes</vh></v>
</v>
<v t="ekr.20080603071026.35"><vh>@menu Tan&amp;gle...</vh>
<v t="ekr.20080603071026.36"><vh>@item *tangle-&amp;all</vh></v>
<v t="ekr.20080603071026.37"><vh>@item *tangle-&amp;marked</vh></v>
<v t="ekr.20080603071026.38"><vh>@item *&amp;tangle</vh></v>
</v>
<v t="ekr.20080603071026.39"><vh>@menu &amp;Untangle...</vh>
<v t="ekr.20080603071026.40"><vh>@item *untangle-&amp;all</vh></v>
<v t="ekr.20080603071026.41"><vh>@item *untangle-&amp;marked</vh></v>
<v t="ekr.20080603071026.42"><vh>@item *&amp;untangle</vh></v>
</v>
<v t="ekr.20080603071026.43"><vh>@menu &amp;Import...</vh>
<v t="ekr.20080603071026.44"><vh>@item *import-&amp;derived-file</vh></v>
<v t="ekr.20080603071026.45"><vh>@item import-at-file</vh></v>
<v t="ekr.20080603071026.46"><vh>@item import-at-root</vh></v>
<v t="ekr.20080603071026.47"><vh>@item *import-&amp;cweb-files</vh></v>
<v t="ekr.20080603071026.48"><vh>@item *import-&amp;noweb-files</vh></v>
<v t="ekr.20080603071026.49"><vh>@item *import-flattened-&amp;outline</vh></v>
</v>
<v t="ekr.20080603071026.50"><vh>@menu &amp;Export...</vh>
<v t="ekr.20080603071026.51"><vh>@item *export-&amp;headlines</vh></v>
<v t="ekr.20080603071026.52"><vh>@item *outline-to-&amp;cweb</vh></v>
<v t="ekr.20080603071026.53"><vh>@item *outline-to-&amp;noweb</vh></v>
<v t="ekr.20080603071026.54"><vh>@item *&amp;flatten-outline</vh></v>
<v t="ekr.20080603071026.55"><vh>@item *&amp;remove-sentinels</vh></v>
<v t="ekr.20080603071026.56"><vh>@item *&amp;weave</vh></v>
</v>
<v t="ekr.20080603071026.57"><vh>@item -</vh></v>
<v t="ekr.20080603071026.58"><vh>@item exit-leo</vh></v>
</v>
<v t="ekr.20080603071026.59"><vh>@menu &amp;Edit</vh>
<v t="ekr.20080603071026.60"><vh>@item undo</vh></v>
<v t="ekr.20080603071026.61"><vh>@item redo</vh></v>
<v t="ekr.20080603071026.62"><vh>@item -</vh></v>
<v t="ekr.20080603071026.63"><vh>@item cut-text</vh></v>
<v t="ekr.20080603071026.64"><vh>@item copy-text</vh></v>
<v t="ekr.20080603071026.65"><vh>@item paste-text</vh></v>
<v t="ekr.20080603071026.66"><vh>@item backward-delete-char</vh></v>
<v t="ekr.20080603071026.67"><vh>@item select-all</vh></v>
<v t="ekr.20080603071026.68"><vh>@item -</vh></v>
<v t="ekr.20080603071026.69"><vh>@menu Edit &amp;Body...</vh>
<v t="ekr.20080603071026.70"><vh>@item *extract-&amp;section</vh></v>
<v t="ekr.20080603071026.71"><vh>@item *extract-&amp;names</vh></v>
<v t="ekr.20080603071026.72"><vh>@item *&amp;extract</vh></v>
<v t="ekr.20080603071026.73"><vh>@item -</vh></v>
<v t="ekr.20080603071026.74"><vh>@item *convert-all-b&amp;lanks</vh></v>
<v t="ekr.20080603071026.75"><vh>@item *convert-all-t&amp;abs</vh></v>
<v t="ekr.20080603071026.76"><vh>@item *convert-&amp;blanks</vh></v>
<v t="ekr.20080603071026.77"><vh>@item *convert-&amp;tabs</vh></v>
<v t="ekr.20080603071026.78"><vh>@item *insert-body-&amp;time</vh></v>
<v t="ekr.20080603071026.79"><vh>@item *&amp;reformat-paragraph</vh></v>
<v t="ekr.20080603071026.80"><vh>@item -</vh></v>
<v t="ekr.20080603071026.81"><vh>@item *&amp;indent-region</vh></v>
<v t="ekr.20080603071026.82"><vh>@item *&amp;unindent-region</vh></v>
<v t="ekr.20080603071026.83"><vh>@item *&amp;match-brackets</vh></v>
<v t="ekr.20080603071026.84"><vh>@item *add-comments</vh></v>
<v t="ekr.20080603071026.85"><vh>@item *delete-comments</vh></v>
</v>
<v t="ekr.20080603071026.86"><vh>@menu Edit &amp;Headline...</vh>
<v t="ekr.20080603071026.87"><vh>@item *edit-&amp;headline</vh></v>
<v t="ekr.20080603071026.88"><vh>@item *&amp;end-edit-headline</vh></v>
<v t="ekr.20080603071026.89"><vh>@item *&amp;abort-edit-headline</vh></v>
<v t="ekr.20080603071026.90"><vh>@item *insert-headline-&amp;time</vh></v>
<v t="ekr.20080603071026.91"><vh>@item *toggle-&amp;angle-brackets</vh></v>
</v>
<v t="ekr.20080603071026.92"><vh>@menu &amp;Find...</vh>
<v t="ekr.20080603071026.93"><vh>@item *&amp;open-find-tab</vh></v>
<v t="ekr.20080603071026.94"><vh>@item *&amp;hide-find-tab</vh></v>
<v t="ekr.20080603071026.95"><vh>@item *search-&amp;with-present-options</vh></v>
<v t="ekr.20080603071026.96"><vh>@item -</vh></v>
<v t="ekr.20080603071026.97"><vh>@item *find-&amp;next</vh></v>
<v t="ekr.20080603071026.98"><vh>@item *find-&amp;prev</vh></v>
<v t="ekr.20080603071026.99"><vh>@item *&amp;change</vh></v>
<v t="ekr.20080603071026.100"><vh>@item *find-&amp;all</vh></v>
<v t="ekr.20080603071026.101"><vh>@item *clone-fi&amp;nd-all</vh></v>
<v t="ekr.20080603071026.102"><vh>@item *change-a&amp;ll</vh></v>
<v t="ekr.20080603071026.103"><vh>@item -</vh></v>
<v t="ekr.20080603071026.104"><vh>@item *&amp;find-character</vh></v>
<v t="ekr.20080603071026.105"><vh>@item *find-character-extend-&amp;selection</vh></v>
<v t="ekr.20080603071026.106"><vh>@item *&amp;backward-find-character</vh></v>
<v t="ekr.20080603071026.107"><vh>@item *backward-find-character-&amp;extend-selection</vh></v>
<v t="ekr.20080603071026.108"><vh>@item -</vh></v>
<v t="ekr.20080603071026.109"><vh>@item *&amp;isearch-forward</vh></v>
<v t="ekr.20080603071026.110"><vh>@item *isea&amp;rch-backward</vh></v>
<v t="ekr.20080603071026.111"><vh>@item *isearch-forward-rege&amp;xp</vh></v>
<v t="ekr.20080603071026.112"><vh>@item *isearch-backward-regex&amp;p</vh></v>
<v t="ekr.20080603071026.113"><vh>@item -</vh></v>
<v t="ekr.20080603071026.114"><vh>@item *&amp;query-replace</vh></v>
<v t="ekr.20080603071026.115"><vh>@item *q&amp;uery-replace-regex</vh></v>
</v>
<v t="ekr.20080603071026.116"><vh>@item *&amp;goto-global-line</vh></v>
<v t="ekr.20080603071026.117"><vh>@item *&amp;execute-script</vh></v>
<v t="ekr.20080603071026.118"><vh>@item toggle-invisibles</vh></v>
<v t="ekr.20080603071026.119"><vh>@item open-leoSettings-leo</vh></v>
</v>
<v t="ekr.20080603071026.120"><vh>@menu &amp;Outline</vh>
<v t="ekr.20080603071026.121"><vh>@item *c&amp;ut-node</vh></v>
<v t="ekr.20080603071026.122"><vh>@item *c&amp;opy-node</vh></v>
<v t="ekr.20080603071026.123"><vh>@item *&amp;paste-node</vh></v>
<v t="ekr.20080603071026.124"><vh>@item paste-retaining-clones</vh></v>
<v t="ekr.20080603071026.125"><vh>@item *&amp;delete-node</vh></v>
<v t="ekr.20080603071026.126"><vh>@item -</vh></v>
<v t="ekr.20080603071026.127"><vh>@item *&amp;insert-node</vh></v>
<v t="ekr.20080603071026.128"><vh>@item *insert-child</vh></v>
<v t="ekr.20080603071026.129"><vh>@item *&amp;clone-node</vh></v>
<v t="ekr.20080603071026.130"><vh>@item *sort-childre&amp;n</vh></v>
<v t="ekr.20080603071026.131"><vh>@item *&amp;sort-siblings</vh></v>
<v t="ekr.20080603071026.132"><vh>@item -</vh></v>
<v t="ekr.20080603071026.133"><vh>@item *&amp;hoist</vh></v>
<v t="ekr.20080603071026.134"><vh>@item de-hoist</vh></v>
<v t="ekr.20080603071026.135"><vh>@item -</vh></v>
<v t="ekr.20080603071026.136"><vh>@menu Chec&amp;k...</vh>
<v t="ekr.20080603071026.137"><vh>@item *check-&amp;outline</vh></v>
<v t="ekr.20080603071026.138"><vh>@item *&amp;dump-outline</vh></v>
<v t="ekr.20080603071026.139"><vh>@item -</vh></v>
<v t="ekr.20080603071026.140"><vh>@item *check-&amp;all-python-code</vh></v>
<v t="ekr.20080603071026.141"><vh>@item *&amp;check-python-code</vh></v>
</v>
<v t="ekr.20080603071026.142"><vh>@menu E&amp;xpand/Contract...</vh>
<v t="ekr.20080603071026.143"><vh>@item *&amp;contract-all</vh></v>
<v t="ekr.20080603071026.144"><vh>@item *contract-&amp;node</vh></v>
<v t="ekr.20080603071026.145"><vh>@item *contract-&amp;parent</vh></v>
<v t="ekr.20080603071026.146"><vh>@item *contract-or-go-&amp;left</vh></v>
<v t="ekr.20080603071026.147"><vh>@item -</vh></v>
<v t="ekr.20080603071026.148"><vh>@item *expand-p&amp;rev-level</vh></v>
<v t="ekr.20080603071026.149"><vh>@item *expand-n&amp;ext-level</vh></v>
<v t="ekr.20080603071026.150"><vh>@item *expand-and-go-right</vh></v>
<v t="ekr.20080603071026.151"><vh>@item *expand-or-go-right</vh></v>
<v t="ekr.20080603071026.152"><vh>@item -</vh></v>
<v t="ekr.20080603071026.153"><vh>@item *expand-to-level-&amp;1</vh></v>
<v t="ekr.20080603071026.154"><vh>@item *expand-to-level-&amp;2</vh></v>
<v t="ekr.20080603071026.155"><vh>@item *expand-to-level-&amp;3</vh></v>
<v t="ekr.20080603071026.156"><vh>@item *expand-to-level-&amp;4</vh></v>
<v t="ekr.20080603071026.157"><vh>@item *expand-to-level-&amp;5</vh></v>
<v t="ekr.20080603071026.158"><vh>@item *expand-to-level-&amp;6</vh></v>
<v t="ekr.20080603071026.159"><vh>@item *expand-to-level-&amp;7</vh></v>
<v t="ekr.20080603071026.160"><vh>@item *expand-to-level-&amp;8</vh></v>
<v t="ekr.20080603071026.161"><vh>@item -</vh></v>
<v t="ekr.20080603071026.162"><vh>@item *expand-&amp;all</vh></v>
<v t="ekr.20080603071026.163"><vh>@item *expand-n&amp;ode</vh></v>
</v>
<v t="ekr.20080603071026.164"><vh>@menu &amp;Move...</vh>
<v t="ekr.20080603071026.165"><vh>@item move-outline-down</vh></v>
<v t="ekr.20080603071026.166"><vh>@item move-outline-left</vh></v>
<v t="ekr.20080603071026.167"><vh>@item move-outline-right</vh></v>
<v t="ekr.20080603071026.168"><vh>@item move-outline-up</vh></v>
<v t="ekr.20080603071026.169"><vh>@item -</vh></v>
<v t="ekr.20080603071026.170"><vh>@item *&amp;promote</vh></v>
<v t="ekr.20080603071026.171"><vh>@item *&amp;demote</vh></v>
</v>
<v t="ekr.20080603071026.172"><vh>@menu M&amp;ark...</vh>
<v t="ekr.20080603071026.173"><vh>@item *&amp;mark</vh></v>
<v t="ekr.20080603071026.174"><vh>@item *mark-&amp;subheads</vh></v>
<v t="ekr.20080603071026.175"><vh>@item *mark-changed-&amp;items</vh></v>
<v t="ekr.20080603071026.176"><vh>@item *mark-changed-&amp;roots</vh></v>
<v t="ekr.20080603071026.177"><vh>@item *mark-&amp;clones</vh></v>
<v t="ekr.20080603071026.178"><vh>@item *&amp;unmark-all</vh></v>
</v>
<v t="ekr.20080603071026.179"><vh>@menu &amp;Go To...</vh>
<v t="ekr.20080603071026.180"><vh>@item find-next-clone</vh></v>
<v t="ekr.20080603071026.181"><vh>@item goto-first-node</vh></v>
<v t="ekr.20080603071026.182"><vh>@item goto-first-visible-node</vh></v>
<v t="ekr.20080603071026.183"><vh>@item goto-first-sibling</vh></v>
<v t="ekr.20080603071026.184"><vh>@item -</vh></v>
<v t="ekr.20080603071026.185"><vh>@item goto-next-changed</vh></v>
<v t="ekr.20080603071026.186"><vh>@item goto-next-clone</vh></v>
<v t="ekr.20080603071026.187"><vh>@item goto-next-marked</vh></v>
<v t="ekr.20080603071026.188"><vh>@item goto-next-node</vh></v>
<v t="ekr.20080603071026.189"><vh>@item goto-next-sibling</vh></v>
<v t="ekr.20080603071026.190"><vh>@item goto-next-visible</vh></v>
<v t="ekr.20080603071026.191"><vh>@item go-forward</vh></v>
<v t="ekr.20080603071026.192"><vh>@item -</vh></v>
<v t="ekr.20080603071026.193"><vh>@item goto-parent</vh></v>
<v t="ekr.20080603071026.194"><vh>@item -</vh></v>
<v t="ekr.20080603071026.195"><vh>@item goto-prev-node</vh></v>
<v t="ekr.20080603071026.196"><vh>@item goto-prev-sibling</vh></v>
<v t="ekr.20080603071026.197"><vh>@item goto-prev-visible</vh></v>
<v t="ekr.20080603071026.198"><vh>@item go-back</vh></v>
<v t="ekr.20080603071026.199"><vh>@item -</vh></v>
<v t="ekr.20080603071026.200"><vh>@item goto-last-node</vh></v>
<v t="ekr.20080603071026.201"><vh>@item goto-last-sibling</vh></v>
<v t="ekr.20080603071026.202"><vh>@item goto-last-visible-node</vh></v>
</v>
</v>
<v t="ekr.20080603071026.203"><vh>@menu &amp;Plugins</vh></v>
<v t="ekr.20080603071026.204"><vh>@menu &amp;Cmds</vh>
<v t="ekr.20080603071026.205"><vh>@menu &amp;Abbrev...</vh>
<v t="ekr.20080603071026.206"><vh>@item abbre&amp;v-mode</vh></v>
<v t="ekr.20080603071026.207"><vh>@item -</vh></v>
<v t="ekr.20080603071026.208"><vh>@item &amp;list-abbrevs</vh></v>
<v t="ekr.20080603071026.209"><vh>@item &amp;read-abbrev-file</vh></v>
<v t="ekr.20080603071026.210"><vh>@item &amp;write-abbrev-file</vh></v>
<v t="ekr.20080603071026.211"><vh>@item -</vh></v>
<v t="ekr.20080603071026.212"><vh>@item &amp;add-global-abbrev</vh></v>
<v t="ekr.20080603071026.213"><vh>@item &amp;inverse-add-global-abbrev</vh></v>
<v t="ekr.20080603071026.214"><vh>@item &amp;kill-all-abbrevs</vh></v>
<v t="ekr.20080603071026.215"><vh>@@item -</vh></v>
<v t="ekr.20080603071026.216"><vh>@@item &amp;expand-region-abbrevs</vh></v>
</v>
<v t="ekr.20080603071026.217"><vh>@menu &amp;Body Editors...</vh>
<v t="ekr.20080603071026.218"><vh>@item &amp;add-editor</vh></v>
<v t="ekr.20080603071026.219"><vh>@item &amp;cycle-editor-focus</vh></v>
<v t="ekr.20080603071026.220"><vh>@item &amp;delete-editor</vh></v>
</v>
<v t="ekr.20080603071026.221"><vh>@menu Buffers...</vh>
<v t="ekr.20080603071026.222"><vh>@item &amp;append-to-buffer</vh></v>
<v t="ekr.20080603071026.223"><vh>@item &amp;kill-buffer</vh></v>
<v t="ekr.20080603071026.224"><vh>@item list-&amp;buffers</vh></v>
<v t="ekr.20080603071026.225"><vh>@item &amp;list-buffers-alphabetically</vh></v>
<v t="ekr.20080603071026.226"><vh>@item &amp;prepend-to-buffer</vh></v>
<v t="ekr.20080603071026.227"><vh>@item &amp;rename-buffer</vh></v>
<v t="ekr.20080603071026.228"><vh>@item &amp;switch-to-buffer</vh></v>
</v>
<v t="ekr.20080603071026.229"><vh>@menu &amp;Chapters...</vh>
<v t="ekr.20080603071026.230"><vh>@item &amp;clone-node-to-chapter</vh></v>
<v t="ekr.20080603071026.231"><vh>@item c&amp;opy-node-to-chapter</vh></v>
<v t="ekr.20080603071026.232"><vh>@item c&amp;reate-chapter</vh></v>
<v t="ekr.20080603071026.233"><vh>@item &amp;move-node-to-chapter</vh></v>
<v t="ekr.20080603071026.234"><vh>@item &amp;remove-chapter</vh></v>
<v t="ekr.20080603071026.235"><vh>@item &amp;select-chapter</vh></v>
</v>
<v t="ekr.20080603071026.236"><vh>@menu Cursor/Selection...</vh>
<v t="ekr.20080603071026.237"><vh>@menu Cursor &amp;Back...</vh>
<v t="ekr.20080603071026.238"><vh>@item back-&amp;char</vh></v>
<v t="ekr.20080603071026.239"><vh>@item back-&amp;paragraph</vh></v>
<v t="ekr.20080603071026.240"><vh>@item back-&amp;sentence</vh></v>
<v t="ekr.20080603071026.241"><vh>@item back-&amp;word</vh></v>
<v t="ekr.20080603071026.242"><vh>@item -</vh></v>
<v t="ekr.20080603071026.243"><vh>@item beginning-of-&amp;buffer</vh></v>
<v t="ekr.20080603071026.244"><vh>@item beginning-of-&amp;line</vh></v>
<v t="ekr.20080603071026.245"><vh>@item -</vh></v>
<v t="ekr.20080603071026.246"><vh>@item pre&amp;vious-line</vh></v>
</v>
<v t="ekr.20080603071026.247"><vh>@menu Cursor Back &amp;Extend Selection...</vh>
<v t="ekr.20080603071026.248"><vh>@item back-&amp;char-extend-selection</vh></v>
<v t="ekr.20080603071026.249"><vh>@item back-&amp;paragraph-extend-selection</vh></v>
<v t="ekr.20080603071026.250"><vh>@item back-&amp;sentence-extend-selection</vh></v>
<v t="ekr.20080603071026.251"><vh>@item back-&amp;word-extend-selection</vh></v>
<v t="ekr.20080603071026.252"><vh>@item -</vh></v>
<v t="ekr.20080603071026.253"><vh>@item beginning-of-&amp;buffer-extend-selection</vh></v>
<v t="ekr.20080603071026.254"><vh>@item beginning-of-&amp;line-extend-selection</vh></v>
<v t="ekr.20080603071026.255"><vh>@item -</vh></v>
<v t="ekr.20080603071026.256"><vh>@item pre&amp;vious-line-extend-selection</vh></v>
</v>
<v t="ekr.20080603071026.257"><vh>@menu Cursor Back Extend &amp;to...</vh>
<v t="ekr.20080603071026.258"><vh>@item extend-to-&amp;line</vh></v>
<v t="ekr.20080603071026.259"><vh>@item extend-to-&amp;paragraph</vh></v>
<v t="ekr.20080603071026.260"><vh>@item extend-to-&amp;sentence</vh></v>
<v t="ekr.20080603071026.261"><vh>@item extend-to-&amp;word</vh></v>
</v>
<v t="ekr.20080603071026.262"><vh>@menu Cursor &amp;Forward...</vh>
<v t="ekr.20080603071026.263"><vh>@item end-of-&amp;buffer</vh></v>
<v t="ekr.20080603071026.264"><vh>@item end-of-&amp;line</vh></v>
<v t="ekr.20080603071026.265"><vh>@item -</vh></v>
<v t="ekr.20080603071026.266"><vh>@item forward-&amp;char</vh></v>
<v t="ekr.20080603071026.267"><vh>@item forward-&amp;paragraph</vh></v>
<v t="ekr.20080603071026.268"><vh>@item forward-&amp;sentence</vh></v>
<v t="ekr.20080603071026.269"><vh>@item forward-&amp;end-word</vh></v>
<v t="ekr.20080603071026.270"><vh>@item forward-&amp;word</vh></v>
<v t="ekr.20080603071026.271"><vh>@item -</vh></v>
<v t="ekr.20080603071026.272"><vh>@item &amp;next-line</vh></v>
</v>
<v t="ekr.20080603071026.273"><vh>@menu Cursor Forward E&amp;xtend Selection...</vh>
<v t="ekr.20080603071026.274"><vh>@item end-of-&amp;buffer-extend-selection</vh></v>
<v t="ekr.20080603071026.275"><vh>@item end-of-&amp;line-extend-selection</vh></v>
<v t="ekr.20080603071026.276"><vh>@item -</vh></v>
<v t="ekr.20080603071026.277"><vh>@item forward-&amp;char-extend-selection</vh></v>
<v t="ekr.20080603071026.278"><vh>@item forward-&amp;paragraph-extend-selection</vh></v>
<v t="ekr.20080603071026.279"><vh>@item forward-&amp;sentence-extend-selection</vh></v>
<v t="ekr.20080603071026.280"><vh>@item forward-&amp;end-word-extend-selection</vh></v>
<v t="ekr.20080603071026.281"><vh>@item forward-&amp;word-extend-selection</vh></v>
<v t="ekr.20080603071026.282"><vh>@item -</vh></v>
<v t="ekr.20080603071026.283"><vh>@item &amp;next-line-extend-selection</vh></v>
</v>
</v>
<v t="ekr.20080603071026.284"><vh>@menu &amp;Focus...</vh>
<v t="ekr.20080603071026.285"><vh>@item &amp;cycle-all-focus</vh></v>
<v t="ekr.20080603071026.286"><vh>@item focus-to-&amp;body</vh></v>
<v t="ekr.20080603071026.287"><vh>@item focus-to-&amp;log</vh></v>
<v t="ekr.20080603071026.288"><vh>@item focus-to-&amp;minibuffer</vh></v>
<v t="ekr.20080603071026.289"><vh>@item focus-to-&amp;tree</vh></v>
</v>
<v t="ekr.20080603071026.290"><vh>@menu &amp;Icons...</vh>
<v t="ekr.20080603071026.291"><vh>@item delete-&amp;first-icon</vh></v>
<v t="ekr.20080603071026.292"><vh>@item delete-&amp;last-icon</vh></v>
<v t="ekr.20080603071026.293"><vh>@item delete-&amp;node-icons</vh></v>
<v t="ekr.20080603071026.294"><vh>@item -</vh></v>
<v t="ekr.20080603071026.295"><vh>@item &amp;insert-icon</vh></v>
</v>
<v t="ekr.20080603071026.296"><vh>@menu &amp;Macro...</vh>
<v t="ekr.20080603071026.297"><vh>@item &amp;load-file</vh></v>
<v t="ekr.20080603071026.298"><vh>@item -</vh></v>
<v t="ekr.20080603071026.299"><vh>@item &amp;start-kbd-macro</vh></v>
<v t="ekr.20080603071026.300"><vh>@item &amp;end-kbd-macro</vh></v>
<v t="ekr.20080603071026.301"><vh>@item &amp;name-last-kbd-macro</vh></v>
<v t="ekr.20080603071026.302"><vh>@item -</vh></v>
<v t="ekr.20080603071026.303"><vh>@item &amp;call-last-keyboard-macro</vh></v>
<v t="ekr.20080603071026.304"><vh>@item &amp;insert-keyboard-macro</vh></v>
</v>
<v t="ekr.20080603071026.305"><vh>@menu Minibuffer...</vh>
<v t="ekr.20080603071026.306"><vh>@item &amp;full-command</vh></v>
<v t="ekr.20080603071026.307"><vh>@item keyboard-&amp;quit</vh></v>
<v t="ekr.20080603071026.308"><vh>@item &amp;repeat-complex-command</vh></v>
<v t="ekr.20080603071026.309"><vh>@item &amp;view-lossage</vh></v>
<v t="ekr.20080603071026.310"><vh>@item -</vh></v>
<v t="ekr.20080603071026.311"><vh>@item &amp;show-mini-buffer</vh></v>
<v t="ekr.20080603071026.312"><vh>@item h&amp;ide-mini-buffer</vh></v>
<v t="ekr.20080603071026.313"><vh>@item -</vh></v>
<v t="ekr.20080603071026.314"><vh>@item &amp;help-for-minibuffer</vh></v>
</v>
<v t="ekr.20080603071026.315"><vh>@menu &amp;Pickers...</vh>
<v t="ekr.20080603071026.316"><vh>@item show-&amp;colors</vh></v>
<v t="ekr.20080603071026.317"><vh>@item show-find-&amp;options</vh></v>
<v t="ekr.20080603071026.318"><vh>@item show-&amp;fonts</vh></v>
</v>
<v t="ekr.20080603071026.319"><vh>@menu &amp;Rectangles...</vh>
<v t="ekr.20080603071026.320"><vh>@item &amp;clear-rectangle</vh></v>
<v t="ekr.20080603071026.321"><vh>@item c&amp;lose-rectangle</vh></v>
<v t="ekr.20080603071026.322"><vh>@item &amp;delete-rectangle</vh></v>
<v t="ekr.20080603071026.323"><vh>@item &amp;kill-rectangle</vh></v>
<v t="ekr.20080603071026.324"><vh>@item &amp;open-rectangle</vh></v>
<v t="ekr.20080603071026.325"><vh>@item &amp;string-rectangle</vh></v>
<v t="ekr.20080603071026.326"><vh>@item &amp;yank-rectangle</vh></v>
</v>
<v t="ekr.20080603071026.327"><vh>@menu Registers...</vh>
<v t="ekr.20080603071026.328"><vh>@item &amp;append-to-register</vh></v>
<v t="ekr.20080603071026.329"><vh>@item copy-r&amp;ectangle-to-register</vh></v>
<v t="ekr.20080603071026.330"><vh>@item &amp;copy-to-register</vh></v>
<v t="ekr.20080603071026.331"><vh>@item i&amp;ncrement-register</vh></v>
<v t="ekr.20080603071026.332"><vh>@item &amp;insert-register</vh></v>
<v t="ekr.20080603071026.333"><vh>@item &amp;jump-to-register</vh></v>
<v t="ekr.20080603071026.334"><vh>@item &amp;point-to-register</vh></v>
<v t="ekr.20080603071026.335"><vh>@item p&amp;repend-to-register</vh></v>
<v t="ekr.20080603071026.336"><vh>@item &amp;view-register</vh></v>
</v>
<v t="ekr.20080603071026.337"><vh>@menu Run Script/Tests...</vh>
<v t="ekr.20080603071026.338"><vh>@item &amp;execute-script</vh></v>
<v t="ekr.20080603071026.339"><vh>@item &amp;run-unit-tests</vh></v>
</v>
<v t="ekr.20080603071026.340"><vh>@menu &amp;Scrolling...</vh>
<v t="ekr.20080603071026.341"><vh>@item scroll-outline-down-&amp;line</vh></v>
<v t="ekr.20080603071026.342"><vh>@item scroll-outline-down-&amp;page</vh></v>
<v t="ekr.20080603071026.343"><vh>@item scroll-outline-le&amp;ft</vh></v>
<v t="ekr.20080603071026.344"><vh>@item scroll-outline-&amp;right</vh></v>
<v t="ekr.20080603071026.345"><vh>@item s&amp;croll-outline-up-line</vh></v>
<v t="ekr.20080603071026.346"><vh>@item scr&amp;oll-outline-up-page</vh></v>
<v t="ekr.20080603071026.347"><vh>@item -</vh></v>
<v t="ekr.20080603071026.348"><vh>@item scroll-&amp;down</vh></v>
<v t="ekr.20080603071026.349"><vh>@item scroll-&amp;up</vh></v>
<v t="ekr.20080603071026.350"><vh>@item -</vh></v>
<v t="ekr.20080603071026.351"><vh>@item scroll-down-&amp;extend-selection</vh></v>
<v t="ekr.20080603071026.352"><vh>@item scroll-up-e&amp;xtend-selection</vh></v>
</v>
<v t="ekr.20080603071026.353"><vh>@menu Spell C&amp;heck...</vh>
<v t="ekr.20080603071026.354"><vh>@item &amp;open-spell-tab</vh></v>
<v t="ekr.20080603071026.355"><vh>@item spell-&amp;change</vh></v>
<v t="ekr.20080603071026.356"><vh>@item spell-change-&amp;then-find</vh></v>
<v t="ekr.20080603071026.357"><vh>@item spell-&amp;find</vh></v>
<v t="ekr.20080603071026.358"><vh>@item spell-&amp;ignore</vh></v>
</v>
<v t="ekr.20080603071026.359"><vh>@menu &amp;Text Commands...</vh>
<v t="ekr.20080603071026.360"><vh>@item &amp;beautify</vh></v>
<v t="ekr.20080603071026.361"><vh>@item beautify-&amp;all</vh></v>
<v t="ekr.20080603071026.362"><vh>@item -</vh></v>
<v t="ekr.20080603071026.363"><vh>@item center-&amp;line</vh></v>
<v t="ekr.20080603071026.364"><vh>@item center-&amp;region</vh></v>
<v t="ekr.20080603071026.365"><vh>@item -</vh></v>
<v t="ekr.20080603071026.366"><vh>@item &amp;capitalize-word</vh></v>
<v t="ekr.20080603071026.367"><vh>@item &amp;downcase-word</vh></v>
<v t="ekr.20080603071026.368"><vh>@item &amp;upcase-word</vh></v>
<v t="ekr.20080603071026.369"><vh>@item -</vh></v>
<v t="ekr.20080603071026.370"><vh>@item d&amp;owncase-region</vh></v>
<v t="ekr.20080603071026.371"><vh>@item u&amp;pcase-region</vh></v>
<v t="ekr.20080603071026.372"><vh>@item -</vh></v>
<v t="ekr.20080603071026.373"><vh>@item &amp;indent-region</vh></v>
<v t="ekr.20080603071026.374"><vh>@item indent-r&amp;elative</vh></v>
<v t="ekr.20080603071026.375"><vh>@item indent-ri&amp;gidly</vh></v>
<v t="ekr.20080603071026.376"><vh>@item u&amp;nindent-region</vh></v>
<v t="ekr.20080603071026.377"><vh>@item -</vh></v>
<v t="ekr.20080603071026.378"><vh>@item sort-colu&amp;mns</vh></v>
<v t="ekr.20080603071026.379"><vh>@item sort-&amp;fields</vh></v>
<v t="ekr.20080603071026.380"><vh>@item &amp;sort-lines</vh></v>
</v>
<v t="ekr.20080603071026.381"><vh>@menu Toggle Settings...</vh>
<v t="ekr.20080603071026.382"><vh>@item toggle-a&amp;utocompleter</vh></v>
<v t="ekr.20080603071026.383"><vh>@item toggle-call&amp;tips</vh></v>
<v t="ekr.20080603071026.384"><vh>@item toggle-&amp;extend-mode</vh></v>
<v t="ekr.20080603071026.385"><vh>@item toggle-input-&amp;state</vh></v>
<v t="ekr.20080603071026.386"><vh>@item toggle-in&amp;visibles</vh></v>
<v t="ekr.20080603071026.387"><vh>@item toggle-&amp;mini-buffer</vh></v>
<v t="ekr.20080603071026.388"><vh>@item toggle-split-&amp;direction</vh></v>
<v t="ekr.20080603071026.389"><vh>@item -</vh></v>
<v t="ekr.20080603071026.390"><vh>@item toggle-find-&amp;ignore-case-option</vh></v>
<v t="ekr.20080603071026.391"><vh>@item toggle-find-in-&amp;body-option</vh></v>
<v t="ekr.20080603071026.392"><vh>@item toggle-find-in-&amp;headline-option</vh></v>
<v t="ekr.20080603071026.393"><vh>@item toggle-find-mark-&amp;changes-option</vh></v>
<v t="ekr.20080603071026.394"><vh>@item toggle-find-mark-&amp;finds-option</vh></v>
<v t="ekr.20080603071026.395"><vh>@item toggle-find-rege&amp;x-option</vh></v>
<v t="ekr.20080603071026.396"><vh>@item toggle-find-&amp;reverse-option</vh></v>
<v t="ekr.20080603071026.397"><vh>@item toggle-find-&amp;word-option</vh></v>
<v t="ekr.20080603071026.398"><vh>@item toggle-find-wrap-&amp;around-option</vh></v>
<v t="ekr.20080603071026.399"><vh>@item toggle-s&amp;parce-move</vh></v>
</v>
<v t="ekr.20080603071026.400"><vh>@menu &amp;Yank And Kill</vh>
<v t="ekr.20080603071026.401"><vh>@item kill-&amp;buffer</vh></v>
<v t="ekr.20080603071026.402"><vh>@item kill-&amp;line</vh></v>
<v t="ekr.20080603071026.403"><vh>@item kill-&amp;rectangle</vh></v>
<v t="ekr.20080603071026.404"><vh>@item kill-re&amp;gion</vh></v>
<v t="ekr.20080603071026.405"><vh>@item kill-region-s&amp;ave</vh></v>
<v t="ekr.20080603071026.406"><vh>@item kill-&amp;sentence</vh></v>
<v t="ekr.20080603071026.407"><vh>@item kill-ws</vh></v>
<v t="ekr.20080603071026.408"><vh>@item kill-&amp;word</vh></v>
<v t="ekr.20080603071026.409"><vh>@item -</vh></v>
<v t="ekr.20080603071026.410"><vh>@item &amp;yank</vh></v>
<v t="ekr.20080603071026.411"><vh>@item yank-&amp;pop</vh></v>
<v t="ekr.20080603071026.412"><vh>@item yank-r&amp;ectangle</vh></v>
</v>
</v>
<v t="ekr.20080603071026.413"><vh>@menu &amp;Window</vh>
<v t="ekr.20080603071026.414"><vh>@item *&amp;equal-sized-panes</vh></v>
<v t="ekr.20080603071026.415"><vh>@item *&amp;toggle-active-pane</vh></v>
<v t="ekr.20080603071026.416"><vh>@item *toggle-&amp;split-direction</vh></v>
<v t="ekr.20080603071026.417"><vh>@item -</vh></v>
<v t="ekr.20080603071026.418"><vh>@item *contract-&amp;body-pane</vh></v>
<v t="ekr.20080603071026.419"><vh>@item *contract-&amp;log-pane</vh></v>
<v t="ekr.20080603071026.420"><vh>@item *contract-&amp;outline-pane</vh></v>
<v t="ekr.20080603071026.421"><vh>@item *contract-&amp;pane</vh></v>
<v t="ekr.20080603071026.422"><vh>@item -</vh></v>
<v t="ekr.20080603071026.423"><vh>@item *expand-bo&amp;dy-pane</vh></v>
<v t="ekr.20080603071026.424"><vh>@item *expand-lo&amp;g-pane</vh></v>
<v t="ekr.20080603071026.425"><vh>@item *expand-o&amp;utline-pane</vh></v>
<v t="ekr.20080603071026.426"><vh>@item *expand-pa&amp;ne</vh></v>
<v t="ekr.20080603071026.427"><vh>@item -</vh></v>
<v t="ekr.20080603071026.428"><vh>@item *&amp;fully-expand-body-pane</vh></v>
<v t="ekr.20080603071026.429"><vh>@item *full&amp;y-expand-log-pane</vh></v>
<v t="ekr.20080603071026.430"><vh>@item *fully-e&amp;xpand-outline-pane</vh></v>
<v t="ekr.20080603071026.431"><vh>@item *fully-exp&amp;and-pane</vh></v>
<v t="ekr.20080603071026.432"><vh>@item -</vh></v>
<v t="ekr.20080603071026.433"><vh>@item *&amp;resize-to-screen</vh></v>
<v t="ekr.20080603071026.434"><vh>@item *&amp;cascade-windows</vh></v>
<v t="ekr.20080603071026.435"><vh>@item *&amp;minimize-all</vh></v>
<v t="ekr.20080603071026.436"><vh>@item -</vh></v>
<v t="ekr.20080603071026.437"><vh>@item *open-compare-window</vh></v>
<v t="ekr.20080603071026.438"><vh>@item *open-python-&amp;window</vh></v>
</v>
<v t="ekr.20080603071026.439"><vh>@menu &amp;Help</vh>
<v t="ekr.20080603071026.440"><vh>@item about-leo</vh></v>
<v t="ekr.20080603071026.441"><vh>@item open-online-home</vh></v>
<v t="ekr.20080603071026.442"><vh>@item *open-online-&amp;tutorial</vh></v>
<v t="ekr.20080603071026.443"><vh>@item *open-&amp;users-guide</vh></v>
<v t="ekr.20080603071026.444"><vh>@item -</vh></v>
<v t="ekr.20080603071026.445"><vh>@item open-leoDocs-leo</vh></v>
<v t="ekr.20080603071026.446"><vh>@item open-leoPlugins-leo</vh></v>
<v t="ekr.20080603071026.447"><vh>@item open-leoSettings-leo</vh></v>
<v t="ekr.20080603071026.448"><vh>@item open-myLeoSettings-leo</vh></v>
<v t="ekr.20080603071026.449"><vh>@item open-scripts-leo</vh></v>
<v t="ekr.20080603071026.450"><vh>@item -</vh></v>
<v t="ekr.20080603071026.451"><vh>@item *he&amp;lp-for-minibuffer</vh></v>
<v t="ekr.20080603071026.452"><vh>@item *help-for-&amp;command</vh></v>
<v t="ekr.20080603071026.453"><vh>@item -</vh></v>
<v t="ekr.20080603071026.454"><vh>@item *&amp;apropos-autocompletion</vh></v>
<v t="ekr.20080603071026.455"><vh>@item *apropos-&amp;bindings</vh></v>
<v t="ekr.20080603071026.456"><vh>@item *apropos-&amp;debugging-commands</vh></v>
<v t="ekr.20080603071026.457"><vh>@item *apropos-&amp;find-commands</vh></v>
<v t="ekr.20080603071026.458"><vh>@item -</vh></v>
<v t="ekr.20080603071026.459"><vh>@item *pri&amp;nt-bindings</vh></v>
<v t="ekr.20080603071026.460"><vh>@item *print-c&amp;ommands</vh></v>
</v>
<v t="ekr.20080603071026.461"><vh>@@menu 文件</vh>
<v t="ekr.20080603071026.462"><vh>@item new</vh></v>
<v t="ekr.20080603071026.463"><vh>@item open-outline</vh></v>
</v>
</v>
<v t="ekr.20041001211817"><vh>Buttons</vh>
<v t="ekr.20061030041450"><vh>Run Iron Python scripts</vh>
<v t="ekr.20061030041356"><vh>@url c:\prog\IronPython-1.0.1\Doc\IronPythonApiReference.chm</vh></v>
</v>
<v t="ekr.20070531102813"><vh>Disabled buttons</vh>
<v t="ekr.20060814111542"><vh>@@button add-e</vh></v>
<v t="ekr.20060918083159"><vh>@@button Clear uAs</vh></v>
<v t="ekr.20071002150320"><vh>@@button create-canvas</vh></v>
<v t="ekr.20060809084033"><vh>@@button cvt to g.et</vh>
<v t="ekr.20060809104405"><vh>&lt;&lt; version history &gt;&gt;</vh></v>
<v t="ekr.20060809092023"><vh>test</vh>
<v t="ekr.20060809103738"><vh>test1</vh></v>
<v t="ekr.20060809103738.1"><vh>test2</vh></v>
</v>
<v t="ekr.20060809090508"><vh>replace</vh>
<v t="ekr.20060809091749.72"><vh>&lt;&lt; handle string &gt;&gt;</vh></v>
<v t="ekr.20060809091749.73"><vh>&lt;&lt; handle g.es &gt;&gt;</vh></v>
</v>
</v>
<v t="ekr.20070531104646"><vh>@@button da-comp</vh></v>
<v t="ekr.20070531103315"><vh>@@button da-expand</vh></v>
<v t="ekr.20070530072113"><vh>@@button hide-ch</vh></v>
<v t="ekr.20071025192258"><vh>@@button local-tests @key=Alt+4</vh></v>
<v t="ekr.20071006084354"><vh>@@button print tk line number</vh></v>
<v t="ekr.20080105115712"><vh>@@button pylint</vh>
<v t="ekr.20080115085447"><vh>harmless warnings, errors</vh></v>
<v t="ekr.20080105130903"><vh>warnings</vh></v>
<v t="ekr.20080105120559"><vh>&lt;&lt; define data &gt;&gt;</vh></v>
</v>
<v t="ekr.20070515073111"><vh>@@button sep</vh></v>
<v t="ekr.20060427103457"><vh>@@button settings.leo</vh></v>
<v t="ekr.20080310111916.1"><vh>@@button Translate "can not" to "can't"</vh></v>
<v t="ekr.20070115092430"><vh>@@button winpdb</vh></v>
<v t="ekr.20071128122043"><vh>@@command create-shell-tab @key = Alt+5</vh></v>
<v t="ekr.20071101163934"><vh>@@command rst3</vh></v>
<v t="ekr.20070604095313"><vh>Chapter buttons</vh>
<v t="ekr.20070530072113.1"><vh>@@button show-ch</vh></v>
<v t="ekr.20070603175054.1"><vh>@@button ch-main</vh></v>
<v t="ekr.20070603175054"><vh>@@button ch-abc</vh></v>
<v t="ekr.20070603190713.1"><vh>@@button ch-xyz</vh></v>
<v t="ekr.20070603190713"><vh>@@button ch-add-xyz</vh></v>
</v>
<v t="ekr.20060904110922"><vh>OPML buttons</vh>
<v t="ekr.20060904111037.1"><vh>@@button opml-write</vh></v>
<v t="ekr.20060904111037"><vh>@@button opml-read</vh></v>
</v>
</v>
<v t="ekr.20061030041200"><vh>@@button iron-py @key=Alt-5</vh></v>
</v>
<v t="ekr.20070410063214"><vh>Commands</vh>
<v t="ekr.20060924180049"><vh>@@command clones-tab</vh>
<v t="ekr.20060924180049.1"><vh>class cloneNavigator</vh>
<v t="ekr.20060924180049.2"><vh>init</vh></v>
<v t="ekr.20060924180049.3"><vh>getAllClones</vh></v>
<v t="ekr.20060924180049.4"><vh>displayClones</vh>
<v t="ekr.20060924180049.5"><vh>&lt;&lt;Fill listbox with clone parent headlines&gt;&gt;</vh></v>
<v t="ekr.20060924180049.6"><vh>&lt;&lt;Goto selected position when listbox selection changes&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ekr.20080214091706.2"><vh>@@command ekr-command</vh></v>
</v>
<v t="ekr.20071026102420.3"><vh>Scripts</vh>
<v t="ekr.20071129103842"><vh>create-at-auto-nodes</vh></v>
<v t="ekr.20070223164126"><vh>Recursive import script</vh>
<v t="ekr.20070223164126.1"><vh>importFiles</vh></v>
<v t="ekr.20070223164126.2"><vh>importDir</vh></v>
<v t="ekr.20070223164126.3"><vh>createLastChildOf</vh></v>
</v>
<v t="ekr.20070517070854"><vh>run script in nullGui</vh></v>
<v t="ekr.20070517071510"><vh>run script with leoBridge</vh></v>
<v t="ekr.20080206055658"><vh>Script to print font settings</vh></v>
</v>
</v>
<v t="ekr.20071025193940" annotate="7d71002855087072696f7269747971015504393939397102550870726f67726573737103550071045509617263686574797065710568045502666771066804752e"><vh>@enabled-plugins</vh></v>
<v t="ekr.20080412082246.1"><vh>@bool fixedWindow = False</vh></v>
<v t="ekr.20070517160058.1"><vh>Prototypes</vh>
<v t="ekr.20070929062147"><vh>Prototype of networkx graph tools</vh>
<v t="ekr.20070929122956"><vh>Data trees</vh>
<v t="ekr.20070929114617"><vh>@graph-target</vh></v>
<v t="ekr.20070929072043"><vh>@networkx</vh>
<v t="ekr.20070929072506.1"><vh>@nodes</vh></v>
<v t="ekr.20070929072506"><vh>@edges</vh></v>
</v>
<v t="ekr.20070929070257"><vh>@graph</vh>
<v t="ekr.20070929070257.1"><vh>@node child1</vh>
<v t="ekr.20070929070632"><vh>@link ('ekr', '20070929070257', 2): @node child2</vh></v>
</v>
<v t="ekr.20070929070257.2"><vh>@node child2</vh>
<v t="ekr.20070929070632.1"><vh>@link ('ekr', '20070929070257', 1): @node child1</vh></v>
</v>
</v>
<v t="ekr.20070928095102"><vh>root-node</vh>
<v t="ekr.20070928095102.1"><vh>child1</vh></v>
<v t="ekr.20070928095102.2"><vh>child2</vh></v>
</v>
</v>
<v t="ekr.20070929122956.1"><vh>buttons</vh>
<v t="ekr.20070929070426"><vh>@@button print link</vh></v>
<v t="ekr.20070927175908"><vh>@@button leo2graph</vh></v>
<v t="ekr.20070929062147.1"><vh>@@button at-graph2graph</vh></v>
<v t="ekr.20070929062147.2"><vh>@@button at-networkx2graph</vh>
<v t="ekr.20070929081505"><vh>error</vh></v>
<v t="ekr.20070929074830"><vh>parse</vh></v>
<v t="ekr.20070929072506.2"><vh>parseNodes</vh></v>
<v t="ekr.20070929074830.1"><vh>parseEdges</vh></v>
</v>
<v t="ekr.20070929082546"><vh>@@button at-networkx2at-graph</vh>
<v t="ekr.20070929120541"><vh>createEdges</vh></v>
<v t="ekr.20070929120541.1"><vh>createNodes</vh></v>
<v t="ekr.20070929115302"><vh>createTree</vh></v>
<v t="ekr.20070929114410.2"><vh>error</vh></v>
<v t="ekr.20070929114410.3"><vh>parse</vh></v>
<v t="ekr.20070929114410.5"><vh>parseEdges</vh></v>
<v t="ekr.20070929114410.4"><vh>parseNodes</vh></v>
</v>
</v>
</v>
<v t="ekr.20070630142904"><vh>Prototype of pyrex</vh>
<v t="ekr.20070630142904.2"><vh>gcc build docs</vh></v>
<v t="ekr.20070630142904.3"><vh>pyrexc command-line options</vh></v>
<v t="ekr.20070630142904.4"><vh>@@file myModule.pyx</vh></v>
<v t="ekr.20070630142904.5"><vh>Make myModule.c</vh></v>
</v>
<v t="ekr.20071026102420.2"><vh>Screen capture</vh>
<v t="ekr.20070528111805"><vh>FrontWindowCapture.pyw</vh></v>
<v t="ekr.20070609085533"><vh>@@url c:\prog\wink\ChangeViewMenu.htm</vh></v>
</v>
<v t="edreamleo.20080110083531"><vh>gtk stuff</vh>
<v t="edreamleo.20080110130828"><vh>createWindow</vh></v>
<v t="bob.20080111200056"><vh>@thin gtkOutlineDemo.py</vh></v>
</v>
<v t="ekr.20080503202744.3"><vh>Rope</vh></v>
</v>
<v t="ekr.20070315071830"><vh>Test files (do not delete)</vh>
<v t="ekr.20070227104713"><vh>@thin leoBridgeTest.py</vh></v>
<v t="ekr.20070626153912"><vh>@thin leoDynamicTest.py</vh></v>
</v>
<v t="ekr.20071105085941" a="E"><vh>Tests</vh>
<v t="ekr.20080531080812.1"><vh>tracer test</vh></v>
<v t="ekr.20080531131542.1"><vh>mxTextTools proto</vh>
<v t="ekr.20080531141227.1"><vh>&lt;&lt; define s &gt;&gt;</vh></v>
<v t="ekr.20080531131542.2"><vh>&lt;&lt; define scan4 tables &gt;&gt;</vh></v>
<v t="ekr.20080531131542.4"><vh>printItem</vh></v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="edreamleo.20080110083531">import gtk

@others

createWindow()

gtk.main()</t>
<t tx="edreamleo.20080110130828">def createWindow():

    def onKeyUp(w,event):
        g.trace(event.state,event.keyval,event.string)

    window = gtk.Window()
    window.set_title("Hello World")

    # button = gtk.Button("-----Press me-----")
    # button.connect("clicked",onButtonPressed)
    # window.add(button)

    splitter1 = gtk.VPaned()
    window.add(splitter1)

    tree = gtk.TextView()
    buf1 = tree.get_buffer()
    buf1.set_text("tree")

    body = gtk.TextView()
    buf2 = body.get_buffer()
    buf2.set_text("body")
    body.connect("key_release_event",onKeyUp)

    splitter1.add(tree)
    splitter1.add2(body)

    window.connect("delete-event",gtk.main_quit)
    window.show_all()
    return window
</t>
<t tx="ekr.20041001211817">import os

print os.path.exists(os.path.normpath("C:\\Progra~1\\Eclipse"))</t>
<t tx="ekr.20060427103457"># Open leoSettings.leo
c.openLeoSettings()</t>
<t tx="ekr.20060809084033">'''A script to convert calls to g.es to g.et, and raw strings s to g._(s)'''

__version__ = 0.2
&lt;&lt; version history &gt;&gt;

@others

trace = False # For debugging.
doReplace = True # True: actually replace the body text.

if not doReplace: g.es_print('-' * 40)
c.beginUpdate()
try:
    u = c.undoer
    undoType = 'Convert g.es'
    u.beforeChangeGroup (p,undoType)
    for p in c.currentPosition().self_and_subtree_iter():
        replace(p)
    u.afterChangeGroup(p,undoType,reportFlag=True)
finally:
    c.endUpdate()</t>
<t tx="ekr.20060809090508"># Based on leoImport.scanPythonText.
def replace(p):
    '''Replace g.es by g.et and strings s by g._(s)'''
    s = p.bodyString()
    if not s.strip(): return
    result = [] ;  i = 0 ; count = 0
    while i &lt; len(s):
        progress = j = i
        ch = s[i]
        if ch == '\n' or ch == '\r':
            i = g.skip_nl(s,i)
            result.append(s[j:i])
        elif ch == '#':
            i = g.skip_to_end_of_line(s,i)
            result.append(s[j:i])
        elif ch == '"' or ch == "'":
            &lt;&lt; handle string &gt;&gt;
        elif g.is_c_id(ch):
            if g.match_word(s,i,'g.es'):
                &lt;&lt; handle g.es &gt;&gt;
            else:
                i = g.skip_c_id(s,i)
                result.append(s[j:i])
        else:
            i += 1
            result.append(s[j:i])
        assert(progress &lt; i)
    if count:
        result = ''.join(result)
        if doReplace:
            undoData = u.beforeChangeNodeContents(p)
            p.setBodyStringOrPane(result)
            p.v.t.setDirty()
            u.afterChangeNodeContents(p,'Change Body',undoData)
        else:
            g.trace('result...\n',result)</t>
<t tx="ekr.20060809091749.72">i = g.skip_python_string(s,i)
s2 = s[j:i].strip()
result.append('g._(%s)' % s2)
if trace: g.trace('string:',s2)
count += 1</t>
<t tx="ekr.20060809091749.73">i += 4 ; k1 = i
i = g.skip_ws(s,i)
found = False
if g.match(s,i,'('):
    k2 = i
    k3 = g.skip_parens(s,i)
    if g.match(s,k3,')'):
        # Only translate if there are exactly one string in the parens.
        s2 = s[k2+1:k3]
        if (
            s2 and s2.count(',') == 0 and
            (s2.count('"') == 2 or s2.count("'") == 2)
        ):
            i = k3
            if trace: g.trace('call g.es:',g.get_line(s,i))
            result.append('g.et')
            result.append(s[k1:i])
            count += 1 ; found = True
if not found:
    result.append(s[j:i])</t>
<t tx="ekr.20060809092023"></t>
<t tx="ekr.20060809103738">def test1():
    
    g.es('abc')
    g.es('abc',xyz)
    g.es(xyz)</t>
<t tx="ekr.20060809103738.1">def test2():

    x = 'abc' + 'xyz'
    y = abc</t>
<t tx="ekr.20060809104405">@nocolor
@
0.1 EKR: Initial version.
0.2 EKR: Support doReplace and made script fully undoable.</t>
<t tx="ekr.20060814111542"># Add an editor to the body pane.
c.frame.body.addEditor()</t>
<t tx="ekr.20060904110922"></t>
<t tx="ekr.20060904111037">if hasattr(c,'opmlCommands'):
    c.opmlCommands.readOpmlCommand()
else:
    g.es_print('opml plugin not loaded')</t>
<t tx="ekr.20060904111037.1">if hasattr(c,'opmlCommands'):
    c.opmlCommands.writeOpmlCommand()
else:
    g.es_print('opml plugin not loaded')</t>
<t tx="ekr.20060918083159">put = g.es_print

for p in c.allNodes_iter():

    if hasattr(p.v,"unknownAttributes"):
        put("deleting v.unknownAttributes:",
            p.headString(),
            g.listToString(p.v.unknownAttributes.keys()))
        delattr(p.v,"unknownAttributes")

    if hasattr(p.v.t,"unknownAttributes"):
        put("deleting t.unknownAttributes:",
            p.headString(),
            g.listToString(p.v.t.unknownAttributes.keys()))
        delattr(p.v.t,"unknownAttributes")
           
put('done') 
c.redraw()</t>
<t tx="ekr.20060924180049">@
Ever have a clone that is difficult to understand outside the context of its
original parent? Here's some code to help. It displays the headline of the
current node plus the headlines of all the parents of all the clones of the
current node. Selecting a displayed parent headline moves the current node to
the corresponding clone in the outline.

The idea is to be able to quickly see the context of all the clones of the
current node and to be able to easily navigate from one clone instance to the
next.
@c

@others
c.cn = cloneNavigator(c)
c.cn.displayClones(c)
</t>
<t tx="ekr.20060924180049.1">class cloneNavigator:
    '''
       Displays the headline of the current node plus the headlines of
       all the parents of all the clones of the current node.  Selecting
       a displayed parent headline moves the current node to the
       corresponding clone in the outline.
       
       The idea is to be able to quickly see the context of all the clones
       of the current node and to be able to easily navigate from one clone
       instance to the next.
    '''
    @others</t>
<t tx="ekr.20060924180049.2">def __init__ (self,c):
    self.c = c
    import Tkinter as Tk
    if 0:
        f = Tk.Toplevel()
    else:
        log = c.frame.log
        log.selectTab('Clones')
        f = log.tabFrame
        for w in f.winfo_children():
            w.destroy()
    
    # Create and pack empty label and listbox
    self.title = Tk.Label(f)
    self.title.pack(anchor="nw")
    self.lb = Tk.Listbox(f)
    self.lb.pack(expand=1,fill="both")</t>
<t tx="ekr.20060924180049.3">def getAllClones(self,p):
    c = self.c
    def clonesOf(p,p1=p):
        return p.v.t == p1.v.t
    return filter(clonesOf, c.allNodes_iter(copy=True))</t>
<t tx="ekr.20060924180049.4">def displayClones(self,c):
    '''Displays the parent headline for all the clones of the current position'''
    cp = c.currentPosition()
    
    # "Title" is the headline of the current node
    self.title.configure(text=cp.headString())
    
    # Initialize listbox and clone list
    clones = self.getAllClones(cp)
    self.lb.delete(0,self.lb.size()-1)
    
    &lt;&lt;Fill listbox with clone parent headlines&gt;&gt;    
    &lt;&lt;Goto selected position when listbox selection changes&gt;&gt;
</t>
<t tx="ekr.20060924180049.5"># Add the headlines of all the clone parents to the listbox
for p in clones:
    if p.parent():
        text = p.parent().headString()
    else:
        text = "&lt;root&gt;"
    self.lb.insert(self.lb.size(),text)
    
    # Initial listbox selection corresponds to current position
    if p.v == cp.v:
        self.lb.selection_set(self.lb.size()-1)</t>
<t tx="ekr.20060924180049.6"># Callback for when a listbox entry is selected            
def gotoSelectedPosition(event,lb=self.lb,c=c,positions=clones):
    idx = int(lb.curselection()[0])
    p = positions[idx]
    c.frame.tree.expandAllAncestors(p)
    c.selectPosition(p)
    return
self.lb.bind(g.angleBrackets("ListboxSelect"), gotoSelectedPosition)</t>
<t tx="ekr.20061030041200">import os, sys

if 1: # Executes Iron Python in the console. (But not from the tutorials directory).
    path = r'c:\prog\IronPython-1.0.1\ipy.exe'
    args = ['-i']
        
    if 1: # Use present environment.
        os.spawnv(os.P_NOWAIT, path, args)
    else: # Use a pristine environment.
        os.spawnve(os.P_NOWAIT, path, args, os.environ)</t>
<t tx="ekr.20061030041356"></t>
<t tx="ekr.20061030041450"></t>
<t tx="ekr.20070115092430"># Invoke winpdb for general scripts **not** containing the predefined g, p or d constants.

# This is essentially the same as using the debug command.

import os,subprocess,sys

# Important: scriptFile2 must be different from scriptFile.
filename = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','scriptFile2'))
f = open(filename,'w') 
f.write(p.bodyString()) 
f.close() 
python = sys.executable
pythonDir = g.os_path_dirname(python) 
#winpdb = g.os_path_join(pythonDir,'Scripts','_winpdb.py') # For older versions of winpdb.
winpdb = g.os_path_join(pythonDir,'Lib','site-packages','winpdb.py') # For version 1.1.2 and newer.
os.chdir(g.app.loadDir)
cmdline = '%s %s -t %s' % (python,winpdb,filename) 
subprocess.Popen(cmdline)
</t>
<t tx="ekr.20070223164126"># An example of running this script:
    
import os

@others

types = (".py",) #,".c",".html",".txt")

dir = r'C:\prog\Notabene'

c.beginUpdate()
try:
    importFiles(dir,types,recursive=True)
finally:
    c.endUpdate()

g.es("done",color="blue")
</t>
<t tx="ekr.20070223164126.1">def importFiles (dir,type=None,kind="@file",recursive=False):
    
    v = c.currentVnode()

    # Check the params.
    if kind != "@file" and kind != "@root":
        g.es("kind must be @file or @root: " + kind)
        return

    if not g.os_path_exists(dir):
        g.es("directory does not exist: " + dir)
        return
    
    c.beginUpdate()
    try:
        root = createLastChildOf(v,"imported files")
        try:
            importDir (dir,type,kind,recursive,root)
            root.contract()
        except:
            g.es_exception()
    finally:
        c.endUpdate()</t>
<t tx="ekr.20070223164126.2">def importDir (dir,types,kind,recursive,root):

    g.es("dir: " + dir,color="blue")
    
    try:
        files = os.listdir(dir)
        files2 = [] ; dirs =[]
        for f in files:
            path = g.os_path_join(dir,f)
            if g.os_path_isfile(path):
                name, ext = g.os_path_splitext(f)
                if not types or ext in types:
                    files2.append(path)
            elif recursive:
                dirs.append(path)
        if len(files2) &gt; 0 or len(dirs) &gt; 0:
            child = createLastChildOf(root,dir)
            c.selectVnode(child)
        if len(files2) &gt; 0:
            c.importCommands.importFilesCommand(files2,kind)
        if len(dirs) &gt; 0:
            dirs.sort()
            for dir in dirs:
                importDir(dir,types,kind,recursive,child)
    except:
        g.es("exception in importFiles script")
        g.es_exception()
</t>
<t tx="ekr.20070223164126.3">def createLastChildOf (v,headline):
    
    child = v.insertAsLastChild()
    child.initHeadString(headline)
    return child
</t>
<t tx="ekr.20070224123943"></t>
<t tx="ekr.20070305085403">For MacOS X (darwin) the following are typical defaults:

vim_cmd = /Applications/gvim.app/Contents/MacOS/gvim --servername LEO
vim_exe = /Applications/gvim.app/Contents/MacOS/gvim
</t>
<t tx="ekr.20070305085403.1"></t>
<t tx="ekr.20070305085403.2"></t>
<t tx="ekr.20070315071830"># Do not remove these nodes.</t>
<t tx="ekr.20070410063214"></t>
<t tx="ekr.20070416075121">g.app.gui.set_focus(c,w)</t>
<t tx="ekr.20070503085527"></t>
<t tx="ekr.20070504080933">This option applies to directories specified in filenames in all kinds of @file trees, and to filenames specified in the @path directive.

True:  Leo attempts to create directories if they do not exist.
False: Leo never attempts to create directories.</t>
<t tx="ekr.20070515073111">print '=' * 50</t>
<t tx="ekr.20070517070854">import leoGui
oldGui = g.app.gui
g.app.gui = leoGui.nullGui(guiName='testGui')
try:
    fileName = g.os_path_abspath(g.os_path_join(
        g.app.loadDir,'..','doc','LeoDocs.leo'))
    ok,frame = g.openWithFileName(fileName,old_c=c)
    if ok:
        c2 = frame.c
        for p in c2.allNodes_iter():
            print '.'*p.level(),p.headString()
        g.app.closeLeoWindow(frame)
finally:
    g.app.gui = oldGui</t>
<t tx="ekr.20070517071510">import leoBridge

path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','doc','LeoDocs.leo'))

if 0: # This can not be run locally: leoBridge.controller starts a Tk event loop.

    controller = leoBridge.controller(gui='nullGui')
    g = controller.globals()
    c = controller.openLeoFile(path)
    n = 0
    for p in c.allNodes_iter():
        n += 1
    print '%d nodes in %s' % (n,path)
    # g.app.closeLeoWindow(c.frame)</t>
<t tx="ekr.20070517160058.1"></t>
<t tx="ekr.20070528111805"># FrontWindowCapture.pyw
# Version 0.1
# Date    20070526
# Author  Roger Erens (roger AT erens-krekels.net)
"""
        Purpose:
        Capture the image of the front-most window into a fixed-name
        (_front_window), max-size (default MAX_WIDTH is 640 pixels), and
        fixed-format (PNG) file that can easily be used when creating
        documentation for an application on a wiki or in some HTML-docs.
        This script does _not_ copy the captured image to the clipboard (handy
        when creating MS Word or OpenOffice documents) since MS Windows already
        has ALT-PRTSCR to do so.

        Dependencies:
        Fairly recent versions of Python, wxPython, and PIL should be installed

        Start:
        Double click FrontWindowCapture.pyw; an icon appears in the Task Bar (lower right of
        the screen).

        Use:
        Bring a window to the front and then left-click on the
        icon in the Task Bar. A file named '_front_window.png' will be saved
        in the current directory.
        A pictures wider than MAXWIDTH is scaled down in order to make it easily
        used in wikis or HTML-documentation.
        Usually, human intelligence is needed to rename that file; this is also
        why this script does not copy the image to the clipboard.

        End:
        Close the application by right-clicking the icon in the Task Bar.

        Note:
        Make sure that your system is fast enough to find the frontmost
        window. That is, when a virusscanner is running or virtual memory is
        low, this script will choke. You can see what happens by enabling the
        print statements and running this script from a console (change the
        extension from .pyw to .py).
"""
import wx
import sys
import win32ui
import win32gui
import win32con
import time
from PIL import Image, ImageGrab

Image.init()

MAX_WIDTH = 640
BLINK_STATE = 0

class TaskBarApp(wx.Frame):
    def __init__(self, parent, id, title):
        wx.Frame.__init__(self, parent, -1, title, size = (1, 1),
            style=wx.FRAME_NO_TASKBAR| wx.NO_FULL_REPAINT_ON_RESIZE)
        self.tbicon = wx.TaskBarIcon()
        icon = wx.Icon('LeoApp16.ico', wx.BITMAP_TYPE_ICO)
        self.tbicon.SetIcon(icon, 'Click to capture the foremost window')
        self.tbicon.Bind(wx.EVT_TASKBAR_LEFT_UP, self.OnTaskBarLeftClick)
        self.tbicon.Bind(wx.EVT_TASKBAR_RIGHT_UP, self.OnTaskBarRightClick)
        self.Show(True)

    def OnTaskBarLeftClick(self, evt):

        self.FlashIcon(evt)

        def _MyCallback(hwnd, extra ):
            extra.append(hwnd)

        windows = []
        win32gui.EnumWindows(_MyCallback, windows)

        winList = []
        for i in windows:
            if win32gui.IsWindowVisible(i):
                winList.append(i)
                #print i

        win32gui.SetForegroundWindow(winList[1])    # found by trial and error
                                                    # that I need the second
                                                    # window from the list
        time.sleep(0.1)  # give the previous command some time to finish

        fgwindow = win32ui.GetForegroundWindow()
        #print "(C)lick!"

        bbox = fgwindow.GetWindowRect()
        img = ImageGrab.grab( bbox)
        width = bbox[2] - bbox[0]
        if width &gt; MAX_WIDTH:
            coeff = MAX_WIDTH * 1. / width
            height = bbox[3] - bbox[1]
            newHeight = int( coeff * height)
            #print width, height, "scaled down to", MAX_WIDTH, newHeight
            img = img.resize((MAX_WIDTH,newHeight), Image.ANTIALIAS)
        img = img.convert("P", dither=Image.NONE,
                              palette=Image.ADAPTIVE, colors=256)
        img.save("_front_window.png", "PNG", optimize=1)
        #img.show() # show the image in an image viewer

        self.FlashIcon(evt)

    def OnTaskBarRightClick(self, evt):
        #print "Auta..." # that's about it...
        self.tbicon.Destroy()
        self.Close(True)
        wx.GetApp().ProcessIdle()

    def FlashIcon(self, evt):
        global BLINK_STATE
        if BLINK_STATE == 0:
            icon = wx.Icon('LeoApp16lick.ico', wx.BITMAP_TYPE_ICO)
            self.tbicon.SetIcon(icon, 'Window is being captured...')
            BLINK_STATE = 1
            return
        else:
            icon = wx.Icon('LeoApp16.ico', wx.BITMAP_TYPE_ICO)
            self.tbicon.SetIcon(icon, 'Click to capture the foremost window')
            BLINK_STATE = 0
            return

class MyApp(wx.App):
    def OnInit(self):
        frame = TaskBarApp(None, -1, ' ')
        frame.Center(wx.BOTH)
        frame.Show(False)
        return True

def main():
    app = MyApp(0)
    app.MainLoop()

if __name__ == '__main__':
    main()

""" CREDITS

    Thanks to
    Roger Upole:
    http://groups.google.com/group/comp.lang.python/
    browse_thread/thread/ff39ec79f7c3248a/
    e600c892772bf52a?lnk=gst&amp;q=screen+capture&amp;rnum=6#e600c892772bf52a
    for his time.sleep() Aha (This took me a year and a half to note!)

    Christian Wyglendowski, Werner Bruhin, and Xavier Morel for the
    http://wiki.wxpython.org/index.cgi/FlashingTaskbarIcon
    discussion

    'Rob aspn at msolutionsinc.com '
    http://mail.python.org/pipermail/python-win32/2003-June/001129.html
    for his suggestion to find out the foremost window

    and of course the usual suspects that created/maintain
    wxPython,
    PIL,
    pywin32,
    LEO,
    gvim,
    and Python itself.
"""</t>
<t tx="ekr.20070529172620"></t>
<t tx="ekr.20070529173219"></t>
<t tx="ekr.20070529173219.1"></t>
<t tx="ekr.20070530072113">c.chapterController.hideChapters()</t>
<t tx="ekr.20070530072113.1">c.chapterController.showChapters()</t>
<t tx="ekr.20070531102813"></t>
<t tx="ekr.20070531103315">c.abbrevCommands.dynamicExpansion(event=None)</t>
<t tx="ekr.20070531104646">c.abbrevCommands.dynamicCompletion()</t>
<t tx="ekr.20070603175054">cc = c.chapterController
cc.selectChapterByName('abc')</t>
<t tx="ekr.20070603175054.1">cc = c.chapterController
cc.selectChapterByName('main')</t>
<t tx="ekr.20070603190713">cc = c.chapterController
cc.createChapterByName('xyz')</t>
<t tx="ekr.20070603190713.1">cc = c.chapterController
cc.selectChapterByName('xyz')</t>
<t tx="ekr.20070603190944"></t>
<t tx="ekr.20070603190944.1"></t>
<t tx="ekr.20070604095313"></t>
<t tx="ekr.20070604100125"></t>
<t tx="ekr.20070609085533"></t>
<t tx="ekr.20070630142904"></t>
<t tx="ekr.20070630142904.2">@nocolor

To build your module using GCC is a three step process on Unix:

1. Use Pyrex to translate mymodule.pyx to mymodule.c::

    python pyrexc mymodule.pyx

mymodule.pyx is the name of the Pyrex module you are writing.

2. Compile mymodule.c to mymodule.o::

    gcc -c -fPIC -I/usr/include/python2.2/ mymodule.c

-c  Produces a .o file instead of an executable. 
-fPIC Produces position independent code, so we can dynamically link against it later. 
-I/usr/include/python2.2/ is the location of the Python 2.2 include file.
 The location of your Python include file may differ from /usr/include/python2.2/. 

3 Link the mymodule.o into a mymodule.so::
    
    gcc -shared mymodule.o -lxosd -o mymodule.so

-shared produces a shared-object file, instead of an executable. 
-lxosd links against a C-library, with the name of the library given as the argument. 
</t>
<t tx="ekr.20070630142904.3">@nocolor

The pyrexc command supports the following options:

  Short Long              Argument    Description
  ----- ----              --------    -----------
  -v    --version                     Display version number of pyrex compiler
  -l    --create-listing              Write error messages to a .lis file
  -I    --include-dir     &lt;directory&gt; Search for include files in named 
                                      directory (may be repeated)
  -o    --output-file     &lt;filename&gt;  Specify name of generated C file (only
                                      one source file allowed if this is used)

Anything else is taken as the name of a Pyrex source file and compiled
to a C source file. Multiple Pyrex source files can be specified
(unless -o is used), in which case each source file is treated as the
source of a distinct extension module and compiled separately to
produce its own C file.
</t>
<t tx="ekr.20070630142904.4">def spam(int i, char *s):
    if 1:
        print i,s</t>
<t tx="ekr.20070630142904.5"># Use pyrexc to create myModule.c from myModule.pyx.

import os,sys
python = sys.executable
theFile = r'C:\prog\tigris-cvs\leo\test\myModule.pyx'
pyrexc = r'c:\prog\Pyrex-0.9.6.4\pyrexc.py'
os.system(r'%s %s %s' % (python,pyrexc,theFile))

# Use pyrex/Demos/setup.py to create module on Linux.</t>
<t tx="ekr.20070701090143"></t>
<t tx="ekr.20070723091227">
        
        
        </t>
<t tx="ekr.20070723091227.1"></t>
<t tx="ekr.20070723091227.2"></t>
<t tx="ekr.20070723091227.3"></t>
<t tx="ekr.20070927175908">'''Convert a normal Leo tree to a networkx graph'''
import networkx as nx
import sys

x = nx.Graph()

def node_id(p):
    return '%s: %s' % (id(p.v.t),p.headString())

def addTree(p):
    x.add_node(node_id(p))
    for child in p.children_iter():
        addTree(child)
        x.add_edge(node_id(p),node_id(child))

addTree(p)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')
</t>
<t tx="ekr.20070928095102">@ This is a plain Leo tree.

You can convert it to a networkx graph using the leo2graph button.
</t>
<t tx="ekr.20070928095102.1"></t>
<t tx="ekr.20070928095102.2"></t>
<t tx="ekr.20070929062147">@nocolor

The following scripts convert between Leo trees and NetworkX graphs.

- leo2graph:            convert a normal Leo tree to a NetworkX graph.
- at-graph2graph:       convert an @graph tree to a Networkx graph.
- at-networkx2graph:    convert an @networkx tree to a Networkx graph
- at-networkx2at-graph: create an @graph tree from an @networkx tree.

Not ready yet:

- tree2pict: convert a Leo @graph tree to a picture of the corresponding graph.

@color</t>
<t tx="ekr.20070929062147.1">'''Convert an @graph tree to a networkx graph.'''
import networkx as nx
import sys

x = nx.Graph()

def node_id(p):
    return '%s: %s' % (str(p.v.t.fileIndex),p.headString())

def addTree(p):
    tag = '@link'
    h = p.headString()
    if h.startswith('@graph'):
        for child in p.children_iter():
            addTree(child)
    elif h.startswith('@node'):
        x.add_node(node_id(p))
        for child in p.children_iter():
            h = child.headString()
            if h.startswith(tag):
                link = h[len(tag):].strip()
                if link: x.add_edge(node_id(p),link)
            elif child.headString().startswith('@node'):
                addTree(child)
                x.add_edge(node_id(p),node_id(child))

addTree(p)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')</t>
<t tx="ekr.20070929062147.2">'''Convert an @networkx node to a networkx graph.'''
import networkx as nx
import sys

@others

x = nx.Graph()

edges,nodes = parse(p)

for z in nodes:
    x.add_node(z)

for z in edges:
    a,b = z
    x.add_edge(a,b)

print 'nodes...\n', g.listToString(x.nodes(),sort=True)
print 'edges...\n', g.listToString(x.edges(),sort=True)
print 'yaml...\n'
nx.write_yaml(x,sys.stdout) # 'graph.yaml')
</t>
<t tx="ekr.20070929070257">@ This is an @graph tree.

You can convert it to a networkx graph using the at-graph2graph button.</t>
<t tx="ekr.20070929070257.1"></t>
<t tx="ekr.20070929070257.2"></t>
<t tx="ekr.20070929070426">g.es('@link %s: %s' % (str(p.v.t.fileIndex),p.headString()))</t>
<t tx="ekr.20070929070632"></t>
<t tx="ekr.20070929070632.1"></t>
<t tx="ekr.20070929072043">@ This node defines a networkx graph using nodes and edges.

You can create an @graph tree from this node using the graph2at-graph button.
</t>
<t tx="ekr.20070929072506"># Each edge is represented as two lines.

# child1 --&gt; child2
('ekr', '20070929070257', 1): @node child1
('ekr', '20070929070257', 2): @node child2

# child2 --&gt; child1
('ekr', '20070929070257', 2): @node child2
('ekr', '20070929070257', 1): @node child1

</t>
<t tx="ekr.20070929072506.1"># Each node is on a separate line.

('ekr', '20070929070257', 1): @node child1
('ekr', '20070929070257', 2): @node child2
</t>
<t tx="ekr.20070929072506.2">def parseNodes (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(g.listToString(lines))
    return lines
</t>
<t tx="ekr.20070929074830">def parse (p):

    tag = '@networkx'
    if not p.headString().startswith(tag):
        p = g.findNodeAnywhere(c,tag)
        if not p.headString().startswith(tag):
            error('No %s node in the outline' % tag)
            return [],[]

    nodes = []
    for tag in ('@edges','@nodes'):
        node = g.findNodeInTree(c,p,tag)
        if node:
            nodes.append(node)
        else:
            error('No %s node in @networkx tree' % tag)
            return [],[]
    edgesNode,nodesNode = nodes
    edges = parseEdges(edgesNode)
    nodes = parseNodes(nodesNode)
    return edges,nodes
</t>
<t tx="ekr.20070929074830.1">def parseEdges (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(len(lines),lines)
    if (len(lines) % 2) == 0:
        i = 0 ; edges = []
        while i &lt; len(lines):
            data = lines[i],lines[i+1]
            edges.append(data)
            i += 2
        # g.trace(g.listToString(edges))
        return edges
    else:
        error('edges node must have even number of lines')
        return []

</t>
<t tx="ekr.20070929081505">def error (s):

    g.es_print(s,color='red')
</t>
<t tx="ekr.20070929082546">'''Convert an @networkx node to an @graph tree.
Create the tree as the child of the @graph-target node,
or the current position if no such node.'''

import networkx as nx
import sys

@others

print '=' * 10

p,edges,nodes = parse(p)

createTree(p,edges,nodes)
</t>
<t tx="ekr.20070929114410.2">def error (s):

    g.es_print(s,color='red')
</t>
<t tx="ekr.20070929114410.3">def parse (p):

    tag = '@graph-target'
    if not p.headString().startswith(tag):
        p = g.findNodeAnywhere(c,tag)
    if not (p and p.headString().startswith(tag)):
        p = c.currentPosition() # Use the presently selected node.

    nodes = [] ; tag = '@networkx'
    data = g.findNodeAnywhere(c,tag)
    if not data:
        error('No %s tree' % tag)
        return None,[],[]
    for tag in ('@edges','@nodes'):
        node = g.findNodeInTree(c,data,tag)
        if node:
            nodes.append(node)
        else:
            error('No %s node in @networkx tree' % tag)
            return None,[],[]
    edgesNode,nodesNode = nodes
    edges = parseEdges(edgesNode)
    nodes = parseNodes(nodesNode)
    return p,edges,nodes
</t>
<t tx="ekr.20070929114410.4">def parseNodes (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(g.listToString(lines))
    return lines
</t>
<t tx="ekr.20070929114410.5">def parseEdges (p):

    s = p.bodyString()
    lines = [str(z).strip() for z in g.splitLines(s) if z.strip() and not z.startswith('#')]
    # g.trace(len(lines),lines)
    if (len(lines) % 2) == 0:
        i = 0 ; edges = []
        while i &lt; len(lines):
            data = lines[i],lines[i+1]
            edges.append(data)
            i += 2
        # g.trace(g.listToString(edges))
        return edges
    else:
        error('edges node must have even number of lines')
        return []

</t>
<t tx="ekr.20070929114617">@ This will be the root node for the @graph tree produced by the at-networkx2at-graph button.</t>
<t tx="ekr.20070929115302">def createTree (parent,edges,nodes):

    if 0:
        g.trace('nodes...\n', g.listToString(nodes,sort=True))
        g.trace('edges...\n', g.listToString(edges,sort=True))

    c.beginUpdate()
    try:
        p = parent.insertAsLastChild()
        p.setHeadString('@graph')
        d = createNodes(p,nodes)
        createEdges(d,edges)
        c.selectPosition(p)
    finally:
        c.endUpdate()
</t>
<t tx="ekr.20070929120541">def createEdges (d,edges):

    for edge in edges:
        a,b = edge
        g.trace('\n%s --&gt; %s' % (a,b))
        p = d.get(a)
        if p:
            p2 = p.insertAsLastChild()
            p2.setHeadString('@link %s' % (b))
        else:
            error('@node not found: %s' % (a))
</t>
<t tx="ekr.20070929120541.1">def createNodes (parent,nodes):

    d = {}

    for node in nodes:
        # g.trace(node)
        p = parent.insertAsLastChild()
        p.setHeadString('@node %s' % (node))
        d[node] = p.copy()

    return d
</t>
<t tx="ekr.20070929122956"></t>
<t tx="ekr.20070929122956.1"></t>
<t tx="ekr.20071002150320">log = c.frame.log
tag = 'my-canvas'

w = log.canvasDict.get(tag)
if not w:
    w = log.createCanvas(tag)
    w.configure(bg='yellow')

log.selectTab(tag)
</t>
<t tx="ekr.20071006084354">w = c.frame.body.bodyCtrl
s = w.getAllText()
ins = w.getInsertPoint()
row,col = g.convertPythonIndexToRowCol(s,ins)
print 'row',row,'col',col</t>
<t tx="ekr.20071025192258">import leoTest
leoTest.doTests (c,all=False)</t>
<t tx="ekr.20071025193940"># Caution: you will have to disable cursesGui in an external editor
# if you enable the cursesGui plugin it here

plugins_menu.py

# ipython.py
cleo.py
rClick.py
toolbar.py

add_directives.py
color_markup.py
threading_colorizer.py
rst3.py
UNL.py
open_with.py
mod_scripting.py

nav_buttons.py
hoist.py
image.py
leo_to_html.py

# vim.py
</t>
<t tx="ekr.20071026102420.2"></t>
<t tx="ekr.20071026102420.3"></t>
<t tx="ekr.20071101163934">import leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        controller.processTopTree(p)
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20071105085941"></t>
<t tx="ekr.20071128122043">log = c.frame.log ; tag = 'Shell'
frame1 = log.frameDict.get(tag)
shellKind = 'text' # in ('plain','text','canvas')

if frame1:
    log.selectTab(tag)
elif shellKind == 'plain':
    log.selectTab (tag,createText=False)
    frame = log.frameDict.get(tag)
elif shellKind == 'text':
    log.selectTab (tag,createText=True)
    frame = log.textDict.get(tag)
elif shellKind == 'canvas':
    log.createCanvas(tag)
    log.selectTab(tag)
    frame = log.canvasDict.get(tag)
else:
    frame = None
    g.es('bad shellKind',shellKind)

if frame and not frame1:
    frame.configure(bg='white')
    print 'logFrame',log.frameDict.get(tag)
</t>
<t tx="ekr.20071129103842"># A script to create @auto nodes from all .py files in a directory.

import glob,os

reallyCreate = False
baseDir = r'c:\Python25\Lib\site-packages\pubsub'
dirs = ('',) #'Extensions','UserConfig',)
print '-----'

c.beginUpdate()
try:
    for theDir in dirs:
        pattern = g.os_path_join(baseDir,theDir,'*.py')
        files = glob.glob(pattern)
        print pattern
        # print g.listToString(files)
        for name in files:
            h = '@auto %s' % (name[len(baseDir) + 1:].strip())
            print 'creating',h
            if reallyCreate:
                child = p.insertAsLastChild()
                child.initHeadString(h)
finally:
    c.endUpdate()
</t>
<t tx="ekr.20071206070207"></t>
<t tx="ekr.20080105115712"># This hangs Leo while pylint is running.
import pylint.lint as lint
import sys

rcFile = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','test','pylint-leo-rc.txt'))
rcArg = '--rcfile=%s' % rcFile
&lt;&lt; define data &gt;&gt;

# We expect only one W104 error, in leoGlobals.py
print ; print '=' * 40
for name,s in data:
    name2 = g.os_path_abspath(g.os_path_join(g.app.loadDir,name))
    args = [name2,rcArg]
    if s.strip():
        args.append('--disable-msg=%s' % s)
    print name,s
    lint.Run(args)
print ; print 'End of pylint run'</t>
<t tx="ekr.20080105120559">data = (
    ('leoAtFile.py',''), 
    ('leoChapters.py',''),
    ('leoCommands.py',''), 
    ('leoEditCommands.py','E1101'),
    ('leoFileCommands.py',''), 
    ('leoFind.py',''),
    ('leoFrame.py',''),
    ('leoGlobals.py','E0602,E1101'),
    ('leoGui.py',''),
    ('leoImport.py',''),
    ('leoMenu.py',''),
    ('leoNodes.py',''),
    ('leoPlugins.py',''),
    ('leoTangle.py',''),
    ('leoUndo.py','W0102'),
    ('leoTkinterDialog.py',''),
    ('leoTkinterFind.py',''),
    ('leoTkinterGui.py',''),
    ('leoTkinterFrame.py','W0221'),
    ('leoTkinterKeys.py',''), 
    ('leoTkinterMenu.py',''), 
    ('leoTkinterTree.py',''),
)
</t>
<t tx="ekr.20080105130903">@nocolor
@
C0111 Missing docstring
C0301 Line too long
C0311 Bad indentation
C0321 More than one statement on a single line
C0322 Operator not preceded by a space
C0323 Operator not followed by a space
C0324 Comma not followed by a space

R0201 Method could be a function.
R0903 Too few public methods (0/1)

W0102 Dangerous default value [] as argument
W0104 Statement seems to have no effect
W0106 Unnecessary semicolon
W0107 Unnecessary pass statement
W0122 Use of the exec statement
W0141 Used builtin function 'map'
W0142 Used * or * magic*
W0201 Attribute defined outside __init__
W0212 Access to a protected member of a client class
W0231 __init__ method from base class is not called
W0232 Class has no __init__ method
W0401 Wildcard import (pychecker)
W0402 Uses of a deprecated module (like string)
W0404 Reimport &lt;module&gt;: let pychecker do this.
W0406 Module import itself
W0602 Using global for x but no assigment is done (leoEditCommands defines classList after all classes).
W0603 Using the global statement
W0612 Unused variable
W0613 Unused argument (sometimes used for debugging)
W0621 Redefining &lt;name&gt; from outer scope: especially __pychecker__
W0622 Redefining built-in
W0631 Using possibly undefined loop variable
W0702 No exception type specified
W0703 Catch "Exception"
W0704 Except doesn't do anything (Except: pass)
W1111 Assigning to a function call that only returns None</t>
<t tx="ekr.20080115085447">@nocolor
@

************* Module leoGlobals
W0104:3871: Statement seems to have no effect
</t>
<t tx="ekr.20080206055658">print 'settings...'
for z in ('body','button','headline','log','menu','outline'):
    for z2 in ('family','size','slant','weight',):
        setting = '%s_text_font_%s' % (z,z2)
        print setting,c.config.get(setting,z2)

print 'default sizes...'
for z in ('Body','Log','Menu','Tree'):
    setting = 'default%sFontSize' % z
    print setting,getattr(c.config,setting)

print 'actual fonts...'
for z in ('body','button','headline','log','menu','outline'):
    kind = ('family','size','slant','weight')
    arg0,arg1,arg2,arg3 = args = ['%s_text_font_%s' % (z,z2) for z2 in kind]
    setting = '%s_text_font' % (z)
    print '%20s' % (setting),c.config.getFontFromParams(arg0,arg1,arg2,arg3,defaultSize=12)
</t>
<t tx="ekr.20080214091706.2">print 'hello from ekr'</t>
<t tx="ekr.20080310111916.1">def myTranslateString (s):

    i = s.lower().find('can not')
    if i == -1:
        return s
    else:
        return s[:i+1] + "an't" + s[i+7:]

g.translateString = myTranslateString

</t>
<t tx="ekr.20080412082246.1"></t>
<t tx="ekr.20080503202744.3">import rope.base.project
import rope.contrib.codeassist as codeassist
import leoGlobals as g
import leoCommands
c2 = leoCommands.Commands(frame=c.frame,fileName='xyz-file')

class leoFSCommands (object):
    def create_file(self,path):         g.trace(path)
    def create_folder(self,path):       g.trace(path)
    def move (self,path,new_location):  g.trace(path,new_location)
    def remove (self,path):             g.trace(path)
    def write (self,path,data):         g.trace(path,data)

path = g.os_path_abspath(g.os_path_join(g.app.loadDir,'..','..'))
    # Make the trunk folder a project
project = rope.base.project.Project(path,fscommands=leoFSCommands)
s = p.bodyString() # Could simulate a write to allow @others.

print '*' * 40
for pattern in (
    # 'g.', # works.
    # 'g.trace(', # weird.
    # 'rope.base.', # works.
    'g.list', # works: gives g.listToString
    'c2.de', # works.
):
    i = s.find(pattern)
    if i &gt; -1:
        proposals = codeassist.code_assist(project,s,i+len(pattern))
        print '-' * 20
        print 'pattern:',pattern
        print g.listToString(proposals)</t>
<t tx="ekr.20080529111617.1"></t>
<t tx="ekr.20080529111617.2"></t>
<t tx="ekr.20080529111617.3">The colour used instead of green in progress bars</t>
<t tx="ekr.20080529111617.4">The colour used instead of red in progress bars</t>
<t tx="ekr.20080529111617.5"># list of @file node types to color.
# Uncomment these to enable coloring for these kinds of nodes.
# @asis
# @file
# @auto
# @thin
@auto</t>
<t tx="ekr.20080529111617.6">The base width of progress bars, in pixels.</t>
<t tx="ekr.20080529111617.7">The default number of time units.</t>
<t tx="ekr.20080529111617.8">0: no progress bars
1: unscaled progress bars
2: scaled progress bars</t>
<t tx="ekr.20080529111617.9">pixels per time unit to add to width of scaled progress bars</t>
<t tx="ekr.20080529111617.10">The name of time unit (e.g. days, weeks, hours)</t>
<t tx="ekr.20080531080812.1">def eggs():
    g.trace()

def spam():
    g.trace()
    eggs()

t = g.startTracer()
spam()
t.stop()
</t>
<t tx="ekr.20080531131542.1">import mx.TextTools as tt

&lt;&lt; define scan4 tables &gt;&gt;
&lt;&lt; define s &gt;&gt;

@others

print '*' * 60
ok,taglist,nextindex = tt.tag(s,lineTable)
# print g.listToString(taglist)
for z in taglist:
    printItem(z,level=0)
print 'ok:',ok
</t>
<t tx="ekr.20080531131542.2">from mx.TextTools import * # Required for tags.

ws_charset   = CharSet(' \t')
name_charset = CharSet(alpha)

gnxTable = (
    (None,Is,':',MatchFail),
    (None,AllNotIn,':',MatchFail),
    (None,Is,':',MatchFail,MatchOk),
)

sentinelNameTable = (
    (None,Is,'@',+1,+3),
    (None,Is,'+',+1,+2),
    (None,Is,'-',+1),
    (None,AllInCharSet,name_charset,MatchFail,MatchOk),
)

sentinelTable = (
    # Start of another line.
    # Skip ws.
    (None,AllInCharSet,ws_charset,+1),
    # Require sentinel comment.
    (None,Word,'#@',MatchFail),
    ('kind',Table,sentinelNameTable,MatchFail),
    ('gnx',Table,gnxTable,+1),
    # Everything else is the sentinel value
    ('extra',AllNotIn,'\n',+1),
    (None,Is,'\n',MatchOk,MatchOk),
)

normalLineTable = (
    (None,AllNotIn,'\n',+1),
    (None,Is,'\n',MatchOk,MatchOk),
)

lineTable = (
    ('sent',Table,sentinelTable,+1,+2),
    ('line',Table,normalLineTable,+1,+1),
    ('eof',EOF,Here,-2),
)</t>
<t tx="ekr.20080531131542.4">def printItem(aList,level):

    obj,lt_index,rt_index,subtag = aList
    print '  '*level,obj,repr(s[lt_index:rt_index])
    if subtag:
        for z in subtag:
            printItem(z,level+1)
</t>
<t tx="ekr.20080531141227.1">path = r'c:\leo.repo\trunk\leo\core\runLeo.py'
f = file(path)
s = f.read()
f.close()</t>
<t tx="ekr.20080603071026.1"></t>
<t tx="ekr.20080603071026.2"></t>
<t tx="ekr.20080603071026.3"></t>
<t tx="ekr.20080603071026.4">&amp;Open...</t>
<t tx="ekr.20080603071026.5"></t>
<t tx="ekr.20080603071026.6"></t>
<t tx="ekr.20080603071026.7">&amp;Close</t>
<t tx="ekr.20080603071026.8">&amp;Save</t>
<t tx="ekr.20080603071026.9">Save &amp;As</t>
<t tx="ekr.20080603071026.10">Save As &amp;Unzipped</t>
<t tx="ekr.20080603071026.11">Save As &amp;Zipped</t>
<t tx="ekr.20080603071026.12">Save &amp;To</t>
<t tx="ekr.20080603071026.13">Re&amp;vert To Saved</t>
<t tx="ekr.20080603071026.14">A placeholder for the actual menu.
Leo's init code populates this menu as a special case.</t>
<t tx="ekr.20080603071026.15"></t>
<t tx="ekr.20080603071026.16"></t>
<t tx="ekr.20080603071026.17"></t>
<t tx="ekr.20080603071026.18"></t>
<t tx="ekr.20080603071026.19"></t>
<t tx="ekr.20080603071026.20"></t>
<t tx="ekr.20080603071026.21"></t>
<t tx="ekr.20080603071026.22"></t>
<t tx="ekr.20080603071026.23"></t>
<t tx="ekr.20080603071026.24"></t>
<t tx="ekr.20080603071026.25"></t>
<t tx="ekr.20080603071026.26"></t>
<t tx="ekr.20080603071026.27">Read @&amp;auto Nodes</t>
<t tx="ekr.20080603071026.28">Write @a&amp;uto Nodes</t>
<t tx="ekr.20080603071026.29">Write D&amp;irty @a&amp;uto Nodes</t>
<t tx="ekr.20080603071026.30"></t>
<t tx="ekr.20080603071026.31">Read @file &amp;Nodes</t>
<t tx="ekr.20080603071026.32">Write &amp;Dirty @file Nodes</t>
<t tx="ekr.20080603071026.33">Write &amp;Missing @file Nodes</t>
<t tx="ekr.20080603071026.34">&amp;Write @file Nodes</t>
<t tx="ekr.20080603071026.35"></t>
<t tx="ekr.20080603071026.36"></t>
<t tx="ekr.20080603071026.37"></t>
<t tx="ekr.20080603071026.38"></t>
<t tx="ekr.20080603071026.39"></t>
<t tx="ekr.20080603071026.40"></t>
<t tx="ekr.20080603071026.41"></t>
<t tx="ekr.20080603071026.42"></t>
<t tx="ekr.20080603071026.43"></t>
<t tx="ekr.20080603071026.44"></t>
<t tx="ekr.20080603071026.45">Import To @&amp;file</t>
<t tx="ekr.20080603071026.46">Import To @&amp;root</t>
<t tx="ekr.20080603071026.47"></t>
<t tx="ekr.20080603071026.48"></t>
<t tx="ekr.20080603071026.49"></t>
<t tx="ekr.20080603071026.50"></t>
<t tx="ekr.20080603071026.51"></t>
<t tx="ekr.20080603071026.52"></t>
<t tx="ekr.20080603071026.53"></t>
<t tx="ekr.20080603071026.54"></t>
<t tx="ekr.20080603071026.55"></t>
<t tx="ekr.20080603071026.56"></t>
<t tx="ekr.20080603071026.57"></t>
<t tx="ekr.20080603071026.58">E&amp;xit</t>
<t tx="ekr.20080603071026.59"></t>
<t tx="ekr.20080603071026.60">Can't Undo</t>
<t tx="ekr.20080603071026.61">Can't Redo</t>
<t tx="ekr.20080603071026.62"></t>
<t tx="ekr.20080603071026.63">Cu&amp;t</t>
<t tx="ekr.20080603071026.64">Cop&amp;y</t>
<t tx="ekr.20080603071026.65">&amp;Paste</t>
<t tx="ekr.20080603071026.66">&amp;Delete</t>
<t tx="ekr.20080603071026.67">Select &amp;All</t>
<t tx="ekr.20080603071026.68"></t>
<t tx="ekr.20080603071026.69"></t>
<t tx="ekr.20080603071026.70"></t>
<t tx="ekr.20080603071026.71"></t>
<t tx="ekr.20080603071026.72"></t>
<t tx="ekr.20080603071026.73"></t>
<t tx="ekr.20080603071026.74"></t>
<t tx="ekr.20080603071026.75"></t>
<t tx="ekr.20080603071026.76"></t>
<t tx="ekr.20080603071026.77"></t>
<t tx="ekr.20080603071026.78"></t>
<t tx="ekr.20080603071026.79"></t>
<t tx="ekr.20080603071026.80"></t>
<t tx="ekr.20080603071026.81"></t>
<t tx="ekr.20080603071026.82"></t>
<t tx="ekr.20080603071026.83"></t>
<t tx="ekr.20080603071026.84"></t>
<t tx="ekr.20080603071026.85"></t>
<t tx="ekr.20080603071026.86"></t>
<t tx="ekr.20080603071026.87"></t>
<t tx="ekr.20080603071026.88"></t>
<t tx="ekr.20080603071026.89"></t>
<t tx="ekr.20080603071026.90"></t>
<t tx="ekr.20080603071026.91"></t>
<t tx="ekr.20080603071026.92"></t>
<t tx="ekr.20080603071026.93"></t>
<t tx="ekr.20080603071026.94"></t>
<t tx="ekr.20080603071026.95"></t>
<t tx="ekr.20080603071026.96"></t>
<t tx="ekr.20080603071026.97"></t>
<t tx="ekr.20080603071026.98"></t>
<t tx="ekr.20080603071026.99"></t>
<t tx="ekr.20080603071026.100"></t>
<t tx="ekr.20080603071026.101"></t>
<t tx="ekr.20080603071026.102"></t>
<t tx="ekr.20080603071026.103"></t>
<t tx="ekr.20080603071026.104"></t>
<t tx="ekr.20080603071026.105"></t>
<t tx="ekr.20080603071026.106"></t>
<t tx="ekr.20080603071026.107"></t>
<t tx="ekr.20080603071026.108"></t>
<t tx="ekr.20080603071026.109"></t>
<t tx="ekr.20080603071026.110"></t>
<t tx="ekr.20080603071026.111"></t>
<t tx="ekr.20080603071026.112"></t>
<t tx="ekr.20080603071026.113"></t>
<t tx="ekr.20080603071026.114"></t>
<t tx="ekr.20080603071026.115"></t>
<t tx="ekr.20080603071026.116"></t>
<t tx="ekr.20080603071026.117"></t>
<t tx="ekr.20080603071026.118">Show In&amp;visibles</t>
<t tx="ekr.20080603071026.119">Setti&amp;ngs</t>
<t tx="ekr.20080603071026.120"></t>
<t tx="ekr.20080603071026.121"></t>
<t tx="ekr.20080603071026.122"></t>
<t tx="ekr.20080603071026.123"></t>
<t tx="ekr.20080603071026.124">Pas&amp;te Node As Clone</t>
<t tx="ekr.20080603071026.125"></t>
<t tx="ekr.20080603071026.126"></t>
<t tx="ekr.20080603071026.127"></t>
<t tx="ekr.20080603071026.128"></t>
<t tx="ekr.20080603071026.129"></t>
<t tx="ekr.20080603071026.130"></t>
<t tx="ekr.20080603071026.131"></t>
<t tx="ekr.20080603071026.132"></t>
<t tx="ekr.20080603071026.133"></t>
<t tx="ekr.20080603071026.134">D&amp;e-Hoist</t>
<t tx="ekr.20080603071026.135"></t>
<t tx="ekr.20080603071026.136"></t>
<t tx="ekr.20080603071026.137"></t>
<t tx="ekr.20080603071026.138"></t>
<t tx="ekr.20080603071026.139"></t>
<t tx="ekr.20080603071026.140"></t>
<t tx="ekr.20080603071026.141"></t>
<t tx="ekr.20080603071026.142"></t>
<t tx="ekr.20080603071026.143"></t>
<t tx="ekr.20080603071026.144"></t>
<t tx="ekr.20080603071026.145"></t>
<t tx="ekr.20080603071026.146"></t>
<t tx="ekr.20080603071026.147"></t>
<t tx="ekr.20080603071026.148"></t>
<t tx="ekr.20080603071026.149"></t>
<t tx="ekr.20080603071026.150"></t>
<t tx="ekr.20080603071026.151"></t>
<t tx="ekr.20080603071026.152"></t>
<t tx="ekr.20080603071026.153"></t>
<t tx="ekr.20080603071026.154"></t>
<t tx="ekr.20080603071026.155"></t>
<t tx="ekr.20080603071026.156"></t>
<t tx="ekr.20080603071026.157"></t>
<t tx="ekr.20080603071026.158"></t>
<t tx="ekr.20080603071026.159"></t>
<t tx="ekr.20080603071026.160"></t>
<t tx="ekr.20080603071026.161"></t>
<t tx="ekr.20080603071026.162"></t>
<t tx="ekr.20080603071026.163"></t>
<t tx="ekr.20080603071026.164"></t>
<t tx="ekr.20080603071026.165">Move &amp;Down</t>
<t tx="ekr.20080603071026.166">Move &amp;Left</t>
<t tx="ekr.20080603071026.167">Move &amp;Right</t>
<t tx="ekr.20080603071026.168">Move &amp;Up</t>
<t tx="ekr.20080603071026.169"></t>
<t tx="ekr.20080603071026.170"></t>
<t tx="ekr.20080603071026.171"></t>
<t tx="ekr.20080603071026.172"></t>
<t tx="ekr.20080603071026.173"></t>
<t tx="ekr.20080603071026.174"></t>
<t tx="ekr.20080603071026.175"></t>
<t tx="ekr.20080603071026.176"></t>
<t tx="ekr.20080603071026.177"></t>
<t tx="ekr.20080603071026.178"></t>
<t tx="ekr.20080603071026.179"></t>
<t tx="ekr.20080603071026.180"></t>
<t tx="ekr.20080603071026.181">Go To &amp;First Node</t>
<t tx="ekr.20080603071026.182">Go To First V&amp;isible</t>
<t tx="ekr.20080603071026.183">Go To First Si&amp;bling</t>
<t tx="ekr.20080603071026.184"></t>
<t tx="ekr.20080603071026.185">Go To Next C&amp;hanged</t>
<t tx="ekr.20080603071026.186">Go To Next &amp;Clone</t>
<t tx="ekr.20080603071026.187">Go To Next &amp;Marked</t>
<t tx="ekr.20080603071026.188">Go To Next N&amp;ode</t>
<t tx="ekr.20080603071026.189">Go To Next &amp;Sibling</t>
<t tx="ekr.20080603071026.190">Go To Next Visibl&amp;e</t>
<t tx="ekr.20080603071026.191">Go To Next Visite&amp;d</t>
<t tx="ekr.20080603071026.192"></t>
<t tx="ekr.20080603071026.193">Go To P&amp;arent</t>
<t tx="ekr.20080603071026.194"></t>
<t tx="ekr.20080603071026.195">Go To &amp;Prev Node</t>
<t tx="ekr.20080603071026.196">Go To P&amp;rev Sibling</t>
<t tx="ekr.20080603071026.197">Go To Pre&amp;v Visible</t>
<t tx="ekr.20080603071026.198">Go To Prev Visi&amp;ted</t>
<t tx="ekr.20080603071026.199"></t>
<t tx="ekr.20080603071026.200">Go To Last Node</t>
<t tx="ekr.20080603071026.201">Go To Last Siblin&amp;g</t>
<t tx="ekr.20080603071026.202">Go To &amp;Last Visible</t>
<t tx="ekr.20080603071026.203"></t>
<t tx="ekr.20080603071026.204"></t>
<t tx="ekr.20080603071026.205"></t>
<t tx="ekr.20080603071026.206"></t>
<t tx="ekr.20080603071026.207"></t>
<t tx="ekr.20080603071026.208"></t>
<t tx="ekr.20080603071026.209"></t>
<t tx="ekr.20080603071026.210"></t>
<t tx="ekr.20080603071026.211"></t>
<t tx="ekr.20080603071026.212"></t>
<t tx="ekr.20080603071026.213"></t>
<t tx="ekr.20080603071026.214"></t>
<t tx="ekr.20080603071026.215"></t>
<t tx="ekr.20080603071026.216"></t>
<t tx="ekr.20080603071026.217"></t>
<t tx="ekr.20080603071026.218"></t>
<t tx="ekr.20080603071026.219"></t>
<t tx="ekr.20080603071026.220"></t>
<t tx="ekr.20080603071026.221"></t>
<t tx="ekr.20080603071026.222"></t>
<t tx="ekr.20080603071026.223"></t>
<t tx="ekr.20080603071026.224"></t>
<t tx="ekr.20080603071026.225"></t>
<t tx="ekr.20080603071026.226"></t>
<t tx="ekr.20080603071026.227"></t>
<t tx="ekr.20080603071026.228"></t>
<t tx="ekr.20080603071026.229"></t>
<t tx="ekr.20080603071026.230"></t>
<t tx="ekr.20080603071026.231"></t>
<t tx="ekr.20080603071026.232"></t>
<t tx="ekr.20080603071026.233"></t>
<t tx="ekr.20080603071026.234"></t>
<t tx="ekr.20080603071026.235"></t>
<t tx="ekr.20080603071026.236"></t>
<t tx="ekr.20080603071026.237"></t>
<t tx="ekr.20080603071026.238"></t>
<t tx="ekr.20080603071026.239"></t>
<t tx="ekr.20080603071026.240"></t>
<t tx="ekr.20080603071026.241"></t>
<t tx="ekr.20080603071026.242"></t>
<t tx="ekr.20080603071026.243"></t>
<t tx="ekr.20080603071026.244"></t>
<t tx="ekr.20080603071026.245"></t>
<t tx="ekr.20080603071026.246"></t>
<t tx="ekr.20080603071026.247"></t>
<t tx="ekr.20080603071026.248"></t>
<t tx="ekr.20080603071026.249"></t>
<t tx="ekr.20080603071026.250"></t>
<t tx="ekr.20080603071026.251"></t>
<t tx="ekr.20080603071026.252"></t>
<t tx="ekr.20080603071026.253"></t>
<t tx="ekr.20080603071026.254"></t>
<t tx="ekr.20080603071026.255"></t>
<t tx="ekr.20080603071026.256"></t>
<t tx="ekr.20080603071026.257"></t>
<t tx="ekr.20080603071026.258"></t>
<t tx="ekr.20080603071026.259"></t>
<t tx="ekr.20080603071026.260"></t>
<t tx="ekr.20080603071026.261"></t>
<t tx="ekr.20080603071026.262"></t>
<t tx="ekr.20080603071026.263"></t>
<t tx="ekr.20080603071026.264"></t>
<t tx="ekr.20080603071026.265"></t>
<t tx="ekr.20080603071026.266"></t>
<t tx="ekr.20080603071026.267"></t>
<t tx="ekr.20080603071026.268"></t>
<t tx="ekr.20080603071026.269"></t>
<t tx="ekr.20080603071026.270"></t>
<t tx="ekr.20080603071026.271"></t>
<t tx="ekr.20080603071026.272"></t>
<t tx="ekr.20080603071026.273"></t>
<t tx="ekr.20080603071026.274"></t>
<t tx="ekr.20080603071026.275"></t>
<t tx="ekr.20080603071026.276"></t>
<t tx="ekr.20080603071026.277"></t>
<t tx="ekr.20080603071026.278"></t>
<t tx="ekr.20080603071026.279"></t>
<t tx="ekr.20080603071026.280"></t>
<t tx="ekr.20080603071026.281"></t>
<t tx="ekr.20080603071026.282"></t>
<t tx="ekr.20080603071026.283"></t>
<t tx="ekr.20080603071026.284"></t>
<t tx="ekr.20080603071026.285"></t>
<t tx="ekr.20080603071026.286"></t>
<t tx="ekr.20080603071026.287"></t>
<t tx="ekr.20080603071026.288"></t>
<t tx="ekr.20080603071026.289"></t>
<t tx="ekr.20080603071026.290"></t>
<t tx="ekr.20080603071026.291"></t>
<t tx="ekr.20080603071026.292"></t>
<t tx="ekr.20080603071026.293"></t>
<t tx="ekr.20080603071026.294"></t>
<t tx="ekr.20080603071026.295"></t>
<t tx="ekr.20080603071026.296"></t>
<t tx="ekr.20080603071026.297"></t>
<t tx="ekr.20080603071026.298"></t>
<t tx="ekr.20080603071026.299"></t>
<t tx="ekr.20080603071026.300"></t>
<t tx="ekr.20080603071026.301"></t>
<t tx="ekr.20080603071026.302"></t>
<t tx="ekr.20080603071026.303"></t>
<t tx="ekr.20080603071026.304"></t>
<t tx="ekr.20080603071026.305"></t>
<t tx="ekr.20080603071026.306"></t>
<t tx="ekr.20080603071026.307"></t>
<t tx="ekr.20080603071026.308"></t>
<t tx="ekr.20080603071026.309"></t>
<t tx="ekr.20080603071026.310"></t>
<t tx="ekr.20080603071026.311"></t>
<t tx="ekr.20080603071026.312"></t>
<t tx="ekr.20080603071026.313"></t>
<t tx="ekr.20080603071026.314"></t>
<t tx="ekr.20080603071026.315"></t>
<t tx="ekr.20080603071026.316"></t>
<t tx="ekr.20080603071026.317"></t>
<t tx="ekr.20080603071026.318"></t>
<t tx="ekr.20080603071026.319"></t>
<t tx="ekr.20080603071026.320"></t>
<t tx="ekr.20080603071026.321"></t>
<t tx="ekr.20080603071026.322"></t>
<t tx="ekr.20080603071026.323"></t>
<t tx="ekr.20080603071026.324"></t>
<t tx="ekr.20080603071026.325"></t>
<t tx="ekr.20080603071026.326"></t>
<t tx="ekr.20080603071026.327"></t>
<t tx="ekr.20080603071026.328"></t>
<t tx="ekr.20080603071026.329"></t>
<t tx="ekr.20080603071026.330"></t>
<t tx="ekr.20080603071026.331"></t>
<t tx="ekr.20080603071026.332"></t>
<t tx="ekr.20080603071026.333"></t>
<t tx="ekr.20080603071026.334"></t>
<t tx="ekr.20080603071026.335"></t>
<t tx="ekr.20080603071026.336"></t>
<t tx="ekr.20080603071026.337"></t>
<t tx="ekr.20080603071026.338"></t>
<t tx="ekr.20080603071026.339"></t>
<t tx="ekr.20080603071026.340"></t>
<t tx="ekr.20080603071026.341"></t>
<t tx="ekr.20080603071026.342"></t>
<t tx="ekr.20080603071026.343"></t>
<t tx="ekr.20080603071026.344"></t>
<t tx="ekr.20080603071026.345"></t>
<t tx="ekr.20080603071026.346"></t>
<t tx="ekr.20080603071026.347"></t>
<t tx="ekr.20080603071026.348"></t>
<t tx="ekr.20080603071026.349"></t>
<t tx="ekr.20080603071026.350"></t>
<t tx="ekr.20080603071026.351"></t>
<t tx="ekr.20080603071026.352"></t>
<t tx="ekr.20080603071026.353"></t>
<t tx="ekr.20080603071026.354"></t>
<t tx="ekr.20080603071026.355"></t>
<t tx="ekr.20080603071026.356"></t>
<t tx="ekr.20080603071026.357"></t>
<t tx="ekr.20080603071026.358"></t>
<t tx="ekr.20080603071026.359"></t>
<t tx="ekr.20080603071026.360"></t>
<t tx="ekr.20080603071026.361"></t>
<t tx="ekr.20080603071026.362"></t>
<t tx="ekr.20080603071026.363"></t>
<t tx="ekr.20080603071026.364"></t>
<t tx="ekr.20080603071026.365"></t>
<t tx="ekr.20080603071026.366"></t>
<t tx="ekr.20080603071026.367"></t>
<t tx="ekr.20080603071026.368"></t>
<t tx="ekr.20080603071026.369"></t>
<t tx="ekr.20080603071026.370"></t>
<t tx="ekr.20080603071026.371"></t>
<t tx="ekr.20080603071026.372"></t>
<t tx="ekr.20080603071026.373"></t>
<t tx="ekr.20080603071026.374"></t>
<t tx="ekr.20080603071026.375"></t>
<t tx="ekr.20080603071026.376"></t>
<t tx="ekr.20080603071026.377"></t>
<t tx="ekr.20080603071026.378"></t>
<t tx="ekr.20080603071026.379"></t>
<t tx="ekr.20080603071026.380"></t>
<t tx="ekr.20080603071026.381"># accel: a,b,c,d,e,f,h,i,m,p,r,s,t,u,v,w,x</t>
<t tx="ekr.20080603071026.382"></t>
<t tx="ekr.20080603071026.383"></t>
<t tx="ekr.20080603071026.384"></t>
<t tx="ekr.20080603071026.385"></t>
<t tx="ekr.20080603071026.386"></t>
<t tx="ekr.20080603071026.387"></t>
<t tx="ekr.20080603071026.388"></t>
<t tx="ekr.20080603071026.389"></t>
<t tx="ekr.20080603071026.390"></t>
<t tx="ekr.20080603071026.391"></t>
<t tx="ekr.20080603071026.392"></t>
<t tx="ekr.20080603071026.393"></t>
<t tx="ekr.20080603071026.394"></t>
<t tx="ekr.20080603071026.395"></t>
<t tx="ekr.20080603071026.396"></t>
<t tx="ekr.20080603071026.397"></t>
<t tx="ekr.20080603071026.398"></t>
<t tx="ekr.20080603071026.399"></t>
<t tx="ekr.20080603071026.400"></t>
<t tx="ekr.20080603071026.401"></t>
<t tx="ekr.20080603071026.402"></t>
<t tx="ekr.20080603071026.403"></t>
<t tx="ekr.20080603071026.404"></t>
<t tx="ekr.20080603071026.405"></t>
<t tx="ekr.20080603071026.406"></t>
<t tx="ekr.20080603071026.407"></t>
<t tx="ekr.20080603071026.408"></t>
<t tx="ekr.20080603071026.409"></t>
<t tx="ekr.20080603071026.410"></t>
<t tx="ekr.20080603071026.411"></t>
<t tx="ekr.20080603071026.412"></t>
<t tx="ekr.20080603071026.413"></t>
<t tx="ekr.20080603071026.414"></t>
<t tx="ekr.20080603071026.415"></t>
<t tx="ekr.20080603071026.416"></t>
<t tx="ekr.20080603071026.417"></t>
<t tx="ekr.20080603071026.418"></t>
<t tx="ekr.20080603071026.419"></t>
<t tx="ekr.20080603071026.420"></t>
<t tx="ekr.20080603071026.421"></t>
<t tx="ekr.20080603071026.422"></t>
<t tx="ekr.20080603071026.423"></t>
<t tx="ekr.20080603071026.424"></t>
<t tx="ekr.20080603071026.425"></t>
<t tx="ekr.20080603071026.426"></t>
<t tx="ekr.20080603071026.427"></t>
<t tx="ekr.20080603071026.428"></t>
<t tx="ekr.20080603071026.429"></t>
<t tx="ekr.20080603071026.430"></t>
<t tx="ekr.20080603071026.431"></t>
<t tx="ekr.20080603071026.432"></t>
<t tx="ekr.20080603071026.433"></t>
<t tx="ekr.20080603071026.434"></t>
<t tx="ekr.20080603071026.435"></t>
<t tx="ekr.20080603071026.436"></t>
<t tx="ekr.20080603071026.437"></t>
<t tx="ekr.20080603071026.438"></t>
<t tx="ekr.20080603071026.439"></t>
<t tx="ekr.20080603071026.440">&amp;About Leo...</t>
<t tx="ekr.20080603071026.441">Online &amp;Home Page</t>
<t tx="ekr.20080603071026.442"></t>
<t tx="ekr.20080603071026.443"></t>
<t tx="ekr.20080603071026.444"></t>
<t tx="ekr.20080603071026.445">Open Leo&amp;Docs.leo</t>
<t tx="ekr.20080603071026.446">Open Leo&amp;Plugins.leo</t>
<t tx="ekr.20080603071026.447">Open Leo&amp;Settings.leo</t>
<t tx="ekr.20080603071026.448">Open &amp;myLeoSettings.leo</t>
<t tx="ekr.20080603071026.449">Open scr&amp;ipts.leo</t>
<t tx="ekr.20080603071026.450"></t>
<t tx="ekr.20080603071026.451"></t>
<t tx="ekr.20080603071026.452"></t>
<t tx="ekr.20080603071026.453"></t>
<t tx="ekr.20080603071026.454"></t>
<t tx="ekr.20080603071026.455"></t>
<t tx="ekr.20080603071026.456"></t>
<t tx="ekr.20080603071026.457"></t>
<t tx="ekr.20080603071026.458"></t>
<t tx="ekr.20080603071026.459"></t>
<t tx="ekr.20080603071026.460"></t>
<t tx="ekr.20080603071026.461">文件</t>
<t tx="ekr.20080603071026.462">新建</t>
<t tx="ekr.20080603071026.463">打开</t>
</tnodes>
</leo_file>
