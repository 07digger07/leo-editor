#@+leo-ver=4-thin
#@+node:EKR.20040429143933:@thin leoProjects.txt
#@+at 
#@nonl
# This part of the tree shows views of the outline related to specific 
# projects or tasks.  I put such headlines in parentheses, and that is just my 
# convention.
# 
# I create a new view by cloning headlines that relate to its task, and moving 
# the cloned headlines under the task headline.  This greatly increases my 
# focus.  Any changes made in a task view to clone headlines affect the other 
# clones scattered throughout the outline.  In particular, all @file nodes 
# containing changed clones become marked as dirty, so they will be written 
# when the entire outline is saved.
#@-at
#@@c

#@@language python 
#@@tabwidth -4

#@+all
#@+node:ekr.20090623072844.10385:4.6 rc1
#@+node:ekr.20090623072844.10386:Bugs
#@+node:ekr.20090623072844.10383:Fixed Tangle bug
#@+node:ekr.20090623072844.10384:Report
@nocolor-node

Oh yeah .... still won't tangle for me.

name = name.lower().name.replace('\t',' ').replace('  ',' ')

exception executing command
Traceback (most recent call last):
 File "C:\Leo-4-6-b2\leo\core\leoCommands.py", line 387, in doCommand
   val = command(event)
 File "C:\Leo-4-6-b2\leo\core\leoCommands.py", line 1476, in tangleAll
   c.tangleCommands.tangleAll()
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 604, in tangleAll
   ok = self.tangleTree(p,dont_report_errors)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 723, in tangleTree
   self.tanglePass1(p) # sets self.p
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 671, in tanglePass1
   self.skip_body(p)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 1142, in skip_body
   k, code = self.skip_code(s,j)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 1217, in skip_code
   i, done = self.handle_newline(s,i)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 997, in handle_newline
   self.st_enter_section_name(ref,None,None,unused_parts_flag)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 2078, in
st_enter_section_name
   return self.st_enter(name,code,doc,multiple_parts_flag,not_root_name)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 2018, in st_enter
   section = self.st_lookup(name,is_root_flag)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 2088, in st_lookup
   key = self.standardize_name(name)
 File "C:\Leo-4-6-b2\leo\core\leoTangle.py", line 3393, in standardize_name
   name = name.lower().name.replace('\t',' ').replace('  ',' ')
AttributeError: 'unicode' object has no attribute 'name'
#@nonl
#@-node:ekr.20090623072844.10384:Report
#@+node:ekr.20031218072017.3598:standardize_name
def standardize_name (self,name):

    """Removes leading and trailing brackets, converts white space to a single blank and converts to lower case."""

    # Convert to lowercase.
    # Convert whitespace to a single space.
    name = name.lower().replace('\t',' ').replace('  ',' ')

    # Remove leading '<'
    i = 0 ; n = len(name)
    while i < n and name[i] == '<':
        i += 1
    j = i

    # Find the first '>'
    while i < n and name [i] != '>':
        i += 1
    name = string.strip(name[j:i])

    return name
#@-node:ekr.20031218072017.3598:standardize_name
#@-node:ekr.20090623072844.10383:Fixed Tangle bug
#@-node:ekr.20090623072844.10386:Bugs
#@-node:ekr.20090623072844.10385:4.6 rc1
#@-all
#@nonl
#@-node:EKR.20040429143933:@thin leoProjects.txt
#@-leo
