#@+leo-ver=5-thin
#@+node:ekr.20100120072650.6089: * @thin leoProjects.txt
#@+all
#@+node:ekr.20100709113505.6291: ** Leo 4.8 a1
#@+node:ekr.20101024235225.5864: *3* Code notes
@nocolor
#@+node:ekr.20101024235225.5863: *4* Can we put up the LeoID dialog later?
@nocolor-node

It is needed to set g.app.nodeIndices, which is used in the read logic for outlines,
so it *must* be set before we load any Leo file!  Thus, alas, it is not possible.
#@+node:ekr.20101024235225.5866: *4* Be more clever in putting up the Leo id dialog
@nocolor-node

g.app.setLeoID now calls createDefaultGui instead of createTkGui.
#@+node:ekr.20101024235225.5894: *4* Simplified leoPlugins code
@nocolor-node

There are some tricky issues here:

http://groups.google.com/group/leo-editor/browse_thread/thread/4da36f0d897a25e8

Important: g.loadOnePlugin calls the plugins onCreate method to make up for
events that have already been generated. pc.loadOnePlugin does not.
#@+node:ekr.20101024235225.5925: *4* Added support for slideshow plugin
Command-line args
#@+node:ekr.20101024235225.5957: *4* Fixed @test logic
#@+node:ekr.20101024235225.5956: *5* patch
# Begin patch

=== modified file 'leo/core/leoTest.py'
@@ -697,9 +696,10 @@

     # 2010/03/05: set the current directory so that importing leo.core.whatever works.
     leoDir = g.os_path_finalize_join(g.app.loadDir,'..','..')
-    os.chdir(leoDir)
-
-    os.spawnve(os.P_NOWAIT,sys.executable,args,os.environ)

+    #os.chdir(leoDir)
+    env = dict(os.environ)
+    env['PYTHONPATH'] = env.get('PYTHONPATH', '')+';'+leoDir
+    os.spawnve(os.P_NOWAIT,sys.executable,args,env)
#@+node:ekr.20101024235225.5959: *4* Investigated at-auto-rst bug
https://bugs.launchpad.net/leo-editor/+bug/532085

auto-rst isn't switching to a new title underline char. going from level 2 to 3
in the outline.

Changing to regular @rst and using the rst3 command to export works.

Tree:

Foo
    Bar
        This
        That
    Etc

Output:

Foo
===

Bar
+++

This
++++ <- still using '+' one level down

--------------------------------------------------


Another test and this seems as bad or worse,

A-+
    |
   C-+
       |
      D

is using '=' to underline all three levels.
#@+node:ekr.20101024235225.5962: *4* Investigated bug 524890: Incomplete derived file
@nocolor-node

This is now a wishlist item.  @thin works the same way.

#@+node:ekr.20101024235225.5963: *5* Report
@nocolor-node

This is now a wishlist item.  @thin works the same way.

1. Create the following tree (node content prefixed with -, subnode
with +, [] denotes clones) and save.

@shadow file1.c
-@others
+ [clone]
-Content (clone)
+ [clone] (of course same clone content)

Instead of the expected test1.c file of:

Content (clone)
Content (clone)

I got just:

Content (clone)

I believe it to be a bug.

2. Now copy and paste one of the clones as a regular node, delete the
clone and save. We are left with two regular subnodes having the same
content, and this time the expected derived file is generated.

3. Undo to the state of having only the 2 clones (undo twice) and
save. Leo does not recognize any change in the file.

4. Edit the content of one clone and save. We are back to the 1st case
(missing content in the derived).
#@-all
#@-leo
