<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet ekr_test?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5">
	<global_window_position top="94" left="247" height="783" width="844"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20080527062225.2" str_leo_pos="1,0,0"><vh>@chapters</vh></v>
<v t="TL.20080525105302.12" a="E"><vh>@settings</vh>
<v t="TL.20080525105302.13" a="E"><vh>Keyboard shortcuts</vh>
<v t="TL.20080525105302.14"><vh>Vi Documentation</vh></v>
<v t="TL.20080525105302.15" a="E"><vh>Settings for vim bindings</vh>
<v t="TL.20080525105302.16"><vh>@strings [command,insert, overwrite] top_level_unbound_key_action = command</vh></v>
<v t="TL.20080525105302.17"><vh>@bool stayInTreeAfterEditHeadline = True</vh></v>
<v t="TL.20080525105302.18"><vh>@bool outline_pane_has_initial_focus = True</vh></v>
<v t="TL.20080525105302.19"><vh>@bool stayInTreeAfterSelect = True</vh></v>
</v>
<v t="TL.20080525105302.20"><vh>@keys</vh>
<v t="TL.20080525105302.21"><vh>@shortcuts - Unbind all commands</vh></v>
<v t="TL.20080525105302.22"><vh>@shortcuts vi - Outline pane</vh>
<v t="TL.20080525105302.23"><vh>@mode tree-save-file</vh></v>
<v t="TL.20080525105302.24"><vh>@mode tree-command-line</vh>
<v t="TL.20080525105302.25"><vh>@mode tree-command-revert</vh></v>
<v t="TL.20080525105302.26" a="E"><vh>@mode tree-command-save</vh>
<v t="TL.20080525105302.27"><vh>@mode tree-command-save-quit</vh></v>
</v>
<v t="TL.20080525105302.28"><vh>@mode tree-command-quit</vh></v>
</v>
<v t="TL.20080525105302.29"><vh>@mode tree-select-object</vh>
<v t="TL.20080525105302.30"><vh>@mode tree-yank-line</vh></v>
<v t="TL.20080525105302.31"><vh>@mode tree-yank-to-beginning-of-next-word</vh></v>
<v t="TL.20080525105302.32"><vh>@mode tree-yank-to-beginning-of-current-word</vh></v>
</v>
<v t="TL.20080525105302.33"><vh>@ignore tree-yank-object</vh>
<v t="TL.20080525105302.34"><vh>@mode tree-yank-line</vh></v>
<v t="TL.20080525105302.35"><vh>@mode tree-yank-to-beginning-of-next-word</vh></v>
<v t="TL.20080525105302.36"><vh>@mode tree-yank-to-beginning-of-current-word</vh></v>
</v>
<v t="TL.20080525105302.37"><vh>@ignore tree-change-object</vh>
<v t="TL.20080525105302.38"><vh>@mode vi-Change-line</vh></v>
<v t="TL.20080525105302.39"><vh>@mode vi-change-to-end-of-word</vh></v>
<v t="TL.20080525105302.40"><vh>@mode vi-change-to-beginning-of-word</vh></v>
</v>
<v t="TL.20080525105302.41"><vh>@ignore tree-delete-to-end-of-line</vh></v>
<v t="TL.20080525105302.42"><vh>@ignore tree-delete</vh></v>
<v t="TL.20080525105302.43" a="E"><vh>@ignore tree-delete-text-object</vh>
<v t="TL.20080525105302.44"><vh>@mode tree-delete-line</vh></v>
<v t="TL.20080525105302.45"><vh>@mode tree-delete-to-end-of-word</vh></v>
<v t="TL.20080525105302.46"><vh>@mode tree-delete-to-beginning-of-word</vh></v>
<v t="TL.20080525105302.47"><vh>@mode tree-delete-to-char</vh></v>
</v>
<v t="TL.20080525105302.48"><vh>@mode tree-copy-node</vh></v>
<v t="TL.20080525105302.49"><vh>@mode tree-paste-node</vh></v>
<v t="TL.20080525105302.50"><vh>@mode tree-delete-node</vh></v>
<v t="TL.20080525105302.51"><vh>@mode focus-to-tree</vh></v>
<v t="TL.20080525105302.52"><vh>@mode focus-to-body</vh></v>
<v t="TL.20080525105302.53"><vh>@mode tree-undo</vh></v>
<v t="TL.20080525105302.54"><vh>@mode tree-redo</vh></v>
<v t="TL.20080525105302.55"><vh>@mode tree-goto-last-node</vh></v>
<v t="TL.20080525105302.56"><vh>@mode tree-goto</vh>
<v t="TL.20080525105302.57"><vh>@mode node-goto-first-node</vh></v>
</v>
<v t="TL.20080525105302.58"><vh>@mode tree-goto-next-visible</vh></v>
<v t="TL.20080525105302.59"><vh>@mode body-goto-next-visible</vh></v>
<v t="TL.20080525105302.60"><vh>@mode tree-goto-prev-visible</vh></v>
<v t="TL.20080525105302.61"><vh>@mode body-goto-prev-visible</vh></v>
<v t="TL.20080525105302.62"><vh>@mode tree-contract-or-go-left</vh></v>
<v t="TL.20080525105302.63"><vh>@mode body-contract-or-go-left</vh></v>
<v t="TL.20080525105302.64"><vh>@mode tree-expand-and-go-right</vh></v>
<v t="TL.20080525105302.65"><vh>@mode body-expand-and-go-right</vh></v>
<v t="TL.20080525105302.66"><vh>@mode tree-move-outline-up</vh></v>
<v t="TL.20080525105302.67"><vh>@mode tree-move-outline-down</vh></v>
<v t="TL.20080525105302.68"><vh>@mode tree-move-outline-left</vh></v>
<v t="TL.20080525105302.69"><vh>@mode tree-contract-node</vh></v>
<v t="TL.20080525105302.70"><vh>@mode tree-clone-node</vh></v>
<v t="TL.20080525105302.71"><vh>@mode tree-goto-next-cloned-node</vh></v>
<v t="TL.20080525105302.72"><vh>@mode tree-mark-node</vh></v>
<v t="TL.20080525105302.73"><vh>@mode tree-goto-next-marked-node</vh></v>
<v t="TL.20080525105302.74"><vh>@mode tree-unmark-all-nodes</vh></v>
<v t="TL.20080525105302.75"><vh>@mode tree-find-in-headline</vh></v>
</v>
<v t="TL.20080525105302.76" a="E"><vh>@shortcuts vi - body pane</vh>
<v t="TL.20080525105302.77"><vh>@mode vi-command-line</vh>
<v t="TL.20080525105302.78"><vh>@mode vi-command-revert</vh></v>
<v t="TL.20080525105302.79"><vh>@mode vi-command-save</vh>
<v t="TL.20080525105302.80"><vh>@mode vi-command-save-quit</vh></v>
</v>
<v t="TL.20080525105302.81"><vh>@mode vi-command-quit</vh></v>
</v>
<v t="TL.20080525105302.82"><vh>@mode vi-goto-end-of-buffer</vh></v>
<v t="TL.20080525105302.83"><vh>@mode vi-goto</vh>
<v t="TL.20080525105302.84"><vh>@mode vi-goto-beginning-of-buffer</vh></v>
</v>
<v t="TL.20080525105302.85"><vh>@mode vi-save-buffers-exit</vh></v>
<v t="TL.20080525105302.86"><vh>@mode vi-new-line-below</vh></v>
<v t="TL.20080525105302.87"><vh>@mode vi-new-line-above</vh></v>
<v t="TL.20080525105302.88"><vh>@mode vi-append</vh></v>
<v t="TL.20080525105302.89"><vh>@mode vi-insert-at-indent</vh></v>
<v t="TL.20080525105302.90"><vh>@mode vi-delete-to-end-of-line</vh></v>
<v t="TL.20080525105302.91" a="E"><vh>@mode vi-delete-object</vh>
<v t="TL.20080525105302.92"><vh>@mode vi-delete-line</vh></v>
<v t="TL.20080525105302.93"><vh>@mode vi-delete-to-end-of-word</vh></v>
<v t="TL.20080525105302.94"><vh>@mode vi-delete-to-begin-of-word</vh></v>
<v t="TL.20080525105302.95"><vh>@mode vi-delete-to-end-of-sentence</vh></v>
<v t="TL.20080525105302.96"><vh>@mode vi-delete-to-beginning-of-sentence</vh></v>
<v t="TL.20080525105302.97"><vh>@mode vi-delete-to-end-of-paragraph</vh></v>
<v t="TL.20080525105302.98"><vh>@mode vi-delete-to-beginning-of-paragraph</vh></v>
<v t="TL.20080525105302.99"><vh>@mode vi-delete-section</vh></v>
<v t="TL.20080525105302.100" a="M"><vh>@mode vi-delete-to-char</vh></v>
</v>
<v t="TL.20080525105302.101"><vh>@mode vi-yank-to-end-of-line</vh></v>
<v t="TL.20080525105302.102"><vh>@mode vi-yank</vh>
<v t="TL.20080525105302.103"><vh>@mode vi-yank-line</vh></v>
<v t="TL.20080525105302.104"><vh>@mode vi-yank-to-beginning-of-next-word</vh></v>
<v t="TL.20080525105302.105"><vh>@mode vi-yank-to-beginning-of-current-word</vh></v>
<v t="TL.20080525105302.106"><vh>@mode vi-yank-to-end-of-sentence</vh></v>
<v t="TL.20080525105302.107"><vh>@mode vi-yank-to-beginning-of-sentence</vh></v>
<v t="TL.20080525105302.108"><vh>@mode vi-yank-to-end-of-paragraph</vh></v>
<v t="TL.20080525105302.109"><vh>@mode vi-yank-to-beginning-of-paragraph</vh></v>
<v t="TL.20080525105302.110"><vh>@mode vi-yank-section</vh></v>
</v>
<v t="TL.20080525105302.111"><vh>@mode vi-change-to-end-of-line</vh></v>
<v t="TL.20080525105302.112"><vh>@mode vi-change</vh>
<v t="TL.20080525105302.113"><vh>@mode vi-Change-line</vh></v>
<v t="TL.20080525105302.114"><vh>@mode vi-change-to-end-of-word</vh></v>
<v t="TL.20080525105302.115"><vh>@mode vi-change-to-beginning-of-word</vh></v>
<v t="TL.20080525105302.116"><vh>@mode vi-change-to-end-of-sentence</vh></v>
<v t="TL.20080525105302.117"><vh>@mode vi-change-to-beginning-of-sentence</vh></v>
<v t="TL.20080525105302.118"><vh>@mode vi-change-to-end-of-paragraph</vh></v>
<v t="TL.20080525105302.119"><vh>@mode vi-change-to-beginning-of-paragraph</vh></v>
<v t="TL.20080525105302.120"><vh>@mode vi-change-section</vh></v>
</v>
<v t="TL.20080525105302.121"><vh>@mode vi-substitute-char</vh></v>
<v t="TL.20080525105302.122"><vh>@mode vi-substitute-line</vh></v>
<v t="TL.20080525105302.123"><vh>@mode vi-indent</vh>
<v t="TL.20080525105302.124"><vh>@mode vi-indent-line</vh></v>
<v t="TL.20080525105302.125"><vh>@mode vi-indent-to-beginning-of-sentence</vh></v>
<v t="TL.20080525105302.126"><vh>@mode vi-indent-to-beginning-of-sentence</vh></v>
<v t="TL.20080525105302.127"><vh>@mode vi-indent-to-end-of-paragraph</vh></v>
<v t="TL.20080525105302.128"><vh>@mode vi-indent-to-beginning-of-paragraph</vh></v>
<v t="TL.20080525105302.129"><vh>@mode vi-indent-to-beginning-of-buffer</vh></v>
<v t="TL.20080525105302.130"><vh>@mode vi-indent-to-end-of-buffer</vh></v>
</v>
<v t="TL.20080525105302.131"><vh>@mode vi-deindent</vh>
<v t="TL.20080525105302.132"><vh>@mode vi-deindent-less</vh></v>
<v t="TL.20080525105302.133"><vh>@ignore vi-deindent-to-end-of-paragraph</vh></v>
<v t="TL.20080525105302.134"><vh>@ignore vi-deindent-to-beginning-of-paragraph</vh></v>
<v t="TL.20080525105302.135"><vh>@ignore vi-deindent-to-end-of-sentence</vh></v>
<v t="TL.20080525105302.136"><vh>@ignore vi-deindent-to-beginning-of-sentence</vh></v>
</v>
<v t="TL.20080525105302.137"><vh>@mode vi-beginning-of-line</vh></v>
<v t="TL.20080525105302.138"><vh>@mode vi-goto-indent-beginning-previous-line</vh></v>
<v t="TL.20080525105302.139"><vh>@mode vi-end-of-line</vh></v>
<v t="TL.20080525105302.140"><vh>@mode vi-goto-after-paragraph</vh></v>
<v t="TL.20080525105302.141"><vh>@mode vi-goto-before-paragraph</vh></v>
<v t="TL.20080525105302.142"><vh>@mode vi-join</vh></v>
<v t="TL.20080525105302.143"><vh>@mode vi-match</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="TL.20080525105302.12"></t>
<t tx="TL.20080525105302.13"></t>
<t tx="TL.20080525105302.14">@nocolor

Leo's vi support:
	Realization:
		Leo Configuration:
			| The following configuration was used for all testing:
				@strings  top_level_unbound_key_action = command
				@bool stayInTreeAfterEditHeadline = True
				@bool stayInTreeAfterSelect = True
				@bool outline_pane_has_initial_focus = True
		Leo's Panes:

			| A "pane" is a area of the screen containing a user interface
			| dedicated to supporting a common set of tasks.  Vi key mappings are
			| associated with the Outline pane, the Body pane, or to the Leo
			| program.  See the no pane (see "General Commands" below). (Outline
			| pane, Body pane)
		Leo's Command/Insert States:
			Command state - Denoted by a blue background color (Outline,Body pane)
				| Keys are mapped to commands.
			Insert state - Denoted by a red background color (Outline,Body pane)
				| Keys pressed are inserted into the text.
			Grayed state - Denoted by a gray background color (Outline pane)
				| Keys pressed will cause the next node with a headline starting
				| with that key to be selected.  This "select node by first
				| character" feature is built into Leo. It is not part of the vi
				| support.
				| 
				| This state is intentionally avoided in the vi based outline key
				| mappings. If in the "Grayed" state, enter Ctrl-i to switch to the
				| "Command" state.  The "Grayed" state can be entered from the
				| outline's "Command" state by pressing the Ctrl-] key.
		Leo's modes:
		| Most vi commands are implemented using Leo's "mode" functionality.
		| Modes beginning with "vi-" denote a vi command for the body pane.
		| Modes beginning with "tree-" denote a vi-like command for the outline.
		| Modes beginning with "body-" denote outline commands that can be called
		| from the body pane (and return focus back to the body pane)
		| 
		| Modes are used both for managing multi-key vi commands and for defining
		| macros.
			Multi-key command modes:
			| Vi has many commands that require multiple keys to invoke.  Each key
			| accept the last in the command are assigned to a mode that, when
			| executed, maps the subsequent allowed keys in the command sequence.
			| The last key in the sequence is mapped directly to a Leo command or
			| to a "Macro" mode (see below). Any modes mapped to a key by another
			| mode are located in a child node of the mode node doing the mapping.
			| 
			| Example:
			|     dtw = Delete To the 'W' character (note the capital letters)
			|   The 'd' key is mapped to vi-delete-object
			|   vi-delete-object maps the 't' key to vi-delete-to-char
			|   vi-delete-to-char contains Leo commands to perform the vi command.

			Macros modes:
			| Most vi commands do not have an equivalent Leo command.  Instead, a
			| series of Leo commands must be issued to emulate the vi command.
			| The Leo commands needed to emulate a vi command are placed in a
			| single @mode node.
		Code limitations:
			Current character:
			| Vi implementation normally use two different "current character"
			| designators depending on the current state.

				Insert state:
				| In the Insert state, a vertical bar is placed between two
				| characters to indicate where the next key will be inserted.
				| Leo's cursor is of this type.

				Command state: 
				| In the Command state, vi expects that the cursor is highlighting
				| a current character and provides commands to enter the insert
				| state or paste text either before or after that current
				| character.  Leo's vi emulation currently does not support a
				| "current character" cursor. As a result, inserting and pasting
				| before or after is replaced by inserting or pasting "at" the
				| current cursor location.  For example, the 'i' and 'a' command
				| are both mapped to enter the insert state at the current cursor
				| location.

			Conditional code execution:
			| No conditional command invocation exits.  Instead, conditional
			| branching is replace by setup commands that insure that, regardless
			| of current state, the command performs correctly.  For example,
			| Beginning-of-line command will go to previous line if called when
			| cursor is at beginning of line.  Vi requires that '|' always goes to
			| beginning of current line.  Problme is solved by issueing
			| forward-char command to insure cursor is moved off of the beginning
			| of the line before beginning-of-line command is issued.

			Commands requesting user input:
			| Commands getting user input must be the last command within the
			| mode.  See "Commands getting user input" in Problems section below.

			Edit headings using modes:
			| Commands modifying or selecting headline text do not work correctly
			| within a mode.  See "Editing headlines within modes" in Problems
			| section below.  This eliminates accurate implementation of vi's
			| delete/change/substitute/yank object commands.  Instead, the
			| commands are modified to only select text.

	General Commands:
	| The following commands are independent of the current pane in focus.

		State change commands
			      i : Change state to insert from command state
			 Ctrl-[ : Change state to command from insert state
				 Esc : Change state to command from insert state

		Miscellaneous commands
			      : : Enter vi's command line
			 Ctrl-: : Enter Leo's command line
			 Ctrl-s : Save '.leo' file
			      u : Undo previous command
			 Ctrl-r : Redo previous command
			    Tab : Toggle focus between Outline and Body pane
			  Alt-G : Go to specified line number (relative to derived file)

Outline Pane
	Outline Features:
	| Outline navigation and manipulation are mapped to keys using vi's text
	| navigation key mapping as a guide.  Outline navigation commands can also
	| be invoked while in the body pane's command mode.  This reduces the
	| keystrokes necessary to make changes to the body text of multiple nodes.
	| Node headline editing uses vi's line editing key mapping (Limited by the
	| "Headline editing in modes" problem).

	Outline Commands:
	| The following commands are supported when in a node's headline's command
	| mode.
		State change commands
			 Ctrl-i : Change state to command from grayed state
			 return : Change state to command from insert state
			 Ctrl-] : Change state to grayed from command state

		Miscellaneous commands
			      : : Enter vi's command line
			 Ctrl-: : Enter Leo's command line
			 Ctrl-s : Save '.leo' file
			      u : Undo previous command
			 Ctrl-r : Redo previous command
			    Tab : Toggle focus between Outline and Body pane
			  Alt-G : Go to specified line number (relative to derived file)

		Go to node commands
			Ctrl-h, Ctrl-j, Ctrl-k, Ctrl-l : Go to: parent, up, down, child node
				| These keys can also be used while in the command state of the
				| node's body.  The commands return the focus back to the headline
				| or body depending on the location of the cursor when the key was
				| pressed.
				| 
				| Shift-Ctrl-h closes any sub-nodes of the node.  If no sub-nodes
				| are visible, the node's parent becomes the current node.
				| 
				| Shift-Ctrl-l opens any sub-nodes of the node.  If sub-nodes are
				| already visible, the node's first child becomes the current node.
			     gg : Go to the outline's first node
			 Ctrl-G : Go to the outline's last node

		Move node commands
			Shift-Ctrl-h, Shift-Ctrl-l : Move node: left (promote), Right (demote)
			Shift-Ctrl-j, Shift-Ctrl-k : Move node: up, down

		Mark node commands
			      m : Mark / unmark the current node
			 Ctrl-m : Go to next marked node
			  Alt-m : Clear all marked nodes

		Transclude node commands (Clone)
		| Given that 'c' is used by vi to change text and that "Transclusion"
		| provides a better descriptor for the ability to include the same text
		| into multiple documents (see Wikipedia's "Transclusion" article), Leo's
		| clone related commands have been mapped to 't'.
			      t : Transclude node (clone node)
			 Ctrl-t : Go to next transcluded node (go to next cloned node)

		Select headline text
		| Due to the "Editing headlines within modes" problem, the delete, yank,
		| and change text object commands are not available.  Instead, commands
		| are provided to facilitate the selection of text which the user can
		| follow with 'i', 'x', or 'y' to change, delete, or yank the text.
					s : Select current character
			      W : Select text to the end of the current word
			      B : Select text to the beginning of the current word
			Shift-D : Select to end of line

		Delete/Yank/Paste node commands
		    Ctrl-d : Delete current node (also Ctrl-x)
		    Ctrl-y : Yank current node   (also Ctrl-c)
		    Ctrl-p : Paste current node  (also Ctrl-v)

		Line editing commands
					w : Go to next word
					b : Go to previous word
				   | : Go to Beginning of line
					$ : Go to end of line

		Find commands
			      f : Find character
	Outline Patches:
	| The following patch is recommended to enhance the functionality within
	| the body pane.
		Prevent "--&gt; exit-named-modes" from switching focus to the Body pane.
		| Remove the call to "deleteTab" (see "Focus to Body pane" problem).
		| Don't create "Mode" tabs by not using "--&gt; mode-help" commands (see
		| "Displaying mode help" problem).
			Function: endMode (File: core\leoKeys.py)
			| Remove the following line:
			|     c.frame.log.deleteTab('Mode')

Body Pane
	| All vi text navigation and editing functionality has been implemented
	| except for the following.
	Missing commands:
	| The following vi commands are NOT supported in the Body pane.
		'e', 'E' - End of word
			| Leo does not provide support for a go-to-end-of-word function.
		'cf&lt;char&gt;' - Change up to and including specified character
			| Implementation requires commands after the find-character command.
			| see "Commands getting user input" problem.
		'ct&lt;char&gt;' - Change up to specified character
			| Implementation requires commands after the find-character command.
			| see "Commands getting user input" problem.
		'yf&lt;char&gt;' - Yank up to and including specified character
			| Implementation requires commands after the find-character command.
			| see "Commands getting user input" problem.
		'yt&lt;char&gt;' - Yank up to specified character
			| Implementation requires commands after the find-character command.
			| see "Commands getting user input" problem.
		't&lt;char&gt;' - Move cursor to character before specified character
			| Implementation requires "back-char" command after "find-character".
			| see "Commands getting user input" problem.
		'r' - Replace a single character with a single character
			| Leo does not provide commands to support this function.
		'?' - Search backwards
			| See "Binding '?' key" problem
		'1G' - Use 'gg' instead (Vim method)
			| See "Binding numeric keys" problem
		'0' - Use '-' instead (Vim method)
			| See "Binding numeric keys" problem
		'bksp' - Move one character to the left
			| See "Binding 'bksp' key" ploblem
		'm&lt;label&gt;', '`', ''' - Mark text location and goto marked location
			| Leo does not provide commands that support the concept of marking a
			| location within text.
		'~' - Toggle character's case
			| See "Toggle case" problem
		'.' - Repeat last command
			| Partial solution would be to have each mode bind itself to the '.'
			| key.
		&lt;n&gt;&lt;cmd&gt; - Perform command 'n' number of times
			| Solution may exist in use of existing 'numbercommand' support in
			| Leo.
		&lt;cmd&gt;&lt;n&gt;&lt;object&gt; - Performing the command on/upto n'th object
			| Leo does not provide support for specifying any n'th instance of a
			| object.  Specific modes could be created to support n'th instances
			| of 2 through 9 if numeric key bindings were supported (see "Binding
			| numeric keys" problem).
		'Ctrl-u, 'Ctrl-d' - Move cursor up/down lines (defaults to 1/2 screen)
			| Leo does not provide commands to support this function.
		'Ctrl-e, 'Ctrl-y' - Slide buffer up/down (leaving cursor on same line)
			| Leo does not provide commands to support this function.
		'z', 'z.', 'z-' - Slide buffer to put current line at top,middle,bottom
			| Leo does not provide commands to support this function.
	Patches:
	| The following patches are recommended to enhance vi functionality within
	| the body pane.

		Enable search for 'space' character in text
		| Commands 'f&lt;char&gt;' and 'dt&lt;char&gt;' should support specifying space
		| character.
			Function: zapToCharacter (File: leoEditCommands.py)
			| Remove the following line:
			| 		if ch.isspace(): return

		Eliminate delete-word from removing trailing white space
		| delete-word discards trailing spaces instead of placing them in the
		| clipboard resulting in subsequent paste operations only pasting the
		| alpha-numeric portion.  The following patch does not discard the
		| trailing spaces.
			Function: killWord (File: leoEditCommands.py)
			| Remove the following line:
			|     self.killWs(event)

		Put zapped text to clipboard
		| To save a copy of text deleted using the zap-to-Character command to
		| the clipboard make the following change:
			Function: zapToCharacter (File: leoEditCommands.py)
			| Add the following line after sel.addToKillBuffer(s[ins:i])
			|     g.app.gui.replaceClipboardWith(s[ins:i])

Problems

	Binding numeric keys:
	| Mapping a number to a command or mode prevents the number from being
	| entered as text while in the insert state.

	Binding '?' key:
	| No response when key pressed.

	Binding 'bksp' key:
	| Binding 'bksp' key to back-char to move back a character in command mode
	| prevents 'bksp' from deleting characters in text edit mode.

	Commands getting user input:
	| Commands requesting user input must be the last command executed.  These
	| commands include: find-character and zap-to-character.

	Editing headlines within modes:
	| Text editing commands do not work within modes assigned to outline key
	| mappings.

	Undo command:
	| The 'undo' command sometimes does not work when returning to a node's
	| command mode.  Moving to another node fixes the problem.(i.e. delete-char, set-insert-state, ...)

	Matching bracket command:
	| Performs bracket matching on Body text when in node's headline command
	| state.

	Word definition:
	| "Word" related commands determine boundries of a word differently.

	Toggle case:
	| Leo provides support for switching to upper or lower case but no method |
	| exists to toggle between cases.

	Forward and backward sentences:
	| Leo's forwardSentenceHelper and backSentenceHelper functions do not stop
	| at empty lines nor do they skip over periods within words nor do they stop
	| at sentences ending in non-periods nor do they stop at the end or
	| beginning of the buffer.

	Focus to Body pane:
	| Leo functions exist which unconditionally set focus to the body pane
	| regardless of the active pane.
		deleteTab() function:
			| Issuing "--&gt; exit-named-mode" calls "endMode" function which calls
			| "c.frame.log.deleteTab('Mode')" function which sets the focus to the
			| body pane.  

	Displaying mode help:
	| The "--&gt; mode-help" command displays all mapped keys using a capitol
	| letter regardless of the actual binding.
		Recommendations:
		| To better support narrow tab cards, display the mode's label without
		| the "enter-" and "-mode" text and place key label before mode label.
		| Results in change from:
		|                enter-vi-delete-line-mode D
		|    enter-vi-delete-to-begin-of-word-mode B 
		| to:
		|    D : vi-delete-line
		|    B : vi-delete-to-begin-of-word

Notes:
	Yank vs. Yank
	| A vi "yank" operation copies the selected text TO the clipboard.
	| A Leo "yank" operation inserts text FROM the clipboard.

	copy-text in modes:
	| Leo's copy-text does not work within a mode.  As a result, all "copy to
	| clipboard" capability is being implemented using kill-&lt;object&gt; command
	| followed by a "yank" command.

	paste-text in modes:
	| paste-text in modes does not work.  Use Leo's "yank" instead.

	delete-node does not copy node to clipboard:
	| Issue copy-node command followed by delete-node
</t>
<t tx="TL.20080525105302.15"></t>
<t tx="TL.20080525105302.16">@nocolor

This setting determines the initial binding for otherwise-unbound keystrokes
when no mode is in effect.  Note: the keyboard-quit command exits all modes.

The valid values are::

command:  Leo ignores the key (like Vim).
insert:  Leo inserts the key at the cursor (like Emacs)
overwrite: Leo replaces the character at the cursor.</t>
<t tx="TL.20080525105302.17">This allows the newline character to switch from the outline pane to the body pane.</t>
<t tx="TL.20080525105302.18"></t>
<t tx="TL.20080525105302.19"></t>
<t tx="TL.20080525105302.20"></t>
<t tx="TL.20080525105302.21"># List of commands available for key binding.
# Put the contents of this file as the first
#     @shortcuts node under @Keys to disable
#     all keys defined in leoSettings.leo
#--------------------------------------------
abbrev-mode                            = None
abort-edit-headline                    = None
about-leo                              = None
add-comments                           = None
add-global-abbrev                      = None
advertised-undo                        = None
append-next-kill                       = None
append-to-buffer                       = None
append-to-register                     = None
apply settings                         = None
auto-complete                          = None
back-char                              = None
back-char-extend-selection             = None
back-paragraph                         = None
back-paragraph-extend-selection        = None
back-sentence                          = None
back-sentence-extend-selection         = None
back-to-indentation                    = None
back-word                              = None
back-word-extend-selection             = None
backward-delete-char                   = None
backward-kill-paragraph                = None
backward-kill-sentence                 = None
backward-kill-word                     = None
beginning-of-buffer                    = None
beginning-of-buffer-extend-selection   = None
beginning-of-line                      = None
beginning-of-line-extend-selection     = None
call-last-keyboard-macro               = None
capitalize-word                        = None
cascade-windows                        = None
center-line                            = None
center-region                          = None
change                                 = None
change-all                             = None
change-then-find                       = None
check-all-python-code                  = None
check-outline                          = None
check-python-code                      = None
check-spelling                         = None
clear-extend-mode                      = None
clear-kill-ring                        = None
clear-recent-files                     = None
clear-rectangle                        = None
clone-node                             = None
close-rectangle                        = None
close-window                           = None
contract-all                           = None
contract-node                          = None
contract-or-go-left                    = None
contract-parent                        = None
convert-all-blanks                     = None
convert-all-tabs                       = None
convert-blanks                         = None
convert-tabs                           = None
copy-node                              = None
copy-rectangle-to-register             = None
copy-text                              = None
copy-to-buffer                         = None
copy-to-register                       = None
count-region                           = None
cut-text                               = None
cycle-focus                            = None
dabbrev-completion                     = None
dabbrev-expands                        = None
de-hoist                               = None
delete-char                            = None
delete-comments                        = None
delete-file                            = None
delete-indentation                     = None
delete-node                            = None
delete-rectangle                       = None
delete-spaces                          = None
demote                                 = None
diff                                   = None
digit-argument                         = None
downcase-region                        = None
downcase-word                          = None
dump-outline                           = None
edit-headline                          = None
end-edit-headline                      = None
end-kbd-macro                          = None
end-of-buffer                          = None
end-of-buffer-extend-selection         = None
end-of-line                            = None
end-of-line-extend-selection           = None
enter-destination-mode                 = None
equal-sized-panes                      = None
escape                                 = None
eval-expression                        = None
exchange-point-mark                    = None
execute-script                         = None
exit-leo                               = None
exit-named-mode                        = None
expand-all                             = None
expand-and-go-right                    = None
expand-next-level                      = None
expand-node                            = None
expand-or-go-right                     = None
expand-prev-level                      = None
expand-region-abbrevs                  = None
expand-to-level-1                      = None
expand-to-level-2                      = None
expand-to-level-3                      = None
expand-to-level-4                      = None
expand-to-level-5                      = None
expand-to-level-6                      = None
expand-to-level-7                      = None
expand-to-level-8                      = None
expand-to-level-9                      = None
export-headlines                       = None
extend-to-paragraph                    = None
extract                                = None
extract-names                          = None
extract-section                        = None
fill-paragraph                         = None
fill-region                            = None
fill-region-as-paragraph               = None
find-character                         = None
find-next                              = None
find-prev                              = None
flatten-outline                        = None
flush-lines                            = None
focus-to-body                          = None
focus-to-log                           = None
focus-to-minibuffer                    = None
focus-to-tree                          = None
forward-char                           = None
forward-char-extend-selection          = None
forward-paragraph                      = None
forward-paragraph-extend-selection     = None
forward-sentence                       = None
forward-sentence-extend-selection      = None
forward-word                           = None
forward-word-extend-selection          = None
full-command                           = None
go-back                                = None
go-forward                             = None
goto-char                              = None
goto-first-node                        = None
goto-first-sibling                     = None
goto-global-line                       = None
goto-last-node                         = None
goto-last-sibling                      = None
goto-last-visible-node                 = None
goto-line                              = None
goto-line-number                       = None
goto-next-changed                      = None
goto-next-clone                        = None
goto-next-marked                       = None
goto-next-node                         = None
goto-next-sibling                      = None
goto-next-visible                      = None
goto-parent                            = None
goto-prev-node                         = None
goto-prev-sibling                      = None
goto-prev-visible                      = None
help-for-minibuffer                    = None
hide-find-tab                          = None
hide-mini-buffer                       = None
hide-spell-tab                         = None
hoist                                  = None
how-many                               = None
iconify-frame                          = None
import-at-file                         = None
import-at-root                         = None
import-cweb-files                      = None
import-derived-file                    = None
import-flattened-outline               = None
import-noweb-files                     = None
increment-register                     = None
indent-for-tab                         = None
indent-region                          = None
indent-relative                        = None
indent-rigidly                         = None
indent-to-comment-column               = None
insert-body-time                       = None
insert-child                           = None
insert-file                            = None
insert-headline-time                   = None
insert-keyboard-macro                  = None
insert-newline                         = None
insert-node                            = None
insert-parentheses                     = None
insert-register                        = None
insert-to-buffer                       = None
inverse-add-global-abbrev              = None
isearch-backward                       = None
isearch-backward-regexp                = None
isearch-forward                        = None
isearch-forward-regexp                 = None
izationcut-node                        = None
jump-to-register                       = None
keep-lines                             = None
keyboard-quit                          = None
kill-all-abbrevs                       = None
kill-buffer                            = None
kill-line                              = None
kill-paragraph                         = None
kill-rectangle                         = None
kill-region                            = None
kill-region-save                       = None
kill-sentence                          = None
kill-word                              = None
line-number                            = None
list-abbrevs                           = None
list-buffers                           = None
list-buffers-alphabetically            = None
make-directory                         = None
mark                                   = None
mark-changed-items                     = None
mark-changed-roots                     = None
mark-clones                            = None
mark-subheads                          = None
match-brackets                         = None
minimize-all                           = None
mode-help                              = None
move-outline-down                      = None
move-outline-left                      = None
move-outline-right                     = None
move-outline-up                        = None
move-past-close                        = None
move-past-close-extend-selection       = None
name-last-kbd-macro                    = None
negative-argument                      = None
new                                    = None
newline-and-indent                     = None
next-line                              = None
next-line-extend-selection             = None
number-command                         = None
number-command-0                       = None
number-command-1                       = None
number-command-2                       = None
number-command-3                       = None
number-command-4                       = None
number-command-5                       = None
number-command-6                       = None
number-command-7                       = None
number-command-8                       = None
number-command-9                       = None
number-to-register                     = None
open-compare-window                    = None
open-find-tab                          = None
open-leoDocs-leo                       = None
open-leoPlugins-leo                    = None
open-leoSettings-leo                   = None
open-offline-tutorial                  = None
open-online-home                       = None
open-online-tutorial                   = None
open-outline                           = None
open-python-window                     = None
open-rectangle                         = None
open-scripts-leo                       = None
open-spell-tab                         = None
open-with                              = None
outline-to-cweb                        = None
outline-to-noweb                       = None
paste-node                             = None
paste-retaining-clones                 = None
paste-text                             = None
point-to-register                      = None
prepend-to-buffer                      = None
prepend-to-register                    = None
pretty-print-all-python-code           = None
pretty-print-python-code               = None
previous-line                          = None
previous-line-extend-selection         = None
print-bindings                         = None
print-commands                         = None
promote                                = None
query-replace                          = None
query-replace-regex                    = None
quick-command                          = None
re-search-backward                     = None
re-search-forward                      = None
read-abbrev-file                       = None
read-at-file-nodes                     = None
read-outline-only                      = None
redo                                   = None
reformat-paragraph                     = None
remove-blank-lines                     = None
remove-directory                       = None
remove-sentinels                       = None
rename-buffer                          = None
repeat-complex-command                 = None
replace-string                         = None
resize-to-screen                       = None
reverse-region                         = None
revert                                 = None
save-buffer                            = None
save-buffers-kill-leo                  = None
save-file                              = None
save-file-as                           = None
save-file-to                           = None
scroll-down                            = None
scroll-down-extend-selection           = None
scroll-up                              = None
scroll-up-extend-selection             = None
search-again                           = None
search-backward                        = None
search-forward                         = None
search-with-present-options            = None
select-all                             = None
set-colors                             = None
set-command-state                      = None
set-comment-column                     = None
set-extend-mode                        = None
set-fill-column                        = None
set-fill-prefix                        = None
set-find-everywhere                    = None
set-find-node-only                     = None
set-find-suboutline-only               = None
set-font                               = None
set-insert-state                       = None
set-mark-command                       = None
set-overwrite-state                    = None
settings                               = None
shell-command                          = None
shell-command-on-region                = None
show-colors                            = None
show-fonts                             = None
show-invisibles                        = None
show-mini-buffer                       = None
sort-children                          = None
sort-columns                           = None
sort-fields                            = None
sort-lines                             = None
sort-siblings                          = None
spell-change                           = None
spell-change-then-find                 = None
spell-find                             = None
spell-ignore                           = None
split-line                             = None
start-kbd-macro                        = None
string-rectangle                       = None
suspend                                = None
switch-to-buffer                       = None
tabify                                 = None
tangle                                 = None
tangle-all                             = None
tangle-marked                          = None
toggle-active-pane                     = None
toggle-angle-brackets                  = None
toggle-extend-mode                     = None
toggle-find-ignore-case-option         = None
toggle-find-in-body-option             = None
toggle-find-in-headline-option         = None
toggle-find-mark-changes-option        = None
toggle-find-mark-finds-option          = None
toggle-find-regex-option               = None
toggle-find-reverse-option             = None
toggle-find-word-option                = None
toggle-find-wrap-around-option         = None
toggle-mini-buffer                     = None
toggle-split-direction                 = None
transpose-chars                        = None
transpose-lines                        = None
transpose-words                        = None
undo                                   = None
unindent-region                        = None
universal-argument                     = None
unmark-all                             = None
untabify                               = None
untangle                               = None
untangle-all                           = None
untangle-marked                        = None
upcase-region                          = None
upcase-word                            = None
view-lossage                           = None
view-register                          = None
weave                                  = None
what-line                              = None
word-search-backward                   = None
word-search-forward                    = None
write-abbrev-file                      = None
write-at-file-nodes                    = None
write-dirty-at-file-nodes              = None
write-missing-at-file-nodes            = None
write-outline-only                     = None 
yank                                   = None
yank-pop                               = None
yank-rectangle                         = None
zap-to-character                       = None
</t>
<t tx="TL.20080525105302.22"># vi key bindings - Outline pane #
 ################################

#Miscellaneous
#--------------------------------
enter-tree-command-line-mode     ! tree = :
full-command                     ! tree = Ctrl-:   #Enter Leo's command line
enter-tree-save-file-mode        ! tree = Ctrl-s
enter-tree-undo-mode             ! tree = u
enter-tree-redo-mode             ! tree = Ctrl-r
enter-focus-to-tree-mode         ! body = Tab
enter-focus-to-body-mode         ! tree = Tab
goto-global-line                 ! tree = Alt-g    #Goto line (in derived file)

#State change commands
#--------------------------------
set-insert-state                 ! tree = i        #To insert from command state
edit-headline                    ! tree = Ctrl-i   #To command from grayed state
set-command-state                ! tree = Ctrl-[   #To command from insert state
set-command-state                ! tree = Esc      #To command from insert state
set-command-state                ! tree = return   #To command from insert state
end-edit-headline                ! tree = Ctrl-]   #To grayed from command state

#Yank text commands
#--------------------------------
end-of-line-extend-selection     ! tree = Shift-y  #Select to end of line
copy-text                        ! tree = y
toggle-extend-mode               ! tree = v        #select characters on/off

#Change text commands
#--------------------------------
end-of-line-extend-selection     ! tree = Shift-c  #Select to end of line
enter-tree-select-object-mode    ! tree = c

#Substitute text commands
#--------------------------------
forward-char-extend-selection    ! tree = s
select-all                       ! tree = Shift-s

#Delete text commands
#--------------------------------
#enter-tree-delete-text-object-mode    ! tree = d  #Modes don't work in tree
end-of-line-extend-selection           ! tree = Shift-d  #Select to end of line
                                                         #Should use Shift-y
#enter-tree-select-object-mode   ! tree = d
end-of-line-extend-selection     ! tree = Shift-d  #Select to end of line
#enter-tree-delete-to-end-of-line-mode ! tree = Shift-d  #modes not working
delete-char                      ! tree = x
delete-char                      ! tree = delete

#Move within line commands
#--------------------------------
forward-char                     ! tree = RtArrow
forward-char                     ! tree = l
back-char                        ! tree = DnArrow
back-char                        ! tree = h

forward-word                     ! tree = w
forward-word-extend-selection    ! tree = Shift-w  #Select text (Not vi)
back-word                        ! tree = b
back-word-extend-selection       ! tree = Shift-b  #Select text (Not vi)

beginning-of-line                ! tree = | #beginning-of-line (Vi style)
end-of-line                      ! tree = $ #end-of-line (Vi style)

match-brackets                   ! tree = % #Go to matching bracket

find-character                   ! tree = f

#Move within tree commands
#--------------------------------
enter-tree-goto-mode                ! tree = g        #gg command (go to first)
enter-tree-goto-last-node-mode      ! tree = Shift-g

enter-tree-goto-next-visible-mode   ! tree = Ctrl-j
enter-tree-goto-next-visible-mode   ! tree = DnArrow
enter-body-goto-next-visible-mode   ! body = Ctrl-j

enter-tree-goto-prev-visible-mode   ! tree = Ctrl-k
enter-tree-goto-prev-visible-mode   ! tree = UpArrow
enter-body-goto-prev-visible-mode   ! body = Ctrl-k

enter-tree-contract-or-go-left-mode ! tree = Ctrl-h
enter-tree-contract-or-go-left-mode ! tree = LtArrow
enter-body-contract-or-go-left-mode ! body = Ctrl-h
enter-tree-expand-and-go-right-mode ! tree = Ctrl-l
enter-tree-expand-and-go-right-mode ! tree = RtArrow
enter-body-expand-and-go-right-mode ! body = Ctrl-l

search-forward                      ! tree = /
#search-backword                    ! tree = question #Binding '?' doesn't work
find-next                           ! tree = n
find-prev                           ! tree = Shift-n

#Node create/delete commands
#--------------------------------
insert-node                      ! tree = Ctrl-o

enter-tree-copy-node-mode        ! tree = Ctrl-c
enter-tree-delete-node-mode      ! tree = Ctrl-x
enter-tree-paste-node-mode       ! tree = Ctrl-v

enter-tree-copy-node-mode        ! tree = Ctrl-y
enter-tree-delete-node-mode      ! tree = Ctrl-d
enter-tree-paste-node-mode       ! tree = Ctrl-p

#Move nodes
#--------------------------------
enter-tree-move-outline-down-mode   ! tree = Ctrl-Shift-j
enter-tree-move-outline-left-mode   ! tree = Ctrl-Shift-h
enter-tree-move-outline-right-mode  ! tree = Ctrl-Shift-l
enter-tree-move-outline-up-mode     ! tree = Ctrl-Shift-k

#Transclude nodes commands
#--------------------------------
enter-tree-clone-node-mode             ! tree = t        #Clone current node
enter-tree-goto-next-clone-node-mode   ! tree = Ctrl-t

#Mark nodes commands
#--------------------------------
enter-tree-mark-node-mode              ! tree = m
enter-tree-goto-next-marked-node-mode  ! tree = Ctrl-m
enter-tree-unmark-all-nodes-mode       ! tree = Alt-m
</t>
<t tx="TL.20080525105302.23">--&gt; save-file
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.24">#Enter vi's command line
#Bind: :

--&gt; set-silent-mode
#--&gt; mode-help

enter-tree-command-revert-mode = e
enter-tree-command-save-mode = w
enter-tree-command-quit-mode = q
</t>
<t tx="TL.20080525105302.25">#Reload current file
#Bind: :e&lt;cr&gt;
#Note: Vi command is :e!&lt;cr&gt;.
#      '!' not used since Leo prompts to save file changes.

revert = return</t>
<t tx="TL.20080525105302.26">#Save current file (and maybe quit)
#Bind: :w[q]&lt;cr&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-tree-save-file-mode = return
enter-tree-command-save-quit-mode = q</t>
<t tx="TL.20080525105302.27">#Save file and exit Leo
#Bind: :wq&lt;cr&gt;

--&gt; save-file
--&gt; exit-leo
</t>
<t tx="TL.20080525105302.28">#Exit Leo
#Bind: :q&lt;cr&gt;

exit-leo = return</t>
<t tx="TL.20080525105302.29">#Yank &lt;obj&gt; (Leo's copy-text)
#Bind: y&lt;obj&gt;
#Note: yank-to-character not supported.  Can not issue yank command.
      #Leo's zap-to-character must be last command (needs user input)
      #Issue 'dt&lt;char&gt;' followed by 'p'
      
--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-select-line-mode                         = y
enter-vi-select-to-beginning-of-next-word-mode    = w
enter-vi-select-to-beginning-of-current-word-mode = b</t>
<t tx="TL.20080525105302.30">#Yank current line
#Bind: yy
#Note: Problem yanking empty line. Also yanks line below it.
#Note: Problem yanking last line.  Does not yank a trailing &lt;cr&gt;

#--&gt; set-silent-mode

#vi-delete-line macro
--&gt; beginning-of-line               #   on beginning of current line
--&gt; end-of-line-extend-selection    #Select all text on current line and
#--&gt; kill-region                     #Remove text, place in paste buffer

#Put text back
#--&gt; yank
#Clear selection
#--&gt; back-char
#--&gt; forward-char

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.31">#Yank to beginning of next word
#Bind: dw
#Note: Travels past end of line.
#Note: Forward-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to beginning of next word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.32">#Yank to beginning of current word.
#Bind: yb
#Note: Travels past beginning of line.
#Note: AlphaNumeric word in contact with a non-alphanumeric word
      #is not handled correctly. Can cause text to be deleted or replicated.

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.33">#Yank &lt;obj&gt; (Leo's copy-text)
#Bind: y&lt;obj&gt;
#Note: yank-to-character not supported.  Can not issue yank command.
      #Leo's zap-to-character must be last command (needs user input)
      #Issue 'dt&lt;char&gt;' followed by 'p'
      
--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-yank-line-mode                         = y
enter-vi-yank-to-beginning-of-next-word-mode    = w
enter-vi-yank-to-beginning-of-current-word-mode = b</t>
<t tx="TL.20080525105302.34">#Yank current line
#Bind: yy
#Note: Problem yanking empty line. Also yanks line below it.
#Note: Problem yanking last line.  Does not yank a trailing &lt;cr&gt;

#--&gt; set-silent-mode

#vi-delete-line macro
--&gt; beginning-of-line               #   on beginning of current line
--&gt; end-of-line-extend-selection    #Select all text on current line and
#--&gt; kill-region                     #Remove text, place in paste buffer

#Put text back
#--&gt; yank
#Clear selection
#--&gt; back-char
#--&gt; forward-char

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.35">#Yank to beginning of next word
#Bind: dw
#Note: Travels past end of line.
#Note: Forward-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to beginning of next word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.36">#Yank to beginning of current word.
#Bind: yb
#Note: Travels past beginning of line.
#Note: AlphaNumeric word in contact with a non-alphanumeric word
      #is not handled correctly. Can cause text to be deleted or replicated.

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.37">#Change &lt;object&gt;
#Bind: c&lt;obj&gt;
#Note: change-to-character not supported.  Can not issue set-insert-state.
      #Leo's zap-to-character must be last command (needs user input)
      #Emulate command by issuing 'dt&lt;char&gt;' followed by 'i'

--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-change-line-mode              = c
enter-vi-change-to-end-of-word-mode    = w
enter-vi-change-to-beginning-of-word-mode  = b</t>
<t tx="TL.20080525105302.38">#Change to end of line
#Bind: cc
#Note: Performs vi-delete-line followed by a an insert-newline

#Note: Problem deleting empty line. Also deletes line below it.
      #Use Join function instead (key 'J')
#Note: Problem deleting last line.  Also deletes line above it.
      #Invoke undo one time to restore line ('u' key)

--&gt; set-silent-mode
--&gt; forward-char                    #Insure beginning-of-line puts cursor 
--&gt; beginning-of-line               #   on beginning of current line
--&gt; end-of-line-extend-selection    #Select all text on current line and
--&gt; forward-char-extend-selection   #  select the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

--&gt; set-insert-state</t>
<t tx="TL.20080525105302.39">#Change to end of word
#Bind: cw
#Note: Travels past end of line.
#Note: forward-word-extend-selection not used,
#      it skips non-alphanumeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to end of word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

--&gt; set-insert-state</t>
<t tx="TL.20080525105302.40">#Change to beginning of word
#Bind: cb

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

--&gt; set-insert-state</t>
<t tx="TL.20080525105302.41">#Delete to the end of the current line
#Bind: D
#Note: If cursor at end of line, command will delete next line
#--&gt; focus-to-tree
#--&gt; edit-headline
--&gt; end-of-line-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.42">#Delete to the end of the current line
#Bind: D
#Note: If cursor at end of line, command will delete next line
#--&gt; focus-to-tree
#--&gt; edit-headline
--&gt; end-of-line-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.43">--&gt; set-silent-mode
enter-tree-delete-line-mode = d
enter-tree-delete-to-char-mode = t</t>
<t tx="TL.20080525105302.44">#Deleted current line
#Bind: dd

--&gt; set-silent-mode
--&gt; kill-line
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.45">#Deleted to end of word
#Bind: dw
#Note: Forward-word-extend-selection it consumes all
      #trailing non-alpha-numeric characters.

--&gt; Forward-word-extend-selection
--&gt; kill-region
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.46">#Delete to beginning of word.i
#Bind: db
#Note: Deleted text not copied into paste buffer.
#Note: Travels past beginning of line.
#Note: back-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; insert-newline   #Split word so kill-word only deletes first part
--&gt; keyboard-quit
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.47">#Delete to character
#Bind: dt&lt;character&gt;
#Note: Deleted text not copied into paste buffer.
#Note: Character search not limited to current line.

--&gt; set-silent-mode
--&gt; zap-to-character
</t>
<t tx="TL.20080525105302.48">--&gt; end-edit-headline
--&gt; copy-node
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.49">--&gt; end-edit-headline
--&gt; paste-node
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.50">--&gt; end-edit-headline
--&gt; copy-node
--&gt; delete-node         #Does not copy to clipboard
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.51">#--&gt; end-edit-headline
--&gt; focus-to-tree
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.52">#--&gt; end-edit-headline
--&gt; focus-to-body
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.53">#Undo last headline edit
#Bind: u
#Note: undo only seems to work from body pane
--&gt; focus-to-body
--&gt; undo
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.54">#Redo last headline edit
#Bind: Ctrl-r
#Note: redo only seems to work from body pane
--&gt; focus-to-body
--&gt; redo
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.55">#Go to first node
#Bind: gg 

--&gt; set-silent-mode
--&gt; goto-last-node
--&gt; edit-headline

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.56">#Go to specified node location
#Bind: g&lt;location&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-node-goto-first-node-mode     = g</t>
<t tx="TL.20080525105302.57">#Go to first node
#Bind: gg 

--&gt; set-silent-mode
--&gt; goto-first-node
--&gt; edit-headline

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.58">--&gt; goto-next-visible
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.59">--&gt; focus-to-tree
--&gt; goto-next-visible
--&gt; edit-headline
--&gt; focus-to-body
--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.60">--&gt; goto-prev-visible
--&gt; edit-headline

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.61">--&gt; focus-to-tree
--&gt; goto-prev-visible
--&gt; edit-headline
--&gt; focus-to-body
--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.62">--&gt; contract-or-go-left
--&gt; edit-headline

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.63">--&gt; focus-to-tree
--&gt; contract-or-go-left
--&gt; edit-headline
--&gt; focus-to-body

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.64">--&gt; expand-and-go-right
--&gt; edit-headline

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.65">--&gt; focus-to-tree
--&gt; expand-and-go-right
--&gt; edit-headline
--&gt; focus-to-body

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.66">--&gt; move-outline-up
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.67">--&gt; move-outline-down
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.68">--&gt; move-outline-left
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.69">--&gt; contract-node
--&gt; edit-headline

--&gt; exit-named-mode 
</t>
<t tx="TL.20080525105302.70">#Clone current node
#Bind: t

--&gt; clone-node
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.71">#Go to next cloned node
#Bind: ctrl-t

--&gt; goto-next-clone
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.72">#Mark current node
#Bind: m

--&gt; mark
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.73">#Go to next marked node
#Bind: ctrl-m

--&gt; goto-next-marked
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.74">#Unmark all nodes
#Bind: Alt-m

--&gt; unmark-all
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.75">--&gt; set-find-node-only
--&gt; search-forward
</t>
<t tx="TL.20080525105302.76"># vi key bindings - body pane #
 ##############################

#Miscellaneous
#--------------------------------
enter-vi-command-line-mode       ! body = :        #Enter vi's command mode
full-command                     = Ctrl-Shift-:    #Enter Leo's command mode
keyboard-quit                    ! body = Ctrl-[   #Exit insert state
keyboard-quit                    ! body = esc      #Exit insert state
undo                             = u
redo                             = Ctrl-r
enter-vi-save-buffers-exit-mode  = Shift-z         #ZZ command

#Insert commands
#--------------------------------
enter-vi-insert-at-indent-mode   ! body = Shift-i  #Insert at first non-space
set-insert-state                 ! body = i        #Insert at cursor
set-insert-state                 ! body = a        #Insert at cursor
enter-vi-append-mode             ! body = Shift-a  #Insert at end of line
set-overwrite-state              ! body = Shift-r  #Overwrite text
enter-vi-new-line-below-mode     ! body = o        #Open new line below
enter-vi-new-line-above-mode     ! body = Shift-o  #Open new line above

#Change commands
#--------------------------------
enter-vi-change-to-end-of-line-mode ! body = Shift-c
enter-vi-change-mode                ! body = c        #Supports 'cd','cw','cb'

#Substitute commands
#--------------------------------
enter-vi-substitute-char-mode    ! body = s        #Replace current character
enter-vi-substitute-line-mode    ! body = Shift-s  #Replace current line

#Delete commands
#--------------------------------
enter-vi-delete-object-mode         ! body = d        #Supports 'dd','dw','db'
enter-vi-delete-to-end-of-line-mode ! body = Shift-d
delete-char                         ! body = x
delete-char                         ! body = delete

#Yank text commands
#--------------------------------
enter-vi-yank-to-end-of-line-mode   ! body = Shift-y  #Supports 'yd','yw','yb'
enter-vi-yank-mode               ! body = y        #Yank objects
copy-text                        ! body = Ctrl-y   #Yank selected text
toggle-extend-mode               ! body = v        #select characters-on/off

#Paste text commands
#--------------------------------
paste-text                       ! body = Shift-p  #Paste text before cursor.
paste-text                       ! body = p        #To paste lines before
                                                   #current: use '-' then 'p'
#Indent line commands
#--------------------------------
enter-vi-indent-mode             ! body = greater  #&gt;&lt;obj&gt; commands
enter-vi-deindent-mode           ! body = less     #&lt;&lt; command

#Join lines
#--------------------------------
enter-vi-join-mode               ! body = Shift-j

#Move within line commands
#--------------------------------
back-char                        ! body = LtArrow
forward-char                     ! body = RtArrow
back-char                        ! body = h
#back-char                       ! body = bksp     #Prob: Effects bksp in edit mode
forward-char                     ! body = l
forward-word                     ! body = w        #'w' &amp; 'W' do same thing.
forward-word                     ! body = Shift-w
back-word                        ! body = b        #'b' &amp; 'B' do same thing.
back-word                        ! body = Shift-b  #
enter-vi-beginning-of-line-mode  ! body = |
back-to-indentation              ! body = ^
enter-vi-end-of-line-mode        ! body = $
enter-vi-goto-indent-of-previous-line-mode   !body = minus

#Move within buffer commands
#--------------------------------
next-line                        ! body = DnArrow
next-line                        ! body = j
previous-line                    ! body = UpArrow
previous-line                    ! body = k
forward-sentence                 ! body = )
back-sentence                    ! body = (
enter-vi-goto-after-paragraph-mode  ! body = }
enter-vi-goto-before-paragraph-mode ! body = {
scroll-down                         ! body = Ctrl-f
scroll-up                           ! body = Ctrl-b
enter-vi-goto-mode                  ! body = g        #gg command
enter-vi-goto-end-of-buffer-mode    ! body = Shift-g
goto-line                           ! body = Ctrl-g
enter-vi-match-mode                 ! body = %

#Find commands
#--------------------------------
find-character                      ! body = f
search-forward                      ! body = /
search-backword                     ! body = question     #bound to '?'
find-next                           ! body = n
find-prev                           ! body = Shift-n
</t>
<t tx="TL.20080525105302.77">#Enter vi's command line
#Bind: :

--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-command-revert-mode = e
enter-vi-command-save-mode = w
enter-vi-command-quit-mode = q
</t>
<t tx="TL.20080525105302.78">#Reload current file
#Bind: :e&lt;cr&gt;
#Note: Vi command is :e!&lt;cr&gt;.
#      '!' not used since Leo prompts to save file changes.

revert = return</t>
<t tx="TL.20080525105302.79">#Save current file (and maybe quit)
#Bind: :w[q]&lt;cr&gt;

--&gt; set-silent-mode
#--&gt; mode-help

save-file = return
enter-vi-command-save-quit-mode = q</t>
<t tx="TL.20080525105302.80">#Save file and exit Leo
#Bind: :wq&lt;cr&gt;

--&gt; save-file
--&gt; exit-leo
</t>
<t tx="TL.20080525105302.81">#Exit Leo
#Bind: :q&lt;cr&gt;

exit-leo = return</t>
<t tx="TL.20080525105302.82">#Go to end of buffer
#Bind: G

--&gt; set-silent-mode
--&gt; end-of-buffer
--&gt; beginning-of-line   #vi puts curser in first column of last row

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.83">#Go to &lt;object&gt;
#Bind: g&lt;obj&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-goto-beginning-of-buffer-mode   ! body = g</t>
<t tx="TL.20080525105302.84">#Go to top of buffer
#Bind: gg (Vim)
#Note: Vi key binding of '1G' not used. Bound numbers are not entered when editing.
#Note: Vim also supports 'gg' to go to top of buffer.
--&gt; set-silent-mode
--&gt; beginning-of-buffer

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.85">#Save buffers and exit Leo
#Bind: ZZ

save-buffers-kill-leo = Shift-Z</t>
<t tx="TL.20080525105302.86">#Open new line below current line
#Bind: o

--&gt; set-silent-mode
--&gt; back-char        #Insure end-of-line stays on same line
--&gt; end-of-line
--&gt; insert-newline   #Enter insert mode

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.87">#Open new line above current line
#Bind: O

--&gt; set-silent-mode
--&gt; forward-char
--&gt; beginning-of-line
--&gt; insert-newline
--&gt; keyboard-quit
--&gt; previous-line
--&gt; set-insert-state

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.88">#Append text to end of current line
#Bind: A

--&gt; set-silent-mode
--&gt; back-char        #Insure end-of-line does not move curser to new line
--&gt; end-of-line      #Delete the &lt;cr&gt;&lt;lf&gt; at the end of the line
--&gt; set-insert-state

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.89">#Insert text at first non-blank character in current line
#Bind: I

--&gt; set-silent-mode
--&gt; back-char        #Move cursor to cancel any selected text.
--&gt; forward-char     #  otherwise insert will replace selected text.
--&gt; back-to-indentation #cursor to beginning of first word in line
--&gt; set-insert-state

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.90">#Delete to the end of the current line
#Bind: D
#Note: If cursor at end of line, command will delete next line

--&gt; set-silent-mode
--&gt; end-of-line-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.91">#Delete &lt;obj&gt; command
#Bind: d&lt;obj&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-delete-line-mode = d

enter-vi-delete-to-end-of-word-mode       = w
enter-vi-delete-to-begin-of-word-mode     = b
enter-vi-delete-to-end-of-sentence-mode         = )
enter-vi-delete-to-beginning-of-sentence-mode   = (
enter-vi-delete-to-end-of-paragraph-mode        = }
enter-vi-delete-to-beginning-of-paragraph-mode  = {
enter-vi-delete-section-mode                    = %

enter-vi-delete-to-char-mode     = t</t>
<t tx="TL.20080525105302.92">#Deleted current line
#Bind: dd
#Note: Problem deleting empty line. Also deletes line below it.
      #Use Join function instead (key 'J')
#Note: Problem deleting last line.  Also deletes line above it.
      #Invoke undo one time to restore line ('u' key)

--&gt; set-silent-mode
--&gt; forward-char                    #Insure beginning-of-line puts cursor 
--&gt; beginning-of-line               #   on beginning of current line
--&gt; end-of-line-extend-selection    #Select all text on current line and
--&gt; forward-char-extend-selection   #  select the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.93">#Deleted to end of word
#Bind: dw
#Note: Travels past end of line.
#Note: Forward-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; split-line       #Split word (kill-word only deletes whole words)
--&gt; kill-word        #Delete to end of word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.94">#Delete to beginning of word.i
#Bind: db
#Note: Travels past beginning of line.

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.95">#Delete to end of sentence
#Bind: d)

--&gt; set-silent-mode
--&gt; forward-sentence-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.96">#Delete to beginning of sentence
#Bind: d(

--&gt; set-silent-mode
--&gt; back-sentence-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.97">#Delete to end of paragraph
#Bind: d}

--&gt; set-silent-mode
--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; back-char-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.98">#Delete to beginning of paragraph
#Bind: d{

--&gt; set-silent-mode
--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.99">#Delete from current bracket type to its apposing bracket
#Bind: d%

--&gt; set-silent-mode

--&gt; set-extend-mode
--&gt; match-brackets
--&gt; clear-extend-mode

--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.100">#Delete to character
#Bind: dt&lt;character&gt;
#Note: Character search not limited to current line.

--&gt; set-silent-mode
--&gt; zap-to-character

</t>
<t tx="TL.20080525105302.101">#Yank text to the end of the current line
#Bind: Y

--&gt; set-silent-mode
--&gt; end-of-line-extend-selection
--&gt; kill-region
--&gt; yank
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.102">#Yank &lt;obj&gt; (Leo's copy-text)
#Bind: y&lt;obj&gt;
#Note: yank-to-character not supported.  Can not issue yank command.
      #Leo's zap-to-character must be last command (needs user input)
      #Issue 'dt&lt;char&gt;' followed by 'p'
      
--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-yank-line-mode                         = y
enter-vi-yank-to-beginning-of-next-word-mode    = w
enter-vi-yank-to-beginning-of-current-word-mode = b
enter-vi-yank-to-end-of-sentence-mode           = )
enter-vi-yank-to-beginning-of-sentence-mode     = (
enter-vi-yank-to-end-of-paragraph-mode          = }
enter-vi-yank-to-beginning-of-paragraph-mode    = {
enter-vi-yank-section-mode                      = %
</t>
<t tx="TL.20080525105302.103">#Yank current line
#Bind: yy
#Note: Problem yanking empty line. Also yanks line below it.
#Note: Problem yanking last line.  Does not yank a trailing &lt;cr&gt;

--&gt; set-silent-mode

#vi-delete-line macro
--&gt; set-silent-mode
--&gt; forward-char                    #Insure beginning-of-line puts cursor 
--&gt; beginning-of-line               #   on beginning of current line
--&gt; end-of-line-extend-selection    #Select all text on current line and
--&gt; forward-char-extend-selection   #  select the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode
</t>
<t tx="TL.20080525105302.104">#Yank to beginning of next word
#Bind: dw
#Note: Travels past end of line.
#Note: Forward-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to beginning of next word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.105">#Yank to beginning of current word.
#Bind: yb
#Note: Travels past beginning of line.
#Note: AlphaNumeric word in contact with a non-alphanumeric word
      #is not handled correctly. Can cause text to be deleted or replicated.

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.106">#Yank to end of sentence
#Bind: y)

--&gt; set-silent-mode
--&gt; forward-sentence-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.107">#Yank to beginning of sentence
#Bind: y(

--&gt; set-silent-mode
--&gt; back-sentence-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.108">#Yank to end of paragraph
#Bind: y}

--&gt; set-silent-mode
--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.109">#Yank to beginning of paragraph
#Bind: y{

--&gt; set-silent-mode
--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.110">#Yank from current bracket type to its opposing bracket
#Bind: y%

--&gt; set-silent-mode

--&gt; set-extend-mode
--&gt; match-brackets
--&gt; clear-extend-mode

#Copy to clipboard (copy-text doesn't work in modes)
--&gt; kill-region
--&gt; yank

#Remove highlighting of selection
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.111">#Change to end of line
#Bind: C
#Note: If cursor at end of line, command will delete next line and enter insert mode
#      Use 'i' command instead (enter insert mode)

--&gt; set-silent-mode
--&gt; end-of-line-extend-selection
--&gt; kill-region

--&gt; set-insert-state           #Enter insert mode</t>
<t tx="TL.20080525105302.112">#Change &lt;object&gt;
#Bind: c&lt;obj&gt;
#Note: change-to-character not supported.  Can not issue set-insert-state.
      #Leo's zap-to-character must be last command (needs user input)
      #Emulate command by issuing 'dt&lt;char&gt;' followed by 'i'

--&gt; set-silent-mode
#--&gt; mode-help

enter-vi-change-line-mode              = c
enter-vi-change-to-end-of-word-mode    = w
enter-vi-change-to-beginning-of-word-mode  = b
enter-vi-change-to-end-of-sentence-mode           = )
enter-vi-change-to-beginning-of-sentence-mode     = (
enter-vi-change-to-end-of-paragraph-mode          = }
enter-vi-change-to-beginning-of-paragraph-mode    = {
enter-vi-change-section-mode                      = %</t>
<t tx="TL.20080525105302.113">#Change to end of line
#Bind: cc
#Note: Performs vi-delete-line followed by a an insert-newline

#Note: Problem deleting empty line. Also deletes line below it.
      #Use Join function instead (key 'J')
#Note: Problem deleting last line.  Also deletes line above it.
      #Invoke undo one time to restore line ('u' key)

--&gt; set-silent-mode
--&gt; forward-char                    #Insure beginning-of-line puts cursor 
--&gt; beginning-of-line               #   on beginning of current line
--&gt; end-of-line-extend-selection    #Select all text on current line and
--&gt; forward-char-extend-selection   #  select the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

--&gt; set-insert-state</t>
<t tx="TL.20080525105302.114">#Change to end of word
#Bind: cw
#Note: Travels past end of line.
#Note: forward-word-extend-selection not used,
#      it skips non-alphanumeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to end of word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

--&gt; set-insert-state</t>
<t tx="TL.20080525105302.115">#Change to beginning of word
#Bind: cb

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

--&gt; set-insert-state</t>
<t tx="TL.20080525105302.116">#Delete to end of sentence
#Bind: d)

--&gt; set-silent-mode
--&gt; forward-sentence-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.117">#Delete to beginning of sentence
#Bind: d(

--&gt; set-silent-mode
--&gt; back-sentence-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.118">#Delete to end of paragraph
#Bind: d}

--&gt; set-silent-mode
--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; back-char-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.119">#Delete to beginning of paragraph
#Bind: d{

--&gt; set-silent-mode
--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.120">#Change from current bracket type its matching bracket type
#Bind: c%

--&gt; set-silent-mode

--&gt; set-extend-mode
--&gt; match-brackets
--&gt; clear-extend-mode

--&gt; kill-region
--&gt; yank             #Show what text will be replaced
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.121">#Substitute character
#Bind: s

--&gt; set-silent-mode
--&gt; delete-char
--&gt; set-insert-state           #Enter insert mode</t>
<t tx="TL.20080525105302.122">#Substitute line
#Bind: S

--&gt; set-silent-mode
--&gt; kill-line
--&gt; set-insert-state           #Enter insert mode</t>
<t tx="TL.20080525105302.123">#Indent &lt;object&gt;
#Bind: &gt;&lt;obj&gt;

--&gt; set-silent-mode

enter-vi-indent-line-mode = greater
enter-vi-indent-to-end-of-sentence-mode = )
enter-vi-indent-to-beginning-of-sentence-mode = (
enter-vi-indent-to-end-of-paragraph-mode = }
enter-vi-indent-to-beginning-of-paragraph-mode = {
enter-vi-indent-to-beginning-of-buffer-mode = g
enter-vi-indent-to-end-of-buffer-mode = Shift-g
</t>
<t tx="TL.20080525105302.124">#Indent line
#Bind: &gt;&gt;

--&gt; set-silent-mode
--&gt; back-to-indentation #cursor to beginning of first word in line
--&gt; forward-char-extend-selection

--&gt; indent-rigidly
--&gt; back-char
</t>
<t tx="TL.20080525105302.125">#Indent to beginning of sentence
#Bind: &gt;(

--&gt; back-sentence-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.126">#Indent to beginning of sentence
#Bind: &gt;(

--&gt; back-sentence-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.127">#Indent to end of paragraph
#Bind: &gt;}

--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.128">#Indent to beginning of paragraph
#Bind: &gt;{

--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.129">#Indent to end of buffer
#Bind: &gt;G

--&gt; set-silent-mode
--&gt; beginning-of-buffer-extend-selection
--&gt; indent-region

</t>
<t tx="TL.20080525105302.130">#Indent to end of buffer
#Bind: &gt;G

--&gt; set-silent-mode
--&gt; end-of-buffer-extend-selection
--&gt; indent-region

</t>
<t tx="TL.20080525105302.131">#Unindent object
#Bind: &lt;&lt;obj&gt;

--&gt; set-silent-mode

enter-vi-deindent-less-mode = less

#No "deindent-region" command.
	#enter-vi-deindent-to-end-of-sentence-mode = )
	#enter-vi-deindent-to-beginning-of-sentence-mode = (
	#enter-vi-deindent-to-end-of-paragraph-mode = }
	#enter-vi-deindent-to-beginning-of-paragraph-mode = {
</t>
<t tx="TL.20080525105302.132">#Unindent current line
#Bind: &lt;&lt;
#Note: Unindents to first column instead of previous tab stop

--&gt; set-silent-mode
--&gt; back-to-indentation #cursor to beginning of first word in line

--&gt; delete-indentation

</t>
<t tx="TL.20080525105302.133">#Indent to end of paragraph
#Bind: &lt;}

--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; deindent-region
</t>
<t tx="TL.20080525105302.134">#Indent to beginning of paragraph
#Bind: &lt;{

--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.135">#Indent to end of sentence
#Bind: &lt;)

--&gt; forward-sentence-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.136">#Indent to beginning of sentence
#Bind: &lt;(

--&gt; back-sentence-extend-selection
--&gt; indent-region
</t>
<t tx="TL.20080525105302.137">#Goto beginning of current line
#Bind: -
#Note: Vi binding of '0' not used.  Numbers not inserted during edit if bound to a key.
#Note: Vim uses '-' to move to beginning of previous line instead of current line first.

--&gt; set-silent-mode
--&gt; beginning-of-line

--&gt; exit-named-mode

</t>
<t tx="TL.20080525105302.138">#Goto beginning of current line
#Bind: -
#Note: Vi binding of '0' not used.  Numbers not inserted during edit if bound to a key.
#Note: Vim uses '-' to move to beginning of previous line instead of current line first.

--&gt; set-silent-mode
--&gt; beginning-of-line

--&gt; exit-named-mode

</t>
<t tx="TL.20080525105302.139">#Goto end of current line
#Bind: $

--&gt; set-silent-mode
--&gt; back-char        #Insure end-of-line does not move curser to new line
--&gt; end-of-line

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.140">#Go to end of paragraph
#Bind: }

--&gt; set-silent-mode

--&gt; forward-char        #Be sure cursor in a paragraph
--&gt; forward-paragraph
--&gt; back-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.141">#Go to beginning of paragraph
#Bind: {

--&gt; set-silent-mode

--&gt; back-char        #Be sure cursor in a paragraph
--&gt; back-paragraph
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20080525105302.142">#Join next line to end of current line
#Bind: J

--&gt; set-silent-mode
--&gt; back-char        #Insure end-of-line does not move curser to new line
--&gt; end-of-line      #Delete the &lt;cr&gt;&lt;lf&gt; at the end of the line
--&gt; delete-char

--&gt; exit-named-mode

</t>
<t tx="TL.20080525105302.143">#Goto matching bracket: () [] {}
#Bind: %

--&gt; set-silent-mode
--&gt; match-brackets
--&gt; forward-char
--&gt; back-char

--&gt; exit-named-mode</t>
<t tx="ekr.20080527062225.2"></t>
</tnodes>
</leo_file>
