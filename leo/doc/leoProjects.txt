.. @+leo-ver=5-thin
.. @+node:ekr.20100120072650.6089: * @file ../doc/leoProjects.txt
.. @+all
.. @+node:ekr.20160502072908.1: ** 5.2 projects
.. @+node:ekr.20160501154818.1: *3* Bugs
.. @+node:ekr.20160502072925.1: *3* Features
.. @+node:ekr.20160429063430.1: *4* Added #272: optionally delay syntax coloring
https://github.com/leo-editor/leo-editor/issues/272

Syntax coloring happens *initially* at idle-time. pqsh.setDocument queues pqsh.delayedRehighlight to run at idle time.
.. @+node:ekr.20160502073033.1: *4* Investigated #273: Qt Bug involving large text nodes
Only minor improvements were made.

The ultimate source of the delay when selecting large text is *not* syntax coloring,
but instead the call to self.old_w.setPlainText(self.p.b) in btw.create_widgets.

Experiments show loading "dummy" text in btw.create_widgets can lead to data loss.
There are too many paths through the selection logic to attemp to "recover"
from the failure to load the body widget initially.

Obviously, data loss is a much bigger problem than slow load times.
I am going to declare this issue not to be solvable.
.. @-all
.. @@nosearch
.. @@killbeautify
.. @@language rest
.. @@wrap
.. @@pagewidth 60
.. @-leo
