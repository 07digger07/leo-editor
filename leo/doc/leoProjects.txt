.. @+leo-ver=5-thin
.. @+node:ekr.20100120072650.6089: * @file ../doc/leoProjects.txt
.. @+all
.. @+node:ekr.20161024061341.1: ** 5.5 Bugs
.. @+node:ekr.20161024044100.1: *3* Fixed bug in bracket matching
# A recent in doPlainChar change to handle #14 ruined bracket matching.
.. @+node:ekr.20160924135613.1: *4* doPlainChar
def doPlainChar(self, action, ch, event, inBrackets, oldSel, stroke, w):
    c, p = self.c, self.c.p
    isPlain = stroke.find('Alt') == -1 and stroke.find('Ctrl') == -1
    i, j = oldSel
    if i > j: i, j = j, i
    # Use raw insert/delete to retain the coloring.
    if i != j: w.delete(i, j)
    elif action == 'overwrite': w.delete(i)
    if isPlain:
        ins = w.getInsertPoint()
        if self.autojustify > 0 and not inBrackets:
            # Support #14: auto-justify body text.
            s = w.getAllText()
            i = g.skip_to_start_of_line(s, ins)
            i, j = g.getLine(s, i)
            # Only insert a newline at the end of a line.
            if j - i >= self.autojustify and (ins >= len(s) or s[ins] == '\n'):
                # Find the start of the word.
                n = 0
                ins -= 1
                while ins-1 > 0 and g.isWordChar(s[ins-1]):
                    n += 1
                    ins -= 1
                oldSel = (ins, ins)
                self.insertNewlineHelper(w, oldSel, undoType=None)
                ins = w.getInsertPoint()
                ins += (n+1)
        w.insert(ins, ch)
        w.setInsertPoint(ins + 1)
    else:
        g.app.gui.insertKeyEvent(event, i)
    if inBrackets and self.flashMatchingBrackets:
        self.flashMatchingBracketsHelper(c, ch, i, p, w)
.. @+node:ekr.20161016060615.1: *3* Fixed date in About Leo dialog
.. @+node:ekr.20161020110608.1: *3* Fixed crash after ! in tab completion
 File "c:\leo.repo\leo-editor\leo\core\leoKeys.py", line 414, in auto_completer_state_handler
    kind), color='red')
TypeError: putStatusLine() got an unexpected keyword argument 'color'
.. @+node:ekr.20161023151140.1: *3* Fixed attribute error in To_Python.go
.. @+node:ekr.20161024074826.1: *3* Completed #325 Simplify the organization of commands
https://github.com/leo-editor/leo-editor/issues/325
.. @+node:ekr.20161029060133.1: *3* Fixed crasher in ac.insert_string
Relaced several assert by returns if the assert isn't satisfied.

I thought I was doing ctrl-h

Traceback (most recent call last):
  File "c:\leo.repo\leo-editor\leo\core\leoGlobals.py", line 1711, in wrapper
    func(self, event=event)
  File "c:\leo.repo\leo-editor\leo\core\leoKeys.py", line 266, in showCalltips
    self.calltip()
  File "c:\leo.repo\leo-editor\leo\core\leoKeys.py", line 452, in calltip
    self.calltip_fail(prefix)
  File "c:\leo.repo\leo-editor\leo\core\leoKeys.py", line 460, in calltip_fail
    self.insert_string('(')
  File "c:\leo.repo\leo-editor\leo\core\leoKeys.py", line 861, in insert_string
    i = w.getInsertPoint()
AttributeError: 'LeoQtTree' object has no attribute 'getInsertPoint'
.. @+node:ekr.20161205034943.1: ** 5.5 Code
.. @+node:ekr.20161027094220.1: *3* Merged "idle" hook code into the new framework
Integrated idle-hook processing into the IdleTimeManager:

leoApp.py:
- ITM.on_idle now handles idle-hooks.
- Removed g.app.idle_timer.
- 'idle' hooks called if and only if g.app.idle_time_hooks_enabled is True.
- Only one timer is ever started by Leo: g.app.idle_time_manager_timer.
- Removed call to g.enableIdleTimeHook in at the end of LM.doPostPluginsInit.
  It is not needed: g.app.idle_time_hooks_enabled is True initially.
- The enable/disable/toggle-idle-time-events commands now just set g.app.idle_time_hooks_enabled.

leoGlobals.py:
- g.enable/disableIdleTimeHook now just set g.app.idle_time_hooks_enabled.
  They remain for compatibility only.
- g.idleTimeHookHandler is now a stub. It just prints a warning.
  The original has been moved to the attic (leoNotes.txt).
.. @+node:ekr.20161028060713.1: *3* Created singleton BPM
Fixed all recently discussed problems with background processing:

- Renamed BackgroundManager to BackgroundProcessManager.
- Created singleton BPM instance, g.app.backgroundProcessManager.
- The BPM now maintains a queue of g.Bunch's describing each process.
- The BPM sends output to the originating log pane if possible.
- The 'pylint' and 'pylint-kill' commands now use the BPM.
.. @+node:ekr.20161110122844.1: *3* regex: convert x.strip() to not x.isspace()
([\w_\.]+)\.strip\(\)
not \1.isspace()
.. @+node:ekr.20161024061357.1: ** 5.5 Features
.. @+node:ekr.20161204064504.1: *3* Several new @button scripts, in scripts.leo
.. @+node:ekr.20161021084647.1: *3* Optionally run pyflakes when saving files
.. @+node:ekr.20161024113456.1: *3* You can open leoDist.leo from the File menu
.. @+node:ekr.20161020094619.1: *3* The pylint command now runs pylint in a separate process
This is an important improvement.

https://github.com/leo-editor/leo-editor/issues/328
.. @+node:ekr.20161024093209.1: *3* <Alt-X>99 is the same as <Alt-G>99
.. @+node:ekr.20161120164410.1: *3* Added four new generators
c.all_roots, c.all_unique_roots
p.nearest_roots, p.nearest_unique_roots (aka p.nearest)

Useful for finding nodes on which to run commands.
.. @+node:ekr.20161121145504.1: *3* Allow script abbreviations in headlines
.. @-all
.. @@nosearch
.. @@killbeautify
.. @@language rest
.. @@wrap
.. @@pagewidth 60
.. @-leo
