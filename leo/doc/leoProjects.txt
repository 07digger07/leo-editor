.. @+leo-ver=5-thin
.. @+node:ekr.20100120072650.6089: * @file ../doc/leoProjects.txt
.. @+all
.. @+node:ekr.20160305051344.1: ** Investigated: #232: print-plugins-info fails
https://github.com/leo-editor/leo-editor/issues/232

Appears invalid: only happens on 5.1 final.

Traceback (most recent call last):
File "c:\leo.repo\leo-editor\leo\core\leoCommands.py", line 5120, in doCommand
File "c:\leo.repo\leo-editor\leo\core\leoGlobals.py", line 1335, in wrapper
File "c:\leo.repo\leo-editor\leo\plugins\qt_frame.py", line 2773, in fullyExpandLogPane
File "c:\leo.repo\leo-editor\leo\plugins\qt_frame.py", line 2548, in divideLeoSplitter
File "c:\leo.repo\leo-editor\leo\plugins\qt_frame.py", line 2557, in divideLeoSplitter2
File "c:\leo.repo\leo-editor\leo\plugins\qt_frame.py", line 2563, in divideAnySplitter
RuntimeError: wrapped C/C++ object of type NestedSplitter has been deleted
.. @+node:ekr.20160302041948.1: ** Fixed #217: vim plugin does not work as described
@language rest
@wrap

https://github.com/leo-editor/leo-editor/issues/217

Git history of vim.py
https://github.com/leo-editor/leo-editor/commits/8ec4e29f6b0ade0cf6da1d7ddf45314dfcdb3855/leo/plugins/vim.py

.. @+node:ekr.20160305151031.1: *3* Report
Using Leo 5.1-final, build 20151028094354 under Linux, gvim 7.4.769

> Leo will update the node in the outline when you save the file in VIM.

*** File is not updated, nor when Vim is closed. Must be refreshed in Leo.
.. @+node:ekr.20160305150844.1: *3* #165: vim-open-file command
#165: vim-open-file command (closed April 30, 2015)
https://github.com/leo-editor/leo-editor/issues/165

Dubious work was done in April, 2015 (for #165) ?
https://github.com/leo-editor/leo-editor/commit/74ad2b857890bac7bbcafd1ef9f6ec405a03da42
.. @+node:ekr.20160305150743.1: *3* #206: each node content is same when open with gvim or gedit
# 206: each node content is same when open with gvim or gedit (closed Aug. 21, 2015)
https://github.com/leo-editor/leo-editor/issues/206

Terry: the reported bug was that "open in <external editor>" on non-file node A and then non-file node B showed A's body in both external files. I fixed that. I did not test writing / editing / re-loading the text. And also only evaluating the wrong body behavior just described, it was working before 74ad2b8, generating a traceback from 74ad2b8 to c2465dd, and thereafter doing the wrong body thing I just fixed. So maybe OP will report problems with the editing / re-loading phases now.
.. @+node:ekr.20160305054958.1: ** Fixed #213: leo --ipython fails to connect with python3.5 and jupyter
https://github.com/leo-editor/leo-editor/issues/213

The fix was so simple: just use default arguments to connect_qtconsole.

The preliminaries were at least as important as the fix itself:

1. Modernized the imports, removing support for legacy imports. Imo, it would be unwise to support ancient code now.

2. Added logging methods. This makes it possible to understand and debug the code in leoIPython.py. Furthermore...

3. Leo's --debug option enables more verbose IPython logging. This is a feature that reveals the workings of the Jupyter kernel.
.. @-all
.. @@killbeautify
.. @@language rest
.. @@wrap
.. @@pagewidth 60
.. @-leo
