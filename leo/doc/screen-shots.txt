.. @+leo-ver=5-thin
.. @+node:ekr.20100821182153.4344: * @thin screen-shots.txt
.. @@language rest
.. @@tabwidth -4
.. @+all
.. @+node:ekr.20100821182153.4343: ** @rst html/slides.html
@ @rst-options
call_docutils=False
stylesheet_path=..\doc
write_intermediate_file = True
@c

######
Slides
######

This is the front page for various slide shows about Leo.

.. toctree::
    :maxdepth: 1

    installation-001
    what-is-leo-001
.. @+node:ekr.20100821182153.4346: ** @slideshow html/what-is-leo.html
.. The body of this node is ignored except for options.

@ @rst-options
call_docutils=False
show_headlines=True
stylesheet_path=..\doc
write_intermediate_file = True
@c

.. @+node:ekr.20100822164918.4365: *3* What is Leo?
This slideshow introduces you to Leo.

.. toctree::
    :hidden:
    :glob:

    what-is-leo-0*
.. @+node:ekr.20100821182153.4351: *3* Summary
Leo is a unique, powerful computer program that you can use to organize, analyze
and describe text and text files. Leo is a free program written by Edward K.
Ream. For information about downloading Leo, see installation tutorial in this
series. Leo runs on Windows, Mac, or Linux.

Use Leo:

- to brainstorm a new project,
- as a Personal Information Manager,
- to add multiple outlines and commentary to any text file,
- as a tool to facilitate a new kind of programming.

Because Leo is unlike other tools you may have used, a series of examples may be
the best way to demonstrate what can be done with Leo.
.. @+node:ekr.20100821182153.4352: *3* Leo is an outlining editor
From one perspective, Leo is an outlining editor . This is a screenshot of Leo.
You create an outline in the top left pane. (A later tutorial explains how to
create an outline like the one in the screenshot).

.. screen-shots will be a separate project.

.. Relative to the source file.

.. image:: screen-shots/ekr-20100821182153-4352.png
.. @+node:ekr.20100823141121.4399: *4* @image ../doc/html/screen-shots/ekr-20100821182153-4352.png
.. @+node:ekr.20100823092839.7004: *4* @screenshot-tree To Do List
.. @+node:ekr.20100823092839.7005: *5* Organizer
Organizer node.
.. @+node:ekr.20100823092839.7006: *6* To Do List
My to-do list.
.. @+node:ekr.20100823092839.7007: *7* Urgent
.. @+node:ekr.20100823092839.7008: *7* Important
.. @+node:ekr.20100823092839.7009: *7* Soon
.. @+node:ekr.20100823092839.7010: *7* Whenever
.. @+node:ekr.20100823092839.7011: *6* Diary
.. @+node:ekr.20100823092839.7013: *7* 2009
.. @+node:ekr.20100823092839.7015: *8* Jan 1
.. @+node:ekr.20100823092839.7014: *7* 2010
.. @+node:ekr.20100821182153.4353: *3* Open a node
Clicking on the indicated triangle will open the indicated node.

.. image:: screen-shots/ekr-20100821182153-4353.png

.. @+node:ekr.20100823132841.4383: *4* @image ../doc/html/screen-shots/ekr-20100821182153-4353.png
.. @+node:ekr.20100823132841.4367: *4* @screenshot-tree Diary
.. @+node:ekr.20100823132841.4368: *5* Organizer
Organizer node.
.. @+node:ekr.20100823132841.4369: *6* To Do List
My to-do list.
.. @+node:ekr.20100823132841.4370: *7* Urgent
.. @+node:ekr.20100823132841.4371: *7* Important
.. @+node:ekr.20100823132841.4372: *7* Soon
.. @+node:ekr.20100823132841.4373: *7* Whenever
.. @+node:ekr.20100823132841.4374: *6* Diary
.. @+node:ekr.20100823132841.4375: *7* 2009
.. @+node:ekr.20100823132841.4376: *8* Jan 1
.. @+node:ekr.20100823132841.4377: *7* 2010
.. @+node:ekr.20100823132841.4379: *3* The node has been opened
Here the node has been opened. Clicking on the box again will close the node.

.. image:: screen-shots/ekr-20100823132841-4379.png

.. @+node:ekr.20100823141121.4395: *4* @image ../doc/html/screen-shots/ekr-20100823132841-4379.png
.. @+node:ekr.20100823141121.4382: *4* @screenshot-tree Diary
.. @+node:ekr.20100823141121.4383: *5* Organizer
Organizer node.
.. @+node:ekr.20100823141121.4384: *6* To Do List
My to-do list.
.. @+node:ekr.20100823141121.4385: *7* Urgent
.. @+node:ekr.20100823141121.4386: *7* Important
.. @+node:ekr.20100823141121.4387: *7* Soon
.. @+node:ekr.20100823141121.4388: *7* Whenever
.. @+node:ekr.20100823141121.4389: *6* Diary
.. @+node:ekr.20100823141121.4390: *7* 2009
.. @+node:ekr.20100823141121.4391: *8* Jan 1
.. @+node:ekr.20100823141121.4392: *7* 2010
.. @+node:ekr.20100821182153.4354: *3* Close a node
Here the node has been opened. Clicking on the box again will close the node.

.. image:: screen-shots/ekr-20100821182153-4354.png

.. @+node:ekr.20100823141121.4444: *4* @image ../doc/html/screen-shots/ekr-20100821182153-4354.png
.. @+node:ekr.20100823141121.4411: *4* @screenshot-tree Diary
.. @+node:ekr.20100823141121.4412: *5* Organizer
Organizer node.
.. @+node:ekr.20100823141121.4413: *6* To Do List
My to-do list.
.. @+node:ekr.20100823141121.4414: *7* Urgent
.. @+node:ekr.20100823141121.4415: *7* Important
.. @+node:ekr.20100823141121.4416: *7* Soon
.. @+node:ekr.20100823141121.4417: *7* Whenever
.. @+node:ekr.20100823141121.4418: *6* Diary
.. @+node:ekr.20100823141121.4419: *7* 2009
.. @+node:ekr.20100823141121.4420: *8* Jan 1
.. @+node:ekr.20100823141121.4421: *7* 2010
.. @+node:ekr.20100821182153.4355: *3* The node is closed
Here the indicated node has been closed.

.. image:: screen-shots/ekr-20100821182153-4355.png

.. @+node:ekr.20100823141121.4445: *4* @image ../doc/html/screen-shots/ekr-20100821182153-4355.png
.. @+node:ekr.20100823141121.4433: *4* @screenshot-tree Diary
.. @+node:ekr.20100823141121.4434: *5* Organizer
Organizer node.
.. @+node:ekr.20100823141121.4435: *6* To Do List
My to-do list.
.. @+node:ekr.20100823141121.4436: *7* Urgent
.. @+node:ekr.20100823141121.4437: *7* Important
.. @+node:ekr.20100823141121.4438: *7* Soon
.. @+node:ekr.20100823141121.4439: *7* Whenever
.. @+node:ekr.20100823141121.4440: *6* Diary
.. @+node:ekr.20100823141121.4441: *7* 2009
.. @+node:ekr.20100823141121.4442: *8* Jan 1
.. @+node:ekr.20100823141121.4443: *7* 2010
.. @+node:ekr.20100821182153.4356: *3* 6 Headline and body text
Clicking on a node headline (1) will show the text for that node in the body
pane (2) below. The body pane is a text editor--you can enter, delete or change
text here by typing it in.
.. @+node:ekr.20100824093905.4452: *4* @image ../doc/html/screen-shots/ekr-20100821182153-4356.png
.. @+node:ekr.20100824093905.4433: *4* @screenshot-tree Urgent
.. @+node:ekr.20100824093905.4434: *5* Organizer
Organizer node.
.. @+node:ekr.20100824093905.4435: *6* To Do List
My to-do list.
.. @+node:ekr.20100824093905.4436: *7* Urgent
1. Make Leo Tutorial: the world is waiting.

2. Pay phone bill or the world will never know.
.. @+node:ekr.20100824093905.4437: *7* Important
.. @+node:ekr.20100824093905.4438: *7* Soon
.. @+node:ekr.20100824093905.4439: *7* Whenever
.. @+node:ekr.20100824093905.4440: *6* Diary
.. @+node:ekr.20100824093905.4441: *7* 2009
.. @+node:ekr.20100824093905.4442: *8* Jan 1
.. @+node:ekr.20100824093905.4443: *7* 2010
.. @+node:ekr.20100821182153.4357: *3* File:Save
You can save the outline in a leo file. Click File - Save.
.. @+node:ekr.20100821182153.4358: *3* Save as
Here we will save our outline in a file name "pim.leo".
.. @+node:ekr.20100821182153.4359: *3* File name in title bar
The file is now saved, and the file name appears in the title bar.

.. @+node:ekr.20100821182153.4360: *3* Leo is a meta-text editor
You've just seen an introduction to Leo as an outlining editor. You can use Leo
to make an outline, with optional text for each outline element. You can save
the outline to a file. Outlines are explained more in a later tutorial in this
series. The outlining capability of Leo goes far beyond what has just been
demonstrated, including multipath outlines, and multiple outlines in one file .

What we've shown so far is no different from other outlining editors. What makes
Leo unique is the addition of a new feature. Using simple directives, you can
instruct Leo to extract text from any number of nodes, in any order, and write
the text to a new file. You can also embed outline information in the second
file, giving Leo the ability to read the text pieces back into the Leo outline,
even if they have been changed.

In effect, Leo is a meta-text editor . It gives you the ability to create a
structural document for a non structured document, or a document that is
structured in some other way.

What does this mean in practice? Some examples should help clarify things...
.. @+node:ekr.20100821182153.4361: *3* The @file directive
Here is the "pim.leo" file again. We've:

1. Selected the "2000" node.

2. Entered a couple of directives. The second (@file) tells Leo the file name
that we want to derive (extract to).

3. Entered some node text. 
.. @+node:ekr.20100823164432.4405: *3* 12
Now we tell Leo to tangle the node. This means Leo should 

   1. Start at the current node and look for a @root directive.
   2. Create the file named in the @root directive or open it if it already exists.
   3. Write all of the node text to the file named in the root directive. 

Why is this operation called tangling? We'll see that a few pages from now.
.. @+node:ekr.20100823164432.4406: *3* 13
Leo has written the external file to the disk
.. @+node:ekr.20100823164432.4407: *3* 14 External file in Windows Explorer
Here the file is listed in Windows Explorer.
.. @+node:ekr.20100823164432.4408: *3* 15 External file in a Scite
And here is the file displayed in a text editor.
.. @+node:ekr.20100823164432.4409: *3* 16 Tangling
That example wasn't very interesting. All that we extracted was the text "This
is my diary." We'll probably want to extract more than that.

In fact, when tangling, we can extract not only the node text as we just saw,
but also all or part of the text of any subnode. And we can put these extracted
pieces into the derived file in any order. That is why the process of extraction
is called tangling.

Let's try this. Select the "Jul" node.
.. @+node:ekr.20100823164432.4411: *3* 17 Add section ref
   1. We add << >> angle brackets to the headline. This tells Leo that the node is a section.
   2. We add the @c directive. This tells Leo where to start extracting text from this node. 
.. @+node:ekr.20100823164432.4412: *3* 18 Section name
Now we go back to the 2000 node. We enter the section name << Jul >> into the
node text where we want the << Jul >> section text to be output. When tangling,
Leo will replace this section name with the section text. This operation is
recursive, so if a section text contains a section name, this also will be
replaced with the named section's text.

Note: when we put a << section name >> into node text, the section name must
correspond to a section located under the current node. Leo only looks in
subnodes for section names.
.. @+node:ekr.20100823164432.4413: *3* 19 Save the file
Chose Save
.. @+node:ekr.20100823164432.4414: *3* 20
.. @+node:ekr.20100823164432.4415: *3* 21
.. @+node:ekr.20100823164432.4410: *3* 22
.. @+node:ekr.20100823164432.4416: *3* 23
.. @+node:ekr.20100823164432.4417: *3* 24
.. @+node:ekr.20100821182153.4345: ** @slideshow html/installation.html
.. The body of this node is ignored except for options.

@ @rst-options
call_docutils=False
show_headlines=True
stylesheet_path=..\doc
write_intermediate_file = True
@c
.. @+node:ekr.20100822164918.4364: *3* Installing Leo
This slideshow tells how to install Leo.

.. toctree::
    :hidden:
    :glob:

    installation-0*
.. @+node:ekr.20100821182153.4347: *3* Two versions
Windows Users:

    Installing Leo requires two steps:

       1. Install Python: click here, save to your desktop, then double-click on the saved file.
       2. Install Leo: click here, save to your desktop, then double-click on the saved file. 

    (Python is a type of software for creating and running computer programs.) 

Unix and Mac Users:

    Please continue to next page.


Also, if you are a programmer and want to get the Leo files without using an
installer, continue to the next page.
.. @+node:ekr.20100821182153.4348: *3* Full installation
Full installation of Leo requires that you:

   1. Install Python
   2. Install the Leo files 

To install Python, follow the directions on this page.

To install Leo, go to this page and download the most recent zip file under the
heading "Leo2.py". Download the zip file to your desktop or other location, and
then unzip it to the folder of your choice.

To run Leo, double-click on the file leo.py that you have just unzipped.
.. @+node:ekr.20100821182153.4349: *3* leoconfig.txt
Once you have installed Leo, you can configure Leo using the leoconfig.txt file.
For more information about this see the documentation distributed with Leo.
.. @+node:ekr.20100821182153.4350: *3* Leo is a free program
Leo is a free program distributed under the MIT license. This means that not
only can you use the program freely including commercially, the full
installation comes with source code that you can modify as you wish, as long as
you give credit to the author of the program, `Edward K. Ream`_.

Leo is written in Python--a full featured, powerful programming language that
is comparatively easy to learn and use. For an excellent introduction to Python
for non-programmers, see the `Python Tutorial`_. Not only is Leo written in Python, it is
scriptable via Python, meaning that you can embed Python commands in your
outlines and execute them.

Leo is under active development and all are welcome to contribute. For more
information, see the `leo-editor`_ Google Group.

Not only is Leo free software, it is supported software. Post questions and bug
reports to `leo-editor`_ Google Group.
.. @-all
.. @-leo
