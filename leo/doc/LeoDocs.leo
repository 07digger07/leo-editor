<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet ekr_test?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20070610174018"><vh>Startup</vh>
<v t="ekr.20070325123558"><vh>@chapters</vh></v>
<v t="ekr.20050404094627"><vh>Buttons</vh>
<v t="ekr.20090712122931.10453"><vh>Disabled buttons</vh>
<v t="ekr.20050901060119"><vh>@@button def list</vh>
<v t="ekr.20050901061220"><vh>createDefList</vh></v>
</v>
<v t="sps.20100708203040.19008"><vh>@@button generate-full-userguide</vh>
<v t="sps.20100708203040.19009"><vh>&lt;&lt; html manual &gt;&gt;</vh></v>
<v t="sps.20100708203040.19010"><vh>&lt;&lt; pdf manual &gt;&gt;</vh></v>
</v>
<v t="ville.20090705224948.5734"><vh>@@button generate-userguide</vh>
<v t="ville.20090705225609.5736"><vh>&lt;&lt; html manual &gt;&gt;</vh></v>
<v t="ville.20090705225609.5738"><vh>&lt;&lt; pdf manual &gt;&gt;</vh></v>
</v>
<v t="ekr.20050901055150"><vh>@@button promote</vh></v>
<v t="ekr.20050902080416"><vh>@@button reformat-paragraph</vh></v>
<v t="ekr.20091112060950.6677"><vh>@@button Remove newlines</vh></v>
<v t="ekr.20060525104232"><vh>@@button rst-&gt;html</vh></v>
<v t="ekr.20060525110135"><vh>@@button rst-&gt;pdf</vh></v>
<v t="ekr.20060525110217"><vh>@@button rst-&gt;rst</vh></v>
<v t="ekr.20060525110135.1"><vh>@@button rst-&gt;tex</vh></v>
<v t="ekr.20050812090111"><vh>@@button rst3</vh></v>
<v t="ekr.20091006063434.13802"><vh>@@button rst3</vh></v>
<v t="ekr.20050901054622"><vh>@@button Save</vh></v>
<v t="ekr.20050901121617"><vh>@@button sentence</vh>
<v t="ekr.20050901121617.1"><vh>splitSentences</vh></v>
</v>
<v t="ekr.20041226081019"><vh>@@button Spell</vh></v>
<v t="ekr.20070115172724.2"><vh>@@button winpdb</vh></v>
</v>
<v t="ville.20090520232034.6345"><vh>@button rst-preview</vh></v>
<v t="ekr.20101025080245.6075"><vh>@button promote-child-bodies</vh></v>
</v>
<v t="ekr.20050407144417"><vh>@settings</vh>
<v t="ekr.20100908122026.4443"><vh>@enabled_plugins</vh></v>
<v t="ekr.20100907092300.4440"><vh>Inkscape options</vh>
<v t="ekr.20100907092300.4441"><vh>@string inkscape-template = ../docs/inkscape-template.svg</vh></v>
<v t="ekr.20100907092300.4442"><vh>@string inkscape-bin = "c:\Program Files (x86)\Inkscape\inkscape.exe"</vh></v>
</v>
<v t="ekr.20101009114830.4724"><vh>File options</vh>
<v t="ekr.20080923182326.1"><vh>@@bool create_nonexistent_directories = True</vh></v>
<v t="ekr.20080412124815.1"><vh>@bool fixedWindow = False</vh></v>
<v t="ekr.20101009114830.4723"><vh>@bool put_expansion_bits_in_leo_files = False</vh></v>
</v>
<v t="ekr.20101009114830.4725"><vh>Plugins options</vh>
<v t="ekr.20050407144342"><vh>@page http plugin</vh>
<v t="ekr.20050407144342.1"><vh>@bool http_active = False</vh></v>
<v t="ekr.20050407144342.2"><vh>@int  port = 8080</vh></v>
<v t="ekr.20050407144342.3"><vh>@string rst_http_attributename = rst_http_attribute</vh></v>
</v>
<v t="ekr.20050812123002"><vh>@page rst3 options</vh>
<v t="ekr.20050812123002.1"><vh>Http options...</vh>
<v t="ekr.20050812123002.2"><vh>@bool rst3_clear_http_attributes = False</vh></v>
<v t="ekr.20050812123002.3"><vh>@string rst3_http_attributename = 'rst_http_attribute'</vh></v>
<v t="ekr.20050812123002.4"><vh>@bool rst3_http_server_support = False</vh></v>
<v t="ekr.20050812123002.5"><vh>@string rst3_node_begin_marker = 'http-node-marker-'</vh></v>
</v>
<v t="ekr.20050812123002.6"><vh>@bool rst3_massage_body = False</vh></v>
<v t="ekr.20050812123002.7"><vh>@bool rst3_format_headlines = True</vh></v>
<v t="ekr.20050812123002.8"><vh>@bool rst3_write_intermediate_file = True</vh></v>
<v t="sps.20100708213227.44914"><vh>@string rst3_write_intermediate_extension = .html.txt</vh></v>
<v t="ekr.20051202072010"><vh>@string rst3_default_path =</vh></v>
</v>
</v>
</v>
<v t="ekr.20080923181012.1"><vh>@@rst ../test/new-directory/test.html</vh></v>
</v>
<v t="ekr.20100805171546.4412"><vh>Files</vh>
<v t="ville.20090609182215.5676"><vh>@auto-rst treecaching.txt</vh></v>
<v t="ekr.20090428102353.1"><vh>@edit html\leo_toc.html.txt</vh></v>
<v t="ekr.20090428133936.2"><vh>@edit html\conf.py</vh></v>
<v t="ekr.20101025080245.5800"><vh>@edit leo_toc.html</vh></v>
<v t="ekr.20101025080245.5801"><vh>@url modified toc</vh></v>
</v>
<v t="ekr.20050831195449"><vh>Read me first</vh></v>
<v t="ekr.20040414161647"><vh>Users Guide</vh>
<v t="ekr.20101025080245.5794"><vh>Preliminaries</vh>
<v t="ekr.20050831184021.3"><vh>Front matter</vh>
<v t="ekr.20100805165051.7148"><vh>@thin frontMatter.txt</vh></v>
</v>
<v t="ekr.20070701101808"><vh>Preface</vh>
<v t="ekr.20100805165051.7149"><vh>@thin preface.txt</vh></v>
</v>
<v t="ekr.20050831184021.4"><vh>What people are saying about Leo</vh>
<v t="ekr.20100805165051.7150"><vh>@thin testimonials.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5795"><vh>Basics</vh>
<v t="ekr.20050831195331.1"><vh>FAQ</vh>
<v t="ekr.20100805165051.7151"><vh>@thin FAQ.txt</vh></v>
</v>
<v t="ekr.20101007100904.4372"><vh>Slideshows page</vh>
<v t="ekr.20100821182153.4344"><vh>@thin screen-shots.txt</vh></v>
</v>
<v t="ekr.20100731112744.7267"><vh>Installing Leo</vh>
<v t="ekr.20100805165051.7152" descendentVnodeUnknownAttributes="7d71005505302e302e3671017d710258120000007273745f687474705f61747472696275746571035d71042858460000003c6120636c6173733d22746172676574222069643d22687474702d6e6f64652d6d61726b65722d333722206e616d653d22687474702d6e6f64652d6d61726b65722d3337223e710558040000003c2f613e71065d71072858260000003c64697620636c6173733d2273656374696f6e222069643d22672d726566696e64616c6c223e710858060000003c2f6469763e71095d710a28584f0000003c64697620636c6173733d2273656374696f6e222069643d2266756e6374696f6e732d666f722d66696e64696e672d616e642d6368616e67696e672d746578742d66726f6d2d73637269707473223e710b58060000003c2f6469763e710c5d710d28583f0000003c64697620636c6173733d22646f63756d656e74222069643d22636861707465722d372d736372697074696e672d6c656f2d776974682d707974686f6e223e710e58060000003c2f6469763e710f5d71102858060000003c626f64793e711158070000003c2f626f64793e71125d71132858430000003c68746d6c20786d6c6e733d22687474703a2f2f7777772e77332e6f72672f313939392f7868746d6c2220786d6c3a6c616e673d22656e22206c616e673d22656e223e711458070000003c2f68746d6c3e71154e656565656558070000003c2f6469763e0a711658070000003c2f6469763e0a711758350000003c64697620636c6173733d2273656374696f6e222069643d2272756e6e696e672d6c656f2d696e2d62617463682d6d6f6465223e0a7118586c0000003c68313e3c6120636c6173733d22746f632d6261636b7265662220687265663d22236964313922206e616d653d2272756e6e696e672d6c656f2d696e2d62617463682d6d6f6465223e52756e6e696e67204c656f20696e206261746368206d6f64653c2f613e3c2f68313e0a71196573732e"><vh>@thin install.txt</vh></v>
</v>
<v t="ekr.20091130111843.6787"><vh>The Leo Tutorial</vh>
<v t="ekr.20100805165051.7146"><vh>@thin intro.txt</vh></v>
<v t="ekr.20100808120531.4280"><vh>@thin outline-commands.txt</vh></v>
<v t="ekr.20100808120531.4283"><vh>@thin nutshell.txt</vh></v>
</v>
<v t="EKR.20040524104904.26"><vh>Using Outlines</vh>
<v t="ekr.20100805165051.7153"><vh>@thin outlines.txt</vh></v>
</v>
<v t="EKR.20040524104904.99"><vh>Using Leo's Commands</vh>
<v t="ekr.20100805165051.7155"><vh>@thin commands.txt</vh></v>
</v>
<v t="EKR.20040524104904.211"><vh>Customizing Leo</vh>
<v t="ekr.20100805165051.7158"><vh>@thin customizing.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5799"><vh>Intermediate Topics</vh>
<v t="ekr.20060430221745"><vh>Controlling syntax coloring</vh>
<v t="ekr.20100805165051.7165"><vh>@thin coloring.txt</vh></v>
</v>
<v t="ekr.20050831184021.1"><vh>Creating documents with Leo</vh>
<v t="ekr.20100805165051.7164"><vh>@thin rstplugin3.txt</vh></v>
</v>
<v t="ekr.20050831195331.4"><vh>Scripting Leo with Python</vh>
<v t="ekr.20100805165051.7157" descendentVnodeUnknownAttributes=""><vh>@thin scripting.txt</vh></v>
</v>
<v t="ekr.20050912125144"><vh>Plugins</vh>
<v t="ekr.20100805165051.7162" descendentVnodeUnknownAttributes="7d71005508302e302e31382e3071017d71025808000000616e6e6f746174657103580ce"><vh>@thin plugins.txt</vh></v>
</v>
<v t="ekr.20060612102055"><vh>Writing Plugins</vh>
<v t="ekr.20100805165051.7163"><vh>@thin writingPlugins.txt</vh></v>
</v>
<v t="ekr.20070628083442"><vh>Unit testing with Leo</vh>
<v t="ekr.20100805165051.7170"><vh>@thin unitTesting.txt</vh></v>
</v>
<v t="ekr.20060527105211"><vh>Debugging with Leo</vh>
<v t="ekr.20100805165051.7166"><vh>@thin debuggers.txt</vh></v>
</v>
<v t="ekr.20080730212711.14"><vh>Using @shadow</vh>
<v t="ekr.20100805165051.7173"><vh>@thin atShadow.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5798"><vh>Leo and Other Programs</vh>
<v t="ekr.20061025065357"><vh>Leo and Emacs</vh>
<v t="ekr.20100805165051.7168"><vh>@thin emacs.txt</vh></v>
</v>
<v t="ekr.20080203101507"><vh>ILeo - the IPython bridge</vh>
<v t="ekr.20100805165051.7171"><vh>@thin IpythonBridge.txt</vh></v>
</v>
<v t="ekr.20070317033759"><vh>Embedding Leo with the leoBridge module</vh>
<v t="ekr.20100805165051.7169"><vh>@thin leoBridge.txt</vh></v>
</v>
<v t="TL.20080804095315.1"><vh>Using Vim with Leo</vh>
<v t="ekr.20100805165051.7172"><vh>@thin vimBindings.txt</vh></v>
</v>
<v t="ekr.20060913164304"><vh>Using ZODB with Leo</vh>
<v t="ekr.20100805165051.7167"><vh>@thin zodb.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5796"><vh>Reference</vh>
<v t="ekr.20050831184021.5"><vh>Leo's Reference</vh>
<v t="ekr.20100805001344.7253"><vh>@thin directives.txt</vh></v>
</v>
<v t="EKR.20040524104904.161"><vh>Designing with Leo</vh>
<v t="ekr.20100805165051.7156"><vh>@thin design.txt</vh></v>
</v>
<v t="EKR.20040524104904.245"><vh>History of Leo</vh>
<v t="ekr.20100805165051.7159"><vh>@thin history.txt</vh></v>
</v>
<v t="EKR.20040524104904.261"><vh>Theory of Operation</vh>
<v t="ekr.20100805165051.7160"><vh>@thin theory.txt</vh></v>
</v>
<v t="ekr.20050901084134"><vh>White papers</vh>
<v t="ekr.20100805165051.7161"><vh>@thin whitepapers.txt</vh></v>
</v>
<v t="EKR.20040524104904.274"><vh>Appendices</vh>
<v t="ekr.20100805165051.7174"><vh>@thin appendices.txt</vh></v>
</v>
<v t="ekr.20091111112709.6671"><vh>Glossary</vh>
<v t="ekr.20100805165051.7147"><vh>@thin glossary.txt</vh></v>
</v>
</v>
<v t="ekr.20060620094033"><vh>What's New...</vh>
<v t="ekr.20100805165051.7175"><vh>@thin whatsnew.txt</vh></v>
</v>
</v>
<v t="ekr.20080301071818"><vh>Home page</vh>
<v t="ekr.20100808060203.4273"><vh>@thin html/front.html</vh></v>
</v>
<v t="ekr.20100821182153.4341"><vh>Slideshows</vh>
<v t="ekr.20101009111520.4525"><vh> Slideshow Buttons (disabled)</vh>
<v t="ekr.20101008061729.4425"><vh>@@button ins-@slide-nodes</vh></v>
<v t="ekr.20101008061729.4443"><vh>@@button copy-@screenshot-node</vh>
<v t="ekr.20101008061729.4552"><vh>@screenshot</vh>
<v t="ekr.20101008061729.4553"><vh>To Do List</vh>
<v t="ekr.20101008061729.4554"><vh>Urgent</vh></v>
<v t="ekr.20101008061729.4555"><vh>Important</vh></v>
<v t="ekr.20101008061729.4556"><vh>Soon</vh></v>
<v t="ekr.20101008061729.4557"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101008061729.4558"><vh>Diary</vh>
<v t="ekr.20101008061729.4559"><vh>2009</vh>
<v t="ekr.20101008061729.4567"><vh>Jul 2009</vh></v>
<v t="ekr.20101008061729.4568"><vh>Aug 2009</vh></v>
<v t="ekr.20101008061729.4569"><vh>Sep 2009</vh></v>
<v t="ekr.20101008061729.4570"><vh>Oct 2009</vh></v>
<v t="ekr.20101008061729.4571"><vh>Nov 2009</vh></v>
<v t="ekr.20101008061729.4572"><vh>Dec 2009</vh></v>
</v>
<v t="ekr.20101008061729.4561"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101008061729.4637"><vh>@select Urgent</vh></v>
</v>
<v t="ekr.20101008061729.4538"><vh>@@button renumber nodes</vh></v>
<v t="ekr.20101007100904.4371"><vh>@@button make-slide-show @key=Alt-8</vh></v>
<v t="ekr.20101009114655.4531"><vh>@button make-slide @key=Alt-8</vh></v>
</v>
<v t="ekr.20101011165412.5009"><vh> Topics</vh>
<v t="ekr.20101014034526.5298"><vh>User-defined types</vh>
<v t="ekr.20101014034526.5292"><vh>\@button nodes</vh></v>
<v t="ekr.20101014034526.5291"><vh>@test nodes</vh></v>
<v t="ekr.20101014034526.5293"><vh>@url nodes</vh></v>
</v>
<v t="ekr.20101014034526.5294"><vh>IPython</vh></v>
<v t="ekr.20101014034526.5295"><vh>Vim &amp; Emacs</vh></v>
<v t="ekr.20101010141953.5027"><vh>Examples</vh>
<v t="ekr.20101010141953.5028"><vh>@slideshow Leo's NSIS Installer</vh>
<v t="ekr.20101010141953.5029"><vh>@title_pattern = Leo's NSIS Installer: Slide %(slide_number)s</vh></v>
<v t="ekr.20101010141953.5030"><vh>@slide 001</vh></v>
<v t="ekr.20101010141953.5031"><vh>@slide 002</vh>
<v t="ekr.20101010141953.5032"><vh>@screenshot</vh>
<v t="ekr.20101010141953.5033"><vh>Take screenshot of the compile .nsi dialog in a Windows folder</vh></v>
</v>
<v t="ekr.20101010141953.5034"><vh>@pause</vh></v>
<v t="ekr.20101010141953.5038"><vh>@url screenshot</vh></v>
<v t="ekr.20101010141953.5039"><vh>@url working file</vh></v>
<v t="ekr.20101010141953.5040"><vh>@url final output file</vh></v>
<v t="ekr.20101011071655.4918"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011092154.4923"><vh>@slide 003</vh></v>
<v t="ekr.20101011092154.4924"><vh>@slide 004</vh></v>
<v t="ekr.20101011092154.4925"><vh>@slide 005</vh></v>
<v t="ekr.20101011165412.5154"><vh>@@button make leo.nsi</vh>
<v t="ekr.20101011165412.5155"><vh>&lt;&lt; define version &gt;&gt;</vh></v>
<v t="ekr.20101011165412.5156"><vh>&lt;&lt; define inLeo &gt;&gt;</vh></v>
<v t="ekr.20101011165412.5157"><vh>&lt;&lt; define application constants &gt;&gt;</vh></v>
<v t="ekr.20101011165412.5158"><vh>class nsiWriter</vh>
<v t="ekr.20101011165412.5159"><vh>genScript &amp; helpers</vh>
<v t="ekr.20101011165412.5160"><vh>genHead</vh>
<v t="ekr.20101011165412.5161"><vh>putSettings</vh></v>
<v t="ekr.20101011165412.5162"><vh>putOnInit</vh></v>
</v>
<v t="ekr.20101011165412.5163"><vh>genInstallData &amp; helpers</vh>
<v t="ekr.20101011165412.5164"><vh>getInstallVariableData</vh></v>
</v>
<v t="ekr.20101011165412.5165"><vh>genMiddle</vh>
<v t="ekr.20101011165412.5166"><vh>genAdditionalIcons</vh></v>
<v t="ekr.20101011165412.5167"><vh>genDesktopShortcuts</vh></v>
<v t="ekr.20101011165412.5168"><vh>genFileAssociation</vh></v>
<v t="ekr.20101011165412.5169"><vh>genMenuShortcuts</vh></v>
<v t="ekr.20101011165412.5170"><vh>genMiddleFunctions</vh></v>
<v t="ekr.20101011165412.5171"><vh>genPost</vh></v>
<v t="ekr.20101011165412.5172"><vh>genUninstallSettings</vh></v>
</v>
<v t="ekr.20101011165412.5173"><vh>genUninstallData &amp; helpers</vh>
<v t="ekr.20101011165412.5174"><vh>getDeleteDirectories</vh></v>
<v t="ekr.20101011165412.5175"><vh>getDeleteFiles</vh></v>
<v t="ekr.20101011165412.5176"><vh>getUninstallVariableData</vh></v>
</v>
<v t="ekr.20101011165412.5177"><vh>indent</vh></v>
<v t="ekr.20101011165412.5178"><vh>openNsi</vh></v>
<v t="ekr.20101011165412.5179"><vh>put</vh></v>
</v>
<v t="ekr.20101011165412.5180"><vh>run &amp; helpers</vh>
<v t="ekr.20101011165412.5181"><vh>directoryList</vh></v>
<v t="ekr.20101011165412.5182"><vh>filterLines &amp; helpers</vh>
<v t="ekr.20101011165412.5183"><vh>delete...</vh></v>
</v>
<v t="ekr.20101011165412.5184"><vh>makeDicts</vh></v>
<v t="ekr.20101011165412.5185"><vh>printMissing</vh></v>
</v>
<v t="ekr.20101011165412.5186"><vh>whitespace</vh>
<v t="ekr.20101011165412.5187"><vh>adjustTripleString</vh></v>
<v t="ekr.20101011165412.5188"><vh>get_leading_ws</vh></v>
<v t="ekr.20101011165412.5189"><vh>computeWidth</vh></v>
<v t="ekr.20101011165412.5190"><vh>removeLeadingWhitespace</vh></v>
<v t="ekr.20101011165412.5191"><vh>splitLines</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="ekr.20101014034526.5282"><vh>Unused &amp; reference</vh>
<v t="ekr.20101007082321.4357"><vh>@slideshow What is Leo? (To be deleted)</vh>
<v t="ekr.20101009171445.4637"><vh>@title_pattern = What is Leo? Slide %(slide_number)s</vh></v>
<v t="ekr.20101008061729.4372"><vh>@slide 001</vh>
<v t="ekr.20101010121134.4703"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4373"><vh>@slide 002</vh>
<v t="ekr.20101008061729.4384"><vh>@screenshot</vh>
<v t="ekr.20101008061729.4385"><vh>To Do List</vh>
<v t="ekr.20101008061729.4386"><vh>Urgent</vh></v>
<v t="ekr.20101008061729.4387"><vh>Important</vh></v>
<v t="ekr.20101008061729.4388"><vh>Soon</vh></v>
<v t="ekr.20101008061729.4389"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101008061729.4390"><vh>Diary</vh>
<v t="ekr.20101008061729.4391"><vh>2009</vh>
<v t="ekr.20101008061729.4392"><vh>Jan 1</vh></v>
</v>
<v t="ekr.20101008061729.4393"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101008061729.4396"><vh>@select To Do List</vh></v>
<v t="ekr.20101010121134.4704"><vh>@edit</vh></v>
<v t="ekr.20101010121134.4716"><vh>@url screenshot</vh></v>
<v t="ekr.20101010121134.4717"><vh>@url working file</vh></v>
<v t="ekr.20101010121134.4718"><vh>@url final output file</vh></v>
<v t="ekr.20101010121134.4719"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4398"><vh>@slide 003</vh>
<v t="ekr.20101009115705.4583"><vh>@screenshot</vh>
<v t="ekr.20101009115705.4584"><vh>To Do List</vh>
<v t="ekr.20101009115705.4585"><vh>Urgent</vh></v>
<v t="ekr.20101009115705.4586"><vh>Important</vh></v>
<v t="ekr.20101009115705.4587"><vh>Soon</vh></v>
<v t="ekr.20101009115705.4588"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101009115705.4589"><vh>Diary</vh>
<v t="ekr.20101009115705.4590"><vh>2009</vh>
<v t="ekr.20101009115705.4591"><vh>Jan 1</vh></v>
</v>
<v t="ekr.20101009115705.4592"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101008061729.4420"><vh>@select 2009</vh></v>
<v t="ekr.20101010121134.4731"><vh>@url screenshot</vh></v>
<v t="ekr.20101010121134.4732"><vh>@url working file</vh></v>
<v t="ekr.20101010121134.4746"><vh>@url final output file</vh></v>
<v t="ekr.20101010121134.4747"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4522"><vh>@slide 004</vh>
<v t="ekr.20101009124842.4595"><vh>@screenshot</vh>
<v t="ekr.20101009124842.4596"><vh>To Do List</vh>
<v t="ekr.20101009124842.4597"><vh>Urgent</vh></v>
<v t="ekr.20101009124842.4598"><vh>Important</vh></v>
<v t="ekr.20101009124842.4599"><vh>Soon</vh></v>
<v t="ekr.20101009124842.4600"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101009124842.4601"><vh>Diary</vh>
<v t="ekr.20101009124842.4602"><vh>2009</vh>
<v t="ekr.20101009124842.4603"><vh>Aug</vh></v>
<v t="ekr.20101009211009.4624"><vh>Jul</vh></v>
<v t="ekr.20101009211009.4623"><vh>Jun</vh></v>
<v t="ekr.20101009211009.4625"><vh>May</vh></v>
<v t="ekr.20101009211009.4626"><vh>Apr</vh></v>
<v t="ekr.20101009211009.4627"><vh>Mar</vh></v>
<v t="ekr.20101009211009.4628"><vh>Feb</vh></v>
<v t="ekr.20101009211009.4629"><vh>Jan</vh></v>
</v>
<v t="ekr.20101009124842.4604"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101009124842.4606"><vh>@select 2009</vh></v>
<v t="ekr.20101009124842.4607"><vh>@edit</vh></v>
<v t="ekr.20101010121134.4766"><vh>@url screenshot</vh></v>
<v t="ekr.20101010121134.4767"><vh>@url working file</vh></v>
<v t="ekr.20101010121134.4768"><vh>@url final output file</vh></v>
<v t="ekr.20101010121134.4769"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4518"><vh>@slide 005</vh>
<v t="ekr.20101009212539.4682"><vh>@screenshot</vh>
<v t="ekr.20101009212539.4683"><vh>To Do List</vh>
<v t="ekr.20101009212539.4684"><vh>Urgent</vh></v>
<v t="ekr.20101009212539.4685"><vh>Important</vh></v>
<v t="ekr.20101009212539.4686"><vh>Soon</vh></v>
<v t="ekr.20101009212539.4687"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101009212539.4688"><vh>Diary</vh>
<v t="ekr.20101009212539.4689"><vh>2009</vh>
<v t="ekr.20101009212539.4690"><vh>Aug</vh></v>
<v t="ekr.20101009212539.4691"><vh>Jul</vh></v>
<v t="ekr.20101009212539.4692"><vh>Jun</vh></v>
<v t="ekr.20101009212539.4693"><vh>May</vh></v>
<v t="ekr.20101009212539.4694"><vh>Apr</vh></v>
<v t="ekr.20101009212539.4695"><vh>Mar</vh></v>
<v t="ekr.20101009212539.4696"><vh>Feb</vh></v>
<v t="ekr.20101009212539.4697"><vh>Jan</vh></v>
</v>
<v t="ekr.20101009212539.4698"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101009212539.4746"><vh>@select 2009</vh></v>
<v t="ekr.20101009212539.4699"><vh>@edit</vh></v>
<v t="ekr.20101009213545.4670"><vh>@url screenshot</vh></v>
<v t="ekr.20101009213545.4671"><vh>@url working file</vh></v>
<v t="ekr.20101009213545.4672"><vh>@url final output file</vh></v>
<v t="ekr.20101010121134.4814"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4521"><vh>@slide 006</vh>
<v t="ekr.20101009213545.4692"><vh>@screenshot</vh>
<v t="ekr.20101009213545.4693"><vh>To Do List</vh>
<v t="ekr.20101009213545.4694"><vh>Urgent</vh></v>
<v t="ekr.20101009213545.4695"><vh>Important</vh></v>
<v t="ekr.20101009213545.4696"><vh>Soon</vh></v>
<v t="ekr.20101009213545.4697"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101009213545.4698"><vh>Diary</vh>
<v t="ekr.20101009213545.4699"><vh>2009</vh>
<v t="ekr.20101009213545.4700"><vh>Aug</vh></v>
<v t="ekr.20101009213545.4701"><vh>Jul</vh></v>
<v t="ekr.20101009213545.4702"><vh>Jun</vh></v>
<v t="ekr.20101009213545.4703"><vh>May</vh></v>
<v t="ekr.20101009213545.4704"><vh>Apr</vh></v>
<v t="ekr.20101009213545.4705"><vh>Mar</vh></v>
<v t="ekr.20101009213545.4706"><vh>Feb</vh></v>
<v t="ekr.20101009213545.4707"><vh>Jan</vh></v>
</v>
<v t="ekr.20101009213545.4708"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101009213545.4709"><vh>@edit</vh></v>
<v t="ekr.20101009213545.4710"><vh>@select Urgent</vh></v>
<v t="ekr.20101010121134.4810"><vh>@url screenshot</vh></v>
<v t="ekr.20101010121134.4811"><vh>@url working file</vh></v>
<v t="ekr.20101010121134.4812"><vh>@url final output file</vh></v>
<v t="ekr.20101010121134.4813"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4523"><vh>@slide 007</vh>
<v t="ekr.20101010121134.4832"><vh>@screenshot</vh>
<v t="ekr.20101010121134.4833"><vh>To Do List</vh>
<v t="ekr.20101010121134.4834"><vh>Urgent</vh></v>
<v t="ekr.20101010121134.4835"><vh>Important</vh></v>
<v t="ekr.20101010121134.4836"><vh>Soon</vh></v>
<v t="ekr.20101010121134.4837"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101010121134.4838"><vh>Diary</vh>
<v t="ekr.20101010121134.4839"><vh>2009</vh>
<v t="ekr.20101010121134.4840"><vh>Aug</vh></v>
<v t="ekr.20101010121134.4841"><vh>Jul</vh></v>
<v t="ekr.20101010121134.4842"><vh>Jun</vh></v>
<v t="ekr.20101010121134.4843"><vh>May</vh></v>
<v t="ekr.20101010121134.4844"><vh>Apr</vh></v>
<v t="ekr.20101010121134.4845"><vh>Mar</vh></v>
<v t="ekr.20101010121134.4846"><vh>Feb</vh></v>
<v t="ekr.20101010121134.4847"><vh>Jan</vh></v>
</v>
<v t="ekr.20101010121134.4848"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101010141334.4791"><vh>@select Urgent</vh></v>
<v t="ekr.20101010121134.4849"><vh>@pause</vh></v>
<v t="ekr.20101010121134.4868"><vh>@url screenshot</vh></v>
<v t="ekr.20101010121134.4869"><vh>@url working file</vh></v>
<v t="ekr.20101010140842.4755"><vh>@url final output file</vh></v>
<v t="ekr.20101010140842.4756"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4524"><vh>@slide 008</vh>
<v t="ekr.20101010141334.4772"><vh>@screenshot</vh>
<v t="ekr.20101010141334.4773"><vh>To Do List</vh>
<v t="ekr.20101010141334.4774"><vh>Urgent</vh></v>
<v t="ekr.20101010141334.4775"><vh>Important</vh></v>
<v t="ekr.20101010141334.4776"><vh>Soon</vh></v>
<v t="ekr.20101010141334.4777"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101010141334.4778"><vh>Diary</vh>
<v t="ekr.20101010141334.4779"><vh>2009</vh>
<v t="ekr.20101010141334.4780"><vh>Aug</vh></v>
<v t="ekr.20101010141334.4781"><vh>Jul</vh></v>
<v t="ekr.20101010141334.4782"><vh>Jun</vh></v>
<v t="ekr.20101010141334.4783"><vh>May</vh></v>
<v t="ekr.20101010141334.4784"><vh>Apr</vh></v>
<v t="ekr.20101010141334.4785"><vh>Mar</vh></v>
<v t="ekr.20101010141334.4786"><vh>Feb</vh></v>
<v t="ekr.20101010141334.4787"><vh>Jan</vh></v>
</v>
<v t="ekr.20101010141334.4788"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101010141334.4793"><vh>@select Urgent</vh></v>
<v t="ekr.20101010141334.4789"><vh>@pause</vh></v>
<v t="ekr.20101010141953.4835"><vh>@url screenshot</vh></v>
<v t="ekr.20101010141953.4836"><vh>@url working file</vh></v>
<v t="ekr.20101010141953.4837"><vh>@url final output file</vh></v>
<v t="ekr.20101010141953.4838"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4525"><vh>@slide 009</vh>
<v t="ekr.20101010141953.4856"><vh>@screenshot</vh>
<v t="ekr.20101010141953.4857"><vh>To Do List</vh>
<v t="ekr.20101010141953.4858"><vh>Urgent</vh></v>
<v t="ekr.20101010141953.4859"><vh>Important</vh></v>
<v t="ekr.20101010141953.4860"><vh>Soon</vh></v>
<v t="ekr.20101010141953.4861"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101010141953.4862"><vh>Diary</vh>
<v t="ekr.20101010141953.4863"><vh>2009</vh>
<v t="ekr.20101010141953.4864"><vh>Aug</vh></v>
<v t="ekr.20101010141953.4865"><vh>Jul</vh></v>
<v t="ekr.20101010141953.4866"><vh>Jun</vh></v>
<v t="ekr.20101010141953.4867"><vh>May</vh></v>
<v t="ekr.20101010141953.4868"><vh>Apr</vh></v>
<v t="ekr.20101010141953.4869"><vh>Mar</vh></v>
<v t="ekr.20101010141953.4870"><vh>Feb</vh></v>
<v t="ekr.20101010141953.4871"><vh>Jan</vh></v>
</v>
<v t="ekr.20101010141953.4872"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101010141953.4873"><vh>@select Urgent</vh></v>
<v t="ekr.20101010141953.4896"><vh>@pause</vh></v>
<v t="ekr.20101010141953.4897"><vh>@edit</vh></v>
<v t="ekr.20101010141953.4916"><vh>@url screenshot</vh></v>
<v t="ekr.20101010141953.4917"><vh>@url working file</vh></v>
<v t="ekr.20101010141953.4918"><vh>@url final output file</vh></v>
<v t="ekr.20101010141953.4919"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4526"><vh>@slide 010</vh>
<v t="ekr.20101010141953.4922"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101008061729.4527"><vh>@slide 011</vh>
<v t="ekr.20101010141953.4940"><vh>@screenshot</vh>
<v t="ekr.20101010141953.4941"><vh>To Do List</vh>
<v t="ekr.20101010141953.4942"><vh>Urgent</vh></v>
<v t="ekr.20101010141953.4943"><vh>Important</vh></v>
<v t="ekr.20101010141953.4944"><vh>Soon</vh></v>
<v t="ekr.20101010141953.4945"><vh>Whenever</vh></v>
</v>
<v t="ekr.20101010141953.4946"><vh>Diary</vh>
<v t="ekr.20101010141953.4947"><vh>2009</vh>
<v t="ekr.20101010141953.4948"><vh>Aug</vh></v>
<v t="ekr.20101010141953.4949"><vh>Jul</vh></v>
<v t="ekr.20101010141953.4950"><vh>Jun</vh></v>
<v t="ekr.20101010141953.4951"><vh>May</vh></v>
<v t="ekr.20101010141953.4952"><vh>Apr</vh></v>
<v t="ekr.20101010141953.4953"><vh>Mar</vh></v>
<v t="ekr.20101010141953.4954"><vh>Feb</vh></v>
<v t="ekr.20101010141953.4955"><vh>Jan</vh></v>
</v>
<v t="ekr.20101010141953.4956"><vh>2010</vh></v>
</v>
</v>
<v t="ekr.20101010141953.4958"><vh>@pause</vh></v>
<v t="ekr.20101010141953.4957"><vh>@select Diary</vh></v>
<v t="ekr.20101010141953.5023"><vh>@url screenshot</vh></v>
<v t="ekr.20101010141953.5024"><vh>@url working file</vh></v>
</v>
<v t="ekr.20101008061729.4528"><vh>@slide 012</vh></v>
<v t="ekr.20101008061729.4529"><vh>@slide 013</vh></v>
<v t="ekr.20101008061729.4530"><vh>@slide 014</vh></v>
<v t="ekr.20101008061729.4531"><vh>@slide 015</vh></v>
<v t="ekr.20101008061729.4532"><vh>@slide 016</vh></v>
<v t="ekr.20101008061729.4533"><vh>@slide 017</vh></v>
<v t="ekr.20101008061729.4534"><vh>@slide 018</vh></v>
<v t="ekr.20101008061729.4535"><vh>@slide 019</vh></v>
<v t="ekr.20101008061729.4536"><vh>@slide 020</vh></v>
<v t="ekr.20101008061729.4537"><vh>@slide 021</vh></v>
<v t="ekr.20101008061729.4539"><vh>@slide 022</vh></v>
<v t="ekr.20101008061729.4540"><vh>@slide 023</vh></v>
</v>
<v t="ekr.20101011071655.4919"><vh>@slideshow Whetting Your Appetite</vh>
<v t="ekr.20101013072903.5219"><vh>@slide What you can do with Leo</vh>
<v t="ekr.20101013072903.5220"><vh>@no-screenshot</vh></v>
</v>
<v t="ekr.20101013072903.5221"><vh>@slide Leo's main window</vh></v>
<v t="ekr.20101011071655.4920"><vh>@slide A Personal Information Manager</vh></v>
<v t="ekr.20101011103613.4930"><vh>@slide A Better PIM</vh>
<v t="ekr.20101011103613.4942"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101012083118.5245"><vh>@slide External Files</vh></v>
<v t="ekr.20101011103613.4933"><vh>@slide A Scripting Environment</vh>
<v t="ekr.20101011103613.4943"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011103613.4934"><vh>@slide Better Scripting</vh>
<v t="ekr.20101011103613.4944"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011103613.4938"><vh>@slide Better Scripting, Part Deux</vh>
<v t="ekr.20101011103613.4945"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011103613.4935"><vh>@slide Outlines Create New Leo Commands</vh>
<v t="ekr.20101011103613.4946"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011103613.4936"><vh>@slide Outlines Create Unit tests</vh>
<v t="ekr.20101011103613.4947"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011103613.4937"><vh>@slide Outlines Create Restructured Text</vh>
<v t="ekr.20101011111455.4965"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101011103613.4939"><vh>@slide Outlines Create HTML</vh></v>
</v>
<v t="ekr.20101013072903.5262"><vh>@slideshow Leo &amp; Prezi</vh>
<v t="ekr.20101014031545.5278"><vh>@image lioness</vh></v>
<v t="ekr.20101014030710.5277"><vh>@url logo</vh></v>
</v>
<v t="ekr.20101011165412.5192"><vh>Reference</vh>
<v t="ekr.20101011165412.5195"><vh> Format of external files (copy)</vh></v>
</v>
<v t="ekr.20101013072903.5218"><vh>Descriptions are not stories!</vh>
<v t="ekr.20101011165412.5011"><vh>nutshell (copy)</vh></v>
<v t="ekr.20101012083118.5246"><vh>@@slide Leo</vh></v>
<v t="ekr.20101011103613.4940"><vh>@@slide The Leo way</vh>
<v t="ekr.20101012083118.5242"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5238"><vh>Don't describe the window!</vh>
<v t="ekr.20101013072903.5228"><vh>@slide ((file name: workbook2.leo</vh></v>
<v t="ekr.20101013072903.5229"><vh>@slide ((3 panes</vh></v>
<v t="ekr.20101013072903.5230"><vh>@slide ((outline pane</vh></v>
</v>
</v>
</v>
</v>
<v t="ekr.20101021092135.5431"><vh> Slideshows to-do</vh></v>
<v t="ekr.20100821182153.4345"><vh>@slideshow Installation</vh>
<v t="ekr.20101014034526.5299"><vh>@slide ((using Leo's installer</vh>
<v t="ekr.20101021093111.5432"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20100821182153.4348"><vh>@slide ((installing from sources</vh>
<v t="ekr.20101014105353.5257"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014034526.5302"><vh>@slide ((running Leo from a console</vh>
<v t="ekr.20101014105353.5258"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014034526.5303"><vh>@slide ((scripts &amp; .bat files</vh>
<v t="ekr.20101014105353.5259"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014034526.5304"><vh>@slide ((.leoID.txt</vh>
<v t="ekr.20101014105353.5260"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20100821182153.4350"><vh>@slide ((free software</vh>
<v t="ekr.20101014105353.5261"><vh>@url built slide</vh></v>
</v>
</v>
<v t="ekr.20101013072903.5224"><vh>@slideshow Leo basics step by step</vh>
<v t="ekr.20101013072903.5225"><vh>@slide ((no-slide</vh>
<v t="ekr.20101018190057.5370"><vh>@no-screenshot</vh></v>
<v t="ekr.20101018190057.5462"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5226"><vh>@slide ((Open notebook file</vh>
<v t="ekr.20101018190057.5441"><vh>@url final output file</vh></v>
<v t="ekr.20101021093614.5432"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5286"><vh>@slide ((Ctrl-H edits headline</vh>
<v t="ekr.20101018190057.5442"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5464"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5234"><vh>@slide (("to do" node</vh>
<v t="ekr.20101018190057.5443"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5424"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101018061243.5392"><vh>@slide ((Return ends editing</vh>
<v t="ekr.20101018190057.5444"><vh>@url final output file</vh></v>
<v t="ekr.20101021093614.5433"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101018061243.5393"><vh>@slide ((no-slide focus keys</vh>
<v t="ekr.20101018190057.5373"><vh>@no-screenshot</vh></v>
<v t="ekr.20101019053718.5422"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5325"><vh>@slide ((Ctrl-S saves outline</vh>
<v t="ekr.20101018190057.5445"><vh>@url final output file</vh></v>
<v t="ekr.20101021101327.5432"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5236"><vh>@slide ((Ctrl-I inserts a new node</vh>
<v t="ekr.20101018190057.5446"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5469"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5237"><vh>@slide (("go shopping"</vh>
<v t="ekr.20101018190057.5447"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5470"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5305"><vh>@slide ((typing text (icon box has blue square)</vh>
<v t="ekr.20101018190057.5448"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5426"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5244"><vh>@slide ((Ctrl-R</vh>
<v t="ekr.20101018190057.5449"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5427"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5290"><vh>@slide ((Ctrl-L</vh>
<v t="ekr.20101018190057.5450"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5473"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101013072903.5245"><vh>@slide ((undo/redo</vh>
<v t="ekr.20101018190057.5451"><vh>@url final output file</vh></v>
<v t="ekr.20101021093614.5435"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5294"><vh>@slide ((new node</vh>
<v t="ekr.20101018190057.5452"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5428"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5295"><vh>@slide (("fix car"</vh>
<v t="ekr.20101018190057.5453"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5476"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5296"><vh>@slide ((Ctrl-U</vh>
<v t="ekr.20101018190057.5454"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5477"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5297"><vh>@slide ((contracting nodes</vh>
<v t="ekr.20101018190057.5455"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5423"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5298"><vh>@slide ((Up-Arrow</vh>
<v t="ekr.20101018190057.5456"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5429"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5299" a="M"><vh>@slide ((Left-Arrow</vh>
<v t="ekr.20101018190057.5457"><vh>@url final output file</vh></v>
<v t="ekr.20101018203754.5430"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5300"><vh>@slide ((20 Right-Arrow</vh>
<v t="ekr.20101018190057.5458"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5481"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5309"><vh>@slide ((no-slide Arrow keys: summary</vh>
<v t="ekr.20101014110348.5323"><vh>@no-screenshot</vh></v>
<v t="ekr.20101018190057.5482"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5326"><vh>@slide ((Shift-Ctrl-C copies</vh>
<v t="ekr.20101018190057.5459"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5483"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101018061243.5397"><vh>@slide ((The pasted node</vh>
<v t="ekr.20101018190057.5460"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5484"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101018061243.5394"><vh>@slide ((expanding the pasted node</vh>
<v t="ekr.20101018190057.5461"><vh>@url final output file</vh></v>
<v t="ekr.20101018190057.5485"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5336"><vh>@slide ((no-slide end slide</vh>
<v t="ekr.20101018061243.5395"><vh>@no-screenshot</vh></v>
<v t="ekr.20101018190057.5486"><vh>@url built slide</vh></v>
</v>
</v>
<v t="ekr.20101014110348.5293"><vh>@slideshow Clones and views</vh></v>
<v t="ekr.20101011165412.4968"><vh>@slideshow Scripting Leo</vh></v>
<v t="ekr.20101014034526.5296"><vh>@slideshow Leo's minibuffer</vh></v>
<v t="ekr.20101018061243.5396"><vh>Promote &amp; demote</vh>
<v t="ekr.20101014110348.5307"><vh>@slide ((18 Promotes &amp; demote</vh>
<v t="ekr.20101016043116.5337"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5329"><vh>@slide ((Ctrl-Shift-] demote</vh>
<v t="ekr.20101016043116.5338"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5330"><vh>@slide ((Ctrl-Shift-[ promote</vh>
<v t="ekr.20101016043116.5339"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5331"><vh>@slide ((promote &amp; demote to move batches of nodes</vh>
<v t="ekr.20101016043116.5340"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5332"><vh>@slide ((demote the moved nodes</vh>
<v t="ekr.20101016043116.5341"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5333"><vh>@slide ((move helper node left</vh>
<v t="ekr.20101016043116.5342"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5334"><vh>@slide ((promote the moved nodes</vh>
<v t="ekr.20101016043116.5343"><vh>@url final output file</vh></v>
</v>
<v t="ekr.20101014110348.5335"><vh>@slide ((delete the helper node</vh>
<v t="ekr.20101016043116.5344"><vh>@url final output file</vh></v>
</v>
</v>
<v t="ekr.20101014110348.5338"><vh>@button meld</vh>
<v t="ekr.20101014110348.5339"><vh>class MeldController</vh>
<v t="ekr.20101016043116.5353"><vh>utils</vh>
<v t="ekr.20101016043116.6224"><vh>finalize &amp; fix</vh></v>
<v t="ekr.20101015151959.5301"><vh>has_at_no_screenshot_node</vh></v>
<v t="ekr.20101015151959.5302"><vh>match</vh></v>
</v>
<v t="ekr.20101014110348.5341"><vh>run &amp; helpers</vh>
<v t="ekr.20101014110348.5344"><vh>adjust_slideshow &amp; helper</vh>
<v t="ekr.20101015151959.5300"><vh>adjust_slide_node &amp; helpers</vh>
<v t="ekr.20101016043116.6226"><vh>add_at_url_final_output_file</vh></v>
<v t="ekr.20101016043116.6223"><vh>add_image_directive</vh></v>
<v t="ekr.20101016043116.6225"><vh>delete_at_url_built_slide_node</vh></v>
</v>
</v>
<v t="ekr.20101014110348.5342"><vh>check &amp; helpers</vh>
<v t="ekr.20101016043116.5349"><vh>check_dir</vh></v>
<v t="ekr.20101014110348.5347"><vh>count_slide_nodes</vh></v>
</v>
<v t="ekr.20101014110348.5343"><vh>copy_files &amp; helper</vh>
<v t="ekr.20101016043116.5352"><vh>copy_file</vh></v>
</v>
<v t="ekr.20101014110348.5346"><vh>get_wink_screenshots</vh></v>
</v>
</v>
</v>
<v t="ekr.20101018183640.5360"><vh>@button remove-image-directives</vh></v>
<v t="ekr.20101018185243.5368"><vh>@button remove-final-output</vh></v>
<v t="ekr.20101014034526.5280"><vh>@slideshow External files</vh>
<v t="ekr.20101014034526.5287"><vh>  Topics</vh></v>
<v t="ekr.20101014110348.5256"><vh>@slide ((no-ss intro</vh>
<v t="ekr.20101020082858.5420"><vh>@no-screenshot</vh></v>
<v t="ekr.20101021092135.5430"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101020082858.5441"><vh>@slide ((no-ss auto read/write</vh>
<v t="ekr.20101020082858.5443"><vh>@no-screenshot</vh></v>
<v t="ekr.20101020082858.5446"><vh>@url built slide</vh></v>
</v>
<v t="ekr.20101014110348.5278"><vh>at-thin</vh>
<v t="ekr.20101019085517.5424"><vh>@slide ((@thin</vh></v>
</v>
<v t="ekr.20101014110348.5270"><vh>at-edit</vh>
<v t="ekr.20101014110348.5275"><vh>@slide ((@edit intro</vh></v>
<v t="ekr.20101014110348.5257"><vh>@slide ((@edit</vh></v>
<v t="ekr.20101014110348.5261"><vh>@slide ((simple body text</vh></v>
<v t="ekr.20101014110348.5260"><vh>@slide ((save, creating the file</vh></v>
<v t="ekr.20101014110348.5262"><vh>@slide ((change the text</vh></v>
<v t="ekr.20101014110348.5263"><vh>@slide ((save again, updating the file</vh></v>
<v t="ekr.20101014110348.5265"><vh>@slide ((here is the actual file</vh></v>
<v t="ekr.20101014110348.5264"><vh>@slide ((close the file</vh></v>
<v t="ekr.20101014110348.5266"><vh>@slide ((edit the file outside of Leo</vh></v>
<v t="ekr.20101014110348.5267"><vh>@slide ((close Leo file and reopen</vh></v>
<v t="ekr.20101014110348.5274"><vh>@slide ((@edit with existing files</vh></v>
</v>
<v t="ekr.20101014110348.5271"><vh>at-auto</vh>
<v t="ekr.20101014110348.5272"><vh>((@auto</vh></v>
</v>
</v>
</v>
<v t="ekr.20090717084250.10702"><vh>Other docs</vh>
<v t="ekr.20100805165051.7176"><vh>@thin other_docs.txt</vh></v>
</v>
<v t="ekr.20101025080245.5540"><vh>To do</vh>
<v t="ekr.20101025080245.5520"><vh>To do a1</vh>
<v t="ekr.20101025080245.5539"><vh>External Files &amp; Clones slideshows</vh></v>
<v t="ekr.20101025080245.5523"><vh>Improve users guide</vh>
<v t="ekr.20101025080245.5521"><vh>Document invalid bug: 657374 Content of shadow file affects the outline structure</vh></v>
<v t="ekr.20101025080245.5525"><vh>Add explanation of icon box to tutorial</vh></v>
<v t="ekr.20101025080245.5527"><vh>Fix chapter 14 typos</vh></v>
<v t="ekr.20101025080245.5528"><vh>Clarify read @file node command</vh></v>
<v t="ekr.20101025080245.5529"><vh>Document leoremote plugin</vh></v>
<v t="ekr.20101025080245.5532"><vh>Document slideshow stuff.</vh></v>
<v t="ekr.20101025080245.5533"><vh>Document {{expression}} in paths</vh></v>
</v>
<v t="ekr.20101025080245.5543"><vh>Document screenshots plugin</vh></v>
<v t="ekr.20101025080245.5546"><vh>@url Document Ville's server</vh></v>
<v t="ekr.20101025080245.5734"><vh>add items to FAQ</vh></v>
<v t="ekr.20101025080245.5544"><vh>Newbie complaints</vh></v>
</v>
<v t="ekr.20101025080245.5541"><vh>To do b1</vh>
<v t="ekr.20101025080245.5535"><vh>Revise Tutorial</vh></v>
<v t="ekr.20101025080245.5531"><vh>Make TOC sidebar collapsible</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5542"><vh>Review of leo-editor</vh>
<v t="ekr.20101025080245.5735"><vh>10/2010</vh>
<v t="ekr.20101025080245.5736"><vh>FAQ: how to syntax color sql</vh></v>
<v t="ekr.20101025080245.5737"><vh>@url Prezi: a good model for intros</vh>
<v t="ekr.20101025080245.5787"><vh>@url Prezi home page</vh></v>
</v>
<v t="ekr.20101025080245.5738"><vh>@url FAQ: how to use macros</vh></v>
</v>
<v t="ekr.20101025080245.5740"><vh>9/2010</vh>
<v t="ekr.20101025080245.5739"><vh>@url Ville's server code</vh></v>
<v t="ekr.20101025080245.5741"><vh>@url FAQ: creating windows file associations</vh></v>
<v t="ekr.20101025080245.5742"><vh>@url Google: window 7 file icons</vh></v>
<v t="ekr.20101025080245.5743"><vh>@url Google: window 7 file associations</vh></v>
<v t="ekr.20101025080245.5744"><vh>@url qt-tabs</vh></v>
<v t="ekr.20101025080245.5745"><vh>Slideshow stuff</vh>
<v t="ekr.20101025080245.5746"><vh>@url slideshow will be a plugin</vh></v>
<v t="ekr.20101025080245.5747"><vh>@url callouts with inkscape</vh></v>
<v t="ekr.20101025080245.5752"><vh>@url more thougths about slides</vh></v>
<v t="ekr.20101025080245.5758"><vh>@url (Aug) Leo vrs Screenbook Maker and storyboarding</vh></v>
<v t="ekr.20101025080245.5759"><vh>@url (Aug) S5 is not good enough</vh></v>
<v t="ekr.20101025080245.5760"><vh>@url (Aug) Deconstructing screenbook maker</vh></v>
</v>
<v t="ekr.20101025080245.5748"><vh>@url DnD howto</vh></v>
<v t="ekr.20101025080245.5750"><vh>@url interact plugin (ileo)</vh></v>
</v>
<v t="ekr.20101025080245.5753"><vh>8/2010</vh>
<v t="ekr.20101025080245.5751"><vh>@url leoscreen plugin</vh></v>
<v t="ekr.20101025080245.5754"><vh>@url time to retire tk? (design)</vh></v>
<v t="ekr.20101025080245.5755"><vh>@url simulating &lt;&lt;nodes&gt;&gt; in rst branches (design)</vh></v>
<v t="ekr.20101025080245.5756"><vh>@url @auto import problems</vh></v>
<v t="ekr.20101025080245.5757"><vh>@url leo in a nutshell</vh></v>
<v t="ekr.20101025080245.5761"><vh>@url The curse of knowledge</vh></v>
<v t="ekr.20101025080245.5762"><vh>@url second draft of rst3 tutorial</vh></v>
<v t="ekr.20101025080245.5763"><vh>@url quickmove tutorial</vh></v>
<v t="ekr.20101025080245.5764"><vh>@url ** sharing code in scripts</vh></v>
<v t="ekr.20101025080245.5765"><vh>@url simplifying docs for rst3</vh></v>
<v t="ekr.20101025080245.5766"><vh>@url Leo screencast on utube</vh></v>
<v t="ekr.20101025080245.5767"><vh>@url @root must disappear</vh></v>
<v t="ekr.20101025080245.5768"><vh>@url revising chapter 6 (design chapter)</vh></v>
<v t="ekr.20101025080245.5769"><vh>@url ** p.deletePositionsInList</vh></v>
</v>
<v t="ekr.20101025080245.5770"><vh>7/2010</vh>
<v t="ekr.20101025080245.5771"><vh>@url Leo3k works with docutils</vh></v>
<v t="ekr.20101025080245.5772"><vh>@url ** At last: deleting "resurrected nodes"</vh>
<v t="ekr.20101025080245.5773"><vh>Note: Leo creates both resurrected nodes and recovered nodes</vh></v>
</v>
<v t="ekr.20101025080245.5774"><vh>@url @auto now regularizes newlines</vh></v>
<v t="ekr.20101025080245.5775"><vh>@url new sentinels</vh></v>
<v t="ekr.20101025080245.5776"><vh>@url complications re new sentinels (design)</vh></v>
<v t="ekr.20101025080245.5777"><vh>@url how to avoid usernames in outlines</vh></v>
</v>
<v t="ekr.20101025080245.5778"><vh>6/2010</vh>
<v t="ekr.20101025080245.5779"><vh>@url @auto-rst issue</vh></v>
</v>
<v t="ekr.20101025080245.5780"><vh>5/2010</vh>
<v t="ekr.20101025080245.5781"><vh>@url much simpler sentinels</vh></v>
</v>
<v t="ekr.20101025080245.5786"><vh>4/2010</vh>
<v t="ekr.20101025080245.5782"><vh>@url new-pylint is too slow</vh></v>
<v t="ekr.20101025080245.5783"><vh>@url thoughts about autocompletion</vh></v>
</v>
<v t="ekr.20101025080245.5785"><vh>3/2010</vh>
<v t="ekr.20101025080245.5784"><vh>@url @language pseudoplain?</vh></v>
</v>
</v>
<v t="ekr.20100805165051.7177"><vh>@thin release_notes.txt</vh></v>
</vnodes>
<tnodes>
<t tx="EKR.20040524104904.161"></t>
<t tx="EKR.20040524104904.211"></t>
<t tx="EKR.20040524104904.245"></t>
<t tx="EKR.20040524104904.26"></t>
<t tx="EKR.20040524104904.261"></t>
<t tx="EKR.20040524104904.274"></t>
<t tx="EKR.20040524104904.99"></t>
<t tx="TL.20080804095315.1"></t>
<t tx="ekr.20040414161647">@nocolor-node

These are the sources for Leo's users guide.

They contain sphinx markup. See::
    
    http://sphinx.pocoo.org/
    http://docutils.sourceforge.net/docs/user/rst/quickstart.html
    
To generate these docs:

    - From this file, run rst3 on desired tree.
    - cd leo\doc\html
    - make html

To create pdf (probably easiest on Linux, with necessary latex packages installed):

    - make latex
    - cd _build/latex
    - make all-pdf
    
Important files:

- doc\html\conf.py contains settings, including the name of the master toctree
  document, leo_toc.html.txt.

- leo_toc.html.txt contains a list of all file to be included.
</t>
<t tx="ekr.20041226081019">c.spellCommands.openSpellTab()</t>
<t tx="ekr.20050404094627"></t>
<t tx="ekr.20050407144342"> 
        
        
        </t>
<t tx="ekr.20050407144342.1"></t>
<t tx="ekr.20050407144342.2"></t>
<t tx="ekr.20050407144342.3"></t>
<t tx="ekr.20050407144417"></t>
<t tx="ekr.20050812090111">import leo.core.leoPlugins as leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        controller.processTopTree(p)
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20050812123002"></t>
<t tx="ekr.20050812123002.1"></t>
<t tx="ekr.20050812123002.2">Deletes p.v.rst2_http_attributename from all nodes after writing.

Deletes p.v.unknownAttributes if it then becomes empty.</t>
<t tx="ekr.20050812123002.3"></t>
<t tx="ekr.20050812123002.4">@nocolor

If False, add_node_marker and http_support_main  do nothing.  Otherwise add_node_marker does the following:
    
1. add_node_marker writes a string using generate_node_marker.

Generates 'http-node-marker-'+str(number), where number is config.node_counter
(incremented each time add_node_marker is called.

2. Enables the following code in :
@color

    if config.tag == 'open2':
        http_map = self.http_map
    else:
        http_map = {}
        config.anchormap = {}
        # maps v nodes to markers.
        config.node_counter = 0
    # [snip] code to write the tree
    if config.rst2_http_server_support:
        self.http_map = http_map</t>
<t tx="ekr.20050812123002.5"></t>
<t tx="ekr.20050812123002.6">True: call body_filter to massage text.

Removes @ignore, @nocolor, @wrap directives.
</t>
<t tx="ekr.20050812123002.7">Used differently.  See rst2_pure_document.</t>
<t tx="ekr.20050812123002.8"></t>
<t tx="ekr.20050831184021.1"></t>
<t tx="ekr.20050831184021.3"></t>
<t tx="ekr.20050831184021.4"></t>
<t tx="ekr.20050831184021.5"></t>
<t tx="ekr.20050831195331.1"></t>
<t tx="ekr.20050831195331.4"></t>
<t tx="ekr.20050831195449">@nocolor

For instruction about installing Leo see:
http://webpages.charter.net/edreamleo/install.html

For everything a beginner needs to know about Leo see:
http://webpages.charter.net/edreamleo/intro.html

For help, please ask questions at:
http://groups.google.com/group/leo-editor</t>
<t tx="ekr.20050901054622">c.save()</t>
<t tx="ekr.20050901055150">@color
# Script to promote headlines and body text

root = p.copy()
body = [root.bodyString()+'\n']
for p in root.subtree_iter():
    body.append(p.headString())
    body.append(p.bodyString().rstrip()+'\n')

body = '\n'.join(body)
root.setBodyString(body)
</t>
<t tx="ekr.20050901060119">@color

# Converts text selection to def list.

@others

createDefList(c,p)</t>
<t tx="ekr.20050901061220">def createDefList(c,p):
    
    undoType = 'Create Def List'
    head,lines,tail,oldSel,oldYview = c.getBodyLines()
    if not lines: return
    
    result = ['``%s``\n' % lines[0].strip()]
    
    for line in lines[1:]:
        result.append('    %s' % line.lstrip()+'\n')
    lines = ''.join(result).rstrip()

    c.updateBodyPane(head,lines,tail,undoType,oldSel,oldYview)</t>
<t tx="ekr.20050901084134"></t>
<t tx="ekr.20050901121617">@color

# Puts each sentence on a separate line
# Not as useful as I had hoped.  The Reformat Paragraph command is better.

@others

splitSentences(c,p)</t>
<t tx="ekr.20050901121617.1">def splitSentences(c,p):
    
    undoType = 'Split Sentences'
    head,lines,tail,oldSel,oldYview = c.getBodyLines()
    s = p.bodyString()
    if not s.strip(): return
    
    i = 0 ; line = [] ; result = [] ; nl = False
    while i &lt; len(s):
        ch = s[i] ; i += 1 ; ch2 = '.'
        if i &lt; len(s): ch2 = s[i]
        if ch in ('.',';') and ch2 in (' ','\t','\n'):
            line.append(ch)
            r = ''.join(line)+'\n'
            if nl and ch == '.': r = r + '\n'
            result.append(r)
            line = [] ; nl = False
            while i &lt; len(s):
                ch2 = s[i]
                if ch2 == '\n' and ch == '.':
                    nl = True
                if ch2 in (' ','\t','\n'):
                    i += 1
                else:
                    break
        else: line.append(ch)

    result.append(''.join(line)+'\n') # Add the last line.
    result = ''.join(result)
    c.updateBodyPane('',result,'',undoType,oldSel,oldYview)</t>
<t tx="ekr.20050902080416"># Start at the top.
b = c.frame.body.bodyCtrl
b.mark_set('insert','1.0')
b.tag_remove('sel','1.0','end')
b.tag_add('sel','1.0','1.0')
b.update_idletasks()

# Format until the end.
count = 0 # Guard against loops.
while count &lt; 100:
    count += 1
    s = p.bodyString()
    if not s.strip():
        break
    c.reformatParagraph()
    s2 = p.bodyString()
    
    index = b.index('insert')
    if b.compare(index,'&gt;=','end-1c'):
        break</t>
<t tx="ekr.20050912125144"></t>
<t tx="ekr.20051202072010"></t>
<t tx="ekr.20060430221745"></t>
<t tx="ekr.20060525104232">import leo.core.leoPlugins as leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        p,s = controller.writeNodeToString(ext='.html')
        print '*' * 40,p
        print s
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20060525110135"># Problems with pdf files.

import leo.core.leoPlugins as leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        p,s = controller.writeNodeToString(ext='.pdf')
        print '*' * 40,p
        print s
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20060525110135.1">import leo.core.leoPlugins as leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        p,s = controller.writeNodeToString(ext='.tex')
        print '*' * 40,p
        print s
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20060525110217">import leo.core.leoPlugins as leoPlugins

rst3 = leoPlugins.getPluginModule('rst3')

if rst3:
    controller = rst3.controllers.get(c)
    if controller:
        p,s = controller.writeNodeToString(ext=None) # Convert rst nodes to rst text.
        print '*' * 40,p
        print s
else:
    rst3 = leoPlugins.loadOnePlugin('rst3',verbose=True)
    if rst3:
        g.es('rst3 loaded')
        rst3.onCreate('tag',{'c':c})
    else:
        # Ask to be removed.
        g.app.scriptDict['removeMe'] = True</t>
<t tx="ekr.20060527105211"></t>
<t tx="ekr.20060612102055"></t>
<t tx="ekr.20060620094033"></t>
<t tx="ekr.20060913164304"></t>
<t tx="ekr.20061025065357"></t>
<t tx="ekr.20070115172724.2">test.leo contains an @button windpdb node.
Select the test to be debugged, then press the winpdb button or do &lt;Alt&gt;x winpdb&lt;return&gt;.
This way is essentially the same as using the debug command, though the code is slightly different.
</t>
<t tx="ekr.20070317033759"></t>
<t tx="ekr.20070325123558"></t>
<t tx="ekr.20070610174018"></t>
<t tx="ekr.20070628083442"></t>
<t tx="ekr.20070701101808"></t>
<t tx="ekr.20080203101507"></t>
<t tx="ekr.20080301071818">&lt;img src="Leo4-80-border.jpg" alt="Logo: Leo4-80-border.jpg" /&gt;

</t>
<t tx="ekr.20080412124815.1"></t>
<t tx="ekr.20080730212711.14"></t>
<t tx="ekr.20080923181012.1">@ @rst-options
code_mode=False
generate_rst=True
http_server_support = False
show_organizer_nodes=True
show_headlines=True
show_leo_directives=True
stylesheet_path=..\doc
write_intermediate_file = False
verbose=True
@c

A test of creating directories.

############
html test
############</t>
<t tx="ekr.20080923182326.1">This option applies to directories specified in filenames in all kinds of @file trees, and to filenames specified in the @path directive.

True:  Leo attempts to create directories if they do not exist.
False: Leo never attempts to create directories.</t>
<t tx="ekr.20090712122931.10453"></t>
<t tx="ekr.20090717084250.10702"></t>
<t tx="ekr.20091006063434.13802">c.rstCommands.rst3()</t>
<t tx="ekr.20091111112709.6671"></t>
<t tx="ekr.20091112060950.6677">s = p.bodyString()

s = s.replace('\n\n','***2***')
s = s.replace('\n',' ')
s = s.replace('***2***','\n\n')
s = s.replace('\n  ','\n')
s = s.replace('\n ','\n')
s = s.replace('     ',' ')
s = s.replace('    ',' ')
s = s.replace('   ',' ')
s = s.replace('  ',' ')

p.setBodyString(s)</t>
<t tx="ekr.20091130111843.6787"></t>
<t tx="ekr.20100731112744.7267"></t>
<t tx="ekr.20100805171546.4412"></t>
<t tx="ekr.20100821182153.4341">@pagewidth 70
@language rest
@nocolor-node

To create a slideshow with sphinx:
    
cd leo\doc\html\slides\slideshow-name
make html
</t>
<t tx="ekr.20100821182153.4345">@language rest
</t>
<t tx="ekr.20100821182153.4348">.. _`Download Python`: http://www.python.org/download/
.. _`Leo's download page`: https://sourceforge.net/projects/leo/files/Leo/

**Installing Leo from sources**

1. Install Python:

`Download Python`_, save to your desktop, then double-click on the
saved file.

   
2. Install Leo:

- Download the most recent .zip file from `Leo's download page`_ to
  your desktop or other location.
  
- Unzip the .zip file to the folder of your choice.

</t>
<t tx="ekr.20100821182153.4350">.. _`Edward K. Ream`:   http://webpages.charter.net/edreamleo/ekr.html
.. _`leo-editor`:       http://groups.google.com/group/leo-editor
.. _`Python Tutorial`:  http://docs.python.org/tutorial/

Leo is a free program distributed under the MIT license. This means that not
only can you use the program freely including commercially, the full
installation comes with source code that you can modify as you wish, as long as
you give credit to the author of the program, `Edward K. Ream`_.

Leo is written in Python--a full featured, powerful programming language that
is comparatively easy to learn and use. For an excellent introduction to Python
for non-programmers, see the `Python Tutorial`_. Not only is Leo written in Python, it is
scriptable via Python, meaning that you can embed Python commands in your
outlines and execute them.

Leo is under active development and all are welcome to contribute. For more
information, see the `leo-editor`_ Google Group.

Not only is Leo free software, it is supported software. Post questions and bug
reports to `leo-editor`_ Google Group.
</t>
<t tx="ekr.20100907092300.4440"></t>
<t tx="ekr.20100907092300.4441">Path to inkscape template file
</t>
<t tx="ekr.20100907092300.4442">Path to Inkscape executable</t>
<t tx="ekr.20100908122026.4443"># Standard plugins
mod_scripting.py
nav_qt.py
plugins_menu.py
quicksearch.py
scrolledmessage.py
UNL.py

# Other useful plugins
# codewisecompleter.py
# leoremote.py
screenshots.py
</t>
<t tx="ekr.20101007082321.4357">@language rest</t>
<t tx="ekr.20101007100904.4371">m = g.loadOnePlugin('screenshots')
m.make_slide_show_command(event={'c':c})
</t>
<t tx="ekr.20101007100904.4372"></t>
<t tx="ekr.20101008061729.4372">Leo is a unique, powerful computer program that you can use to **organize**,
**analyze** and **describe** text and text files. Leo is a free and open
software written by Edward K. Ream. For information about downloading Leo, see
the **installation** tutorial in this series. Leo runs on Windows, Mac, or
Linux.

Use Leo:

- To brainstorm a new project.
- As a Personal Information Manager.
- To add multiple outlines and commentary to any text file.
- To create and organize computer programs.
- To apply computer scripts to any kind of data.

Because Leo is unlike other tools you may have used, a series of examples may be
the best way to demonstrate what can be done with Leo.
</t>
<t tx="ekr.20101008061729.4373">From one perspective, Leo is an **outlining editor**. This is a screenshot of
Leo. The arrow shows the outline pane. (A later tutorial explains how to create
an outline like the one in the screenshot).

.. image:: slide-002.png

</t>
<t tx="ekr.20101008061729.4384"></t>
<t tx="ekr.20101008061729.4385"></t>
<t tx="ekr.20101008061729.4386"></t>
<t tx="ekr.20101008061729.4387"></t>
<t tx="ekr.20101008061729.4388"></t>
<t tx="ekr.20101008061729.4389"></t>
<t tx="ekr.20101008061729.4390"></t>
<t tx="ekr.20101008061729.4391"></t>
<t tx="ekr.20101008061729.4392"></t>
<t tx="ekr.20101008061729.4393"></t>
<t tx="ekr.20101008061729.4396" str_leo_pos=""></t>
<t tx="ekr.20101008061729.4398">Clicking on the open triangle will open the indicated node.

.. image:: slide-003.png

</t>
<t tx="ekr.20101008061729.4420" str_leo_pos=""></t>
<t tx="ekr.20101008061729.4425">'''Create @slide nodes under p, an @slideshow node.'''

n = 23 # Number of last slide to be created.

existing = [z.copy().h for z in p.children() 
    if g.match_word(z.h,0,'@slide')]

if g.match_word(p.h,0,'@slideshow'):
    b = c.undoer.beforeChangeTree(p)
    changed = False
    for n in range(1,n+1):
        h = '@slide %03d' % n
        if h not in existing:
            changed = True
            child = p.insertAsLastChild()
            child.h = h
            g.note('created %s' % h)
    if changed:
        c.undoer.afterChangeTree(p,'ins-@slide-nodes',b)
    else:
        g.note('no @slide nodes inserted')
    c.redraw()
else:
    g.error('not an @slideshow node',p.h)</t>
<t tx="ekr.20101008061729.4443">'''
Copy the @screenshot node (a child of this node)
to all @slide nodes under p, (an @slideshow node),
that do not contain an @screenshot node.
'''

error = None
# Find this node:
h = '@button copy-@screenshot-node'
p2 = g.findNodeAnywhere(c,h)
if not p2:
    error = 'Can not find',p.h
# Find the @screenshot tree and the optional @select node.
if not error:
    select,template = None,None
    for child in p2.children():
        if g.match_word(child.h,0,'@screenshot'):
            template = child.copy()
        if g.match_word(child.h,0,'@select'):
            select = child.copy()
    if not template:
        error = 'No template @slideshow node in %s' % p2.h
if not error:
    if not g.match_word(p.h,0,'@slideshow'):
        error = 'not an @slideshow node',p.h
if error:
    g.error(error)
else:
    c.selectPosition(template)
    c.copyOutline()
    changed = False
    b = c.undoer.beforeChangeTree(p)
    for child in p.children():
        if not g.match_word(child.h,0,'@slide'):
            continue
        for grandChild in child.children():
            if g.match_word(grandChild.h,0,'@screenshot'):
                break
        else:
            changed = True
            p3 = child.insertAsLastChild()
            c.selectPosition(p3)
            c.pasteOutline()
            g.note('copied @screenshot to %s' % child.h)
            if select:
                c.selectPosition(p3)
                p4 = child.insertAsLastChild()
                p4.h = select.h
                g.note('copied %s to %s' % (select.h,child.h))
            c.selectPosition(p3)
            c.deleteOutline(p3)
            child.contract()
    if changed:
        c.undoer.afterChangeTree(p,'copy-@screenshot',b)
    c.redraw()</t>
<t tx="ekr.20101008061729.4518">Here the indicated node has been closed.

.. image:: slide-005.png

</t>
<t tx="ekr.20101008061729.4521">Clicking on a node headline (1) will show the text for that node in the body
pane (2) below. The body pane is a text editor--you can enter, delete or change
text here by typing it in.

.. image:: slide-006.png

</t>
<t tx="ekr.20101008061729.4522">Here the node has been opened. Clicking on the box again will close the node.

.. image:: slide-004.png

</t>
<t tx="ekr.20101008061729.4523">You can save the outline in a .leo file.  Click File:Save (or Ctrl-S).

.. image:: slide-007.png

</t>
<t tx="ekr.20101008061729.4524">Here we will save our outline in a file named "pim.leo"

.. image:: slide-008.png

</t>
<t tx="ekr.20101008061729.4525">The file is now saved, and the file appears in the title bar.

.. image:: slide-009.png

</t>
<t tx="ekr.20101008061729.4526">You've just seen an introduction to Leo as an outlining editor. You can use Leo
to make an outline, with optional text for each outline element. You can save
the outline to a file. Outlines are explained more in a later tutorial in this
series.

  *The outlining capability of Leo goes far beyond what has just been demonstrated,
  including multipath outlines, and multiple outlines in one file.*

What we've shown so far is no different from other outlining editors. What makes
Leo unique is the addition of a new feature. **Using simple directives, you can
instruct Leo to extract text from any number of nodes, in any order, and write
the text to a new file**. We call files created or managed from within a Leo
outline **external file**. You can also embed outline information in the
external file, giving Leo the ability to read the text pieces back into the Leo
outline, even if they have been changed.

In effect, Leo is a **meta-text** editor. It gives you the ability to create a
structural document for a non structured document, or a document that is
structured in some other way.

What does this mean in practice? Some examples should help clarify things...</t>
<t tx="ekr.20101008061729.4527">Here is the "pim.leo" file again. We have:

1. Selected the "Diary" node.
2. Typed Ctrl-H to start editing the headline.
   (You can also edit headlines with the Edit:Edit Headline...:Edit Headline command.

.. image:: slide-011.png

</t>
<t tx="ekr.20101008061729.4528"></t>
<t tx="ekr.20101008061729.4529"></t>
<t tx="ekr.20101008061729.4530"></t>
<t tx="ekr.20101008061729.4531"></t>
<t tx="ekr.20101008061729.4532"></t>
<t tx="ekr.20101008061729.4533"></t>
<t tx="ekr.20101008061729.4534"></t>
<t tx="ekr.20101008061729.4535"></t>
<t tx="ekr.20101008061729.4536"></t>
<t tx="ekr.20101008061729.4537"></t>
<t tx="ekr.20101008061729.4538">'''Renumber @slide nodes under p, an @slideshow node.'''

if g.match_word(p.h,0,'@slideshow'):
    n = 1
    for child in p.children():
        if g.match(child.h,0,'@slide'):
            child.h = '@slide %03d' % n
            n += 1
    c.redraw()
else:
    g.error('not an @slideshow node',p.h)</t>
<t tx="ekr.20101008061729.4539"></t>
<t tx="ekr.20101008061729.4540"></t>
<t tx="ekr.20101008061729.4552"></t>
<t tx="ekr.20101008061729.4553">My to-do list.
</t>
<t tx="ekr.20101008061729.4554">1. Make Leo tutorials.  The world is waiting.
2. Pay phone bill or the world will never know.</t>
<t tx="ekr.20101008061729.4555"></t>
<t tx="ekr.20101008061729.4556"></t>
<t tx="ekr.20101008061729.4557"></t>
<t tx="ekr.20101008061729.4558" str_leo_pos=""></t>
<t tx="ekr.20101008061729.4559">@language rest

This is my diary.</t>
<t tx="ekr.20101008061729.4561"></t>
<t tx="ekr.20101008061729.4567">July 1
    Started writing in my diary.
July 2
    Wrote another sentence in my diary.
July 3
    Keeping my diary very regularly.
July 5
    Oops...Yesterday I forgot towrite in my diary.</t>
<t tx="ekr.20101008061729.4568"></t>
<t tx="ekr.20101008061729.4569"></t>
<t tx="ekr.20101008061729.4570"></t>
<t tx="ekr.20101008061729.4571"></t>
<t tx="ekr.20101008061729.4572"></t>
<t tx="ekr.20101008061729.4637"></t>
<t tx="ekr.20101009111520.4525"></t>
<t tx="ekr.20101009114655.4531">m = g.loadOnePlugin('screenshots')
m.make_slide_command(event={'c':c})
</t>
<t tx="ekr.20101009114830.4723">@nocolor-node

Formerly, this had to be on because the expansion bits
of @screenshot trees were significant.

Happily, this is no longer true.

True (recommended):
    Write "E" attribute bits in &lt;v&gt; elements.
    Leo outlines will record the expansion state of all nodes.
    
False:
    (Good for files like unitTest.leo)
    Suppress "E" attribute bits in &lt;v&gt; elements.
    Only the ancestors of the presently selected node will
    be expanded when Leo opens an outline.</t>
<t tx="ekr.20101009114830.4724"></t>
<t tx="ekr.20101009114830.4725"></t>
<t tx="ekr.20101009115705.4583"></t>
<t tx="ekr.20101009115705.4584">My to-do list.
</t>
<t tx="ekr.20101009115705.4585"></t>
<t tx="ekr.20101009115705.4586"></t>
<t tx="ekr.20101009115705.4587"></t>
<t tx="ekr.20101009115705.4588"></t>
<t tx="ekr.20101009115705.4589"></t>
<t tx="ekr.20101009115705.4590"></t>
<t tx="ekr.20101009115705.4591"></t>
<t tx="ekr.20101009115705.4592"></t>
<t tx="ekr.20101009124842.4595"></t>
<t tx="ekr.20101009124842.4596">@nocolor-node

My to-do list.
</t>
<t tx="ekr.20101009124842.4597"></t>
<t tx="ekr.20101009124842.4598"></t>
<t tx="ekr.20101009124842.4599"></t>
<t tx="ekr.20101009124842.4600"></t>
<t tx="ekr.20101009124842.4601">@nocolor-node

</t>
<t tx="ekr.20101009124842.4602"></t>
<t tx="ekr.20101009124842.4603"></t>
<t tx="ekr.20101009124842.4604"></t>
<t tx="ekr.20101009124842.4606" str_leo_pos=""></t>
<t tx="ekr.20101009124842.4607"></t>
<t tx="ekr.20101009171445.4637"></t>
<t tx="ekr.20101009211009.4623"></t>
<t tx="ekr.20101009211009.4624"></t>
<t tx="ekr.20101009211009.4625"></t>
<t tx="ekr.20101009211009.4626"></t>
<t tx="ekr.20101009211009.4627"></t>
<t tx="ekr.20101009211009.4628"></t>
<t tx="ekr.20101009211009.4629"></t>
<t tx="ekr.20101009212539.4682"></t>
<t tx="ekr.20101009212539.4683">My to-do list.
</t>
<t tx="ekr.20101009212539.4684"></t>
<t tx="ekr.20101009212539.4685"></t>
<t tx="ekr.20101009212539.4686"></t>
<t tx="ekr.20101009212539.4687"></t>
<t tx="ekr.20101009212539.4688"></t>
<t tx="ekr.20101009212539.4689"></t>
<t tx="ekr.20101009212539.4690"></t>
<t tx="ekr.20101009212539.4691"></t>
<t tx="ekr.20101009212539.4692"></t>
<t tx="ekr.20101009212539.4693"></t>
<t tx="ekr.20101009212539.4694"></t>
<t tx="ekr.20101009212539.4695"></t>
<t tx="ekr.20101009212539.4696"></t>
<t tx="ekr.20101009212539.4697"></t>
<t tx="ekr.20101009212539.4698"></t>
<t tx="ekr.20101009212539.4699"></t>
<t tx="ekr.20101009212539.4746" str_leo_pos=""></t>
<t tx="ekr.20101009213545.4670">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-005.png</t>
<t tx="ekr.20101009213545.4671">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-005.svg</t>
<t tx="ekr.20101009213545.4672">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-005.png</t>
<t tx="ekr.20101009213545.4692"></t>
<t tx="ekr.20101009213545.4693">@nocolor

My to-do list.
</t>
<t tx="ekr.20101009213545.4694">1. Make Leo tutorials.  The world is waiting.

2. Pay phone bill or the world will never know.</t>
<t tx="ekr.20101009213545.4695"></t>
<t tx="ekr.20101009213545.4696"></t>
<t tx="ekr.20101009213545.4697"></t>
<t tx="ekr.20101009213545.4698">@nocolor
</t>
<t tx="ekr.20101009213545.4699"></t>
<t tx="ekr.20101009213545.4700"></t>
<t tx="ekr.20101009213545.4701"></t>
<t tx="ekr.20101009213545.4702"></t>
<t tx="ekr.20101009213545.4703"></t>
<t tx="ekr.20101009213545.4704"></t>
<t tx="ekr.20101009213545.4705"></t>
<t tx="ekr.20101009213545.4706"></t>
<t tx="ekr.20101009213545.4707"></t>
<t tx="ekr.20101009213545.4708"></t>
<t tx="ekr.20101009213545.4709"></t>
<t tx="ekr.20101009213545.4710"></t>
<t tx="ekr.20101010121134.4703">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-001.html</t>
<t tx="ekr.20101010121134.4704"></t>
<t tx="ekr.20101010121134.4716">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-002.png</t>
<t tx="ekr.20101010121134.4717">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-002.svg</t>
<t tx="ekr.20101010121134.4718">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-002.png</t>
<t tx="ekr.20101010121134.4719">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-002.html</t>
<t tx="ekr.20101010121134.4731">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-003.png</t>
<t tx="ekr.20101010121134.4732">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-003.svg</t>
<t tx="ekr.20101010121134.4746">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-003.png</t>
<t tx="ekr.20101010121134.4747">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-003.html</t>
<t tx="ekr.20101010121134.4766">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-004.png</t>
<t tx="ekr.20101010121134.4767">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-004.svg</t>
<t tx="ekr.20101010121134.4768">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-004.png</t>
<t tx="ekr.20101010121134.4769">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-004.html</t>
<t tx="ekr.20101010121134.4810">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-006.png</t>
<t tx="ekr.20101010121134.4811">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-006.svg</t>
<t tx="ekr.20101010121134.4812">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-006.png</t>
<t tx="ekr.20101010121134.4813">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-006.html</t>
<t tx="ekr.20101010121134.4814">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-005.html</t>
<t tx="ekr.20101010121134.4832"></t>
<t tx="ekr.20101010121134.4833">@nocolor

My to-do list.
</t>
<t tx="ekr.20101010121134.4834">1. Make Leo tutorials.  The world is waiting.

2. Pay phone bill or the world will never know.</t>
<t tx="ekr.20101010121134.4835"></t>
<t tx="ekr.20101010121134.4836"></t>
<t tx="ekr.20101010121134.4837"></t>
<t tx="ekr.20101010121134.4838">@nocolor
</t>
<t tx="ekr.20101010121134.4839"></t>
<t tx="ekr.20101010121134.4840"></t>
<t tx="ekr.20101010121134.4841"></t>
<t tx="ekr.20101010121134.4842"></t>
<t tx="ekr.20101010121134.4843"></t>
<t tx="ekr.20101010121134.4844"></t>
<t tx="ekr.20101010121134.4845"></t>
<t tx="ekr.20101010121134.4846"></t>
<t tx="ekr.20101010121134.4847"></t>
<t tx="ekr.20101010121134.4848"></t>
<t tx="ekr.20101010121134.4849"></t>
<t tx="ekr.20101010121134.4868">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-007.png</t>
<t tx="ekr.20101010121134.4869">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-007.svg</t>
<t tx="ekr.20101010140842.4755">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-007.png</t>
<t tx="ekr.20101010140842.4756">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-007.html</t>
<t tx="ekr.20101010141334.4772"></t>
<t tx="ekr.20101010141334.4773">@nocolor

My to-do list.
</t>
<t tx="ekr.20101010141334.4774">1. Make Leo tutorials.  The world is waiting.

2. Pay phone bill or the world will never know.</t>
<t tx="ekr.20101010141334.4775"></t>
<t tx="ekr.20101010141334.4776"></t>
<t tx="ekr.20101010141334.4777"></t>
<t tx="ekr.20101010141334.4778">@nocolor
</t>
<t tx="ekr.20101010141334.4779"></t>
<t tx="ekr.20101010141334.4780"></t>
<t tx="ekr.20101010141334.4781"></t>
<t tx="ekr.20101010141334.4782"></t>
<t tx="ekr.20101010141334.4783"></t>
<t tx="ekr.20101010141334.4784"></t>
<t tx="ekr.20101010141334.4785"></t>
<t tx="ekr.20101010141334.4786"></t>
<t tx="ekr.20101010141334.4787"></t>
<t tx="ekr.20101010141334.4788"></t>
<t tx="ekr.20101010141334.4789"></t>
<t tx="ekr.20101010141334.4791"></t>
<t tx="ekr.20101010141334.4793"></t>
<t tx="ekr.20101010141953.4835">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-008.png</t>
<t tx="ekr.20101010141953.4836">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-008.svg</t>
<t tx="ekr.20101010141953.4837">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-008.png</t>
<t tx="ekr.20101010141953.4838">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-008.html</t>
<t tx="ekr.20101010141953.4856"></t>
<t tx="ekr.20101010141953.4857">@nocolor

My to-do list.
</t>
<t tx="ekr.20101010141953.4858">1. Make Leo tutorials.  The world is waiting.

2. Pay phone bill or the world will never know.</t>
<t tx="ekr.20101010141953.4859"></t>
<t tx="ekr.20101010141953.4860"></t>
<t tx="ekr.20101010141953.4861"></t>
<t tx="ekr.20101010141953.4862">@nocolor
</t>
<t tx="ekr.20101010141953.4863"></t>
<t tx="ekr.20101010141953.4864"></t>
<t tx="ekr.20101010141953.4865"></t>
<t tx="ekr.20101010141953.4866"></t>
<t tx="ekr.20101010141953.4867"></t>
<t tx="ekr.20101010141953.4868"></t>
<t tx="ekr.20101010141953.4869"></t>
<t tx="ekr.20101010141953.4870"></t>
<t tx="ekr.20101010141953.4871"></t>
<t tx="ekr.20101010141953.4872"></t>
<t tx="ekr.20101010141953.4873"></t>
<t tx="ekr.20101010141953.4896"></t>
<t tx="ekr.20101010141953.4897"></t>
<t tx="ekr.20101010141953.4916">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-009.png</t>
<t tx="ekr.20101010141953.4917">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-009.svg</t>
<t tx="ekr.20101010141953.4918">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/slide-009.png</t>
<t tx="ekr.20101010141953.4919">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-009.html</t>
<t tx="ekr.20101010141953.4922">c:\leo.repo\trunk\leo\doc\html\slides\what-is-leo\_build\html\slide-010.html</t>
<t tx="ekr.20101010141953.4940"></t>
<t tx="ekr.20101010141953.4941">@nocolor

My to-do list.
</t>
<t tx="ekr.20101010141953.4942">1. Make Leo tutorials.  The world is waiting.

2. Pay phone bill or the world will never know.</t>
<t tx="ekr.20101010141953.4943"></t>
<t tx="ekr.20101010141953.4944"></t>
<t tx="ekr.20101010141953.4945"></t>
<t tx="ekr.20101010141953.4946">@nocolor

This is my diary.
</t>
<t tx="ekr.20101010141953.4947"></t>
<t tx="ekr.20101010141953.4948"></t>
<t tx="ekr.20101010141953.4949"></t>
<t tx="ekr.20101010141953.4950"></t>
<t tx="ekr.20101010141953.4951"></t>
<t tx="ekr.20101010141953.4952"></t>
<t tx="ekr.20101010141953.4953"></t>
<t tx="ekr.20101010141953.4954"></t>
<t tx="ekr.20101010141953.4955"></t>
<t tx="ekr.20101010141953.4956"></t>
<t tx="ekr.20101010141953.4957"></t>
<t tx="ekr.20101010141953.4958"></t>
<t tx="ekr.20101010141953.5023">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-011.png</t>
<t tx="ekr.20101010141953.5024">c:/leo.repo/trunk/leo/doc/html/slides/what-is-leo/screenshot-011.svg</t>
<t tx="ekr.20101010141953.5027"></t>
<t tx="ekr.20101010141953.5028">@language rest</t>
<t tx="ekr.20101010141953.5029"></t>
<t tx="ekr.20101010141953.5030">.. _`here`:     http://www.nullsoft.com/free/nsis/
.. _`Winamp`:   http://www.winamp.com/

Nullsoft, the makers of the `Winamp`_ MP3 software, have released a powerful free
installer called NSIS, available `here`_. This application allows you to make
installation packages for Windows applications.

You create NSIS packages by writing a NSIS script and then compiling it.
Depending on the application, NSIS can often be a better choice than more
expensive installation generators, since NSIS installations are easy to create,
are small and fast, and yet can be configured with many features.

</t>
<t tx="ekr.20101010141953.5031">When you install Leo, you'll find that it comes with a script for generating an
installer for Leo. This script is called leo-&lt;version&gt;.nsi, and is distributed
in the Leo file leo/dist/leoDist.leo.

If you have NSIS installed, right-clicking on a .nsi file will give you the
option of compiling the script to create a package.

.. image:: slide-002.png

</t>
<t tx="ekr.20101010141953.5032"></t>
<t tx="ekr.20101010141953.5033"></t>
<t tx="ekr.20101010141953.5034"></t>
<t tx="ekr.20101010141953.5038">c:/leo.repo/trunk/leo/doc/html/slides/leos-nsis-installer/screenshot-002.png</t>
<t tx="ekr.20101010141953.5039">c:/leo.repo/trunk/leo/doc/html/slides/leos-nsis-installer/screenshot-002.svg</t>
<t tx="ekr.20101010141953.5040">c:/leo.repo/trunk/leo/doc/html/slides/leos-nsis-installer/slide-002.png</t>
<t tx="ekr.20101011071655.4918">c:\leo.repo\trunk\leo\doc\html\slides\leos-nsis-installer\_build\html\slide-002.html</t>
<t tx="ekr.20101011071655.4919">@language rest
@pagewidth 50
</t>
<t tx="ekr.20101011071655.4920">You can use Leo as a PIM.

As with other outliners, Leo outlines show </t>
<t tx="ekr.20101011092154.4923">Since the NSIS script for the Leo installation is included in the Leo
distribution in the nsis.leo file, it is easy to understand the how the script
works. This .nsi file creates an installer that packages all of the Leo program
files, and creates a desktop shortcut, a Program Menu item, and the file
association for .leo files.</t>
<t tx="ekr.20101011092154.4924">In this screenshot we're looking at the code that checks to see whether Python
has been installed.

Since Leo is a Python application, modifying this installation script to create
a script to build a Windows installer for your own Python application is
relatively simple. You would leave this section alone, and check other sections
for the program name "Leo", and change these to your program name.</t>
<t tx="ekr.20101011092154.4925"></t>
<t tx="ekr.20101011103613.4930">Leo is a better pim.</t>
<t tx="ekr.20101011103613.4933">The body text of any node can contain a Python script.

You execute the script with (Ctrl-B) Leo's execute-script command.</t>
<t tx="ekr.20101011103613.4934">All Leo scripts have access to three predefined constants: c, g and p.</t>
<t tx="ekr.20101011103613.4935">Discuss @button nodes
</t>
<t tx="ekr.20101011103613.4936">Discuss @test nodes</t>
<t tx="ekr.20101011103613.4937">Leo outlines make it easy to create Restructured Text (rST) documents.

Within @rst trees, nodes correspond to rST sections. Naturally, the outline
level of a node in the Leo outline determines the section's level in the
resulting document.</t>
<t tx="ekr.20101011103613.4938">All Leo scripts have full access to the outline in which the scripts reside. The
following scripts, executed from Leo's body pane, will print the headlines of
all the nodes of the outline, properly indented::

    for p in c.all_positions():
        print '%s%s' % (' '*p.level(),p.h)
</t>
<t tx="ekr.20101011103613.4939"></t>
<t tx="ekr.20101011103613.4940">Leo is a new way of working with complex data like computer programs,
books, web sites and data bases. The term **Leonine** refers to the Leo
way of viewing the world and its data.

In Leo, **outline structure is significant everywhere**. Leo’s users speak of an
Aha! moment when they see what this statement means.

People say Leo is **fun to use**, even additive.
</t>
<t tx="ekr.20101011103613.4942">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-003.html</t>
<t tx="ekr.20101011103613.4943">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-005.html</t>
<t tx="ekr.20101011103613.4944">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-006.html</t>
<t tx="ekr.20101011103613.4945">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-007.html</t>
<t tx="ekr.20101011103613.4946">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-008.html</t>
<t tx="ekr.20101011103613.4947">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-009.html</t>
<t tx="ekr.20101011111455.4965">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-010.html</t>
<t tx="ekr.20101011165412.4968">@language rest
@pagewidth 50

</t>
<t tx="ekr.20101011165412.5009"></t>
<t tx="ekr.20101011165412.5011">Unifying scripting, data and outline structure creates a new world. We use the
term **Leonine** to denote the Leo-centric (outline-centric) view of
programming, data and scripting. Here are some of the implications of this
new world:

**Data organization**: Leo's clones allow unprecedented flexibility in
organizing data. Leo outlines have been used as an entirely new kind of
database. It is easily scriptable. As my brother has shown, it is possible to
design Leo outlines so that parts of the outline *are* SQL queries!

**Design**: With Leo, you always see the big picture, and as many of the details
as you like. But this makes outlines ideal for representing designs. In fact,
Leo outlines don't just represent designs, they *are* the designs. For example,
all of Leo's source code reside in just a few Leo outlines. And Leo outlines can
represent input data to other design tools.

**Programming/Coding**: It's much easier to program when the design is always
easily visible. Nodes provide the perfect way to organize large modules, classes
and functions. Nodes also provide unlimited room to save as many details as you
like, *without* cluttering your overall view of the task, or rather tasks, at
hand.

**Testing**: Leo is a supremely powerful unit-testing framework:

1. You can make a node a unit test simply by putting @test at the start of its
   headline. Leo will then automatically generate all the blah-blah-blah needed
   to turn the node's script into a fully-functional unit test. Oh yes,
   the headline becomes the name of the unit test.

2. Unit tests can use data in children of @test nodes. Typical tests put input
   data in one child node, and the expected results of running the test in another
   child node. The test simply compares the actual and expected results.

3. You can easily run tests in the entire outline or just in the selected
   outline. Because tests reside in nodes, you can use clones to organize tests
   in as many ways as you like. For example, it is trivial to run only those
   tests that are failing.

**Maintenance and support**: Leo's ability to contain multiple views of data is
*precisely* what is needed while maintaining any large project. For every new
support task and every new bug, a new (plain) **task node** will contain all the
data needed for that task, notes, test data, whatever. Furthermore, when fixing
bugs, the task node can contain clones of all classes, methods or functions
related to the bug. Fixing a node in the task node fixes the node in the
external file! And as always, you can use all of Leo's outlining features
(including clones) to organize your task nodes.

**Organization everywhere**: Have you noticed that Leo's organizational prowess
applies to *everything*? Indeed, you can use outlines and clones in new ways to
organize files, projects, data, design, programs, testing, and tasks. Leo
doesn't need lots of features--outlines, clones and scripts suffice.  The more
complex your data, designs, program and tasks, the better Leo is suited to them.

It's time to mention one of Leo's most unique features.  Simple, *optional*
markup makes it possible to synthesize (build) scripts and entire computer programs
from outlines. Leo is more than a filing cabinet for scripts and programs, Leo
is a build tool for scripts and outlines!

**Scripting everything**: Let's step back a moment. A single outline can contain
databases, designs, actual computer code, unit tests, test scripts and task
nodes. But Leo scripts will work on any kind of node. Thus, it is *easy* to run
scripts on *anything*! Examples:

- Scripting itself: @button nodes creates a **script button**, a Python script
  that can be applied to any node in an outline! Script buttons have been
  written (in Python) that will execute Leo scripts in other languages.

- Data: The @kind convention for headlines tells scripts what a node contains
  without having to parse the node's contents.  The possibilities are endless.

- Design: scripts can verify properties of design based on either the contents
  of design nodes or their outline structure.

- Coding: scripts routinely make massive changes to outlines. Scripts and unit
  tests can (and do!) verify arbitrarily complex properties of outlines.

- Scientific programming: Leo scripts can run experiments many times using
  different starting points. Nodes are the perfect place to store results and
  notes. Many scientists use the IPython shell-- Using Leo's **IPython bridge**,
  Leo can execute IPython scripts, and scripts in IPython have full access to
  all nodes in Leo outlines.

- Testing: scripts can (and do!) create @test nodes themselves.

- Maintenance: scripts could gather statistics about tasks using simple @kind
  conventions.

The Leo Aha is just this: Leo outlines are far more than eye candy. Leo outlines
revolutionize your view of data--Leo outlines can organize *anything*. Leo
outlines create a new kind of programming environment, one in which outline
structure and user-defined data types create totally new opportunities.
</t>
<t tx="ekr.20101011165412.5154">@language python

# **Important**
#   Before running this script you must create bzr-manifest as follows::
#       cd to trunk
#       bzr ls -R &gt;bzr-manifest.txt

'''Create the installer script using bzr-manifest.txt.'''

import os,string,sys
&lt;&lt; define version &gt;&gt;
&lt;&lt; define inLeo &gt;&gt;

if inLeo:
    # The root directory contains the leo directory.
    rootDir  = g.os_path_finalize_join(g.app.loadDir,'..','..')
    manifest = g.os_path_finalize_join(rootDir,'bzr-manifest.txt')
else:
    rootDir = os.path.abspath(os.curdir)
    manifest = os.path.normpath(os.path.join(rootDir,'bzr-manifest.txt'))

&lt;&lt; define application constants &gt;&gt;
@others

nsi = nsiWriter()
nsi.run(manifest)
</t>
<t tx="ekr.20101011165412.5155"># Used by both @button make leo.nsi and @button make leo.zip.
app_version = version = '4.8-d1'</t>
<t tx="ekr.20101011165412.5156">try:
    inLeo = g is not None
except AttributeError:
    inLeo = False

# print('inLeo',inLeo)
</t>
<t tx="ekr.20101011165412.5157">app_doc_icon = r'Icons\LeoDoc.ico'
app_extension = '.leo'
app_hkey_local_machine = r'SOFTWARE\EKR\leo'
app_icon = r"%s\leo\Icons\leo_inst.ico" % rootDir
app_icon2 = r'leo\Icons\LeoApp.ico' # Relative to install dir.
app_license = r'%s\License.txt' % rootDir
app_lower_case_name = 'leo'
app_name = 'Leo'
app_publisher = 'Edward K. Ream'
app_python_executable = 'launchLeo.py'
app_uninst_key = r"Software\Microsoft\Windows\CurrentVersion\Uninstall\leo"
app_uninst_root_key = 'HKLM'
app_web_site = 'http://webpages.charter.net/edreamleo/front.html'

nsi_name = 'leo-%s.nsi' % app_version
target_file = 'LeoSetup-%s.exe' % app_version

substitutionDict = {
    'doc_icon': app_doc_icon,
    'ext': app_extension,
    'exe': app_python_executable,
    'hkey_local_machine': app_hkey_local_machine,
    'icon': app_icon,
    'icon2': app_icon2,
    'license': app_license,
    'lower_name': app_lower_case_name,
    'name': app_name,
    'nsi_name': nsi_name,
    'publisher': app_publisher,

    'site': app_web_site,
    'target_file': target_file,
    'uninst_key': app_uninst_key,
    'uninst_root_key': app_uninst_root_key,
    'version': app_version,
    # Leave these unchanged.
    'DESKTOP': '$DESKTOP',
    'INSTDIR': '$INSTDIR',
    'NSISDIR': '${NSISDIR}',
    'PROGRAMFILES': '$PROGRAMFILES',
    'PythonExecutable': '$PythonExecutable',
    'SMPROGRAMS': '$SMPROGRAMS'
}
</t>
<t tx="ekr.20101011165412.5158">class nsiWriter:

    '''A class to write .nsi scripts.'''

    @others
</t>
<t tx="ekr.20101011165412.5159">def genScript (self,dirs,dirDict,filesDict):

    '''Generate the .nsi installer script.'''

    self.f = f = self.openNsi()
    if not f: return

    try:
        self.genHead()
        self.genInstallData(dirs,dirDict,filesDict)
        self.genMiddle()
        self.genUninstallData(dirs,dirDict,filesDict)
    finally:
        f.close()

    g.es_print('make-leo-nsi done. no errors')
</t>
<t tx="ekr.20101011165412.5160">def genHead (self):

    '''Generate the boilerplate appearing before
    the manifest-specific install data.'''

    self.put('!include MUI2.nsh\n')
    self.putSettings()
    self.putOnInit()</t>
<t tx="ekr.20101011165412.5161">def putSettings (self):

    s = r'''
; Location of Pythonw.exe. Set by .onInit.
var PythonExecutable

SetCompressor bzip2
Caption "${name} Installer"
AutoCloseWindow false 
SilentInstall normal
CRCCheck on ; FIXME shouldn't this be CRCCheck force ? Why give user option of using corrupted installer?
SetCompress auto ; FIXME this is disabled for solid compression, which comes with BZip2 and LZMA compression
SetDatablockOptimize on
; SetOverwrite ifnewer
WindowIcon off
OutFile "${target_file}"
LoadLanguageFile "${NSISDIR}\Contrib\Language files\English.nlf"
; Default location.  May be changed in .onInit.
InstallDir "${PROGRAMFILES}\${name}-${version}"
Icon "${icon}"
DirText "Setup will install ${name}-${version} in the following folder. $$\n\
To install in a different folder, click Browse and select another folder."
LicenseText "You must accept the agreement to install ${name}-${version}."
LicenseData "${license}"
ShowInstDetails show
ShowUnInstDetails show

'''
    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5162">def putOnInit (self):

    s = r'''

; Set PythonExecutable to full path to Pythonw.exe.
Function .onInit
    ReadRegStr $9 HKLM "SOFTWARE\Python\PythonCore\2.6\InstallPath" ""
    StrCmp $9 "" tryPython31 ok

tryPython31:
    ReadRegStr $9 HKLM "SOFTWARE\Python\PythonCore\3.1\InstallPath" ""
    StrCmp $9 "" oops ok

oops:
    MessageBox MB_OK "Python not found: using c:\python26"
    ; Guess where Python 26 is.
    StrCpy $PythonExecutable "c:\Python26\pythonw.exe"
    ; Fallback installation directory is "Program Files"
    Goto done
ok:
    MessageBox MB_OK "Found Python at $9"
    StrCpy $PythonExecutable "$9\pythonw.exe"
    ; Normal installation directory 
    StrCpy $INSTDIR "$9\Lib\site-packages\${name}-${version}"
done:

; End .onInit
FunctionEnd
'''
    s = s.replace('${name}',app_name).replace('${version}',app_version)
    self.put(s,substitute=False)
</t>
<t tx="ekr.20101011165412.5163">def genInstallData(self,dirs,dirDict,filesDict):

    '''Generate the manifest-specific install data.'''

    self.put('\nSection "%s" SEC01\n\n' % (app_name))

    self.put(self.getInstallVariableData(
        dirs,dirDict,filesDict),adjust=False)

    self.put('\n; end %s section\n' % (app_name))
    self.put('SectionEnd\n')
</t>
<t tx="ekr.20101011165412.5164">def getInstallVariableData (self,dirs,dirDict,filesDict):

    global rootDir
    result = []

    # Top level
    theDir = '**top'
    result.append('; top-level\n')
    result.append('SetOutPath "$INSTDIR"\n')
    result.append('SetOverwrite ifnewer\n')
    aList = dirDict.get(theDir,[])
    for fn in aList:
        result.append('File "%s"\n' % fn)

    for theDir in dirs:
        if theDir != '**top':
            aList = dirDict.get(theDir,[])
            if aList:
                theDir2 = theDir.replace('/','\\').rstrip('\\')
                result.append('\n')
                result.append('SetOutPath $INSTDIR\\%s\n' % theDir2)
                for fn in aList:
                    # Fix bug 425369: quote file names.
                    result.append('File "%s\\%s\\%s"\n' % (
                        rootDir,theDir2,fn))

    result = [self.indent(z) for z in result]
    return ''.join(result)
</t>
<t tx="ekr.20101011165412.5165">def genMiddle (self):

    '''Generate the boilerplate appearing between
    the manifest-specific install data and
    the manifest-specific uninstall data.'''

    self.genMenuShortcuts()
    self.genDesktopShortcuts()
    self.genFileAssociation()
    self.genAdditionalIcons()
    self.genPost()
    self.genUninstallSettings()
    self.genMiddleFunctions()
</t>
<t tx="ekr.20101011165412.5166">def genAdditionalIcons(self):

    s = r'''
Section -AdditionalIcons
  SetOutPath $INSTDIR
  CreateDirectory "${SMPROGRAMS}\${name}"
  CreateShortCut "${SMPROGRAMS}\${name}\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd
'''

    self.put(s,substitute=True)</t>
<t tx="ekr.20101011165412.5167">def genDesktopShortcuts(self):

    s = r'''
Section "Desktop Shortcut" SEC03
  CreateShortCut "${DESKTOP}\${name}.lnk" '"${PythonExecutable}"' '"$INSTDIR\${exe}"' "$INSTDIR\${icon2}" 0
SectionEnd
'''

    self.put(s,substitute=True)</t>
<t tx="ekr.20101011165412.5168">def genFileAssociation(self):

    s = r'''
Section "${ext} File Association"
  SectionIn 1
  SectionIn 2
  SectionIn 3

  # back up old value of extension in case some other program was using it
  ReadRegStr $$1 HKCR "${ext}" ""
  StrCmp $$1 "" Label1
  StrCmp $$1 "${name}File" Label1
  WriteRegStr HKCR "${ext}" "backup_val" $$1

Label1:
  WriteRegStr HKCR "${ext}" "" "${name}File"
  WriteRegStr HKCR "${name}File" "" "${name} File"
  WriteRegStr HKCR "${name}File\shell" "" "open"
  WriteRegStr HKCR "${name}File\DefaultIcon" "" ${INSTDIR}\${doc_icon}
  WriteRegStr HKCR "${name}File\shell\open\command" "" '"${PythonExecutable}" "${INSTDIR}\${exe}" "%1"'

SectionEnd
'''

    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5169">def genMenuShortcuts (self):

    s = r'''
; FIXME $SMPROGRAMS depends on the value of SetShellVarContext. Since that defaults to 'current'
; that means that this installer will make the app available for the current user only.
; Unless I am grossly mistaken this is a needless hindrance, and a Bad Thing since
; security concerns are such that it would be best to not run the app with the Administrator privileges
; of the account used to install the software.
;
; Sure enough, the Start Menu Shortcuts and Desktop Shortcut work for the installer account only. 
;
; Question is -- do we want the app always available for any log-in on this computer?
;
; My guesses:
; Ideally, Uninstall.lnk should appear only for the current user, and the uninstaller should refuse to run
; if run by a user who lacks Admin privileges on Windows NT and its descendants
;
; How will Windows XP Home deal with that? 

Section "Start Menu Shortcuts" SEC02
    CreateDirectory "${SMPROGRAMS}\${name}"
    CreateShortCut "${SMPROGRAMS}\${name}\Uninstall.lnk" "${INSTDIR}\uninst.exe" "" "${INSTDIR}\uninst.exe" 0
    CreateShortCut "${SMPROGRAMS}\${name}\${name}.lnk" '"${PythonExecutable}"' '"${INSTDIR}\${exe}"' "${INSTDIR}\${icon2}" 0
SectionEnd
'''

    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5170">def genMiddleFunctions (self):

    s = r'''
Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "${name}-${version} was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 \
  "Are you sure you want to completely remove ${name}-${version} and all of its components?" IDYES +2
  Abort
FunctionEnd
'''

    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5171">def genPost (self):

    s = r'''
Section -Post
  WriteRegStr HKEY_LOCAL_MACHINE "${hkey_local_machine}" "" "$INSTDIR"
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${uninst_root_key} "${uninst_key}" "DisplayName" "${name}-${version} (remove only)"
  WriteRegStr ${uninst_root_key} "${uninst_key}" "UninstallString" "${INSTDIR}\uninst.exe"
  WriteRegStr ${uninst_root_key} "${uninst_key}" "DisplayVersion" "${version}"
  WriteRegStr ${uninst_root_key} "${uninst_key}" "URLInfoAbout" "${site}"
  WriteRegStr ${uninst_root_key} "${uninst_key}" "Publisher" "${publisher}"
SectionEnd
'''

    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5172">def genUninstallSettings(self):

    path = g.os_path_finalize_join(
        g.app.loadDir,'..','Icons','uninst.ico')

    s = r'''
UninstallCaption "Uninstall ${name}"
UninstallIcon "${path}"
'''

    s = s.replace('${path}',path)
    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5173">def genUninstallData(self,dirs,dirDict,filesDict):

    '''Generate the manifest-specific uninstall data.'''

    s = r'''
Section Uninstall

    DeleteRegKey HKEY_LOCAL_MACHINE "${hkey_local_machine}"

    ; Delete files &amp; directories only if we own them!
    ReadRegStr $$1 HKCR "${ext}" ""
    StrCmp $$1 "${name}File" 0 FinishUninstall

    ; Delete files &amp; directories only if there is no backup_val key.
    ReadRegStr $$1 HKCR "${ext}" "backup_val"
    StrCmp $$1 "" 0 DeleteLeoKeysAndFiles
      DeleteRegKey HKCR "${ext}"
    Goto FinishUninstall

DeleteLeoKeysAndFiles:
    WriteRegStr HKCR "${ext}" "" $$1
    DeleteRegValue HKCR "${ext}" "backup_val"

    ; ---- Start of manifest-related data...
'''

    self.put(s,substitute=True)

    # Does all the hard work.
    self.put(
        self.getUninstallVariableData(dirs,dirDict,filesDict),
        adjust = False)

    s = r'''
    ; ---- End of manifest related data.

FinishUninstall:
    ; MessageBox MB_YESNO|MB_ICONQUESTION \
    ;    "Delete all files in ${INSTDIR}?" IDNO NoDelete
; NoDelete:

  Delete "${SMPROGRAMS}\${name}\Uninstall.lnk"
  RMDir "${SMPROGRAMS}\${name}-${version}"
  Delete "${DESKTOP}\${name}.lnk"

  DeleteRegKey ${uninst_root_key} "${uninst_key}"
  SetAutoClose false

; end Uninstall section
SectionEnd
'''

    self.put(s,substitute=True)
</t>
<t tx="ekr.20101011165412.5174">def getDeleteDirectories (self,dirs,dirDict):

    reverseDirs = dirs[:]
    reverseDirs.reverse()

    result = []
    result.append('; Uninstall directories in reverse order\n')
    for theDir in reverseDirs:
        # Delete the directory even if it has no files.
        if theDir and theDir != '**top':
            if not theDir.startswith('.bzr'):
                result.append('RMDir "$INSTDIR\\%s"\n' % (
                    theDir.replace('/','\\')))

    # top-level folder.
    result.append('RMDir "$INSTDIR"\n')

    result = [self.indent(z) for z in result]
    return ''.join(result)
</t>
<t tx="ekr.20101011165412.5175">def getDeleteFiles (self,dirs,dirDict,filesDict):

    wildcard_delete = True
    result = []
    result.append('; Uninstall files...\n\n')

    # top-level files.
    result.append('; Delete top-level files...\n')
    aList = dirDict.get('**top',[])
    # special case.
    aList.append('uninst.exe')
    # Warning: **never** delete all files in the top-level directory.
    for fn in aList:
        result.append('Delete "$INSTDIR\\%s"\n' % fn)
    if wildcard_delete:
        result.append('\n')

    for theDir in dirs:
        if theDir:
            dir2 = theDir.replace('/','\\')
            if wildcard_delete:
                result.append('Delete "$INSTDIR\\%s\\*.*"\n' % (dir2))
            else:
                aList = dirDict.get(theDir,[])
                if aList:
                    result.append('\n')
                    result.append('Delete "$INSTDIR\\%s\\*.pyc"\n' % (dir2))
                    result.append('Delete "$INSTDIR\\%s\\*.pyo"\n' % (dir2))
                for fn in aList:
                    result.append('Delete "$INSTDIR\\%s\\%s"\n' % (
                        dir2,fn))

    result = [self.indent(z) for z in result]
    return ''.join(result)
</t>
<t tx="ekr.20101011165412.5176">def getUninstallVariableData(self,dirs,dirDict,filesDict):

    s1 = self.getDeleteFiles(dirs,dirDict,filesDict)
    s2 = self.getDeleteDirectories(dirs,dirDict)
    return '%s\n%s' % (s1,s2)
</t>
<t tx="ekr.20101011165412.5177">def indent(self,s):

    if s.strip():
        return '    ' + s
    else:
        return s
</t>
<t tx="ekr.20101011165412.5178">def openNsi (self):

    path = g.os_path_finalize_join(
        g.app.loadDir,'..','..',nsi_name)

    try:
        f = open(path,'w')
    except IOError:
        f = None
        g.es_print('Can not open',path,color='red')

    return f
</t>
<t tx="ekr.20101011165412.5179">def put (self,s,adjust=True,substitute=False):

    '''Output s to the nsi file, optionally making
    the substitutions given in substitutionDict.'''

    trace = False
    if adjust:
        s = self.adjustTripleString(s)

    if substitute:
        if 0:
            n = 1
            for z in g.splitLines(s):
                print('%3s %s' % (n,z.rstrip()))
                n += 1
        s = string.Template(s)
        s = s.substitute(substitutionDict)

    if trace: g.trace(s,g.callers(4))
    self.f.write(s)
</t>
<t tx="ekr.20101011165412.5180">def run (self,fn):

    '''The top-level logic.'''

    # Create and filter the list of files from the manifest.
    s = open(fn).read()
    lines = g.splitLines(s)
    files = self.filterLines(lines)

    # Compute the list of all the directories.
    dirs = self.directoryList(rootDir)

    # Compute dictionaries of directories and files.
    dirDict,filesDict = self.makeDicts(dirs,files)

    # Print manifest lines not in either dict.
    # This is a crucial check.
    errors = self.printMissing(files,dirDict,filesDict)
    if errors: return

    # Generate the script!
    self.genScript(dirs,dirDict,filesDict)
</t>
<t tx="ekr.20101011165412.5181">def directoryList (self,rootDir):

    '''Compute a top-down list of all directories.
       These directories start at the top-level directory.'''

    trace = False
    ignoreDirs = ('.bzr',)
    # Important: this adds all directories on EKR's machine,
    # regardless of whether they appear in the manifest!
    result = [] ; n = len(rootDir)
    for z in os.walk(rootDir): # top-down traversal.
        dirpath, dirnames, filenames = z
        assert dirpath.startswith(rootDir),z
        if len(dirpath) &gt; n:
            path = dirpath[n+1:].replace('\\','/')
            result.append(path)
    for z2 in ignoreDirs:
        result = [ z for z in result if not z.startswith(z2)]
    if trace:
        g.trace('-' * 40)
        g.trace(g.listToString(result))
    return result
</t>
<t tx="ekr.20101011165412.5182">def filterLines (self,lines):

    '''Filter lines from the input manifest file.'''

    trace = False

    # Remove blank lines, comments, and .pyc and .pyo files.
    lines = self.deleteBlankLines(lines)
    lines = self.deleteComments(lines)
    lines = self.deleteExt(lines,'.pyc')
    lines = self.deleteExt(lines,'.pyo')
    lines = self.deleteExt(lines,'.zip') # Don't include the zip file.
    lines = self.deleteExt(lines,'.exe') # Don't include the installer.

    # Remove specific files.
    deleteList = (
        '.bzrignore',
        'bzr-manifest.txt',
        'bzr-small-manifest.txt',
        'setup.py',
        'leo/test/unittest/.leo_shadow/',
        'nsi.log.txt', # Can't write log while we are creating it.
        'leo/core/leoPy.leo',
        'leo/core/ekrLeoPy.leo',
    )
    lines = self.deleteFiles(lines,deleteList)
    if lines and lines[0].endswith('bzr ls -R'):
        lines = lines[1:]

    if trace:
        g.trace('=' * 40)
        g.trace(g.listToString(lines))

    return lines
</t>
<t tx="ekr.20101011165412.5183">def deleteBlankLines (self,lines):

    return [z.strip() for z in lines if z.strip()]

def deleteComments (self,lines):

    return [z for z in lines if not z.startswith('#')]

def deleteExt (self,lines,ext):

    return [z for z in lines if not z.endswith(ext)]

def deleteFiles (self,lines,deleteList):

    return [z for z in lines if not z in deleteList]
</t>
<t tx="ekr.20101011165412.5184">def makeDicts (self,dirs,lines):

    trace = False ; verbose = False

    # Create the dirDict.
    # Keys are directories.
    # Values are files contained in each directory.
    dirDict = {}
    dirDict['**top'] = [] # Create an entry for the root directory.
    for z in dirs:
        dirDict[z] = []

    # Assign files to dirDict.
    for line in lines:
        line = line.strip().replace('\\','/')
        if line in dirDict.keys():
            path,fn = None,None
        elif line.startswith('leo/'):
            path,fn = g.os_path_split(line)
        else:
            path,fn = '**top',line.strip()

        # Don't include top-level leo directory,
        # Do include leo/scripts/leo file.
        if fn and (path != '**top**' or fn != 'leo'):
            aList = dirDict.get(path,[])
            assert line not in aList,repr(line)
            aList.append(fn)
            dirDict[path]=aList

    for theDir in sorted(dirDict):
        aList = dirDict.get(theDir)
        if aList and trace:
            if verbose:
                print() ; print(theDir)
                print(g.listToString(aList))
            else:
                print(theDir)

    # Create the inverse dict.
    filesDict = {}
    for theDir in sorted(dirDict):
        aList = dirDict.get(theDir)
        for fn in aList:
            path = g.choose(theDir=='**top',
                fn,'%s/%s' % (theDir,fn))
            filesDict[path] = theDir

    return dirDict,filesDict
</t>
<t tx="ekr.20101011165412.5185">def printMissing (self,files,dirDict,filesDict):

    errors = 0

    for fn in files:
        fn = fn.rstrip('/')
        if fn and fn not in dirDict and fn not in filesDict:
            g.es_print('missing',fn,color='red')
            errors += 1

    if errors:
        g.es_print('%s errors' % (errors),color='red')

    return errors
</t>
<t tx="ekr.20101011165412.5186"># These are adapted from the corresponding functions in leoPy.leo
# They are defined here to make this script independent of Leo</t>
<t tx="ekr.20101011165412.5187">def adjustTripleString (self,s):

    '''Remove leading indentation from a triple-quoted string.'''

    # Compute the minimum leading whitespace of all non-blank lines.
    lines = self.splitLines(s)
    w = 0 ; val = -1
    for line in lines:
        if line.strip():
            lws = self.get_leading_ws(line)
            w2 = self.computeWidth(lws)
            # The sign of w does not matter.
            if w == 0 or abs(w2) &lt; w:
                w = abs(w2)

    if w == 0: return s

    # Remove the leading whitespace.
    result = [self.removeLeadingWhitespace(line,w) for line in lines]
    result = ''.join(result)
    return result
</t>
<t tx="ekr.20101011165412.5188">def get_leading_ws(self,s):

    """Returns the leading whitespace of 's'."""

    i = 0 ; n = len(s)
    while i &lt; n and s[i] in (' ','\t'):
        i += 1
    return s[0:i]
</t>
<t tx="ekr.20101011165412.5189">def computeWidth (self,s):

    '''Return the width of s, assuming s starts a line.'''

    tabwidth = 4
    w = 0
    for ch in s:
        if ch == '\t':
            w += tab_width - (w % tab_width)
        else:
            w += 1
    return w
</t>
<t tx="ekr.20101011165412.5190">def removeLeadingWhitespace (self,s,first_ws):

    '''Remove whitespace up to first_ws wide in s.'''

    j = 0 ; ws = 0
    tabwidth = 4
    first_ws = abs(first_ws)
    for ch in s:
        if ws &gt;= first_ws:
            break
        elif ch == ' ':
            j += 1 ; ws += 1
        elif ch == '\t':
            j += 1 ; ws += tab_width - (ws % tab_width)
        else: break
    if j &gt; 0:
        s = s[j:]
    return s
</t>
<t tx="ekr.20101011165412.5191">def splitLines (self,s):

    '''Split s into lines, preserving the number of lines and the ending of the last line.'''

    return s and s.splitlines(True) or []
</t>
<t tx="ekr.20101011165412.5192"></t>
<t tx="ekr.20101011165412.5195">This section describe the format of external files.
Leo's `sentinel lines`_ are comments, and this section describes those comments.

The format of external files produced by Leo 4.0 and later meets the following goals:

- The minimum of sentinels needed to properly recreate the outline.

- A robust way of telling whether newlines belong to sentinels or not.
  Prior to Leo 4.0, deleting blank lines before and after sentinel lines
  could corrupt the outline structure of the external file.

- A minimum of intrusion and ugliness.

**New in Leo 4.2**:
Files derived from @thin use gnx's in @+node and @-node sentinels.
Such gnx's permanently and uniquely identify nodes.
Gnx's have the form::

    id.yyyymmddhhmmss
    id.yyyymmddhhmmss.n

The second form is used if two gnx's would otherwise be identical.

- id is a string unique to a developer, e.g., a cvs id.

- yyyymmddhhmmss is the node's creation date.

- n is an integer.

Here are the sentinels used by Leo, in alphabetical order.
Unless otherwise noted, the documentation applies to all versions of Leo.
In the following discussion, gnx denotes a gnx as described above.

\@&lt;&lt;
    A sentinel of the form @&lt;&lt;section_name&gt;&gt; represents a section reference.

    If the reference does not end the line,
    the sentinel line ending the expansion is followed by the remainder of the reference line.
    This allows the Read code to recreate the reference line exactly.

\@@
    The @@ sentinel represents any line starting with @ in body text
    except @*whitespace*, @doc and @others.
    Examples::

      @@nocolor
      @@pagewidth 80
      @@tabwidth 4
      @@code

\@afterref **(Leo 4.0 and later)**
    Marks non-whitespace text appearing after a section references.

\@+all **(Leo 4.0 and later)**
    Marks the start of text generated by the @all directive.

\@-all **(Leo 4.0 and later)**
    Marks the end of text generated by the @all directive.

\@at and \@doc
    The @+doc and @-doc sentinels delimit doc parts within a node that starts with @doc.
    These sentinels are nested within @body directives.
    Similarly, @+at and @-at sentinels delimit doc parts within a node that start with @ *whitespace*.
    We use the following **trailing whitespace convention**
    to determine where putDocPart has inserted line breaks::

        A line in a doc part is followed by an inserted newline
        if and only if the newline if preceded by whitespace.

    To make this convention work,
    Leo's write code deletes the trailing whitespace of all lines that are followed by a "real" newline.

    **Leo 4.0 and later**:
    The @+doc and @+at sentinels now contain the whitespace that follows
    the corresponding @doc or @ directives.

\@+body **(Leo 3.x only)**
    Marks the start of body text.

\@-body **(Leo 3.x only)**
    Marks the end of body text.

\@delims
    The @delims sentinel inserts @@delims sentinels into the external file.
    The new delimiter strings continue in effect until the next @@delims sentinel
    *in the external file* or until the end of the external file.
    Adding, deleting or changing @@delim *sentinels* will destroy Leo's ability to read the external file.
    Mistakes in using the @delims *directives* have no effect on Leo,
    though such mistakes will thoroughly mess up a external file as far as compilers,
    HTML renderers, etc. are concerned. 

\@+leo
    Marks the start of any external file.
    This sentinel has the form::

        &lt;opening_delim&gt;@leo&lt;closing_delim&gt;

    The read code uses single-line comments if &lt;closing_delim&gt; is empty.
    The write code generates single-line comments if possible.

    **New in Leo 4.0**: The @+leo sentinel contains other information following
    @leo.  For example::

        &lt;opening_delim&gt;@leo-ver=4-thin&lt;closing_delim&gt;

\@-leo
    Marks the end of the Leo file.
    Nothing but whitespace should follow this directive.

\@+middle **(Leo 4.0 and later)**
    Marks the start of intermediate nodes between the node that
    references a section and the node that defines the section.
    Typically no such sentinels are needed: most sections are defined in a direct child of the referencing node.

\@-middle **(Leo 4.0 and later)**
    Marks the end of intermediate nodes between the node that
    references a section and the node that defines the section.

\@+node and \@-node
    Mark the start and end of a node.

    **Leo 4.2 and later**::
    @+node and @-node sentinels use gnx's as described above::

        @+node:gnx:&lt;headline&gt;
        @-node:gnx:&lt;headline&gt;

    Leo generates these sentinels only for nodes containing body text.
    Leo no longer generates other @+node sentinels to indicate outline structure.
    As a result, there is no longer any need for @+body sentinels.

    **Before Leo 4.2**::
    @+node and @-node sentinels used child indices, and status fields as described below::

      @+node:&lt;child_index&gt;:&lt;status_fields&gt;:&lt;headline&gt;
      @-node::&lt;child_index&gt;:&lt;status_fields&gt;:&lt;headline&gt;

    &lt;child_index&gt; is a number from 1 to n indicating the index of the node in the list of its parent's children.
    &lt;status_field&gt; is the cloneIndex field of the form: "C=nnn", where nnn is an immutable clone index.
    &lt;headline&gt; contains *headline* text, not reference text.

\@nl **(Leo 4.0 and later)**
    Adds a newline to the body text.

\@nonl **(Leo 4.0 and later)**
    Suppresses a newline from the body text.

\@others
    The @+others sentinel indicates the start of the expansion of an @+others directive,
    which continues until the matching @-others sentinel.
    @others sentinels are nested within @body sentinels;
    the expansion of the @others directive always occurs within the body text of some node.

\@verbatim
    @verbatim indicates that the next line of the external file is not a sentinel.
    This escape convention allows body text to contain lines that would otherwise be considered sentinel lines.

\@@verbatimAfterRef
    @verbatimAfterRef is generated when a comment following a section reference would otherwise be treated as a sentinel.
    In Python code, an example would be::

      &lt;&lt; ref &gt;&gt; #+others

    This sentinel is required only when blank lines are suppressed between sentinel lines.
</t>
<t tx="ekr.20101012083118.5242">c:\leo.repo\trunk\leo\doc\html\slides\whetting-your-appetite\_build\html\slide-001.html</t>
<t tx="ekr.20101012083118.5245"></t>
<t tx="ekr.20101012083118.5246">Leo is a unique, powerful computer program that you can use to organize, analyze
and describe text and text files.

Use Leo:

- To brainstorm a new project.
- As a Personal Information Manager.
- As a new kind of programming too.

Because Leo is unlike other tools you may have used, a series of examples may be
the best way to demonstrate what can be done with Leo.</t>
<t tx="ekr.20101013072903.5218"></t>
<t tx="ekr.20101013072903.5219">This slideshow shows some of the things you can do
with Leo</t>
<t tx="ekr.20101013072903.5220"></t>
<t tx="ekr.20101013072903.5221">Leo's main window consists of an **outline pane**
(1), a **body pane** (2) and a **log pane** (3).
All data in Leo resides in **nodes**. A node
consists of **headline text** and **body text**.
The outline pane shows headlines. The body pane
pane shows the body text of the presently selected
node. Messages from Leo appear in the log pane.

</t>
<t tx="ekr.20101013072903.5224">@language rest
@pagewidth 50

(done) slide 5: could do with the same arrow as slide7
(done) slide 7:
  'one again' -&gt; 'once again'
   if a node is no longer 'dirty', what is it - clean?
slide 13: 'ctrl-z' (lower-case), but elsewhere 'ctrl-H' (upper-case).
Stick with upper case for consistency?</t>
<t tx="ekr.20101013072903.5225">This is a step-by-step introduction to show you
how to use Leo outlines.

</t>
<t tx="ekr.20101013072903.5226">.. The workbook.leo window.

Leo opens the **workbook file** when you start
Leo without a filename.

The body has focus--it is colored a pale pink, and
contains a blinking cursor.

**Note**: on some monitors the colors will be almost
invisible.  You can choose such colors to suit your
taste.

.. image:: slide-002.png

</t>
<t tx="ekr.20101013072903.5228">.. Arrow points to window title.

The name of the Leo outline appears in the window's title.

Here, the name is workbook.leo, the default file name.</t>
<t tx="ekr.20101013072903.5229">Leo's main window consists of an **outline pane**
(1), a **body pane** (2) and a **log pane** (3).

</t>
<t tx="ekr.20101013072903.5230">The outline pane shows **headlines**.

Here, we see the a "startup" headline and a "workbook" headline.</t>
<t tx="ekr.20101013072903.5234">I typed "to do" in the headline.

.. image:: slide-004.png

</t>
<t tx="ekr.20101013072903.5236">Ctrl-I inserts a new node.

.. image:: slide-008.png

</t>
<t tx="ekr.20101013072903.5237">I typed "go shopping" followed by a return.

The focus is now in the body pane.

.. image:: slide-009.png

</t>
<t tx="ekr.20101013072903.5238"></t>
<t tx="ekr.20101013072903.5244">Ctrl-R moves a node right.

The "go shopping" node becomes a **child**
of the "to do" node.

The "to do" node is the **parent** node.

.. image:: slide-011.png

</t>
<t tx="ekr.20101013072903.5245">Leo has unlimited undo/redo capabilities.

Here, I typed Ctrl-Z to undo the previous move.
The "go shopping" node is once again a child of
the "to do" node.

**Note**: Ctrl-Shift-Z redoes a previous undo.

.. image:: slide-013.png

</t>
<t tx="ekr.20101013072903.5262">Prezi path: clone-marked.
Prezi picture: @include &lt;filename&gt;.</t>
<t tx="ekr.20101014030710.5277">file:///C:/Users/edreamleo/Documents/logos/ekr.gif</t>
<t tx="ekr.20101014031545.5278">file://../Icons/Lioness.jpg</t>
<t tx="ekr.20101014034526.5280">@language rest
@pagewidth 60

</t>
<t tx="ekr.20101014034526.5282">These don't tell stories
</t>
<t tx="ekr.20101014034526.5287">sentinels

With \@file, you also **share outline structure**.

Leo opens external files automatically.

Leo is an IDE</t>
<t tx="ekr.20101014034526.5291"></t>
<t tx="ekr.20101014034526.5292"></t>
<t tx="ekr.20101014034526.5293"></t>
<t tx="ekr.20101014034526.5294">- Execute IPython scripts from Leo.
- Execute Leo scripts from IPython.</t>
<t tx="ekr.20101014034526.5295"></t>
<t tx="ekr.20101014034526.5296">@ Discuss tab completion.</t>
<t tx="ekr.20101014034526.5298"></t>
<t tx="ekr.20101014034526.5299">.. _`Download Python`: http://www.python.org/download/
.. _`packaged version`: https://sourceforge.net/projects/leo/files/Leo/
.. _`Leo's download page`: https://sourceforge.net/projects/leo/files/Leo/
.. _`next slide`: slide-002.html

**Installing on Windows: using Leo's single-click installer** 

1. Install Python: `Download Python`_, save to your desktop, then
   double-click on the saved file.
   
   Python is software for creating and running computer programs.

2. Download the latest Leo's installer from `Leo's download page`_.
   It will be called something like LeoSetup-&lt;version&gt;.exe

3. Run the installer.
   
**Installing Leo from Linux packages**

Linux users are best served by the `packaged version`_ available at
SourceForge. You can also install Leo manually, as discussed in the
`next slide`_.

**Installing Leo from sources**

See the `next slide`_.
</t>
<t tx="ekr.20101014034526.5302">**Running Leo from a console**

To run Leo directly from a console, do the following:

1. Go to the Leo directory::

    cd &lt;path-to-leo-directory&gt;
    
2. Start launchLeo.py using Python::

    python launchLeo.py %*

</t>
<t tx="ekr.20101014034526.5303">Using shell scripts (Linux) or .bat files (Windows)
can make it easier to open Leo files.

**Linux**

Put this in a shell script called leo::

    #!/bin/sh 
    python &lt;path-to-leo-directory&gt;launchLeo.py $1

**Windows**

Put this in leo.bat::

    cd &lt;path-to-leo-folder&gt;
    python &lt;path-to-leo-folder&gt;launchLeo.py %*
    
On either platform, the following will open x.leo::

    leo x.leo
</t>
<t tx="ekr.20101014034526.5304">The first time you start Leo, a dialog will ask you for a unique
identifier. This string helps ensure that each Leo node has a
unique identity.

This identifier can be any string 3 characters or more in length.
In a shared environment, a cvs or bzr login name works well.

Pick a string you don't mind making public: it will appear in
files that Leo creates.

Leo stores this identifier in the file ~/.leo/.leoID.txt.
You can change this identifier at any time by editing .leoID.txt.
</t>
<t tx="ekr.20101014105353.5257">c:\leo.repo\trunk\leo\doc\html\slides\installation\_build\html\slide-002.html</t>
<t tx="ekr.20101014105353.5258">c:\leo.repo\trunk\leo\doc\html\slides\installation\_build\html\slide-003.html</t>
<t tx="ekr.20101014105353.5259">c:\leo.repo\trunk\leo\doc\html\slides\installation\_build\html\slide-004.html</t>
<t tx="ekr.20101014105353.5260">c:\leo.repo\trunk\leo\doc\html\slides\installation\_build\html\slide-005.html</t>
<t tx="ekr.20101014105353.5261">c:\leo.repo\trunk\leo\doc\html\slides\installation\_build\html\slide-006.html</t>
<t tx="ekr.20101014110348.5256">Leo nodes whose headline starts with \@thin, \@auto or
\@edit create **external files**, files outside of Leo on
your file system::

  @thin myClass.py
  @auto ../graphics/circles.cpp
  @edit ~/.leo/.leoID.txt
  
The headline contains a file name, which can be an absolute
path or a path relative to the directory containing the Leo
outline.

**@thin** embeds outline structure directly into external
files using comments called **sentinel lines**. This is the
recommended way to share external files among Leo users.

**@auto** and **@edit** allow you to read and edit external
files without inserting sentinel lines. The cost of avoiding
sentinel lines is that Leo can not preserve outline
structure exactly.
</t>
<t tx="ekr.20101014110348.5257">Here, created a node called @edit spam.py.

This represents the file spam.py in the same
directory as the Leo outline.</t>
<t tx="ekr.20101014110348.5260">I save the Leo outline file with Ctrl-S or the File:Save menu.

When I do that, Leo automatically saves any @edit node that
is new or has been changed.

In this case, the @edit node was new, so the log window says::

    created: c:\Users\edreamleo\.leo\spam.py
    saved: workbook.leo
    
Leo tells you the full path to created files, and
the short path to updated files like workbook.leo.</t>
<t tx="ekr.20101014110348.5261">I've typed some text into the body pane.

The @language python line is a Leo directive. It
tells Leo to syntax color the body text as Python
source code.</t>
<t tx="ekr.20101014110348.5262">Now I've added some more text.

The icon box shows that the @edit node is "dirty" (has been changed).</t>
<t tx="ekr.20101014110348.5263">I save the Leo outline again.

Once again, Leo saves spam.py.

This time, the log window says::

    wrote: spam.py
    saved: workbook.leo</t>
<t tx="ekr.20101014110348.5264">Let's close the file and reopen it.

We get exactly the same information,
with the same node selected, with the same information.

</t>
<t tx="ekr.20101014110348.5265"></t>
<t tx="ekr.20101014110348.5266">We can edit spam.py outside of Leo.

Let's add a comment.</t>
<t tx="ekr.20101014110348.5267">If we close the Leo file and reopen it,
we see the new text.
</t>
<t tx="ekr.20101014110348.5270">**@edit nodes** contain the entire contents of an
external file.

</t>
<t tx="ekr.20101014110348.5271"></t>
<t tx="ekr.20101014110348.5272">..  At present, there are **importers** for
..  C, elisp, HTML, .ini files, Java, Javascript,
..  Pascal, PHP, Python and xml. 


**@auto** trees cause Leo to automatically create
an outline based on the structure of the external
file. 

**@auto trees** cause Leo to **import**
a file into a tree of Leo nodes, based on the
file's extension. Leo's **importers** create Leo
outlines based on the structure of the imported
language. The importer for unknown languages reads
the entire contents of the external file into the
\@auto node. **@edit nodes** cause Leo to read the
entire contents of an external file into the @edit
node.

Leo contains **importers** for common
languages. These importers split the external file
into outline nodes.</t>
<t tx="ekr.20101014110348.5274">Rather than creating new files with @edit, it is more common
to use @edit to connect Leo with files that already exist on your file system.</t>
<t tx="ekr.20101014110348.5275">Within a Leo outline, an @edit node contains
the entire contents of an external file.</t>
<t tx="ekr.20101014110348.5278"></t>
<t tx="ekr.20101014110348.5286">Ctrl-H edits the presently selected headline.

You can type Ctrl-H at any time, regardless of
where the focus is.

The body pane is now blue, indicating that it no
longer has focus.

.. image:: slide-003.png

</t>
<t tx="ekr.20101014110348.5290">Ctrl-L moves the "go shopping" node left.

The "go shopping" node becomes a **sibling**
of the "to do" node.

.. image:: slide-012.png

</t>
<t tx="ekr.20101014110348.5293"></t>
<t tx="ekr.20101014110348.5294">Let's add a new node.  I hit Ctrl-I.

.. image:: slide-014.png

</t>
<t tx="ekr.20101014110348.5295">I type "fix car" followed by the &lt;return&gt; key.

.. image:: slide-015.png

</t>
<t tx="ekr.20101014110348.5296">I decide that fixing the car should have first priority.

I type Ctrl-U to move the "fix car" node up.
It becomes the first child of the "to do" node.

.. image:: slide-016.png

</t>
<t tx="ekr.20101014110348.5297">After creating the to-do list, I want to hide it
by **collapsing** the "to do" node.

I could do that by clicking the black triangle
to the left of the "to do" node.

However, using the mouse is not recommended--
there are much easier ways.

.. arrow points to black triangle.

.. image:: slide-017.png

</t>
<t tx="ekr.20101014110348.5298">The focus is in the tree pane, so I can select the "to do"
node merely by using the Up-Arrow key.

If, for some reason, the focus is in the body pane,
I can select the previous node in either of two ways:

1. Type Alt-T to put focus in the tree pane
   followed by the Up-Arrow key.

2. Type Alt-Up-Arrow.  This selects the previous
   node and also puts focus in the tree pane.

Now the "to do" node is selected.

.. image:: slide-018.png

</t>
<t tx="ekr.20101014110348.5299">With the "to-do" node selected,
hitting the Left-Arrow key will contract the node.

.. "to do" contracted.

.. image:: slide-019.png

</t>
<t tx="ekr.20101014110348.5300">To expand the "to do" node,
I merely hit the Right-Arrow key.

We can now see the entire to-do list.

.. image:: slide-020.png

</t>
<t tx="ekr.20101014110348.5305">Whatever I type will appear in the body pane.

I added a shopping list.

The blue square in the icon area indicates that the body pane contains text.

.. Arrow at icon box.

.. buy milk
.. buy eggs.

.. image:: slide-010.png

</t>
<t tx="ekr.20101014110348.5307">There are two more outline operations that every Leo user should know about,
promote and demote.

Suppose we want to reorganize this shopping list.

.. - to do
..   - fix car
..   - go shopping
..     - buy milks
..     - buy eggs

.. image:: slide-029.png

</t>
<t tx="ekr.20101014110348.5309">The arrow keys do different things depending on
which pane has focus. Using arrow keys is **much**
easier than using the mouse.

**Focus in outline pane**
    
    The **plain** arrow keys **select** nodes,
    expanding or contracting nodes as needed.
    
    The **shift** arrow keys **move** nodes. The
    Shift-Left-Arrow and Shift-Up-Arrow contract
    nodes as needed. **Note**: the
    Shift-Down-Arrow and Shift-Right-Arrow keys
    never expand nodes.

**Focus in body pane**

    As usual, the **plain** arrow keys move the
    cursor and the **shift** arrow keys move the
    cursor and extend the solution.
    
    The **alt** arrow keys move the focus to the
    outline pane and then select nodes. The
    **alt-shift** arrow keys move the focus to the
    outline pane and then move nodes.

..  - The Up-Arrow and Down-Arrow keys select
..  the previous or next visible nodes.

..  - The Right-Arrow key contracts a node if the node
..  is expanded. Otherwise the Right-Arrow key
..  selects the node's parent.
  
..  - The Left-Arrow key does nothing if the selected
..  node has no children.  If the node does have
..  children, the Left-Arrow key expands the node
..  (if the children or invisible) or selects the
..  first child (if the children are visible).

..  This is exactly how Windows explorer works, and
..  it quickly becomes second nature.

</t>
<t tx="ekr.20101014110348.5323"></t>
<t tx="ekr.20101014110348.5325">Ctrl-S saves the outline.

Notice that the icon box once again has a gray outline,
indicating that the node has not been changed since
the file was last saved.

.. Arrow to icon box.

.. image:: slide-007.png

</t>
<t tx="ekr.20101014110348.5326">We can copy and paste nodes and all their descendants.

Using the arrow keys as necessary, I select the
"to do" node.

The Shift-Ctrl-C key copies the selected outline.

I want to do the paste *after* the to-do list, so I collapse
the original node before doing the paste:

.. image:: slide-022.png

</t>
<t tx="ekr.20101014110348.5329">Here, I selected "go shopping" and then demote nodes with Ctrl-Shift-].

The following siblings of the "go shopping" nodes were
demoted to become children of the "go shopping node.

.. image:: slide-030.png

</t>
<t tx="ekr.20101014110348.5330">Conversely, Ctrl-Shift-[ promotes all the children of the
selected node so that they become (following) siblings
of the selected node.

.. image:: slide-031.png

</t>
<t tx="ekr.20101014110348.5331">Using promote and demote is an easy way of moving
several nodes quickly.

For example, suppose I wanted to move the "buy
milk" nad "buy eggs" nodes so that they are
top-level nodes.

I insert a "helper" node after the "go shopping node"

.. image:: slide-032.png

</t>
<t tx="ekr.20101014110348.5332">I then demote the following nodes.

.. image:: slide-033.png

</t>
<t tx="ekr.20101014110348.5333">I move the helper node left.  The demoted nodes go along for the ride.

.. image:: slide-034.png

</t>
<t tx="ekr.20101014110348.5334">I promote the moved nodes.

.. image:: slide-035.png

</t>
<t tx="ekr.20101014110348.5335">And delete the helper node.

This technique can be quite useful when moving
many nodes, or moving several nodes a long way in
the outline.

The clones and views slideshows discusses several
other ways to do similar moves.

.. image:: slide-036.png

</t>
<t tx="ekr.20101014110348.5336">This concludes the step-by-step introduction to
Leo's outlines.

You now know how to do the following:

- Create new nodes.
- Edit the headline and body text of any node.
- Reorganize nodes. 
- Expand and contract nodes.
- Copy and paste nodes and their descendants.

Mastering these skills is essential to using Leo
effectively and enjoyably.

</t>
<t tx="ekr.20101014110348.5338">'''Meld Wink slides into an @slideshow folder.'''

import glob
import os
import shutil

slideshow_dir = 'C:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step'

wink_dir = 'C:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/_files'
    # The directory containing the wink screenshots.
    # This will usually be &lt;slideshow_dir&gt;/_files.
    # **Important** You generate these screenshots using Wink's 
    # Export As Html command (!)

@others

mc = MeldController(c,p,slideshow_dir,wink_dir)
mc.run()
</t>
<t tx="ekr.20101014110348.5339">class MeldController:

    def __init__ (self,c,p,slideshow_dir,wink_dir):

        self.c = c
        self.slideshow_dir = slideshow_dir
        self.slideshow_node = p
        self.wink_dir = wink_dir

    @others
</t>
<t tx="ekr.20101014110348.5341">def run (self):

    print('='*20)

    aList = self.get_wink_screenshots()
    if not aList:
        return

    if not self.check(aList):
        return

    # Pass 1: copy files for @slide nodes w/o @no-screenshot nodes.
    self.copy_files(aList)

    # Pass 2: adjust children of @slide nodes.
    self.adjust_slideshow()
    
    print('meld done')
</t>
<t tx="ekr.20101014110348.5342">def check (self,aList):

    '''
    Check that len(aList) matches the number of @slide nodes in the
    slideshow. Don't count @slide nodes containing an @no-screenshot node.
    '''

    p = self.slideshow_node
    n1 = len(aList)
    n2,n3 = self.count_slide_nodes()

    if not self.check_dir(self.wink_dir):
        return False
    if not self.check_dir(self.slideshow_dir):
        return False
    if not self.match(p,'@slideshow'):
        return g.error('not a @slideshow node: %s',p.h)

    if n1 != (n2-n3):
        return g.error(
            '%s wink slides\n'
            '%s @slide nodes\n'
            '%s @no_screenshot nodes' % (
                n1,n2,n3))

    return True
</t>
<t tx="ekr.20101014110348.5343">def copy_files (self,aList):

    '''Copy files from the wink_dir to slideshow_dir,
    numbering the destination files to reflect "holes"
    created by @no-screenshot nodes.'''

    # Traverse the tree as in the screenshot plugin.
    # That is, ignore @ignore trees and nested @slide nodes.
    # This ensures that the slide number, n, is correct.
    p = self.slideshow_node
    after = p.nodeAfterTree()
    p = p.firstChild()
    wink_n = 0 # Wink screenshot numbers start at 0.
    slide_n = 1 # Slide numbers start at 1.
    while p and p != after:
        if self.match(p,'@slide'):
            if not self.has_at_no_screenshot_node(p):
                self.copy_file(aList,slide_n,wink_n)
                wink_n += 1
            slide_n += 1
            p.moveToNodeAfterTree()
        elif self.match(p,'@ignore'):
            p.moveToNodeAfterTree()
        else:
            p.moveToThreadNext()
</t>
<t tx="ekr.20101014110348.5344">def adjust_slideshow(self):

    '''Adjust all @slide nodes in the slideshow.'''

    # Traverse the tree as in the screenshot plugin.
    # That is, ignore @ignore trees and nested @slide nodes.
    # This ensures that the slide number, n, is correct.
    p = self.slideshow_node
    after = p.nodeAfterTree()
    p = p.firstChild()
    n = 1
    while p and p != after:
        if self.match(p,'@slide'):
            self.adjust_slide_node(p,n)
            n += 1
            p.moveToNodeAfterTree()
        elif self.match(p,'@ignore'):
            p.moveToNodeAfterTree()
        else:
            p.moveToThreadNext()
</t>
<t tx="ekr.20101014110348.5346">def get_wink_screenshots (self):

    '''Return the properly sorted list of wink screenshots.'''

    trace = False

    aList = glob.glob(self.wink_dir + '/*.png')

    def key(s):
        path,ext = g.os_path_splitext(s)
        junk,n = g.os_path_split(path)
        n = n.strip()
        if n.isdigit():
            return int(n)
        else:
            g.error('bad wink screenshot: %s' % (s))
            raise KeyError

    aList.sort(key=key) # Essential.

    if trace:
        for z in aList:
            print(z)

    return aList
</t>
<t tx="ekr.20101014110348.5347">def count_slide_nodes (self):

    '''Return n1,n2

    n1 is the total number of @slide nodes in the @slideshow tree.
    n2 is number of @slide nodes containing an @no-slideshow child.
    '''

    p = self.slideshow_node
    after = p.nodeAfterTree()
    p = p.firstChild()
    n1,n2 = 0,0
    while p and p != after:
        if self.match(p,'@slide'):
            n1 += 1
            if self.has_at_no_screenshot_node(p):
                n2 += 1
            p.moveToNodeAfterTree()
        elif self.match(p,'@ignore'):
            p.moveToNodeAfterTree()
        else:
            p.moveToThreadNext()

    g.trace(n1,n2)
    return n1,n2
</t>
<t tx="ekr.20101015151959.5300">def adjust_slide_node (self,p,slide_number):

    '''Adjust p, an @slide node.'''

    trace = True

    # Delete the first "@url built slide" node.
    self.delete_at_url_built_slide_node(p)

    # Do nothing more if there is an @no-screenshot node.
    if self.has_at_no_screenshot_node(p):
        return

    # Add or update the "@url final output file" node.
    p2 = self.add_at_url_final_output_file(p,slide_number)

    # Add the .. image:: directive.
    self.add_image_directive(p,slide_number)
</t>
<t tx="ekr.20101015151959.5301">def has_at_no_screenshot_node (self,p):

    for p in p.children():
        if self.match(p,'@no-screenshot'):
            return True
    else:
        return False
</t>
<t tx="ekr.20101015151959.5302">def match (self,p,pattern):

    '''Return True if p.h matches the pattern.'''

    return g.match_word(p.h,0,pattern)
</t>
<t tx="ekr.20101016043116.5337">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-029.png</t>
<t tx="ekr.20101016043116.5338">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-030.png</t>
<t tx="ekr.20101016043116.5339">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-031.png</t>
<t tx="ekr.20101016043116.5340">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-032.png</t>
<t tx="ekr.20101016043116.5341">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-033.png</t>
<t tx="ekr.20101016043116.5342">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-034.png</t>
<t tx="ekr.20101016043116.5343">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-035.png</t>
<t tx="ekr.20101016043116.5344">c:/leo.repo/trunk/leo/doc/html/slides/first-presentation/slide-036.png</t>
<t tx="ekr.20101016043116.5349">def check_dir (self,theDir):

    if not g.os_path_exists(theDir):
        return g.error('not found: %s' % (theDir))

    if not g.os_path_isdir(theDir):
        return g.error('not a directory: %s' % (theDir))

    return True
</t>
<t tx="ekr.20101016043116.5352">def copy_file (self,aList,slide_n,wink_n):

    trace = True

    if wink_n &gt;= len(aList):
        return g.trace('can not happen: '
            'len(aList): %s, n: %s' % (
                len(aList),wink_n))

    fn_src = aList[wink_n]
    fn_dst = 'slide-%03d.png' % (slide_n)

    if trace:
        g.trace('%7s -&gt; %s' % (g.shortFileName(fn_src),fn_dst))

    shutil.copyfile(fn_src,fn_dst)
</t>
<t tx="ekr.20101016043116.5353"></t>
<t tx="ekr.20101016043116.6223">def add_image_directive (self,p,slide_number):

    '''Add an image directive in p if it is not there.'''

    s = '.. image:: slide-%03d.png' % (slide_number)

    if p.b.find(s) == -1:
        p.b = p.b.rstrip() + '\n\n%s\n\n' % (s)
</t>
<t tx="ekr.20101016043116.6224">def fix (self,fn):
    return os.path.normcase(fn).replace('\\','/')

def finalize (self,fn):
    return self.fix(g.os_path_finalize_join(self.slideshow_dir,fn))</t>
<t tx="ekr.20101016043116.6225">def delete_at_url_built_slide_node (self,p):

    '''Delete any "@url built slide" node in p's children.'''

    trace = True
    tag = '@url built slide'

    for child in p.children():
        if self.match(child,tag):
            if trace: g.es('del %s in %s' % (tag,p.h))
            child.doDelete()
            break
</t>
<t tx="ekr.20101016043116.6226">def add_at_url_final_output_file (self,p,slide_number):

    '''Create or update the "@url final output file" node.'''

    trace = True
    tag ='@url final output file'

    for child in p.children():
        if self.match(child,tag):
            p2 = child ; break
    else:
        if trace: g.es('add %s' % tag)
        p2 = p.insertAsLastChild()
        p2.h = tag

    p2.b = self.finalize(
        'slide-%03d.png' % (slide_number))

    return p2
</t>
<t tx="ekr.20101018061243.5392">Typing the &lt;return&gt; key ends editing of the headline
and puts focus back in the body pane.

Notice that the **icon box** to the left of the
headline now has a darker outline that it had
before. This indicates that the contents of the
node has been changed. We say the node is
**dirty**.

.. image:: slide-005.png

</t>
<t tx="ekr.20101018061243.5393">You can use Leo without ever using the mouse. For
instance, you can select any Leo pane by using
keystrokes instead of clicking the pane:

- Regardless of where the focus is, Alt-D puts
  focus in the body pane and Alt-T puts focus in
  the outline pane.

- With the focus in the tree pane, hitting the
  return key puts the focus in the body pane.

</t>
<t tx="ekr.20101018061243.5394">Expanding the node shows that the copy operation
copied the node and all its descendants.

.. image:: slide-024.png

</t>
<t tx="ekr.20101018061243.5395"></t>
<t tx="ekr.20101018061243.5396"></t>
<t tx="ekr.20101018061243.5397">And here is the pasted node.

.. image:: slide-023.png

</t>
<t tx="ekr.20101018183640.5360">changed = 0
b = c.undoer.beforeChangeTree(p)

for child in p.children():
    s = child.b
    i = s.find('.. image::')
    if i &gt; -1:
        i,j = g.getLine(s,i)
        child.b = s[:i] + s[j+1:]
        # g.es(child.h)
        changed += 1
        
if changed:
    g.es('changed %s nodes' % changed)
    c.undoer.afterChangeTree(p,'remove-image-directives',b)
    </t>
<t tx="ekr.20101018185243.5368">changed = 0
b = c.undoer.beforeChangeTree(p)
for child in p.children():
    for child2 in child.children():
        if g.match_word(child2.h,0,'@url final output file'):
            child2.doDelete()
            changed += 1
            break
        
if changed:
    g.es('deleted %s nodes' % (changed))
    c.undoer.afterChangeTree(p,'remove-@url-final-output',b)
    c.redraw()
</t>
<t tx="ekr.20101018190057.5370"></t>
<t tx="ekr.20101018190057.5373"></t>
<t tx="ekr.20101018190057.5441">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-002.png</t>
<t tx="ekr.20101018190057.5442">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-003.png</t>
<t tx="ekr.20101018190057.5443">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-004.png</t>
<t tx="ekr.20101018190057.5444">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-005.png</t>
<t tx="ekr.20101018190057.5445">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-007.png</t>
<t tx="ekr.20101018190057.5446">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-008.png</t>
<t tx="ekr.20101018190057.5447">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-009.png</t>
<t tx="ekr.20101018190057.5448">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-010.png</t>
<t tx="ekr.20101018190057.5449">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-011.png</t>
<t tx="ekr.20101018190057.5450">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-012.png</t>
<t tx="ekr.20101018190057.5451">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-013.png</t>
<t tx="ekr.20101018190057.5452">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-014.png</t>
<t tx="ekr.20101018190057.5453">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-015.png</t>
<t tx="ekr.20101018190057.5454">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-016.png</t>
<t tx="ekr.20101018190057.5455">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-017.png</t>
<t tx="ekr.20101018190057.5456">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-018.png</t>
<t tx="ekr.20101018190057.5457">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-019.png</t>
<t tx="ekr.20101018190057.5458">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-020.png</t>
<t tx="ekr.20101018190057.5459">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-022.png</t>
<t tx="ekr.20101018190057.5460">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-023.png</t>
<t tx="ekr.20101018190057.5461">c:/leo.repo/trunk/leo/doc/html/slides/leo-basics-step-by-step/slide-024.png</t>
<t tx="ekr.20101018190057.5462">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-001.html</t>
<t tx="ekr.20101018190057.5464">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-003.html</t>
<t tx="ekr.20101018190057.5469">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-008.html</t>
<t tx="ekr.20101018190057.5470">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-009.html</t>
<t tx="ekr.20101018190057.5473">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-012.html</t>
<t tx="ekr.20101018190057.5476">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-015.html</t>
<t tx="ekr.20101018190057.5477">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-016.html</t>
<t tx="ekr.20101018190057.5481">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-020.html</t>
<t tx="ekr.20101018190057.5482">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-021.html</t>
<t tx="ekr.20101018190057.5483">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-022.html</t>
<t tx="ekr.20101018190057.5484">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-023.html</t>
<t tx="ekr.20101018190057.5485">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-024.html</t>
<t tx="ekr.20101018190057.5486">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-025.html</t>
<t tx="ekr.20101018203754.5423">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-017.html</t>
<t tx="ekr.20101018203754.5424">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-004.html</t>
<t tx="ekr.20101018203754.5426">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-010.html</t>
<t tx="ekr.20101018203754.5427">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-011.html</t>
<t tx="ekr.20101018203754.5428">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-014.html</t>
<t tx="ekr.20101018203754.5429">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-018.html</t>
<t tx="ekr.20101018203754.5430">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-019.html</t>
<t tx="ekr.20101019053718.5422">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-006.html</t>
<t tx="ekr.20101019085517.5424">\@thin trees are the most flexible way of creating and editing external files.

Here, we have created an **@thin node**, a node
whose headline start with @thin.
</t>
<t tx="ekr.20101020082858.5420"></t>
<t tx="ekr.20101020082858.5441">Collectively, \@thin, \@auto or \@edit trees are called
**@&lt;file&gt; trees**.

**Leo automatically reads and writes \@&lt;file&gt; trees**

When you open a Leo outline, Leo recreates all \@&lt;file&gt;
trees from the corresponding external files.

When you save a Leo outline, Leo writes all changed \@&lt;file&gt;
trees to the corresponding external files.

A single Leo outline may be connected to dozens of external
files. Reading external files is very fast because of an
efficient file-caching scheme.

As a result, Leo acts like an IDE (Integrated Development
Environment). For example, a single Leo outline contains
@thin trees for all of Leo's core source files.
</t>
<t tx="ekr.20101020082858.5443"></t>
<t tx="ekr.20101020082858.5446">c:\leo.repo\trunk\leo\doc\html\slides\external-files\_build\html\slide-002.html</t>
<t tx="ekr.20101021092135.5430">c:\leo.repo\trunk\leo\doc\html\slides\external-files\_build\html\slide-001.html</t>
<t tx="ekr.20101021092135.5431">@nocolor-node

Move meld into screenshots plugin.
    - Use @wink-path = &lt;path&gt; to control meld.
    - (We don't need to specify the path for moved screenshots.)
    
</t>
<t tx="ekr.20101021093111.5432">c:\leo.repo\trunk\leo\doc\html\slides\installation\_build\html\slide-001.html</t>
<t tx="ekr.20101021093614.5432">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-002.html</t>
<t tx="ekr.20101021093614.5433">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-005.html</t>
<t tx="ekr.20101021093614.5435">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-013.html</t>
<t tx="ekr.20101021101327.5432">c:\leo.repo\trunk\leo\doc\html\slides\leo-basics-step-by-step\_build\html\slide-007.html</t>
<t tx="ekr.20101025080245.5520">@nocolor
</t>
<t tx="ekr.20101025080245.5521">See http://groups.google.com/group/leo-editor/browse_thread/thread/0eab8b60c403628d

This bug is invalid, as I shall now explain.

QQQ
- download http://dl.dropbox.com/u/4226858/test.tar.gz
- extract it
- the directory contains a very minimalistic bzr repo with two commits, issue `bzr` log to see them
- the repo was archived after the second commit
- do `bzr update -r 1` to go back to the state after the first commit
   [EKR: it's bzr revert: update has no -r argument.]
- open test.leo, see the node method2() with empty body
- there should be no method2() node after the first commit!
QQQ

The conclusion, that there should be no method2() is incorrect. Indeed, when Leo
opens after the revert (not update), it announces: updated private xtest.py from
public test.py.

This is correct, and has nothing in particular to do with caching.

The updated xtest.py comes from the fundamental @shadow algorithm:
propagate_changed_lines.

The assertion behind this bug report is that the @shadow algorithm "should" have
deleted the node's sentinels along with its contents. This assertion is dubious,
or rather simply wrong, for the following reasons:

1. The @shadow algorithm has no way of "guessing" whether the node "should" or
"should not" have been deleted.

2. The **fundamental property** of the @shadow file is **still valid** after the
update, namely that the @shadow tree will generate the updated *public* file.
The contents of the *private* file, while interesting, have *nothing* to do with
this fundamental property.

3. This bug report is simply a special case of a "fact of life" about @shadow,
namely that the @shadow algorithm **can not in principle** guess between two or
more ways of updating the *private* file when each of the ways yields the same
*public* file. But this "fact of life" is not serious. If you don't like the
"guesses" that the @shadow algorithm has made, you simple change the @shadow
tree. After saving, the *private* file *will* record your choice, and the next
time you open the @shadow tree you will see the choices *you* made, not the
guess that the @shadow algorithm made. Clear?

4. There is absolutely no way I shall entertain the notion of putting a special
case inside the main @shadow loop to handle this "problem".
</t>
<t tx="ekr.20101025080245.5523"></t>
<t tx="ekr.20101025080245.5525">&gt; 1) Is there a place I can go to find what indicators could appear in
&gt; the icon box, and also what they mean?

Here :-)

Blue box: node contains text.
Red vertical bar: node is marked.
Circular arrow: node is cloned.
Outer box is black: node is dirty.
</t>
<t tx="ekr.20101025080245.5527">I've recreated my feedback notes using the online service Diigo.
Here's a link to see the highlights and sticky notes: http://diigo.com/0c9u2

This is an experiment as I've been researching Diigo-like services for
about a week, and would like to know if this would be an acceptable
method when there are lots of things to be commented on for Leo's web
pages. Otherwise I would do email when there are only a few comments.

When you go to the link, you'll see pink highlighted text, with a
small icon in the top left of each text "piece" with a number. Hover
over it to cause the sticky note to be displayed. The number
represents the number of comments entered on the sticky note.

Usually when I'm highlighting edits to be made (like in Acrobat), I
only highlight the specific word or punctuation that needs attention.
With Diigo, there are two problems:

a) there seems to be a minimal number of characters that need to be
highlighted before you get an option to add a sticky note, and

b) Diigo appears to "remember" the location of highlights/stickies
based on where the text first occurs on the page. If you highlight
text halfway into the document that also appears at the beginning of
the document, reloading the web page causes your highlight to "move"
without warning to the beginning of the document. This took a while
for me to realize, because I'd keep redoing highlights, not knowing I
was spinning my wheels. (I don't know what will happen to these
annotations if Chapter 14 is changed and reuploaded. Probably it will
still "find" the highlighted text that hasn't changed and be able to
show the sticky notes.)

The solution to both issues is to highlight more text than you want,
and make sure it's enough text to identify its location uniquely on
the web page. I noted in the sticky note where extra text highlighting
was done, eventually saying I did it due to a Diigo bug.

You do NOT need to sign up for Diigo to see the edits, but there are
two benefits I can see for collaborating on web pages. If you had an
account (and you can use your Google account, like I did), you could:

1) Add comments to the comments I've made. Without an account, when a
sticky note is displayed, it acts like you could type in a comment and
click on Post. But when you click on Post the comment is not saved
anywhere, and there's no message that it was sent to /dev/null.

2) Navigate easier through the list of annotations, if you also
install the Diigo toolbar. There's a "Comment" button that when
clicked opens up a side bar listing all annotations. The biggest
feature I wish Diigo had was an easy way to go to the previous/next
annotation to be sure I see them all.

3) Create the first sticky note for highlighted text that Diigo has
trouble dealing with: Text highlighted at the very beginning of the
line causes the icon to appear at the very end of the line above it.
The problem is, you need to hover over the highlighted text to cause
the icon to appear that allows adding the sticky note. But you can't
move the mouse fast enough :) from the highlighted text to the icon at
the end of the line above it. The solution is to sign in to your Diigo
account, go to My Library, find your highlighted text and choose the
"Add Sticky Note" link.

Phew, been working on this and the Chapter 14 edits for hours. Time to
take a break.
</t>
<t tx="ekr.20101025080245.5528">http://groups.google.com/group/leo-editor/browse_thread/thread/150a356ad24fe3b1

Fix/clarify menus and documentation

Also, removed incorrect error message:

The "Read @&lt;file&gt; Nodes" works to incorporate external changes in the select
tree, though it does generate an incorrect message:

    "no @&lt;file&gt; nodes in the selected tree".
</t>
<t tx="ekr.20101025080245.5529">@nocolor-node

Ville's server code to interact with a running Leo
http://mail.google.com/mail/#inbox/12adebe2ffe80572

Reusing Emacs instances with gnuserv
http://www.debian-administration.org/articles/257

</t>
<t tx="ekr.20101025080245.5531">@nocolor-node
@wrap

http://groups.google.com/group/leo-editor/browse_thread/thread/abe236a45b0511c7

http://www.google.com/url?sa=t&amp;source=web&amp;ct=res&amp;cd=4&amp;ved=0CBYQFjAD&amp;url=http%3A%2F%2Fbugs.python.org%2Fissue3143&amp;ei=bW5oS-eQIJDalAfqlYyGCA&amp;usg=AFQjCNGyhpE3wZ2jvfwA0dwjCfoAxleDRQ&amp;sig2=2CRD7hNMmx1NzFHMyOq_cQ

includes code for the CSS stylesheet (sidebar.js) to do make the sidebar collapsable.

EKR:

1. Place sidebar.js in leo\doc\html\_build\html\_static

2. Add the following line in the &lt;head&gt; section of all .html files in leo\doc\html\_build\html:

    &lt;script type="text/javascript" src="sidebar.js"&gt;&lt;/script&gt;

Now the sidebar is collapsable. Mousing over the divider shows a &lt;&lt; icon. When
the sidebar is collapsed, mousing over the left edge shows a &gt;&gt; button.

The question is, how to do this automatically?
</t>
<t tx="ekr.20101025080245.5532"></t>
<t tx="ekr.20101025080245.5533"></t>
<t tx="ekr.20101025080245.5535"></t>
<t tx="ekr.20101025080245.5539"></t>
<t tx="ekr.20101025080245.5540"># Top ten coolest features.

# Tips!

# @button nodes.</t>
<t tx="ekr.20101025080245.5541"></t>
<t tx="ekr.20101025080245.5542">The following nodes contain links to important discussions on the leo-editor web
site.</t>
<t tx="ekr.20101025080245.5543"></t>
<t tx="ekr.20101025080245.5544">@nocolor-node

Installation "problems" - First time install following current slideshow: (WinXP)

I wanted to try and find how to change the *very* light pink/light blue colors
referenced in Slide2+3 of "Leo Basics Step By Step Note: per ColorMania they are
#F2FDFF and #FDF5F5 - I guess I need to tune both my monitors - sure looks like
#FFFFFF - white to me O:-)

Summary Install problems::
(1) No reference to PyQt in Installer slides.
(2) Installer doesn't honor actual Python version installed.
    (Thinks its Python26 not Python27)
(3) After best attempts  can't get Leo to recognize PyQt
- Is it significant that PyQt installer wants to install at::
D:\Lang\Python27\Lib\site-packages\PyQt4
- but (per a registry search) tk appears to have been installed by the Python installer one level up at:
D:\Lang\Python27\Lib\lib-tk\

*** remainder are notes made while installing *** probably not relevant
Python page suggests either Python27 or Python31 (I already had Python25 and Python26 - though essentially unused)
I first installed Python31 - setting as default per installer, then installed Python27 - also setting it as default (ie. to override Python31 choice)

Now installed Leo: LeoSetup-4.7.1-final.exe
Installer said "Found Python at D:\Lang\Python26\" (s/b Python27 ?) and suggested location:
D:\Lang\Python27\Lib\site-packages\Leo-4.7.1-final

Instead I put it at D:\Lang\Leo\Leo-4.7.1-final

No mention of PyQt in the installer slides for Windows?
per Matt and his description of "site package" in http://groups.google.com/group/leo-editor/browse_thread/thread/add6242d6f4fc476/d5e62fa67bcdaaeb?lnk=gst&amp;q=install+qt#d5e62fa67bcdaaeb &lt;http://groups.google.com/group/leo-editor/browse_thread/thread/add6242d6f4fc476/d5e62fa67bcdaaeb?lnk=gst&amp;q=install+qt#d5e62fa67bcdaaeb&gt;

 - I put a junction from D:\Lang\Leo\Leo-4.7.1-final to D:\Lang\Python27\Lib\site-packages\Leo-4.7.1-final
 - installed PyQt first to D:\Lang\PyQt\PyQt27 but running "launchLeo.py" runs the Python27 (GOOD) but still doesn't find PyQt and says PyQt not installed - reverting to Tk UI so I reinstalled PyQt to the "default"  location:
D:\Lang\Python27\Lib\site-packages\PyQt4

Now that I've create the junction for Leo-4.7.1-final trying to execute "launchLeo.py" now stalls
Instead run it from the junction link in ...\site packages\...
I still does not recognize PyQt

    *** isPython3: False
    PyQt not installed - reverting to Tk UI
    Leo 4.7.1 final, build 3005, February 26, 2010
    Python 2.7.0, Tk 8.5, Pmw 1.3
    Windows 5, 1, 2600, 2, Service Pack 3
    reading settings in D:\Lang\Python27\Lib\site-packages\Leo-4.7.1-final\leo\confi
    g\leoSettings.leo
    using menus from: leoSettings.leo
    reading C:\Documents and Settings\Alec\.leo\.leoRecentFiles.txt
    Ui type not compatible for plugin (quicksearch)
    Can not import quicksearch from plugin quicksearch
    Ui type not compatible for plugin (contextmenu)
    Can not import contextmenu from plugin contextmenu
    Ui type not compatible for plugin (nav_qt)
    Can not import nav_qt from plugin nav_qt
    Can not load c:\aspell\bin\aspell-15.dll
    file not found: C:\Documents and Settings\Alec\.leo\workbook.leo


</t>
<t tx="ekr.20101025080245.5546">http://mail.google.com/mail/#inbox/12adebe2ffe80572</t>
<t tx="ekr.20101025080245.5734"></t>
<t tx="ekr.20101025080245.5735"></t>
<t tx="ekr.20101025080245.5736">use @language plsql </t>
<t tx="ekr.20101025080245.5737">http://groups.google.com/group/leo-editor/browse_thread/thread/a1734a5f7ae25444#</t>
<t tx="ekr.20101025080245.5738">http://groups.google.com/group/leo-editor/browse_thread/thread/866245f923f382a7#</t>
<t tx="ekr.20101025080245.5739">http://groups.google.com/group/leo-editor/browse_thread/thread/278aa85d7298a319#</t>
<t tx="ekr.20101025080245.5740"></t>
<t tx="ekr.20101025080245.5741">http://groups.google.com/group/leo-editor/browse_thread/thread/fec80438b9619c1c#</t>
<t tx="ekr.20101025080245.5742">http://www.winhelponline.com/blog/change-file-type-icon-windows-7-and-vista/</t>
<t tx="ekr.20101025080245.5743">http://vista.blorge.com/2009/10/26/how-to-change-file-type-associations-in-windows-7/</t>
<t tx="ekr.20101025080245.5744">http://groups.google.com/group/leo-editor/browse_thread/thread/2efdbc3b47846a15#</t>
<t tx="ekr.20101025080245.5745"></t>
<t tx="ekr.20101025080245.5746">http://groups.google.com/group/leo-editor/browse_thread/thread/4da36f0d897a25e8#</t>
<t tx="ekr.20101025080245.5747">http://groups.google.com/group/leo-editor/browse_thread/thread/be5401b424a022a7#</t>
<t tx="ekr.20101025080245.5748">http://groups.google.com/group/leo-editor/browse_thread/thread/7752d3e14b49ef35#</t>
<t tx="ekr.20101025080245.5750">http://groups.google.com/group/leo-editor/browse_thread/thread/d58333f2ebae2675#</t>
<t tx="ekr.20101025080245.5751">http://www.mail-archive.com/leo-editor@googlegroups.com/msg11439.html</t>
<t tx="ekr.20101025080245.5752">http://groups.google.com/group/leo-editor/browse_thread/thread/c66f30b5d09d3411#</t>
<t tx="ekr.20101025080245.5753"></t>
<t tx="ekr.20101025080245.5754">http://groups.google.com/group/leo-editor/browse_thread/thread/c66f30b5d09d3411#</t>
<t tx="ekr.20101025080245.5755">http://groups.google.com/group/leo-editor/browse_thread/thread/8842b4878975e3f1#</t>
<t tx="ekr.20101025080245.5756">http://groups.google.com/group/leo-editor/browse_thread/thread/cde63221041d9afc#</t>
<t tx="ekr.20101025080245.5757">http://groups.google.com/group/leo-editor/browse_thread/thread/e9c5f73d048597ae#</t>
<t tx="ekr.20101025080245.5758">http://groups.google.com/group/leo-editor/browse_thread/thread/fd52e4187eec7bd0#</t>
<t tx="ekr.20101025080245.5759">http://groups.google.com/group/leo-editor/browse_thread/thread/44eb904d6b32cdd8#</t>
<t tx="ekr.20101025080245.5760">http://groups.google.com/group/leo-editor/browse_thread/thread/3da73f0c2da2c416#</t>
<t tx="ekr.20101025080245.5761">http://groups.google.com/group/leo-editor/browse_thread/thread/3da73f0c2da2c416#</t>
<t tx="ekr.20101025080245.5762">http://groups.google.com/group/leo-editor/browse_thread/thread/c02a442bea48f233#</t>
<t tx="ekr.20101025080245.5763">http://groups.google.com/group/leo-editor/browse_thread/thread/8eaf13b6ebda0fcd#</t>
<t tx="ekr.20101025080245.5764">http://groups.google.com/group/leo-editor/browse_thread/thread/a108d70400b28dc9#</t>
<t tx="ekr.20101025080245.5765">http://groups.google.com/group/leo-editor/browse_thread/thread/5c1ef1abcc01ef50#</t>
<t tx="ekr.20101025080245.5766">http://groups.google.com/group/leo-editor/browse_thread/thread/ce7353ce5614efca#</t>
<t tx="ekr.20101025080245.5767">http://groups.google.com/group/leo-editor/browse_thread/thread/15f05a216697ac21#</t>
<t tx="ekr.20101025080245.5768">http://groups.google.com/group/leo-editor/browse_thread/thread/e3c736bc9f545b7e#</t>
<t tx="ekr.20101025080245.5769">http://groups.google.com/group/leo-editor/browse_thread/thread/0aa8d9d17f6300b8#</t>
<t tx="ekr.20101025080245.5770"></t>
<t tx="ekr.20101025080245.5771">http://groups.google.com/group/leo-editor/browse_thread/thread/64dfc56394abcee8#</t>
<t tx="ekr.20101025080245.5772">http://groups.google.com/group/leo-editor/browse_thread/thread/64dfc56394abcee8#</t>
<t tx="ekr.20101025080245.5773"></t>
<t tx="ekr.20101025080245.5774">http://groups.google.com/group/leo-editor/browse_thread/thread/c351a5e3399fcf09#</t>
<t tx="ekr.20101025080245.5775">http://groups.google.com/group/leo-editor/browse_thread/thread/ace3046ffb94805b#</t>
<t tx="ekr.20101025080245.5776">http://groups.google.com/group/leo-editor/browse_thread/thread/76d12c9abd586b16#</t>
<t tx="ekr.20101025080245.5777">http://groups.google.com/group/leo-editor/browse_thread/thread/e21f8efa58c204e7#</t>
<t tx="ekr.20101025080245.5778"></t>
<t tx="ekr.20101025080245.5779">http://groups.google.com/group/leo-editor/browse_thread/thread/f1deadac39f8f8c5#</t>
<t tx="ekr.20101025080245.5780"></t>
<t tx="ekr.20101025080245.5781">http://groups.google.com/group/leo-editor/browse_thread/thread/8b659c96720afd53#</t>
<t tx="ekr.20101025080245.5782">http://groups.google.com/group/leo-editor/browse_thread/thread/de7fc699752f7a39#</t>
<t tx="ekr.20101025080245.5783">http://groups.google.com/group/leo-editor/browse_thread/thread/3dd91b318f17a359#</t>
<t tx="ekr.20101025080245.5784">http://groups.google.com/group/leo-editor/topics?start=360&amp;sa=N</t>
<t tx="ekr.20101025080245.5785"></t>
<t tx="ekr.20101025080245.5786"></t>
<t tx="ekr.20101025080245.5787">http://prezi.com/your/</t>
<t tx="ekr.20101025080245.5794"></t>
<t tx="ekr.20101025080245.5795"></t>
<t tx="ekr.20101025080245.5796"></t>
<t tx="ekr.20101025080245.5798"></t>
<t tx="ekr.20101025080245.5799"></t>
<t tx="ekr.20101025080245.5801">c:/leo.repo/trunk/leo/doc/leo_toc.html</t>
<t tx="ekr.20101025080245.6075">'''Copy the body text of all children to the parent's body text.'''

# Great for creating what's new nodes.
result = [p.b]
b = c.undoer.beforeChangeNodeContents(p)
for child in p.children():
    if child.b:
        result.append('\n- %s\n\n%s\n' % (child.h,child.b))
    else:
        result.append('\n- %s\n\n' % (child.h))
p.b = ''.join(result)
c.undoer.afterChangeNodeContents(p,'promote-child-bodies',b)</t>
<t tx="sps.20100708203040.19008">@language python
import os
pos = c.find_h("Users Guide")[0]
c.selectPosition(pos)
c.k.simulateCommand('rst3')
&lt;&lt; html manual &gt;&gt;
&lt;&lt; pdf manual &gt;&gt;
</t>
<t tx="sps.20100708203040.19009">d = c.scanAllDirectives(p)
mandir = d.get('path') + "/html"
g.es(mandir)
os.chdir(mandir)
os.system('make html')</t>
<t tx="sps.20100708203040.19010"># you probably need to install several packages 
# to create pdf (e.g. jadetex)
mandir = d.get('path') + "/html"
g.es(mandir)
os.chdir(mandir)
os.system('make latex')
os.chdir('_build/latex')
os.system('../../fixup.pl &lt; Leodocumentation.tex &gt; LeoDoc.tex')
os.system('make LeoDoc.pdf')
</t>
<t tx="sps.20100708213227.44914"></t>
<t tx="ville.20090520232034.6345">g.app.gui.runScrolledMessageDialog(c=c, msg = u'rst:' + p.b)</t>
<t tx="ville.20090705224948.5734">import os
pos = c.find_h("Users Guide")[0]
c.selectPosition(pos)
c.k.simulateCommand('rst3')
&lt;&lt; html manual &gt;&gt;
# no pdf manual creation, perhaps too "involved" for many</t>
<t tx="ville.20090705225609.5736">mandir = g.app.leoDir + "/doc/html"
g.es(mandir)
os.chdir(mandir)
os.system('make html')</t>
<t tx="ville.20090705225609.5738"># you probably need to install several packages 
# to create pdf (e.g. jadetex)
mandir = g.app.leoDir + "/doc/html"
g.es(mandir)
os.chdir(mandir)
os.system('make latex')
os.chdir('_build/latex')
os.system('make all-pdf')
</t>
</tnodes>
</leo_file>
