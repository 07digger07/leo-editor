<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo (http://webpages.charter.net/edreamleo/front.html) -->
<?xml-stylesheet ekr_test?>
<leo_file xmlns:leo="http://www.leo-editor.org/2011/leo" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20070610174018"><vh>Startup</vh>
<v t="ekr.20101028112631.4959" descendentVnodeUnknownAttributes="7d7100580b000000302e312e352e302e302e3171017d7102580b0000007374725f6c656f5f706f7371035800000000710473732e"><vh>@file doc-startup.txt</vh></v>
</v>
<v t="ekr.20100805171546.4412"><vh>Files, including home page</vh>
<v t="ville.20090609182215.5676"><vh>@auto-rst treecaching.txt</vh></v>
<v t="ekr.20090428133936.2"><vh>@edit html\conf.py</vh></v>
<v t="ekr.20090428102353.1"><vh>@edit html\leo_toc.html.txt</vh></v>
<v t="ekr.20101025080245.5800"><vh>@edit leo_toc.html</vh></v>
<v t="ekr.20101112045055.5064"><vh>@edit plugin_catalog.py</vh></v>
<v t="ekr.20100808060203.4273"><vh>@file html/front.html</vh></v>
<v t="ekr.20101025080245.5801"><vh>@url modified toc</vh></v>
<v t="ekr.20101026081737.5531"><vh>Links that replace those in actual built page</vh></v>
<v t="ekr.20101112045055.5065"><vh>@url docs generated from plugin_catalog.py</vh></v>
</v>
<v t="ekr.20050831195449"><vh>Read me first</vh></v>
<v t="ekr.20040414161647"><vh>Users Guide</vh>
<v t="ekr.20101104024804.4898"><vh> Generating the Users Guide</vh>
<v t="sps.20100708203040.19008"><vh>@@button generate-full-userguide</vh>
<v t="sps.20100708203040.19009"><vh>&lt;&lt; html manual &gt;&gt;</vh></v>
<v t="sps.20100708203040.19010"><vh>&lt;&lt; pdf manual &gt;&gt;</vh></v>
</v>
<v t="ville.20090705224948.5734"><vh>@@button generate-userguide</vh>
<v t="ville.20090705225609.5736"><vh>&lt;&lt; html manual &gt;&gt;</vh></v>
<v t="ville.20090705225609.5738"><vh>&lt;&lt; pdf manual &gt;&gt;</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5794"><vh>Preliminaries</vh>
<v t="ekr.20050831184021.3"><vh>Front matter</vh>
<v t="ekr.20100805165051.7148"><vh>@file frontMatter.txt</vh></v>
</v>
<v t="ekr.20070701101808"><vh>Preface</vh>
<v t="ekr.20100805165051.7149"><vh>@file preface.txt</vh></v>
</v>
<v t="ekr.20050831184021.4"><vh>What people are saying about Leo</vh>
<v t="ekr.20100805165051.7150"><vh>@file testimonials.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5795"><vh>Basics</vh>
<v t="ekr.20050831195331.1"><vh>FAQ</vh>
<v t="ekr.20100805165051.7151"><vh>@file FAQ.txt</vh></v>
</v>
<v t="ekr.20101007100904.4372"><vh>Slideshows page</vh>
<v t="ekr.20100821182153.4344"><vh>@file screen-shots.txt</vh></v>
</v>
<v t="ekr.20100731112744.7267"><vh>Installing Leo</vh>
<v t="ekr.20100805165051.7152" descendentVnodeUnknownAttributes="7d71005807000000302e302e342e3171017d710258120000007273745f687474705f61747472696275746571035d71042858460000003c6120636c6173733d22746172676574222069643d22687474702d6e6f64652d6d61726b65722d333722206e616d653d22687474702d6e6f64652d6d61726b65722d3337223e710558040000003c2f613e71065d71072858260000003c64697620636c6173733d2273656374696f6e222069643d22672d726566696e64616c6c223e710858060000003c2f6469763e71095d710a28584f0000003c64697620636c6173733d2273656374696f6e222069643d2266756e6374696f6e732d666f722d66696e64696e672d616e642d6368616e67696e672d746578742d66726f6d2d73637269707473223e710b58060000003c2f6469763e710c5d710d28583f0000003c64697620636c6173733d22646f63756d656e74222069643d22636861707465722d372d736372697074696e672d6c656f2d776974682d707974686f6e223e710e58060000003c2f6469763e710f5d71102858060000003c626f64793e711158070000003c2f626f64793e71125d71132858430000003c68746d6c20786d6c6e733d22687474703a2f2f7777772e77332e6f72672f313939392f7868746d6c2220786d6c3a6c616e673d22656e22206c616e673d22656e223e711458070000003c2f68746d6c3e71154e656565656558070000003c2f6469763e0a711658070000003c2f6469763e0a711758350000003c64697620636c6173733d2273656374696f6e222069643d2272756e6e696e672d6c656f2d696e2d62617463682d6d6f6465223e0a7118586c0000003c68313e3c6120636c6173733d22746f632d6261636b7265662220687265663d22236964313922206e616d653d2272756e6e696e672d6c656f2d696e2d62617463682d6d6f6465223e52756e6e696e67204c656f20696e206261746368206d6f64653c2f613e3c2f68313e0a71196573732e"><vh>@file installing.txt</vh></v>
</v>
<v t="ekr.20091130111843.6787"><vh>The Leo Tutorial</vh>
<v t="ekr.20100805165051.7146"><vh>@file intro.txt</vh></v>
<v t="ekr.20100808120531.4280"><vh>@file outline-commands.txt</vh></v>
<v t="ekr.20100808120531.4283"><vh>@file nutshell.txt</vh></v>
</v>
<v t="EKR.20040524104904.26"><vh>Using Outlines</vh>
<v t="ekr.20100805165051.7153"><vh>@file outlines.txt</vh></v>
</v>
<v t="EKR.20040524104904.99"><vh>Using Leo's Commands</vh>
<v t="ekr.20100805165051.7155"><vh>@file commands.txt</vh></v>
</v>
<v t="EKR.20040524104904.211"><vh>Customizing Leo</vh>
<v t="ekr.20100805165051.7158"><vh>@file customizing.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5799"><vh>Intermediate Topics</vh>
<v t="ekr.20060430221745"><vh>Controlling syntax coloring</vh>
<v t="ekr.20100805165051.7165"><vh>@file coloring.txt</vh></v>
</v>
<v t="ekr.20050831184021.1"><vh>Creating documents with Leo</vh>
<v t="ekr.20100805165051.7164"><vh>@file rstplugin3.txt</vh></v>
</v>
<v t="ekr.20050831195331.4"><vh>Scripting Leo with Python</vh>
<v t="ekr.20100805165051.7157" descendentVnodeUnknownAttributes=""><vh>@file scripting.txt</vh></v>
</v>
<v t="ekr.20050912125144"><vh>Plugins</vh>
<v t="ekr.20100805165051.7162"><vh>@file plugins.txt</vh></v>
</v>
<v t="ekr.20060612102055"><vh>Writing Plugins</vh>
<v t="ekr.20100805165051.7163"><vh>@file writingPlugins.txt</vh></v>
</v>
<v t="ekr.20070628083442"><vh>Unit testing with Leo</vh>
<v t="ekr.20100805165051.7170"><vh>@file unitTesting.txt</vh></v>
</v>
<v t="ekr.20060527105211"><vh>Debugging with Leo</vh>
<v t="ekr.20100805165051.7166"><vh>@file debuggers.txt</vh></v>
</v>
<v t="ekr.20080730212711.14"><vh>Using @shadow</vh>
<v t="ekr.20100805165051.7173"><vh>@file atShadow.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5798"><vh>Leo and Other Programs</vh>
<v t="ekr.20061025065357"><vh>Leo and Emacs</vh>
<v t="ekr.20100805165051.7168"><vh>@file emacs.txt</vh></v>
</v>
<v t="ekr.20080203101507"><vh>ILeo - the IPython bridge</vh>
<v t="ekr.20100805165051.7171"><vh>@file IpythonBridge.txt</vh></v>
</v>
<v t="ekr.20070317033759"><vh>Embedding Leo with the leoBridge module</vh>
<v t="ekr.20100805165051.7169"><vh>@file leoBridge.txt</vh></v>
</v>
<v t="TL.20080804095315.1"><vh>Using Vim with Leo</vh>
<v t="ekr.20100805165051.7172"><vh>@file vimBindings.txt</vh></v>
</v>
<v t="ekr.20060913164304"><vh>Using ZODB with Leo</vh>
<v t="ekr.20100805165051.7167"><vh>@file zodb.txt</vh></v>
</v>
</v>
<v t="ekr.20101025080245.5796"><vh>Reference</vh>
<v t="ekr.20050831184021.5"><vh>Leo's Reference</vh>
<v t="ekr.20100805001344.7253"><vh>@file directives.txt</vh></v>
</v>
<v t="EKR.20040524104904.161"><vh>Designing with Leo</vh>
<v t="ekr.20100805165051.7156"><vh>@file design.txt</vh></v>
</v>
<v t="EKR.20040524104904.245"><vh>History of Leo</vh>
<v t="ekr.20100805165051.7159"><vh>@file history.txt</vh></v>
</v>
<v t="EKR.20040524104904.261"><vh>Theory of Operation</vh>
<v t="ekr.20100805165051.7160"><vh>@file theory.txt</vh></v>
</v>
<v t="ekr.20050901084134"><vh>White papers</vh>
<v t="ekr.20100805165051.7161"><vh>@file whitepapers.txt</vh></v>
</v>
<v t="EKR.20040524104904.274"><vh>Appendices</vh>
<v t="ekr.20100805165051.7174"><vh>@file appendices.txt</vh></v>
</v>
<v t="ekr.20091111112709.6671"><vh>Glossary</vh>
<v t="ekr.20100805165051.7147"><vh>@file glossary.txt</vh></v>
</v>
</v>
<v t="ekr.20060620094033"><vh>What's New...</vh>
<v t="ekr.20100805165051.7175"
expanded="ekr.20110601105631.19349,"><vh>@file whatsnew.txt</vh></v>
</v>
</v>
<v t="ekr.20090717084250.10702"><vh>Other docs</vh>
<v t="ekr.20100805165051.7176"><vh>@file other_docs.txt</vh></v>
</v>
<v t="ekr.20100821182153.4341"><vh>Slideshows</vh>
<v t="ekr.20101028110015.8271" descendentVnodeUnknownAttributes="7d710028580b000000302e312e312e382e342e3171017d7102580b0000007374725f6c656f5f706f7371035800000000710473580b000000302e312e312e382e332e3171057d7106580b0000007374725f6c656f5f706f737107680473580b000000302e312e312e382e352e3171087d7109580b0000007374725f6c656f5f706f73710a680473580b000000302e312e312e382e322e31710b7d710c580b0000007374725f6c656f5f706f73710d680473752e"><vh>@file slideshows.txt</vh></v>
</v>
<v t="ekr.20101026082911.5536"><vh>Release notes</vh>
<v t="ekr.20100805165051.7177"
expanded="ekr.20110531155858.20246,"><vh>@file release_notes.txt</vh></v>
</v>
<v t="ekr.20110531155858.20557"><vh>Docs TO DO: 6</vh>
<v t="ekr.20110531155858.20558"><vh>Make sure MacOS users are told to use --gui=qt</vh></v>
<v t="ekr.20110531155858.20559"><vh>Document highlights of my workflow</vh></v>
<v t="ekr.20110531155858.20560"><vh>Doc: summary of autocompleter (do not delete)</vh></v>
<v t="ekr.20110531155858.20561"><vh>Doc: the new completion caching scheme (do not delete)</vh></v>
<v t="ekr.20110531155858.20563"><vh>Creating minimal outlines</vh></v>
<v t="ekr.20110531155858.20564"><vh>Clarification: we can not allow Leo settings to change qt-stylesheets</vh>
<v t="ekr.20110531155858.20565"><vh>Response</vh></v>
</v>
</v>
<v t="ekr.20110601105631.19349"><vh>Leo 4.9 (what's new)</vh>
<v t="ekr.20110601105631.19354"><vh>Deprecated/removed features</vh></v>
<v t="ekr.20110601105631.19360"><vh>Bugs fixed</vh></v>
<v t="ekr.20110601105631.19388"><vh>New commands</vh></v>
</v>
<v t="ekr.20110531155858.19246"><vh>4.9b1 (Release notes)</vh>
<v t="ekr.20110601105631.19359"><vh>Deprecated/removed features</vh></v>
<v t="ekr.20110531155858.19830"><vh>Bugs fixed</vh>
<v t="ekr.20110531155858.19831"><vh>Fixed bug 682561: pyenchant install problem</vh></v>
<v t="ekr.20110531155858.19851"><vh>Fix bug 690260: g.es sends to wrong tabbed pane</vh></v>
<v t="ekr.20110531155858.19853"><vh>Fixed goto-global-line problems</vh></v>
<v t="ekr.20110531155858.19877"><vh>Restore postions of non-tabbed windows</vh></v>
<v t="ekr.20110531155858.19888"><vh>Fixed Python 3.2 ua problems</vh></v>
<v t="ekr.20110531155858.19894"><vh>Fixed bug in p._adjustPostionBeforeUnlink and simplified code</vh></v>
<v t="ekr.20110531155858.19901"><vh>Fixed crash in archivedPositionToPosition</vh></v>
<v t="ekr.20110531155858.19903"><vh>Fixed top-level uA's</vh></v>
<v t="ekr.20110531155858.19932"><vh>mod_autosave plugin no longer registers redundant idle-time handlers</vh></v>
<v t="ekr.20110531155858.19939"><vh>Fixed bug: ignore f-keys in find/replace patterns</vh></v>
<v t="ekr.20110531155858.19976"><vh>c.bringToFront now activates the window</vh></v>
<v t="ekr.20110531155858.19979"><vh>Fixed nav_qt plutin</vh></v>
<v t="ekr.20110531155858.19996"><vh>Fixed completer focus problem</vh></v>
<v t="ekr.20110531155858.20001"><vh>Fixed bug 783617: Can't enter text directly in the Find panel</vh></v>
<v t="ekr.20110531155858.20002"><vh>Fixed bug 681797: Shift-Delete not working in Qt</vh></v>
<v t="ekr.20110531155858.20015"><vh>Fixed bug 622819: Ctrl-Shift movement is incorrect</vh></v>
<v t="ekr.20110531155858.20017"><vh>Disabled the rst button</vh></v>
<v t="ekr.20110531155858.20018"><vh>Resolved bug 323967: leo overrides minibuffer background color</vh></v>
<v t="ekr.20110531155858.20019"><vh>Fixed actionscript colors for parens</vh></v>
<v t="ekr.20110531155858.20020"><vh>Fixed horizontal scroll glitch in log pane (Python 2.x)</vh></v>
<v t="ekr.20110531155858.20021"><vh>Fixed Bug 760531:Spurious overwrite warnings</vh></v>
<v t="ekr.20110531155858.20031"><vh>Fixed important bug involving orphan nodes</vh></v>
<v t="ekr.20110531155858.20087"><vh>Fixed bug: show-invisibles now correctly shows blank lines</vh></v>
<v t="ekr.20110531155858.20088"><vh>Fixed bug 766747: fill-paragraph doesn't respect setting from set-fill-column</vh></v>
<v t="ekr.20110531155858.20104"><vh>Fixed bug 583878: Leo should warn about @comment/@delims clashes</vh></v>
<v t="ekr.20110531155858.20108"><vh>Fixed bug 778204: @verbatim not forbidden in body text</vh></v>
<v t="ekr.20110531155858.20125"><vh>Fixed bug 784920: @raw mode does not ignore directives</vh></v>
<v t="ekr.20110531155858.20129"><vh>Fixed bug 527717: Qt gui should enable/disable menu items</vh></v>
<v t="ekr.20110531155858.20142"><vh>Fixed bug 580328: c.frame.toggleSplitDirection() doesn't preserve existing ratio</vh></v>
<v t="ekr.20110531155858.20143"><vh>Fixed bug 581031: Scrollbar position is not preserved when c.frame.toggleSplitDirection() is executed</vh></v>
<v t="ekr.20110531155858.20145"><vh>Fixed bug: auto-rst gives spurious overwrite message</vh></v>
<v t="ekr.20110531155858.20153"><vh>Added bindings to all text widgets in the tab frame</vh></v>
<v t="ekr.20110531155858.20165"><vh>Fixed bug 525004: bash code not colored properly</vh></v>
<v t="ekr.20110531155858.20166"><vh>Changing @language directives now forces a recoloring</vh></v>
<v t="ekr.20110531155858.20234"><vh>Menus &amp; dialogs now say "Flatten Selected Outline"</vh></v>
<v t="ekr.20110531155858.20492"><vh>Removed remaining tk-isms from Leo's core</vh></v>
</v>
<v t="ekr.20110531155858.20246"><vh>New and improved features</vh>
<v t="ekr.20110601105631.19384"><vh>Colorizing</vh>
<v t="ekr.20110531155858.20497"><vh>* Support multiple @language directives in a single node</vh></v>
<v t="ekr.20110531155858.20381"><vh>Colorize url's in the qt gui</vh></v>
<v t="ekr.20110531155858.20420"><vh>Added support for cython colorizing</vh></v>
<v t="ekr.20110531155858.20495"><vh>Added support for scala language</vh></v>
<v t="ekr.20110531155858.20498"><vh>Properly handle @language directives for unknown languages</vh></v>
</v>
<v t="ekr.20110601105631.19380"><vh>Gui</vh>
<v t="ekr.20110531155858.20484"><vh>* Allow *plain* up/down arrow keys in editing headline mode</vh></v>
<v t="ekr.20110601105631.19343"><vh>A single click on an already-selected tree node edits the headline</vh></v>
<v t="ekr.20110531155858.20448"><vh>Added a splash screen</vh></v>
<v t="ekr.20110531155858.20503"><vh>Apropos commands now print in a separate area if possible</vh></v>
<v t="ekr.20110531155858.20479"><vh>Handle click events like alt-x or ctrl-g</vh></v>
<v t="ekr.20110531155858.20252"><vh>The first loaded file sets tabbed gui size</vh></v>
<v t="ekr.20110531155858.20334"><vh>Vim-related improvements</vh></v>
</v>
<v t="ekr.20110601105631.19381"><vh>Commands</vh>
<v t="ekr.20110531155858.20486"><vh>* Use @file extension by default if no @language</vh></v>
<v t="ekr.20110531155858.20383"><vh>* Completed work on Leo's autocompleter</vh></v>
<v t="ekr.20110531155858.20515"><vh>* Unified extract commands</vh></v>
<v t="ekr.20110531155858.20523"><vh>* The import-file commands replace all other import commands</vh></v>
<v t="ekr.20110601105631.19385"><vh>Improved commands</vh>
<v t="ekr.20110531155858.20410"><vh>Added patch to g.wrap_lines from José Rojas Echenique</vh></v>
<v t="ekr.20110531155858.20454"><vh>Improved expansion of abbreviations</vh></v>
<v t="ekr.20110531155858.20247"><vh>Improved handling of @url nodes</vh></v>
<v t="ekr.20110531155858.20249"><vh>Improved the clean-all-lines command</vh></v>
<v t="ekr.20110531155858.20481"><vh>Improved the clone-find-all command</vh></v>
<v t="ekr.20110531155858.20527"><vh>Improved the forward and backward by sentences commands</vh></v>
<v t="ekr.20110531155858.20268"><vh>Improved the print-bindings command</vh></v>
<v t="ekr.20110531155858.20412"><vh>Improved the reformat-paragraph command</vh></v>
</v>
<v t="ekr.20110601105631.19378"><vh>New commands</vh></v>
</v>
<v t="ekr.20110601105631.19382"><vh>File handling</vh>
<v t="ekr.20110531155858.20423"><vh>* Added namespace and Leo comment lines to .leo files</vh></v>
<v t="ekr.20110531155858.20313"><vh>Leo opens leoSettings.leo only once</vh></v>
<v t="ekr.20110531155858.20440"><vh>Fixed Bug 745824: @doc duplicates comment delims in html files</vh>
<v t="ekr.20110531155858.20441"><vh>Report</vh></v>
</v>
<v t="ekr.20110601105631.19362"><vh>Leo no longer wraps @doc lines</vh></v>
</v>
<v t="ekr.20110601105631.19379"><vh>Plugins</vh>
<v t="ekr.20110531155858.20462"><vh>* Many improvements and fixes to viewrendered plugin</vh></v>
<v t="ekr.20110531155858.20435"><vh>Fixed mod_http plugin</vh></v>
</v>
<v t="ekr.20110601105631.19383"><vh>Scripting</vh>
<v t="ekr.20110531155858.20382"><vh>Added namespace arg in c.executeScript</vh></v>
<v t="ekr.20110531155858.20384"><vh>Put Kent's Runwith class in scripts.leo and contrib</vh>
<v t="ekr.20110531155858.20385"><vh>Description</vh></v>
</v>
<v t="ekr.20110531155858.20425"><vh>Call os.chdir when executing scripts</vh></v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="EKR.20040524104904.161"></t>
<t tx="EKR.20040524104904.211"></t>
<t tx="EKR.20040524104904.245"></t>
<t tx="EKR.20040524104904.26"></t>
<t tx="EKR.20040524104904.261"></t>
<t tx="EKR.20040524104904.274"></t>
<t tx="EKR.20040524104904.99"></t>
<t tx="TL.20080804095315.1"></t>
<t tx="ekr.20040414161647">@nocolor-node

These are the sources for Leo's users guide.

They contain sphinx markup. See::
    
    http://sphinx.pocoo.org/
    http://docutils.sourceforge.net/docs/user/rst/quickstart.html
    
To generate these docs, see the next node: "Generating the Users Guide"
    
Important files:

- doc\html\conf.py contains settings, including the name of the master toctree
  document, leo_toc.html.txt.

- leo_toc.html.txt contains a list of all file to be included.
</t>
<t tx="ekr.20050831184021.1"></t>
<t tx="ekr.20050831184021.3"></t>
<t tx="ekr.20050831184021.4"></t>
<t tx="ekr.20050831184021.5"></t>
<t tx="ekr.20050831195331.1"></t>
<t tx="ekr.20050831195331.4"></t>
<t tx="ekr.20050831195449">@nocolor

For instruction about installing Leo see:
http://webpages.charter.net/edreamleo/installing.html

For everything a beginner needs to know about Leo see:
http://webpages.charter.net/edreamleo/intro.html

For help, please ask questions at:
http://groups.google.com/group/leo-editor</t>
<t tx="ekr.20050901084134"></t>
<t tx="ekr.20050912125144"></t>
<t tx="ekr.20060430221745"></t>
<t tx="ekr.20060527105211"></t>
<t tx="ekr.20060612102055"></t>
<t tx="ekr.20060620094033"></t>
<t tx="ekr.20060913164304"></t>
<t tx="ekr.20061025065357"></t>
<t tx="ekr.20070317033759"></t>
<t tx="ekr.20070610174018"></t>
<t tx="ekr.20070628083442"></t>
<t tx="ekr.20070701101808"></t>
<t tx="ekr.20080203101507"></t>
<t tx="ekr.20080730212711.14"></t>
<t tx="ekr.20090717084250.10702"></t>
<t tx="ekr.20091111112709.6671"></t>
<t tx="ekr.20091130111843.6787"></t>
<t tx="ekr.20100731112744.7267"></t>
<t tx="ekr.20100805171546.4412"># This section contains important files used to generate Leo's web site.</t>
<t tx="ekr.20100821182153.4341"></t>
<t tx="ekr.20101007100904.4372"></t>
<t tx="ekr.20101025080245.5794"></t>
<t tx="ekr.20101025080245.5795"></t>
<t tx="ekr.20101025080245.5796"></t>
<t tx="ekr.20101025080245.5798"></t>
<t tx="ekr.20101025080245.5799"></t>
<t tx="ekr.20101025080245.5801">c:/leo.repo/trunk/leo/doc/leo_toc.html</t>
<t tx="ekr.20101026081737.5531">@language html

&lt;!-- EKR: changed these by hand to give the toc some structure --&gt;

&lt;p&gt;Preliminaries&lt;/p&gt;

&lt;ul&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="frontMatter.html"&gt;Front Matter&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="preface.html"&gt;Preface&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="testimonials.html"&gt;What People Are Saying About Leo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basics&lt;/p&gt;

&lt;ul&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="FAQ.html"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="slides.html"&gt;Slides&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="installing.html"&gt;Installing Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="intro.html"&gt;The Leo Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="outlines.html"&gt;Using Outlines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Intermediate Topics&lt;/p&gt;

&lt;ul&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="commands.html"&gt;Using Leo&amp;#8217;s Commands&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="customizing.html"&gt;Customizing Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="coloring.html"&gt;Controlling Syntax Coloring&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="rstplugin3.html"&gt;Creating Documents with Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="scripting.html"&gt;Scripting Leo with Python&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="plugins.html"&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="writingPlugins.html"&gt;Writing Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="unitTesting.html"&gt;Unit testing with Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="debuggers.html"&gt;Debugging with Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="atShadow.html"&gt;Using &amp;#64;shadow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leo and Other Programs&lt;/p&gt;

&lt;ul&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="emacs.html"&gt;Leo and Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="IPythonBridge.html"&gt;IPython and Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="leoBridge.html"&gt;Embedding Leo with the leoBridge module&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="vimBindings.html"&gt;Using Vim Bindings with Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="zodb.html"&gt;Using ZODB with Leo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reference&lt;/p&gt;

&lt;ul&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="directives.html"&gt;Leo&amp;#8217;s Reference&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="design.html"&gt;Designing with Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="history.html"&gt;History of Leo&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="theory.html"&gt;Theory of Operation&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="whitepapers.html"&gt;White Papers&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="appendices.html"&gt;Appendices&lt;/a&gt;&lt;/li&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="glossary.html"&gt;Glossary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Release Notes

&lt;ul&gt;
&lt;li class="toctree-l1"&gt;&lt;a class="reference external" href="what-is-new.html"&gt;What&amp;#8217;s New in Leo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</t>
<t tx="ekr.20101026082911.5536"></t>
<t tx="ekr.20101104024804.4898">@nocolor-node

The children of this node contain two @button scripts. These are disabled, but
you can execute them by selecting them and hitting Ctrl-B (execute-script).

To generate these docs by hand:

    - From this file, run rst3 on desired tree.
    - cd leo\doc\html
    - make html

To create pdf (probably easiest on Linux, with necessary latex packages installed):

    - make latex
    - cd _build/latex
    - make all-pdf
    
Important files:

- doc\html\conf.py contains settings, including the name of the master toctree
  document, leo_toc.html.txt.

- leo_toc.html.txt contains a list of all file to be included.
</t>
<t tx="ekr.20101112045055.5065">http://www.greygreen.org/tmp/plugins.html</t>
<t tx="ekr.20110531155858.19246">@language rest

Leo 4.9 b1                              June 3, 2011

Leo 4.9 beta 1 is now available at:
http://sourceforge.net/project/showfiles.php?group_id=3458&amp;package_id=29106

Leo is a text editor, data organizer, project manager and much more. See:
http://webpages.charter.net/edreamleo/intro.html

The highlights of Leo 4.9:
--------------------------

- Leo no longer supports the Tk gui: the Qt gui now supports
  all essential features of Tk and Tk-only plugins.

- A large number of "fit-and-finish" bugs fixed.

- Completed Leo's autocompleter.

- The rendering pane can now display movies, html, svg images, etc.

- The scrolledmessage plugin can now use the rendering pane.

- Leo uses an @file node's extension by default if ther is no @language
  directive in effect.
  
- Unified extract and import commands.

- Leo can now colorize multiple @language directives in a single node.

- Plain up/down arrow keys in headline-editing mode select a new node.

- New commands to insert, delete, change or print uA's.

- Added namespace directive to .leo files.


Links:
------
Leo:      http://webpages.charter.net/edreamleo/front.html
Forum:    http://groups.google.com/group/leo-editor
Download: http://sourceforge.net/project/showfiles.php?group_id=3458
Bzr:      http://code.launchpad.net/leo-editor/
Quotes:   http://webpages.charter.net/edreamleo/testimonials.html
</t>
<t tx="ekr.20110531155858.19830"></t>
<t tx="ekr.20110531155858.19831"></t>
<t tx="ekr.20110531155858.19851"></t>
<t tx="ekr.20110531155858.19853"></t>
<t tx="ekr.20110531155858.19877"></t>
<t tx="ekr.20110531155858.19888"></t>
<t tx="ekr.20110531155858.19894"></t>
<t tx="ekr.20110531155858.19901"></t>
<t tx="ekr.20110531155858.19903">There was a misspelling of 'unknownAttributes' in putVnode.

Report: The uA for the first top level node in the outline is cleared on save
and by some copy paste op.s etc.
</t>
<t tx="ekr.20110531155858.19932"></t>
<t tx="ekr.20110531155858.19939"></t>
<t tx="ekr.20110531155858.19976"></t>
<t tx="ekr.20110531155858.19979"></t>
<t tx="ekr.20110531155858.19996"></t>
<t tx="ekr.20110531155858.20001">https://bugs.launchpad.net/leo-editor/+bug/783617</t>
<t tx="ekr.20110531155858.20002">https://bugs.launchpad.net/leo-editor/+bug/681797
</t>
<t tx="ekr.20110531155858.20015">https://bugs.launchpad.net/leo-editor/+bug/622819

Ctrl-Shift movement (back-word-extend-selection, forward-word-extend-selection)
is incorrect when there is an existing selection, which was created by some
method other than Ctrl-Shift movement.

Expected behavior: it should extend/contract the existing selection

Actual behavior: it creates a new selection from the cursor position</t>
<t tx="ekr.20110531155858.20017">rst 3 button in contextmenu throws an error
https://bugs.launchpad.net/leo-editor/+bug/751976

I was not able to fix this button.  Instead, I merely disabled it.
http://groups.google.com/group/leo-editor/browse_thread/thread/8e67595ef156dba0
</t>
<t tx="ekr.20110531155858.20018">&gt; Setting background-color on QLineEdit#lineEdit in the Qt stylesheet works, the
selected color is initially visible, but leo overrides the color during init.
The color should be set in the style sheet instead.

Technically, this bug is invalid. However, I'll add comments to data
qt-gui-plugin-style-sheet explaining what is going on.

Because Leo changes the color of the minibuffer dynamically, stylesheets can not
be used. Instead, set the desired colors using one of the following settings,
with defaults as shown:

    @color minibuffer-background-color = lightblue
    @color minibuffer-error-color = red
    @color minibuffer-warning-color = lightgrey
</t>
<t tx="ekr.20110531155858.20019">http://groups.google.com/group/leo-editor/browse_thread/thread/ee09fb2c2a5316f2/490fa7cddab36fab

These are now colored with the "operator" setting, for example:
    
    @color operator_color = red
</t>
<t tx="ekr.20110531155858.20020"></t>
<t tx="ekr.20110531155858.20021">https://bugs.launchpad.net/leo-editor/+bug/760531
</t>
<t tx="ekr.20110531155858.20031">http://groups.google.com/group/leo-editor/browse_thread/thread/861a0d156b16090f

This was an important bug.  It's been around for a very long time.

What I did:
    
- putVnode no longer clears the orphan bit.

- at.read issues a warning and does not read the external file if the orphan bit is set.
</t>
<t tx="ekr.20110531155858.20087"></t>
<t tx="ekr.20110531155858.20088">https://bugs.launchpad.net/leo-editor/+bug/766747

The fill-paragraph, center-line and center-region now all use the fill column
if it has been explicitly set (and greater than zero). Otherwise, these commands
use the @pagewidth value.

Previously, the fill-paragraph command used the page width set by the @pagewidth
directive, or an initial value from a @setting if no @pagewidth directive was in
effect.
</t>
<t tx="ekr.20110531155858.20104">https://bugs.launchpad.net/leo-editor/+bug/583878

Leo now warns when a node contains both @comment and @delims directives.
</t>
<t tx="ekr.20110531155858.20108">https://bugs.launchpad.net/leo-editor/+bug/778204

Leo now generates an error for sentinels that look like @verbatim.
</t>
<t tx="ekr.20110531155858.20125">https://bugs.launchpad.net/leo-editor/+bug/784920
</t>
<t tx="ekr.20110531155858.20129">https://bugs.launchpad.net/leo-editor/+bug/527717
</t>
<t tx="ekr.20110531155858.20142">https://bugs.launchpad.net/leo-editor/+bug/580328

</t>
<t tx="ekr.20110531155858.20143">https://bugs.launchpad.net/leo-editor/+bug/581031

toggleSplitDirection new ensures that both the selected outline node *and* the
cursor in the body pane are visible.
</t>
<t tx="ekr.20110531155858.20145"></t>
<t tx="ekr.20110531155858.20153"></t>
<t tx="ekr.20110531155858.20165">https://bugs.launchpad.net/leo-editor/+bug/525004

What I did:

1. Fixed an off-by-one error in getNextToken. This was causing the havoc in the shell coloring.

2. match_mark_following now does *nothing* (fails) if there is no next token.
   This is a major change, and it allows more rules to match in the shell
   colorer.
   
3. Improved the tracing of colorRangeWithTag by adding g.callers(2) and by
   showing delegat names more clearly. Tracing is no so good that there is not
   much need for any other tracing.
</t>
<t tx="ekr.20110531155858.20166">This fixes the most annoying hangnail remaining in Leo.
</t>
<t tx="ekr.20110531155858.20234">https://bugs.launchpad.net/leo-editor/+bug/626587
</t>
<t tx="ekr.20110531155858.20246"></t>
<t tx="ekr.20110531155858.20247">The new rule is simple: if the body text contains any text the first line of the
body text is taken to be the url. There is no longer any need to put '--' in the
headline.

More importantly, you can put anything you like in the body text following the
first line. Other url's, notes, even .. graphics:: directives for the
viewrendered plugin.

These improvements allow Leo to be what it should have been a long time ago: the
world's best organizer of url's.

@color

My typical usage is::

    @url fizbatz: short description of fizbatz (headline)
    http://fizbatz.org (body text)
    @language rest
    Why I care about fizbatz.
</t>
<t tx="ekr.20110531155858.20249">It is now much faster and has better feedback.
</t>
<t tx="ekr.20110531155858.20252"></t>
<t tx="ekr.20110531155858.20268">The print-bindings command now shows were bindings came from</t>
<t tx="ekr.20110531155858.20313"></t>
<t tx="ekr.20110531155858.20334">- Enter insert mode after ctrl-h.
</t>
<t tx="ekr.20110531155858.20381">How did we ever live without this?

You can open url's by control-clicking on them, or by using the open-url command.
</t>
<t tx="ekr.20110531155858.20382"></t>
<t tx="ekr.20110531155858.20383">What I did:
    
- Added @bool use_qcompleter setting.
- Added auto_tab_complete setting.
- Removed @bool use_codewise setting.
</t>
<t tx="ekr.20110531155858.20384">http://groups.google.com/group/leo-editor/browse_thread/thread/b8e8fbf6d97fa9f2/a4537fafaf2442ba

</t>
<t tx="ekr.20110531155858.20385">@nocolor-node

This code contributed by Kent Tenney.

See http://groups.google.com/group/leo-editor/browse_thread/thread/b8e8fbf6d97fa9f2/a4537fafaf2442ba

I've had endless problems with interpreter versioning, leading me create the
Runwith class. It writes a file to disk, makes it executable, runs it, captures
exitcode, err and output, removes the files, provides reports.

This provides complete decoupling from Leo.

I have run-bash and run-python buttons in Leo which run the node
contents as shell or python.

I'm liking it a lot.

I'm currently extending it to provide command line sugar:

$ rw ln -s /home/ktenney/work/src/project/bin/myscript
/home/ktenney/bin --makelink.sh--

The "rw" script executes the command, and creates the script makelink.sh

The following is Outline -&gt; Copy Node version of the Runwith class

It does some data gathering which probably don't apply: hashes of the code,
hostname, timestamps. These get stored in json.
</t>
<t tx="ekr.20110531155858.20410">It regularizes the number of spaces after periods.

http://groups.google.com/group/leo-editor/browse_thread/thread/1171df34dce14431
</t>
<t tx="ekr.20110531155858.20412">- The command detects paragraphs more reliably.

- The next line is now visible, which is a big improvement.
</t>
<t tx="ekr.20110531155858.20420"></t>
<t tx="ekr.20110531155858.20423">This is the easy part of the new file format.
</t>
<t tx="ekr.20110531155858.20425">http://groups.google.com/group/leo-editor/browse_thread/thread/4ea31ed2e0518866/3667f707b99ee9e3

Call os.chdir() to set the current directory to match any @path directives in
effect at the current node when a script is run or a button pushed?
</t>
<t tx="ekr.20110531155858.20435"></t>
<t tx="ekr.20110531155858.20440">https://bugs.launchpad.net/leo-editor/+bug/745824e

In the new sentinels scheme @doc parts written with block comment delims must
handled differently. This is done in the new at.massageAtDocPart method.


</t>
<t tx="ekr.20110531155858.20441">Since v4.8 notice the following:

@file node using @language html

Using @doc (or simply @ ) in these nodes properly writes the comment delimiters
(&lt;!-- and --&gt;) surrounding the @doc block on file save. However, on file open,
when Leo reads the @files, it raises the following error:

uncached read node changed NodeHeadline

and an entry is made in Recovered Nodes section. If not reverted back to the old
version (manually), a new file save command will insert additional comment
delimiters which then don't work (&lt;!-- &lt;1-- and --&gt; --&gt;).

May be related to https://bugs.launchpad.net/leo-editor/+bug/683867 The nodes
affected for me were all clones, but not across different @files, all within
distinct files.
</t>
<t tx="ekr.20110531155858.20448">The --no-splash command-line option suppresses the splash screen.  In addition,
Leo puts up no splash screen when the --silent or --script command-line options
are given. 

To change the splash screen, replace leo\Icons\SplashScreen.jpg with another image.

</t>
<t tx="ekr.20110531155858.20454">Abbreviations are checked any time a non-word character is typed.

In particular, newlines trigger abbreviations, which I find very helpful,
although I did then have to remove newlines from my abbreviations.

Control sequences do not trigger expansions.

Renamed the 'abbrev-mode' to 'toggle-abbrev-mode'.
</t>
<t tx="ekr.20110531155858.20462">This also fixes the following bug.
https://bugs.launchpad.net/leo-editor/+bug/755206

* Added support for @bool view-rendered-auto-create.

* Fixed numerous bugs, and made the code more robust.
</t>
<t tx="ekr.20110531155858.20479">http://sourceforge.net/forum/message.php?msg_id=3412640

Clicking in the minibuffer now is equivalent to alt-x, provided that the minibuffer is not in use.

Clicking most places outside the minibuffer is equivalent to ctrl-g.

Catching clicks is much safer than catching focus events.
</t>
<t tx="ekr.20110531155858.20481">- The descendants of previously found (cloned) nodes don't get added again.

- clone-find-all pattern now defaults to find text.
</t>
<t tx="ekr.20110531155858.20484">If you type a *plain* up/down arrow key while editing a headline, Leo will act
as if you had typed the corresponding *alt*- arrow key. That is, Leo will end
editing of the headline and go to the next previous node. Leo will end editing
even if there is no next/ previous node, which is convenient.</t>
<t tx="ekr.20110531155858.20486">This should have been done 8 years ago!  It is oh so useful.</t>
<t tx="ekr.20110531155858.20492">These were real bugs: they prevent emacs commands from working.

Eliminated all tk-indices from leoEditCommands.py:
    
- Replaced sel.start,sel.end with w.getSelectedText() in
  append/copy/prepend-to-register commands.
  
- Completely rewrote transposeWords
</t>
<t tx="ekr.20110531155858.20495">The language name is "scala", the extension is ".scala"

The comments are "// /* */" (just like C++ and Java).
</t>
<t tx="ekr.20110531155858.20497">Ironically, this is more important now that @language directives are optional.

Leo correctly colors nodes containing more than one @language directives.

As with @color directives, only unambiguous @language directives affect the
default coloring of descendant nodes.
</t>
<t tx="ekr.20110531155858.20498">Leo ignores (and does not color) @language directive for unknown languages.

In effect, Leo completely recolors nodes when you change @language directives by
typing.
</t>
<t tx="ekr.20110531155858.20503">The commands use the scrolledmessage plugin if possible, which in turn uses the
viewrendered plugin by default.

This makes the apropos messages much more visible.
</t>
<t tx="ekr.20110531155858.20515">@language rest

http://groups.google.com/group/leo-editor/browse_thread/thread/679614fdd6a76a81#

Here is the docstring for the new, generalize, extract command:

Create child node from the selected body text.
    
1. If the selection starts with a section reference, the section name become the
   child's headline. All following lines become the child's body text. The
   section reference line remains in the original body text.
   
2. If the selection looks like a Python class or definition line, the
   class/function/method name becmes child's headline and all selected lines
   become the child's body text.
   
3. Otherwise, the first line becomes the child's headline, and all selected
   lines become the child's body text.

Note that the extract-section-names command remains.

The extract-section and extract-python-method commands are gone.

@language python
</t>
<t tx="ekr.20110531155858.20523">http://sourceforge.net/forum/message.php?msg_id=3940843

The import-file command replaces all the following commands:
    
    import-at-file                    
    import-cweb-files         
    import-derived-file       
    import-flattened-outline      
    import-noweb-files
    
Leo chooses one of the above commands as follows.  First, if the file looks like
an external file that Leo wrote, the command works like import-derived-file command.
Othewise, the file's extension determines the importer:
    
    .cw, .cweb:     import-cweb-files
    .nw, .noweb:    import-noweb-files
    .txt:           import-flattened-outline
    all others:     import-at-file

The import-at-root command is no longer supported.
</t>
<t tx="ekr.20110531155858.20527">Leo's sentence related functions now stop at empty lines, skip periods within
words, stop at sentences ending in non-periods and stop at the end or beginning
of the buffer.
</t>
<t tx="ekr.20110531155858.20557">** Document the viewrendered plugin: use the docstring.</t>
<t tx="ekr.20110531155858.20558">There is no obvious way of fixing the "disappearing menu" bug.

Users that have to choose to do without tabs, or to do without menus :-)
</t>
<t tx="ekr.20110531155858.20559">@language rest

This thread will discuss the workflow I use to develop Leo. The intention is to
help present and potential developers use Leo effectively. This thread will be
pre-writing for a section of the users guide.

This is a continuation of the thread:
http://groups.google.com/group/leo-editor/browse_thread/thread/4494324d21bd0bde/adf6d565c90e175c

Overview
=======

Here is the big picture:

* Develop in an outline containing all of Leo's source files. Close this outline
 rarely: this keeps the code I am using stable while I'm hacking the code.

* Test in a *separate* .leo file, say test.leo. In fact, I often test in a
  private file, ekr.leo, so that test.leo doesn't get continually updated on bzr
  with trivial changes.

These two points are covered in a bit more detail in the FAQ:

http://webpages.charter.net/edreamleo/FAQ.html#how-can-i-use-leo-to-develop-leo-itself

Additional tips:

A. Avoid using the mouse whenever possible.  For example, use alt-tab to switch between windows.

B. Always develop Leo in a console.  This allows me to see the output of g.trace.

Speaking of g.trace, I hardly ever use 'print' because g.trace prints the name
of the function or method in which it appears. The typical pattern for enabling
traces is:

    trace = True and not g.unitTesting
    if trace: g.trace(whatever)

This pattern is especially useful when a method contains multiple calls to g.trace.

C. I use scripts to open particular Leo files. These are batch files on Windows,
   and aliases on Linux, but invoking them is the same on either platform:

all: opens all my main development files using the qt-tabs gui: leoPy.leo,
     leoGuiPlugins.leo, leoPlugins.leo, leoSettings.leo, myLeoSettings.leo and
     LeoDocs.leo.

t: opens test.leo.

e: opens ekr.leo.  I use this file for private testing.

d: opens LeoDocs.leo.

s: opens LeoPy.leo.

plugins: opens leoPlugins.leo.

gui: opens leoGui.leo.

u: opens unitTest.leo.

These run Leo with Python 3.x. There are similar scripts, ending in 2, that run
Leo with Python 2.x. For example, u2 opens unitTest.leo with Python 2.x.

Similarly, the tk prefix uses the Tk gui: utk opens unitTest.leo with --gui=tk
(and Python 2.x since the tk gui only works with Python 2.x)

Thus, to run a test, I alt-tab to an available console window, then type 'e' or
't' or 'e2' or 't2'.

D. Use clones to focus attention on the task at hand.  For more details, see:

E.  For thousand of example of my programming style, see leoPy.leo and leoGuiPlugins.leo.

http://webpages.charter.net/edreamleo/intro.html#clones-views

The projects section in leoPy.leo contains many examples of using clones to
create view nodes. I typically delete the clones in the views shortly before a
release.

That's about all for code-level tips.  Here are some administrative tips:

A.  Use postings as pre-writing for documentation.

I don't mind blabbing on and on about Leo because all my posts become
pre-writing for Leo's documentation. I simply copy posts to nodes in the
"documentation to-do" section. At release time, I edit these nodes and put them
in Leo's main documentation or the release notes. This posting is an example.

B. Never rely on memory.

A project like this contains thousands and thousands of details. Everything
eventually goes into a Leo node somewhere. If it doesn't it surely *will* be
forgotten.

C. Do easy items first. This keeps to-do lists short, which in turn helps keep
energy high.


============================

&gt; Do you also have any bzr specific gotchas that you plan to add to this
&gt; section?

I use the following batch files related to bzr:

b: short for bzr
bs: short for bzr status
tr: short for cd &lt;path to trunk&gt;
main: short for cd &lt;path to copy of trunk&gt;

The "main" (copy) of the trunk is purely for handling bzr conflicts.
If one happens I do this:

main
b pull
b merge ../trunk
b c -m "my commit message"
b push

If the merge goes well (it usually does), I do:

tr
b pull

This suffices to resolve the conflict.
</t>
<t tx="ekr.20110531155858.20560">@language rest

There has been a lot of work on autocompletion recently. Here, I'll summarize
the present status and indicate future directions.

Terminology: the *legacy* (aka tabbed) autocompleter shows completions in Leo's
tabbed pane. The *new* (aka qcompleter) autocompleter shows completions in or
near the body pane.

Appearance
==========

There is little change to the legacy completer, except that no text is
highlighted in the body pane during completion. This is calmer than before.
Furthermore, there is no longer any need for highlighting, because when the user
types a backspace the legacy completer now simply deletes a single character
instead of the highlighted text.

One more minor change: the legacy completer now *does* insert characters that do
not match the start of any possible completion. This is an experimental feature,
but it might play well with using codewise completions as a fallback to
leo-related completions.

The appearance of the qcompleter is in flux. Previously, the QCompleter ctor
created a wretched-looking window in or near the body pane. The present code
creates a new temporary splitter above the body pane. It looks good, but has the
unpleasant effect of shifting the body pane done.

The consensus seems to be that the completion window should float near the
to-be-completed text, without obscuring it. I'll do this immediately.

Function and design
===================

Both the legacy and new completer now work *exactly* the same way, because they
both use the AutoCompleterClass to compute the list of completions.

In other words, the qcompleter code in qtGui.py deals *only* with gui- related
matters. All policy matters are delegated to AutoCompleterClass.

All completion-related code is stateless, or as stateless as possible. In
practice, this means that ac.compute_completion_list must be called on every
keystroke. That's not a problem: it is extremely fast.

Yesterday I realized that the strict "stateless" requirement means that the
"intermediate" completions must be entered into the body pane while completion
is active. This might be a debatable user-interface choice. It works well as a
visual cue when using the tabbed completer: indeed, the tabbed completer would
be difficult to use without this cue.

The situation is slightly different with the qcompleter. Adding code before the
user accepts the completion might be considered an "advanced" feature. However,
it does have two important advantages, especially when "chaining" across
periods: it indicates the status of the chaining and it limits what must appear
in the qcompleter window.

It would be possible *not* to add the intermediate text into the body pane when
using the qcompleter, but that would have the following disadvantages:

- It would require internal state somewhere, probably in AutoCompleterClass.

- It would require that the complete prefix be visible in the qcompleter window.

For these reasons, I would prefer to have the code remains stateless for both
the legacy and new completers.

Codewise completions
====================

I agree with Ville that the @bool use_codewise setting should be eliminated, or
at the very least made the default. The problem with eliminating the setting
completely is that it might give incorrect results if c, g and p do not mean
what they mean in Leo. Perhaps this is not worth worrying about. In any case,
the codewise completions should be used whenever the eval-oriented approach
fails.

The present codewise-oriented completions appear to work well. In large part,
this is due to adding the global "self." completions to all class-related
completions (kind == 'class' in ac.get_codewise_completions). This looks like a
really good hack, and it eliminates the need for the ContextSniffer class.

Performance
===========

Performance of leo-related completions is *much* better than before. The old
code used Python's inspect module and was horribly complex. The new code uses
eval and is perfectly straightforward.

The present codewise-related code caches completions for all previously-seen
prefixes. This dramatically speeds up backspacing. Global caching is possible
because completions depend *only* one the present prefix, *not* on the presently
selected node. If ContextSniffer were used, completions would depend on the
selected node and caching would likely be impractical.

Despite these improvements, the performance of codewise-oriented completions is
now noticeably slower than leo-related completions.

The present qcompleter code avoids the QCompleter class entirely. This
dramatically speeds up completions and simplifies the code in qtGui.py.

Future directions
=============

Appearance-related issues will soon be completely resolved. When that happens I
shall consider autocompletion to be "complete enough".

I am completely happy with the leo-oriented completions. I'm not looking for
anything better :-)

Falling back to codewise-completions when leo-related completions fail may have
some promise. In fact, the slowness of computing the codewise-oriented
completions in that case might be a subtle clue that something is amiss :-) We
shall see. In any case, it's a small point with no global implications.

The "final frontier" is, as it has always been, improving codewise completions.
As always, this is an open-ended project. The question are, how much AI is
reasonable, and how can performance be improved? Having said that, I am pleased
with ac.get_codewise_completions. It, and its helpers, guess_class and clean,
are relatively straightforward.

I have always considered the codewise completions (or whatever replaces them) to
be the "hard part". There is still a sense in which this is true, but perhaps as
a practical matter Ville was correct in calling this week's work the hard part
:-)

In any case, the codewise completions work surprisingly well. For example, it
suggests all parts of the chain c.frame.body.bodyCtrl.widget except the bodyCtrl
part, and after I type the bodyCtrl part by hand the codewise completer does
suggest widget.

This is all a bit of a hack. The codewise completer suggests far more
completions than are actually valid. Happily, these extra suggestions cause no
pain: typing just a few letters of the next part of the chain quickly removes
most extraneous completions.

The performance and flexibility of the codewise completer are greater concerns.
Now that leo-related completions are so fast, the slower speed of the codewise
completer is just a bit annoying. Caching helps somewhat, but not enough.

By "flexibility" I mean that the user must run ctags periodically to update
completions. One could imagine Leo doing this automatically from time to time,
but such a project would not be trivial.

Summary
=======

User interface issues are nearly resolved: I'll make the qcompleter float today.

Performance of Leo completions are excellent; codewise completions not bad.

Improving codewise completions would be an interesting project, but not urgent.
</t>
<t tx="ekr.20110531155858.20561">@language rest

QQQ
The completer should calculate all possible completions at that time. now, as
you enter letters b a r, (to get foo.bar), completions should not be calculated
- rather, the original completion list calculated earlier should be pruned
according to the letters typed.
QQQ

The change was elegant: see ac.get_cached_options. This method cuts back the
prefix until it finds a cached prefix. ac.compute_completion_list then uses this
(perhaps-way-too-long-list) as a starting point, and computes the final
completion list by calling g.itemsMatchingPrefixInList.

This may not be absolutely the fastest way, but it is much simpler and more
robust than attempting to do "prefix AI" based on comparing old and new
prefixes. Furthermore, this scheme is completely independent of the how
completions are actually computed. The autocompleter now caches options lists,
regardless of whether using eval or codewise.

And in most cases the scheme is extremely fast: calls to get_completions replace
calls to g.itemsMatchingPrefixInList. However, for short prefixes, the list that
g.g.itemsMatchingPrefixInList scans can have thousands of items. Scanning large
lists can't be helped in any case for short prefixes.

Happily, the new scheme is still *completely* stateless: the completionDict does
*not* define state (it is valid everywhere) and no state variables had to be
added.

In short, the new caching scheme is much better than before, and it probably is
close to optimal in most situations.
</t>
<t tx="ekr.20110531155858.20563">@language python

import leo.core.leoGui as leoGui
nullGui = leoGui.nullGui("nullGui")
c2,frame = g.app.newLeoCommanderAndFrame(
        fileName=None,gui=nullGui)
c2.frame.createFirstTreeNode()
for p in c2.all_positions():
    g.es(p.h)
</t>
<t tx="ekr.20110531155858.20564">Are color-settings gui-toolkit dependent?

In my ~/.leo/myLeoSettings.leo I changed @settings-&gt;Colors-&gt; @color
body_text_selection_foreground_color = black (the value before was `white`).

Unfortunately the foreground of the selected text still is white, at least if I
use the qt gui (which is default on my system and which I like more).

So my questions:

Are the color-settings gui-toolkit dependent?

How (or where) can I change the colors used for qt?

Is there a way to print the settings files (with full path) which leo reads on
startup? (I think this would help to prevent confusion in the various ways to
specify settings for new users.)

=====================================

At last I see what is going on.  The selection colors are set in the node:

@data qt-gui-plugin-style-sheet

Apparently the selection colors can *only* be set there: it looks like
the separate @color settings for selections do not work.

This is quite a mess.  It arose because originally I did not realize
that it was possible to use "mini" stylesheets to set individual
selector dynamically.  When I made the discovery, I supported some,
but not all settings.

Of course, I should support all settings.  I'll see what I can do...
</t>
<t tx="ekr.20110531155858.20565">@nocolor-node

After further reflection, there does not seem to be much that can be done.

Suppose, for example, that Leo converts an @setting node to a mini
stylesheet.  (In fact, Leo sometimes does do this, in other contexts.)
 We now have a conundrum: which should take precedence: the @data
qt-gui-plugin-style-sheet setting or the @color
body_text_selection_foreground_color setting?

Rather than open that can of worms, the best solution seems to be to
declare that yes, some settings *are* gui dependent.  Use @data
qt-gui-plugin-style-sheet to set those settings.
</t>
<t tx="ekr.20110601105631.19343">Enabled only if @bool single_click_auto_edits_headline = True.
</t>
<t tx="ekr.20110601105631.19349">@language rest

</t>
<t tx="ekr.20110601105631.19354">- Leo no longer supports the Tk Gui.

- Removed show/hide/toggle minibuffer commands. The minibuffer is an essential
  part of Leo.</t>
<t tx="ekr.20110601105631.19359">- Leo no longer supports the Tk Gui.

- Removed show/hide/toggle minibuffer commands. The minibuffer is an essential
  part of Leo.
  
- These settings are no longer used::
    
    @string selected-background-color
    @string selected-command-background-color
</t>
<t tx="ekr.20110601105631.19360">- Fixed an important bug involving orphan nodes. Leo now never saves an external
  file containing orphan nodes. This ensures that all the information in the
  external file will, in fact, be saved in the .leo file.

- Almost 40 bugs have been fixed.  Most were minor.
  For a complete list, see the release notes.
  
</t>
<t tx="ekr.20110601105631.19362">This ensures that Leo does not change files unnecessarily.
</t>
<t tx="ekr.20110601105631.19378">- Added the replace-current-character command. It replaces the character to the
  left of the cursor, or replaces the selection range if there is one.

- Added toggle-case-region command.

- Added save-all command. It saves all changed windows.

- Added insert-hard/sof-tab commands.

- Added commands to manage uA's::

    clear-all-uas
    clear-node-uas
    print-all-uas
    print-node-uas
    set-ua

</t>
<t tx="ekr.20110601105631.19379"></t>
<t tx="ekr.20110601105631.19380"></t>
<t tx="ekr.20110601105631.19381"></t>
<t tx="ekr.20110601105631.19382"></t>
<t tx="ekr.20110601105631.19383"></t>
<t tx="ekr.20110601105631.19384"></t>
<t tx="ekr.20110601105631.19385"></t>
<t tx="ekr.20110601105631.19388">- Added the replace-current-character command. It replaces the character to the
  left of the cursor, or replaces the selection range if there is one.

- Added toggle-case-region command.

- Added save-all command. It saves all changed windows.

- Added insert-hard/sof-tab commands.

- Added commands to manage uA's::

    clear-all-uas
    clear-node-uas
    print-all-uas
    print-node-uas
    set-ua

</t>
<t tx="sps.20100708203040.19008">@language python
import os
pos = c.find_h("Users Guide")[0]
c.selectPosition(pos)
c.k.simulateCommand('rst3')
&lt;&lt; html manual &gt;&gt;
&lt;&lt; pdf manual &gt;&gt;
</t>
<t tx="sps.20100708203040.19009">d = c.scanAllDirectives(p)
mandir = d.get('path') + "/html"
g.es(mandir)
os.chdir(mandir)
os.system('make html')
</t>
<t tx="sps.20100708203040.19010"># you probably need to install several packages 
# to create pdf (e.g. jadetex)
mandir = d.get('path') + "/html"
g.es(mandir)
os.chdir(mandir)
os.system('make latex')
os.chdir('_build/latex')
os.system('../../fixup.pl &lt; Leodocumentation.tex &gt; LeoDoc.tex')
os.system('make LeoDoc.pdf')
</t>
<t tx="ville.20090705224948.5734">import os
pos = c.find_h("Users Guide")[0]
c.selectPosition(pos)
c.k.simulateCommand('rst3')
&lt;&lt; html manual &gt;&gt;
# no pdf manual creation, perhaps too "involved" for many
</t>
<t tx="ville.20090705225609.5736">mandir = g.app.leoDir + "/doc/html"
g.es(mandir)
os.chdir(mandir)
os.system('make html')
</t>
<t tx="ville.20090705225609.5738"># you probably need to install several packages 
# to create pdf (e.g. jadetex)
mandir = g.app.leoDir + "/doc/html"
g.es(mandir)
os.chdir(mandir)
os.system('make latex')
os.chdir('_build/latex')
os.system('make all-pdf')
</t>
</tnodes>
</leo_file>
