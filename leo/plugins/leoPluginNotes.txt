#@+leo-ver=5-thin
#@+node:ekr.20090430075506.3: * @file leoPluginNotes.txt
#@+all
#@+node:ekr.20110317080650.14388: ** Unused code
#@+node:leohag.20081203143921.18: *3* show (not used from scrolledmessage)
def show(self):
    
    g.trace(g.callers())
    
    self.ui.show()
#@+node:ekr.20110321072702.14506: *3* Unused viewrendered commands
#@+node:tbrown.20101127112443.14856: *4* g.command('viewrendered-html') (not used)
# @g.command('viewrendered-html')
# def viewrendered(event):
    # """Open view of html which would be rendered"""

    # c = event.get('c')
    # if c:
        # pc = controllers.get(c.hash())
        # if pc: pc.view('html')
#@+node:tbrown.20101127112443.14854: *4* g.command('viewrendered-big') (not used)
# @g.command('viewrendered-big')
# def viewrendered(event):
    # """Open render view for commander, with big text

    # (useful for presentations)

    # """

    # c = event.get('c')
    # if c:
        # pc = controllers.get(c.hash())
        # if pc:
            # w = pc.w
            # pc.view('big')
            # w.zoomIn(4)
#@+node:ekr.20110317080650.14383: *4* g.command('hide-rendering-pane') (not used)
# @g.command('hide-rendering-pane')
# def hide_rendering_pane(event):
    
    # '''Hide the rendering pane, but do not delete it.'''

    # c = event.get('c')
    # if c:
        # pc = controllers.get(c.hash())
        # if pc: pc.hide()
#@+node:ekr.20110929165422.15433: *3* Deleted docs for todo.py
@nocolor-node

The Times Menu
=================

**Show Times** Adds entries of the form::
    
     '<2 days, 45%>'
     
to nodes with associated due dates or completion times.

'days' can be changed to 'hours' or 'weeks' or whatever using the setting::
    
     @string todo_time_name = hours

*Note*: Removing / updating these strings in the node headlines relies on the
'< ... >' being the last thing on the line, if you add anything after it it will
no longer be touched by these functions.

The times shown are not updated automatically unless you use @project nodes.

**Re-calc. derived times** recalculates the time required for the selected node
using the the data in all descendant nodes. This function may appear to fail if
@project nodes are present.

Basically the time required and progress from pseudo-leaf nodes (nodes with no
children that have time-required settings) is always preserved, but all non-leaf
nodes are considered to be groups of tasks with no inherent time-required and
progress-level of their own.

Consider this tree::

    + To do
        + Complete day
            + Dress
                - Find shoes
                - Tie shoes
            + Commute
                - Start car
                - Drive to work
            + Work
                - Read email
                - Write code

The leaf nodes are the ones on the right starting with '-'. Using 'Re-calc. time
required' on ' Complete day' would add or replace the progress and time-required
attributes of the non-leaf nodes to make them reflect the time-required /
progress of their descendants. Note however that if say 'Commute' had a
time-required value set and neither 'Start car' nor 'Drive to work' had any
time-required setting, 'Commute''s setting would be left alone, it would be
treated as a sort of effective leaf node in this context.

If you set up a tree like this::

    + Big project (100 days, 0%)
        - Set up SVN (1 day, 0%)

and then run the "Re-calc. derived times" command on 'Big project', its
time-required will be reduced to 1 day. To avoid this you should add another
leaf node, 'Rest of project', with a time-required of 99 days, after 'Set up
SVN'. Or just pay no attention to the time-required on 'Big project' until
you've made a more complete list of its sub-components.

The progress and times shown are not updated automatically unless you use @project nodes.

**Clear derived times** behaves like Re-calc. time required except instead of
adding time and progress information it clears it.

\@Project Nodes
===============

\@project nodes can be used to make updates of progress bars and displayed times
automatic.

Whenever you change the progress-level or time-required on a node, cleo will
search back up through the tree to find the highest level parent node with
'\@project' in the headline. cleo will then execute Re-calc. time required on
that node. If the node contains '\@project time' (one space) the Show times
command will also be executed on that node.

Remember that when a \@project node is present, attempts to remove progress and
time required values may appear to fail as Re-calc. time required replaces them
as you remove them.
#@-all
#@-leo
