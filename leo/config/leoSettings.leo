<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet ekr_test?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20070622214401"><vh>Startup</vh>
<v t="ekr.20070326094544"><vh>@chapters</vh></v>
<v t="ekr.20060112110750"><vh>Buttons</vh>
<v t="ekr.20051010093913"><vh>@@button Save</vh></v>
<v t="ekr.20051011123608"><vh>@@button align to col</vh></v>
<v t="ekr.20060112103537.17"><vh>@button Check bindings</vh>
<v t="ekr.20060112104119"><vh>defineSetNames</vh></v>
<v t="ekr.20060112104333"><vh>doSet</vh></v>
<v t="ekr.20060112105523"><vh>doShortcuts</vh></v>
<v t="ekr.20060112104333.1"><vh>checkSets</vh></v>
<v t="ekr.20060112104823"><vh>main</vh></v>
</v>
<v t="ekr.20090203131919.1"><vh>@button Check menu commands</vh></v>
</v>
</v>
<v t="ekr.20041119035137"><vh>About this file</vh>
<v t="ekr.20041122163623"><vh>Note about canonicalized names</vh></v>
<v t="ekr.20041119035704"><vh> Basic setting nodes: @type-name setting-name = value</vh>
<v t="ekr.20041119042929"><vh>@bool</vh></v>
<v t="ekr.20041119042929.1"><vh>@color</vh></v>
<v t="ekr.20041119044139"><vh>@directory</vh></v>
<v t="ekr.20041119042929.3"><vh>@encoding</vh></v>
<v t="ekr.20041119042929.4"><vh>@int</vh></v>
<v t="ekr.20061002115414"><vh>@float</vh></v>
<v t="ekr.20041119042929.5"><vh>@font</vh></v>
<v t="ekr.20041120181045"><vh>@ratio</vh></v>
<v t="ekr.20041119042929.2"><vh>@path</vh></v>
<v t="ekr.20041119042929.7"><vh>@string</vh></v>
</v>
<v t="ekr.20041119035704.1"><vh> Organizer nodes</vh></v>
<v t="ekr.20071217093419"><vh>\@data</vh></v>
<v t="ekr.20080312071248.25"><vh>\@buttons</vh></v>
<v t="ekr.20080312071248.19"><vh>\@button name [@key=value]</vh></v>
<v t="ekr.20080312071248.26"><vh>\@commands</vh></v>
<v t="ekr.20080312071248.20"><vh>\@command name [@key=value]</vh></v>
<v t="ekr.20070224073109"><vh>\@enabled-plugins</vh></v>
<v t="ekr.20060913144412"><vh>\@keys keyset-name</vh></v>
<v t="ekr.20041119035931"><vh>\@if expression</vh></v>
<v t="ekr.20041119110141"><vh>\@ifplatform platform-name</vh></v>
<v t="ekr.20041119035704.2"><vh>\@ignore comment</vh></v>
<v t="ekr.20070411172718"><vh>\@openwith name = shortcut</vh></v>
<v t="ekr.20041119105509"><vh>\@set name = value</vh></v>
<v t="ekr.20041120155431.1"><vh>\@shortcuts</vh></v>
<v t="ekr.20041119035704.3"><vh>\@type type-name: base-type = [list of valid values]</vh></v>
<v t="ekr.20041120155431.2"><vh>\@type type-name: script: script-name</vh></v>
</v>
<v t="ekr.20061011082224"><vh>Candidates for settings in myLeoSettings.leo</vh>
<v t="ekr.20060930085532"><vh>@bool collapse_nodes_during_finds = True</vh></v>
<v t="ekr.20070615094204"><vh>@bool contractVisitedNodes = True</vh></v>
<v t="ekr.20041119041304"><vh>@bool create_nonexistent_directories = False</vh></v>
<v t="ekr.20060212101234"><vh>@bool gc_before_redraw = True</vh></v>
<v t="ekr.20060215102141"><vh>@bool ignore_unbound_non_ascii_keys = False</vh></v>
<v t="ekr.20061012122620"><vh>@bool insert_new_nodes_at_end = False</vh></v>
<v t="ekr.20061007211759"><vh>@bool sparse_move_outline_left = True</vh></v>
<v t="ekr.20060926160657"><vh>@bool stayInTreeAfterEditHeadline = False</vh></v>
<v t="ekr.20060122105527.7"><vh>@bool stayInTreeAfterSelect = True</vh></v>
<v t="ekr.20060215104345"><vh>@bool swap_mac_keys = False</vh></v>
<v t="ekr.20070604075218"><vh>@bool use_chapter_tabs = True</vh></v>
<v t="ekr.20070318065601"><vh>@bool use_chapters = True</vh></v>
<v t="ekr.20061004150211"><vh>@bool use_sax_based_read = False</vh></v>
<v t="ekr.20060201111002"><vh>@bool use_syntax_coloring = True</vh></v>
<v t="ekr.20061009190510"><vh>@bool write_recent_files_as_needed = True</vh></v>
<v t="ekr.20070224073109.1"><vh>@enabled-plugins</vh></v>
<v t="ekr.20060127050605"><vh>@int max_undo_stack_size = 0</vh></v>
<v t="ekr.20041119034357.31"><vh>@int tab_width = -4</vh></v>
<v t="ekr.20041119050105.3"><vh>Checkboxes in the Find panel</vh>
<v t="ekr.20041119050105.4"><vh>@bool batch = False</vh></v>
<v t="ekr.20041119050105.5"><vh>@bool ignore_case = True</vh></v>
<v t="ekr.20041119050105.6"><vh>@bool mark_changes = False</vh></v>
<v t="ekr.20041119050105.7"><vh>@bool mark_finds = False</vh></v>
<v t="ekr.20041119050105.12"><vh>@bool node_only = False</vh></v>
<v t="ekr.20041119050105.9"><vh>@bool reverse = False</vh></v>
<v t="ekr.20041119050105.8"><vh>@bool pattern_match = False</vh></v>
<v t="ekr.20041120152657"><vh>@bool script_change = None</vh></v>
<v t="ekr.20041119050105.14"><vh>@bool search_body = True</vh></v>
<v t="ekr.20041119050105.15"><vh>@bool search_headline = True</vh></v>
<v t="ekr.20041119050105.10"><vh>@bool whole_word = False</vh></v>
<v t="ekr.20041119050105.11"><vh>@bool wrap = False</vh></v>
</v>
<v t="edward.20081129091117.12"><vh>@string initial_split_orientation = vertical</vh></v>
</v>
<v t="ekr.20080513060549.1"><vh>Settings for vim bindings</vh>
<v t="ekr.20080514065934.1"><vh>About vim-like bindings</vh></v>
<v t="ekr.20080513060549.3"><vh>@strings  [command,insert, overwrite] top_level_unbound_key_action = command</vh></v>
</v>
<v t="ekr.20100806211331.8331"><vh>Unused settings</vh>
<v t="ekr.20070925144534.25"><vh>@menu Tan&amp;gle...</vh>
<v t="ekr.20070925144534.26"><vh>@item *tangle-&amp;all</vh></v>
<v t="ekr.20070925144534.27"><vh>@item *tangle-&amp;marked</vh></v>
<v t="ekr.20070925144534.28"><vh>@item *&amp;tangle</vh></v>
</v>
<v t="ekr.20070925144534.29"><vh>@menu &amp;Untangle...</vh>
<v t="ekr.20070925144534.30"><vh>@item *untangle-&amp;all</vh></v>
<v t="ekr.20070925144534.31"><vh>@item *untangle-&amp;marked</vh></v>
<v t="ekr.20070925144534.32"><vh>@item *&amp;untangle</vh></v>
</v>
<v t="ekr.20100806210935.8331"><vh>Tangle/Untangle preferences</vh>
<v t="ekr.20041119034357.33"><vh>@bool output_doc_chunks = True</vh></v>
<v t="ekr.20041119034357.34"><vh>@bool tangle_outputs_header = True</vh></v>
<v t="ekr.20041119034357.35"><vh>@bool run_tangle_done.py = False</vh></v>
<v t="ekr.20041119034357.36"><vh>@bool run_untangle_done.py = False</vh></v>
</v>
</v>
<v t="ekr.20041119034357.1"><vh>@settings</vh>
<v t="ekr.20100904134301.11000"><vh>Abbreviations</vh>
<v t="ekr.20100904134301.11006"><vh>@bool enable-abbreviations = False</vh></v>
<v t="ekr.20100904134301.11002"><vh>@data global-abbreviations</vh></v>
<v t="ekr.20100904134301.11004"><vh>@data abbreviations</vh></v>
</v>
<v t="ekr.20041213105007.1"><vh>Colors</vh>
<v t="ekr.20041213105007.3"><vh>Log pane colors</vh>
<v t="ekr.20041119052015"><vh>@color log_error_color = red</vh></v>
<v t="ekr.20041119052015.2"><vh>@color log_text_foreground_color = None</vh></v>
<v t="ekr.20041119053445"><vh>@color log_text_background_color = None</vh></v>
<v t="ekr.20041217184352.2"><vh>@color log_pane_background_color = #f2fdff</vh></v>
<v t="ekr.20051020125928"><vh>@color log_pane_Find_tab_background_color = #d6c7d3</vh></v>
<v t="ekr.20051025070845"><vh>@color log_pane_Spell_tab_background_color = MistyRose1</vh></v>
</v>
<v t="ekr.20041213105007.2"><vh>Body pane colors</vh>
<v t="ekr.20041119034357.41"><vh>@color body_cursor_background_color = None</vh></v>
<v t="ekr.20041119034357.40"><vh>@color body_cursor_foreground_color = None</vh></v>
<v t="ekr.20041119034357.50"><vh>@color body_insertion_cursor_color = None</vh></v>
<v t="ekr.20041119034357.49"><vh>@color body_text_background_color = None</vh></v>
<v t="ekr.20041119034357.48"><vh>@color body_text_foreground_color = None</vh></v>
<v t="ekr.20051006200015"><vh>@color body_text_selection_background_color = Gray80</vh></v>
<v t="ekr.20051006200015.1"><vh>@color body_text_selection_foreground_color = white</vh></v>
<v t="ekr.20060605081712"><vh>@color command_mode_bg_color = #f2fdff</vh></v>
<v t="ekr.20060822101942.1"><vh>@color command_mode_fg_color = None</vh></v>
<v t="ekr.20080514082950.2"><vh>@color insert_mode_bg_color = #fdf5f5</vh></v>
<v t="ekr.20060605081712.3"><vh>@color insert_mode_fg_color = black</vh></v>
<v t="ekr.20060606085536"><vh>@color overwrite_mode_bg_color = azure2</vh></v>
<v t="ekr.20060606085536.1"><vh>@color overwrite_mode_fg_color = black</vh></v>
<v t="ekr.20080511041907.1"><vh>@color unselected_body_bg_color = #ffffef</vh></v>
<v t="ekr.20080511041907.2"><vh>@color unselected_body_fg_color = black</vh></v>
</v>
<v t="ekr.20041119051246.1"><vh>Outline pane colors</vh>
<v t="ekr.20041119051246.2"><vh>@color headline_text_unselected_background_color = #ffffec</vh></v>
<v t="ekr.20041119050749.6"><vh>@color headline_text_unselected_foreground_color = None</vh></v>
<v t="ekr.20041119051246.3"><vh>@color headline_text_selected_background_color = #dbdbdb</vh></v>
<v t="ekr.20041119050749.7"><vh>@color headline_text_selected_foreground_color = None</vh></v>
<v t="ekr.20041119051901"><vh>@color headline_text_editing_background_color = None</vh></v>
<v t="ekr.20041119050749.8"><vh>@color headline_text_editing_foreground_color = None</vh></v>
<v t="ekr.20041119050749.9"><vh>@color headline_text_editing_selection_foreground_color = None</vh></v>
<v t="ekr.20041119051901.1"><vh>@color headline_text_editing_selection_background_color = None</vh></v>
<v t="ekr.20041119050749.12"><vh>@color outline_pane_background_color = #ffffec</vh></v>
</v>
<v t="ekr.20100313080341.8368"><vh>Minibuffer background colors</vh>
<v t="ekr.20100313080341.8369"><vh>@color minibuffer-background-color = lightblue</vh></v>
<v t="ekr.20100313080341.8370"><vh>@color minibuffer-error-color = red</vh></v>
<v t="ekr.20100313080341.8371"><vh>@color minibuffer-warning-color = lightgrey</vh></v>
</v>
<v t="ekr.20041119034357.70"><vh>Syntax colors &amp; options</vh>
<v t="ekr.20060201111002"></v>
<v t="ekr.20060828145228"><vh>Options for old colorizer</vh>
<v t="ekr.20041119034357.73"><vh>@bool color_cweb_comments_with_latex = True</vh></v>
<v t="ekr.20041119034357.72"><vh>@bool color_cweb_doc_parts_with_latex = True</vh></v>
<v t="ekr.20041119034357.74"><vh>@bool color_directives_in_plain_text = True</vh></v>
<v t="ekr.20041119034357.75"><vh>@bool underline_undefined_section_names = True</vh></v>
<v t="ekr.20041119034357.76"><vh>@bool use_hyperlinks = False</vh></v>
<v t="ekr.20041119034357.78"><vh>@color comment_color = firebrick3</vh></v>
<v t="ekr.20041119034357.79"><vh>@color cweb_section_name_color = red</vh></v>
<v t="ekr.20041119034357.80"><vh>@color directive_color = blue</vh></v>
<v t="ekr.20041119034357.81"><vh>@color doc_part_color = firebrick3</vh></v>
<v t="ekr.20080703071815.3"><vh>@color forth_bracket_range_color = orange</vh></v>
<v t="ekr.20041119034357.82"><vh>@color keyword_color = blue</vh></v>
<v t="ekr.20041120152508"><vh>@color latex_background_color = None</vh></v>
<v t="ekr.20041119034357.83"><vh>@color leo_keyword_color = #00aa00</vh></v>
<v t="ekr.20041119034357.85"><vh>@color section_name_brackets_color = blue</vh></v>
<v t="ekr.20041119034357.84"><vh>@color section_name_color = red</vh></v>
<v t="ekr.20041119034357.86"><vh>@color show_invisibles_space_background_color = Gray90</vh></v>
<v t="ekr.20041119034357.87"><vh>@color show_invisibles_tab_foreground_color = Gray80</vh></v>
<v t="ekr.20041119034357.88"><vh>@color string_color = #00aa00</vh></v>
<v t="ekr.20041119034357.89"><vh>@color undefined_section_name_color = red</vh></v>
<v t="ekr.20060829085840"><vh>@font php keyword fonts (old colorizer)</vh></v>
</v>
<v t="ekr.20060504131831"><vh>Options for jEdit colorer</vh>
<v t="ekr.20100102121150.6344"><vh>@bool show-invisibles-by-default = False</vh></v>
<v t="ekr.20060513100933"><vh>@int colorizer_interrupt_count1 = 10</vh></v>
<v t="ekr.20060513100933.1"><vh>@int colorizer_interrupt_count2 = 5000</vh></v>
<v t="ekr.20060828110551"><vh>Default colors, used if no language-specific color are in effect</vh>
<v t="ekr.20100102100353.8705"><vh>@color blank_color = grey</vh></v>
<v t="ekr.20100102100353.8706"><vh>@color tab_color = black</vh></v>
<v t="ekr.20060704090341"><vh>@color label_color = red</vh></v>
<v t="ekr.20060504131831.1"><vh>@color keyword1_color = blue</vh></v>
<v t="ekr.20060827102902"><vh>@color keyword2_color = blue</vh></v>
<v t="ekr.20060827102902.1"><vh>@color keyword3_color = blue</vh></v>
<v t="ekr.20060827102902.2"><vh>@color keyword4_color = blue</vh></v>
<v t="ekr.20060504131831.2"><vh>@color literal1_color = #00aa00</vh></v>
<v t="ekr.20060504134056"><vh>@color literal2_color = #00aa00</vh></v>
<v t="ekr.20060504134056.1"><vh>@color literal3_color = #00aa00</vh></v>
<v t="ekr.20060504134056.2"><vh>@color literal4_color = #00aa00</vh></v>
<v t="ekr.20060826152759"><vh>@color markup_color = blue</vh></v>
<v t="ekr.20060504140351"><vh>@color comment1_color = firebrick3</vh></v>
<v t="ekr.20060504140408"><vh>@color comment2_color = firebrick3</vh></v>
<v t="ekr.20060504140408.1"><vh>@color comment3_color = plum3</vh></v>
<v t="ekr.20060504140408.2"><vh>@color comment4_color = orchid1</vh></v>
<v t="ekr.20060713101831"><vh>@color operator_color = black</vh></v>
</v>
<v t="ekr.20060828110551.1"><vh>Language-specific colors</vh>
<v t="ekr.20060828110551.2"><vh>php</vh>
<v t="ekr.20060828110551.3"><vh>@color php_operator_color = DodgerBlue1</vh></v>
<v t="ekr.20060828145228.1"><vh>@font php keyword fonts (new colorizer)</vh></v>
</v>
<v t="ekr.20080703111151.18"><vh>Forth fonts, colors &amp; settings</vh>
<v t="ekr.20080703111151.21"><vh>@color forth_keyword3_color = black</vh></v>
<v t="ekr.20080703111151.22"><vh>@color forth_keyword4_color = black</vh></v>
<v t="ekr.20080703111151.23"><vh>@color forth_keyword5_color = black</vh></v>
<v t="ekr.20080705064822.2"><vh>@data forth-bold-italic-words</vh></v>
<v t="ekr.20080705064822.3"><vh>@data forth-bold-words</vh></v>
<v t="ekr.20080705064822.1"><vh>@data forth-defwords</vh></v>
<v t="ekr.20080705064822.4"><vh>@data forth-delimiter-pairs</vh></v>
<v t="ekr.20080705064822.6"><vh>@data forth-italic-words</vh></v>
<v t="ekr.20080705064822.7"><vh>@data forth-string-word-pairs</vh></v>
<v t="ekr.20080705064822.5"><vh>@data forth-words</vh></v>
<v t="ekr.20080703111151.17"><vh>@font forth keyword2_font</vh></v>
<v t="ekr.20080703111151.12"><vh>@font forth keyword3_font</vh></v>
<v t="ekr.20080703111151.14"><vh>@font forth keyword4_font</vh></v>
<v t="ekr.20080703111151.15"><vh>@font forth keyword5_font</vh></v>
</v>
</v>
</v>
</v>
<v t="ekr.20041119034357.67"><vh>@color split_bar_color = LightSteelBlue2</vh></v>
</v>
<v t="ekr.20041119034357.10"><vh>Command options</vh>
<v t="ekr.20071006153053"><vh>@bool add_ws_to_kill_ring = False</vh></v>
<v t="ekr.20080324105006.6"><vh>@bool allow_middle_button_paste = False</vh></v>
<v t="ekr.20071110153046"><vh>@bool at_auto_warns_about_leading_whitespace = True</vh></v>
<v t="ekr.20041119034357.14"><vh>@bool at_root_bodies_start_in_doc_mode = True</vh></v>
<v t="ekr.20051027175030"><vh>@bool autocomplete-brackets = False</vh></v>
<v t="ekr.20060930085532"></v>
<v t="ekr.20080315083057.7"><vh>@bool collapse_nodes_while_spelling = True</vh></v>
<v t="ekr.20070615094204"></v>
<v t="ekr.20070803082435"><vh>@bool full_import_checks = True</vh></v>
<v t="ekr.20070531103454"><vh>@bool globalDynamicAbbrevs = True</vh></v>
<v t="ekr.20061012122620"></v>
<v t="ekr.20041119041019"><vh>@bool redirect_execute_script_output_to_log_pane = False</vh></v>
<v t="ekr.20041119041019.2"><vh>@bool save_clears_undo_buffer = False</vh></v>
<v t="ekr.20061029091403"><vh>@bool show_full_tracebacks_in_scripts = False</vh></v>
<v t="ekr.20061007211759"></v>
<v t="ekr.20080811105020.2"><vh>@bool suppress_import_parsing = False</vh></v>
<v t="ekr.20060127050605"></v>
<v t="ekr.20041119050749.11"><vh>@string headline_gmt_time = None</vh></v>
<v t="ekr.20041119050749.10"><vh>@string headline_time_format_string = %m/%d</vh></v>
<v t="ekr.20041119041019.1"><vh>@string remove_sentinels_extension = .txt</vh></v>
<v t="ekr.20050126083026"><vh>@string undo_granularity = None</vh></v>
</v>
<v t="ekr.20070926132045"><vh>Common @button nodes</vh>
<v t="ekr.20070926082407"><vh>@buttons</vh>
<v t="ekr.20090703122042.7463"><vh>@@button a-common-button</vh></v>
<v t="ekr.20090610164636.8489"><vh>@@button add-test @key=alt-9</vh></v>
<v t="ekr.20070926082256.1"><vh>@@button Beautify</vh></v>
<v t="ekr.20071009135515"><vh>@@button rst3</vh></v>
</v>
</v>
<v t="ekr.20080312075451.1"><vh>Common @command nodes</vh>
<v t="ekr.20080312075451.2"><vh>@commands</vh></v>
</v>
<v t="ekr.20041119034357.16"><vh>Compare panel</vh>
<v t="ekr.20041119034357.17"><vh>files &amp; directories</vh>
<v t="ekr.20041119043902"><vh>@string compare_file_1 = None</vh></v>
<v t="ekr.20041119043902.1"><vh>@string compare_file_2 = None</vh></v>
<v t="ekr.20041119043902.2"><vh>@string output_file = None</vh></v>
<v t="ekr.20041119043902.3"><vh>@bool append_output_to_output_file = False</vh></v>
<v t="ekr.20041119034357.18"><vh>@string limit_directory_search_extension = .py</vh></v>
</v>
<v t="ekr.20041119034357.19"><vh>file compare options</vh>
<v t="ekr.20041119043902.4"><vh>@bool ignore_blank_lines = True</vh></v>
<v t="ekr.20041119043902.5"><vh>@bool ignore_first_line_of_file_1 = False</vh></v>
<v t="ekr.20041119043902.6"><vh>@bool ignore_first_line_of_file_2 = False</vh></v>
<v t="ekr.20041119043902.7"><vh>@bool ignore_interior_whitespace = False</vh></v>
<v t="ekr.20041119043902.8"><vh>@bool ignore_leading_whitespace = False</vh></v>
<v t="ekr.20041119043902.9"><vh>@bool ignore_sentinel_lines = False</vh></v>
</v>
<v t="ekr.20041119050105"><vh>output options</vh>
<v t="ekr.20041119043902.10"><vh>@int limit_count = 9</vh></v>
<v t="ekr.20041119043902.11"><vh>@bool make_whitespace_visible = False</vh></v>
<v t="ekr.20041119043902.12"><vh>@bool print_both_lines_for_matches = False</vh></v>
<v t="ekr.20041119043902.13"><vh>@bool print_matching_lines = False</vh></v>
<v t="ekr.20041119043902.14"><vh>@bool print_mismatching_lines = True</vh></v>
<v t="ekr.20041119043902.15"><vh>@bool print_trailing_lines = True</vh></v>
</v>
</v>
<v t="ekr.20060524151415"><vh>Debugger</vh>
<v t="ekr.20070115134125"><vh>@bool write_script_file = True</vh></v>
<v t="ekr.20070115134125.1"><vh>@@string script_file_path = ../test/scriptFile.py</vh></v>
<v t="ekr.20060524151415.1"><vh>@string debugger_kind = winpdb</vh></v>
<v t="ekr.20060521132401"><vh>@string debugger_path = None</vh></v>
</v>
<v t="ekr.20051126062243"><vh>Debugging</vh>
<v t="ekr.20060408090018"><vh>@bool added_setting = True</vh></v>
<v t="ekr.20060201110016"><vh>@bool allow_idle_time_hook = False</vh></v>
<v t="ekr.20060212101234"></v>
<v t="ekr.20060202113731"><vh>@bool show_tree_stats = False</vh></v>
<v t="ekr.20060114073238"><vh>@bool trace_bindings = False</vh></v>
<v t="ekr.20060616172614"><vh>@bool trace_bindings_verbose = False</vh></v>
<v t="ekr.20060425124142"><vh>@bool trace_color_parser = True</vh></v>
<v t="ekr.20060309022759"><vh>@bool trace_colorizer = False</vh></v>
<v t="ekr.20060204093736"><vh>@bool trace_doCommand = False</vh></v>
<v t="ekr.20060204102644"><vh>@bool trace_f.set_focus = False</vh></v>
<v t="ekr.20060207142012"><vh>@bool trace_focus = False</vh></v>
<v t="ekr.20051126062830"><vh>@bool trace_g.app.gui.set_focus = False</vh></v>
<v t="ekr.20060126075152"><vh>@bool trace_gc = False</vh></v>
<v t="ekr.20060212103826"><vh>@bool trace_gc_calls = False</vh></v>
<v t="ekr.20060126083715"><vh>@bool trace_gc_verbose = False</vh></v>
<v t="ekr.20070729101310"><vh>@bool trace_import = False</vh></v>
<v t="ekr.20060215054710"><vh>@bool trace_key_event= False</vh></v>
<v t="ekr.20060131071947"><vh>@bool trace_masterClickHandler = False</vh></v>
<v t="ekr.20051126062525"><vh>@bool trace_masterCommand = False</vh></v>
<v t="ekr.20060209045356"><vh>@bool trace_masterFocusHandler = False</vh></v>
<v t="ekr.20060131071612"><vh>@bool trace_masterKeyHandler = False</vh></v>
<v t="ekr.20060216091239"><vh>@bool trace_minibuffer = False</vh></v>
<v t="ekr.20060121102627"><vh>@bool trace_modes = False</vh></v>
<v t="ekr.20060306031258"><vh>@bool trace_onBodyChanged = False</vh></v>
<v t="ekr.20070417071249"><vh>@bool trace_plugins = False</vh></v>
<v t="ekr.20060210105437"><vh>@bool trace_select = False</vh></v>
<v t="ekr.20060216130607"><vh>@bool trace_status_line = False</vh></v>
<v t="ekr.20060202092911"><vh>@bool trace_tree = False</vh></v>
<v t="ekr.20060206155101"><vh>@bool trace_tree_alloc = False</vh></v>
<v t="ekr.20060206161839"><vh>@bool trace_tree_edit = False</vh></v>
<v t="ekr.20070503080312"><vh>@bool trace_tree_gc = False</vh></v>
<v t="ekr.20051126062243.1"><vh>@bool trace_tree_redraw = False</vh></v>
<v t="ekr.20060425125015"><vh>@bool verbose_trace_color_parser = False</vh></v>
<v t="ekr.20060323131801"><vh>@bool warn_about_missing_settings = False</vh></v>
<v t="ekr.20060521134125"><vh>@string debugger_default_target = None</vh></v>
<v t="ekr.20060521134125.1"><vh>@string debugger_force_target = None</vh></v>
<v t="ekr.20060114082205"><vh>@string trace_bindings_filter = </vh></v>
<v t="ekr.20060114083009"><vh>@string trace_bindings_pane_filter =</vh></v>
<v t="ekr.20060325071916"><vh>For unit tests</vh>
<v t="ekr.20060325071042"><vh>@ifplatform win32</vh>
<v t="ekr.20060325071042.1"><vh>@bool test_win32_setting = True</vh></v>
</v>
<v t="ekr.20060325071042.2"><vh>@ifplatform darwin</vh>
<v t="ekr.20060325071042.3"><vh>@bool test_darwin_setting = True</vh></v>
</v>
</v>
</v>
<v t="ekr.20061003173413"><vh>File options</vh>
<v t="ekr.20041119034357.7"><vh>.leo file options</vh>
<v t="ekr.20041119034357.8"><vh>@string output_initial_comment = None</vh></v>
<v t="ekr.20041119034357.9"><vh>@string stylesheet = ekr_test</vh></v>
<v t="ekr.20061004150211"></v>
<v t="ekr.20080921060401.3"><vh>@string default_leo_file = ~/.leo/workbook.leo</vh></v>
</v>
<v t="ekr.20090514111518.8379"><vh>@bool check_python_code_on_write = True</vh></v>
<v t="ekr.20041119034357.5"><vh>@bool read_only = False</vh></v>
<v t="ekr.20061009190510"></v>
<v t="tbrown.20081003103821.1"><vh>@bool recent_files_group = False</vh></v>
<v t="tbrown.20081003103821.2"><vh>@bool recent_files_group_always = False</vh></v>
<v t="ekr.20100929121021.8511"><vh>@bool fixedwindow = False</vh></v>
<v t="ekr.20101009103953.8642"><vh>@bool put_expansion_bits_in_leo_files = True</vh></v>
<v t="ekr.20080412115752.1"><vh>@data fixedWindowPosition</vh></v>
<v t="ekr.20080212084020"><vh>@string default_at_auto_file_encoding = utf-8</vh></v>
<v t="ekr.20041119042929.9"><vh>@string default_derived_file_encoding = utf-8</vh></v>
<v t="ekr.20041119042929.10"><vh>@string new_leo_file_encoding = utf-8</vh></v>
<v t="ekr.20081216090156.5"><vh>@string underindent-escape-string = \\-</vh></v>
<v t="ekr.20041119034357.12"><vh>derived files options</vh>
<v t="ekr.20041119041747"><vh>@string output_newline = nl</vh></v>
<v t="ekr.20041119041747.1"><vh>@string trailing_body_newlines = one</vh></v>
<v t="ekr.20041119041747.4"><vh>@bool write_strips_blank_lines = True</vh></v>
<v t="ekr.20070419103554"><vh>@bool force_newlines_in_at_nosent_bodies = True</vh></v>
</v>
<v t="ekr.20041119034357.11"><vh>directory options</vh>
<v t="ekr.20041119041304"></v>
<v t="ekr.20041119041304.1"><vh>@string relative_path_base_directory = .</vh></v>
<v t="ekr.20061210091932"><vh>@bool chdir_to_relative_path = False</vh></v>
</v>
<v t="ekr.20060730101451"><vh>Shadow files</vh>
<v t="ekr.20060730101451.3"><vh>@string shadow_prefix = x</vh></v>
<v t="ekr.20060730101451.5"><vh>@string shadow_subdir = .leo_shadow</vh></v>
</v>
</v>
<v t="ekr.20041119034357.20"><vh>Find/Change panel</vh>
<v t="ekr.20060930085532"></v>
<v t="ekr.20060125104049"><vh>@bool show_only_find_tab_options = True</vh></v>
<v t="ekr.20060204124608"><vh>@bool minibufferSearchesShowFindTab = True</vh></v>
<v t="ekr.20041119050105.1"><vh>@string change_text = None</vh></v>
<v t="ekr.20041119050105.2"><vh>@string find_text = None</vh></v>
<v t="ekr.20041119050105.3"></v>
<v t="ekr.20041120152900.2"><vh>@bool script_search = None</vh></v>
<v t="ekr.20041119050105.16"><vh>@bool suboutline_only = False</vh></v>
</v>
<v t="ekr.20041213105007"><vh>Fonts</vh>
<v t="ekr.20041119034357.45"><vh>@font body text font</vh></v>
<v t="ekr.20070919125633"><vh>@font button font</vh></v>
<v t="ekr.20041213105508"><vh>@font log font</vh></v>
<v t="ekr.20060702100257"><vh>@font menu text font</vh></v>
<v t="ekr.20041119051246.4"><vh>@font outline font</vh></v>
</v>
<v t="ekr.20071214132254"><vh>Import options</vh>
<v t="ekr.20101104191857.8345"><vh>@bool at_auto_separate_non_def_nodes = False</vh></v>
<v t="ekr.20071214132254.1"><vh>@data import_xml_tags</vh></v>
</v>
<v t="ekr.20100907092300.6957"><vh>Inkscape options</vh>
<v t="ekr.20100907092300.6958"><vh>@string inkscape-template = ../docs/inkscape-template.svg</vh></v>
<v t="ekr.20100907092300.6959"><vh>@string inkscape-bin = "c:\Program Files (x86)\Inkscape\inkscape.exe"</vh></v>
</v>
<v t="ekr.20060122105527.3"><vh>Keyboard and minibuffer options</vh>
<v t="ekr.20060215094146"><vh>@@bool ignore_caps_lock = True</vh></v>
<v t="ekr.20060216170801"><vh>@bool enable_calltips_initially = False</vh></v>
<v t="ekr.20060215102141"></v>
<v t="ekr.20060122105527.8"><vh>@bool showHelpWhenEnteringModes = False</vh></v>
<v t="ekr.20060926160657"></v>
<v t="ekr.20060122105527.7"></v>
<v t="ekr.20060215104345"></v>
<v t="ekr.20060627065953"><vh>@bool trace_bind_key_exceptions = True</vh></v>
<v t="ekr.20060122105527.5"><vh>@bool useCmdMenu = True</vh></v>
<v t="ekr.20060122105527.6"><vh>@bool useMinibuffer = True</vh></v>
<v t="ekr.20060926161207.1"><vh>@bool warn_about_redefined_shortcuts = True</vh></v>
<v t="ekr.20061002115414.1"><vh>@float outline_nav_extend_delay = 2.0</vh></v>
<v t="ekr.20060804095015.1"><vh>@string close_flash_brackets = )]}</vh></v>
<v t="ekr.20060804095015"><vh>@string open_flash_brackets = ([{</vh></v>
<v t="ekr.20060926161207.2"><vh>@strings  [command,insert, overwrite] top_level_unbound_key_action = insert</vh></v>
</v>
<v t="ekr.20051007200824"><vh>Keyboard shortcuts</vh>
<v t="ekr.20051101160257"><vh>About keyboard shortcuts</vh>
<v t="ekr.20051007200824.1"><vh>About shortcut specifiers</vh></v>
<v t="ekr.20060116090646"><vh>Reference for function keys</vh></v>
</v>
<v t="ekr.20060117092249"><vh>About modes</vh></v>
<v t="ekr.20060303075452"><vh>Commands for mouseless Leo</vh></v>
<v t="ekr.20060104093101"><vh>@ignore Unused key bindings</vh>
<v t="ekr.20060122105527.4"><vh>@strings  [ignore,insert, overwrite] top_level_unbound_key_action = insert</vh></v>
<v t="ekr.20060110141538"><vh>@keys Default Emacs shortcuts</vh>
<v t="ekr.20051007193321"><vh>@shortcuts Emacs: A-E</vh></v>
<v t="ekr.20060112090844"><vh>@shortcuts Emacs: F-M</vh></v>
<v t="ekr.20060112090844.1"><vh>@shortcuts Emads: N-Z</vh></v>
<v t="ekr.20060112112006"><vh>@shortcuts Emacs: missing</vh></v>
</v>
<v t="ekr.20060110141538.1"><vh>@keys No bindings</vh>
<v t="ekr.20051218202206"><vh>@shortcuts No bindings: A-E</vh></v>
<v t="ekr.20060112093227.1"><vh>@shortcuts No bindings: F-M</vh></v>
<v t="ekr.20060112093227.2"><vh>@shortcuts No bindings: N-Z</vh></v>
</v>
</v>
<v t="ekr.20060603215208"><vh>@keys EKR bindings</vh>
<v t="ekr.20080513095644.1"><vh>@mode quick-command (q in vim bindings)</vh></v>
<v t="ekr.20080510121331.16"><vh>@@shortcuts  Vim plain keys</vh></v>
<v t="ekr.20080512082834.1"><vh>@shortcuts Arrow keys and the &lt;return&gt; key</vh></v>
<v t="ekr.20080510072134.2"><vh>@shortcuts Changes</vh></v>
<v t="ekr.20060925060533.1"><vh>@shortcuts Cursor Moves</vh></v>
<v t="ekr.20060925061845"><vh>@shortcuts File commands</vh></v>
<v t="ekr.20060603215208.19"><vh>@shortcuts Find commands</vh></v>
<v t="ekr.20060925060533.2"><vh>@shortcuts Gui operations</vh></v>
<v t="ekr.20080204124255"><vh>@shortcuts IPython commands</vh></v>
<v t="ekr.20070613133747"><vh>@shortcuts Menu commands</vh></v>
<v t="ekr.20060603215208.20"><vh>@shortcuts Minibuffer commands</vh></v>
<v t="ekr.20060925061845.1"><vh>@shortcuts Other commands</vh></v>
<v t="ekr.20060925060533.3"><vh>@shortcuts Outline operations</vh></v>
<v t="ekr.20060925060533.4"><vh>@shortcuts Text operations</vh></v>
<v t="ekr.20090408091222.1"><vh>@shortcuts duplicate bindings for Qt</vh></v>
<v t="ville.20090701225947.3902"><vh>@shortcuts Default plugins</vh></v>
</v>
</v>
<v t="ekr.20070925144552"><vh>Menus</vh>
<v t="ekr.20071010123015"><vh>@@menu 文件</vh>
<v t="ekr.20071010123015.1"><vh>@item new</vh></v>
<v t="ekr.20071010123223.1"><vh>@item open-outline</vh></v>
</v>
<v t="ekr.20070925144534"><vh>@menus</vh>
<v t="ekr.20070925144534.1"><vh>@menu &amp;File</vh>
<v t="ekr.20070925144534.2"><vh>@item *&amp;new</vh></v>
<v t="ekr.20070925144534.3"><vh>@item open-outline</vh></v>
<v t="ekr.20070925144534.4"><vh>@menu Open &amp;With...</vh></v>
<v t="ekr.20070927173324"><vh>@menu Recent &amp;Files</vh></v>
<v t="ekr.20070925144534.5"><vh>@item -</vh></v>
<v t="ekr.20070925144534.6"><vh>@item close-window</vh></v>
<v t="ekr.20070925144534.7"><vh>@item save-file</vh></v>
<v t="ekr.20070925144534.8"><vh>@item save-file-as</vh></v>
<v t="ekr.20070925144534.9"><vh>@item save-file-as-unzipped</vh></v>
<v t="ekr.20070925144534.10"><vh>@item save-file-as-zipped</vh></v>
<v t="ekr.20070925144534.11"><vh>@item save-file-to</vh></v>
<v t="ekr.20070925144534.12"><vh>@item revert</vh></v>
<v t="ekr.20070927051742"><vh>@item -</vh></v>
<v t="ekr.20070925144534.13"><vh>@menu &amp;Read/Write...</vh>
<v t="ekr.20071001120755"><vh>@item *check-derived-file</vh></v>
<v t="ekr.20071001120755.1"><vh>@item *check-leo-file</vh></v>
<v t="ekr.20071001121059"><vh>@item *compare-leo-files</vh></v>
<v t="ekr.20071001120755.2"><vh>@item -</vh></v>
<v t="ekr.20070925144534.14"><vh>@item *read-outline-only</vh></v>
<v t="ekr.20071001120755.3"><vh>@item *read-file-into-node</vh></v>
<v t="ekr.20070925144534.17"><vh>@item read-at-auto-nodes</vh></v>
<v t="ekr.20070925144534.21"><vh>@item read-at-file-nodes</vh></v>
<v t="ekr.20080801104153.2"><vh>@item read-at-shadow-nodes</vh></v>
<v t="ekr.20071001123216"><vh>@item -</vh></v>
<v t="ekr.20070925144534.15"><vh>@item *write-outline-only</vh></v>
<v t="ekr.20071001120755.4"><vh>@item *write-file-from-node</vh></v>
<v t="ekr.20070925144534.18"><vh>@item write-at-auto-nodes</vh></v>
<v t="ekr.20070925144534.24"><vh>@item write-at-file-nodes</vh></v>
<v t="ekr.20080801104153.3"><vh>@item write-at-shadow-nodes</vh></v>
<v t="ekr.20070925144534.16"><vh>@item -</vh></v>
<v t="ekr.20070925144534.19"><vh>@item write-dirty-at-auto-nodes</vh></v>
<v t="ekr.20070925144534.22"><vh>@item write-dirty-at-file-nodes</vh></v>
<v t="ekr.20080801104153.4"><vh>@item write-dirty-at-shadow-nodes</vh></v>
<v t="ekr.20070925144534.23"><vh>@item write-missing-at-file-nodes</vh></v>
</v>
<v t="ekr.20070925144534.33"><vh>@menu &amp;Import...</vh>
<v t="ekr.20070925144534.34"><vh>@item *import-&amp;derived-file</vh></v>
<v t="ekr.20070925144534.35"><vh>@item import-at-file</vh></v>
<v t="ekr.20070925144534.36"><vh>@item import-at-root</vh></v>
<v t="ekr.20070925144534.37"><vh>@item *import-&amp;cweb-files</vh></v>
<v t="ekr.20070925144534.38"><vh>@item *import-&amp;noweb-files</vh></v>
<v t="ekr.20070925144534.39"><vh>@item *import-flattened-&amp;outline</vh></v>
</v>
<v t="ekr.20070925144534.40"><vh>@menu &amp;Export...</vh>
<v t="ekr.20070925144534.41"><vh>@item *export-&amp;headlines</vh></v>
<v t="ekr.20070925144534.42"><vh>@item *outline-to-&amp;cweb</vh></v>
<v t="ekr.20070925144534.43"><vh>@item *outline-to-&amp;noweb</vh></v>
<v t="ekr.20070925144534.44"><vh>@item *&amp;flatten-outline</vh></v>
<v t="ekr.20070925144534.45"><vh>@item *&amp;remove-sentinels</vh></v>
<v t="ekr.20070925144534.46"><vh>@item *&amp;weave</vh></v>
</v>
<v t="ekr.20070927051856"><vh>@item -</vh></v>
<v t="ekr.20070925144534.47"><vh>@item exit-leo</vh></v>
</v>
<v t="ekr.20070925144534.48"><vh>@menu &amp;Edit</vh>
<v t="ekr.20070925144534.49"><vh>@item undo</vh></v>
<v t="ekr.20070925144534.50"><vh>@item redo</vh></v>
<v t="ekr.20070925144534.51"><vh>@item -</vh></v>
<v t="ekr.20070925144534.52"><vh>@item cut-text</vh></v>
<v t="ekr.20070925144534.53"><vh>@item copy-text</vh></v>
<v t="ekr.20070925144534.54"><vh>@item paste-text</vh></v>
<v t="ekr.20070925144534.55"><vh>@item backward-delete-char</vh></v>
<v t="ekr.20070925144534.56"><vh>@item select-all</vh></v>
<v t="ekr.20070925144534.57"><vh>@item -</vh></v>
<v t="ekr.20070925144534.58"><vh>@menu Edit &amp;Body...</vh>
<v t="ekr.20070925144534.59"><vh>@item *extract-&amp;section</vh></v>
<v t="ekr.20070925144534.60"><vh>@item *extract-&amp;names</vh></v>
<v t="ekr.20101114064731.8352"><vh>@item *extract-p&amp;ython-method</vh></v>
<v t="ekr.20070925144534.61"><vh>@item *&amp;extract</vh></v>
<v t="ekr.20070925144534.62"><vh>@item -</vh></v>
<v t="ekr.20070925144534.63"><vh>@item *convert-all-b&amp;lanks</vh></v>
<v t="ekr.20070925144534.64"><vh>@item *convert-all-t&amp;abs</vh></v>
<v t="ekr.20070925144534.65"><vh>@item *convert-&amp;blanks</vh></v>
<v t="ekr.20070925144534.66"><vh>@item *convert-&amp;tabs</vh></v>
<v t="ekr.20070925144534.67"><vh>@item *insert-body-&amp;time</vh></v>
<v t="ekr.20070925144534.68"><vh>@item *&amp;reformat-paragraph</vh></v>
<v t="ekr.20070925144534.69"><vh>@item -</vh></v>
<v t="ekr.20070925144534.70"><vh>@item *&amp;indent-region</vh></v>
<v t="ekr.20070925144534.71"><vh>@item *&amp;unindent-region</vh></v>
<v t="ekr.20070925144534.72"><vh>@item *&amp;match-brackets</vh></v>
<v t="ekr.20070925144534.73"><vh>@item *&amp;add-comments</vh></v>
<v t="ekr.20070925144534.74"><vh>@item *&amp;delete-comments</vh></v>
</v>
<v t="ekr.20070925144534.75"><vh>@menu Edit &amp;Headline...</vh>
<v t="ekr.20070925144534.76"><vh>@item *edit-&amp;headline</vh></v>
<v t="ekr.20070925144534.77"><vh>@item *&amp;end-edit-headline</vh></v>
<v t="ekr.20070925144534.78"><vh>@item *&amp;abort-edit-headline</vh></v>
<v t="ekr.20070925144534.79"><vh>@item *insert-headline-&amp;time</vh></v>
<v t="ekr.20070925144534.80"><vh>@item *toggle-&amp;angle-brackets</vh></v>
</v>
<v t="ekr.20070925144534.81"><vh>@menu &amp;Find...</vh>
<v t="ekr.20070925144534.82"><vh>@item *&amp;open-find-tab</vh></v>
<v t="ekr.20070925144534.83"><vh>@item *&amp;hide-find-tab</vh></v>
<v t="ekr.20070925144534.84"><vh>@item *search-&amp;with-present-options</vh></v>
<v t="ekr.20070925144534.85"><vh>@item -</vh></v>
<v t="ekr.20070925144534.86"><vh>@item *find-&amp;next</vh></v>
<v t="ekr.20070925144534.87"><vh>@item *find-&amp;prev</vh></v>
<v t="ekr.20070925144534.88"><vh>@item *&amp;change</vh></v>
<v t="ekr.20070925144534.89"><vh>@item *find-&amp;all</vh></v>
<v t="ekr.20070925144534.90"><vh>@item *clone-fi&amp;nd-all</vh></v>
<v t="ekr.20070925144534.91"><vh>@item *change-a&amp;ll</vh></v>
<v t="ekr.20070925144534.92"><vh>@item -</vh></v>
<v t="ekr.20070925144534.93"><vh>@item *&amp;find-character</vh></v>
<v t="ekr.20070925144534.94"><vh>@item *find-character-extend-&amp;selection</vh></v>
<v t="ekr.20070925144534.95"><vh>@item *&amp;backward-find-character</vh></v>
<v t="ekr.20070925144534.96"><vh>@item *backward-find-character-&amp;extend-selection</vh></v>
<v t="ekr.20070925144534.97"><vh>@item -</vh></v>
<v t="ekr.20070925144534.98"><vh>@item *&amp;isearch-forward</vh></v>
<v t="ekr.20070925144534.99"><vh>@item *isea&amp;rch-backward</vh></v>
<v t="ekr.20070925144534.100"><vh>@item *isearch-forward-rege&amp;xp</vh></v>
<v t="ekr.20070925144534.101"><vh>@item *isearch-backward-regex&amp;p</vh></v>
<v t="ekr.20070925144534.102"><vh>@item -</vh></v>
<v t="ekr.20070925144534.103"><vh>@@item *&amp;query-replace</vh></v>
<v t="ekr.20070925144534.104"><vh>@@item *q&amp;uery-replace-regex</vh></v>
</v>
<v t="ekr.20070925144534.105"><vh>@item *&amp;goto-global-line</vh></v>
<v t="ekr.20070925144534.106"><vh>@item *&amp;execute-script</vh></v>
<v t="ekr.20070925144534.107"><vh>@item toggle-invisibles</vh></v>
<v t="ekr.20070925144534.108"><vh>@item open-leoSettings-leo</vh></v>
</v>
<v t="ekr.20070925144534.109"><vh>@menu &amp;Outline</vh>
<v t="ekr.20070925144534.110"><vh>@item *c&amp;ut-node</vh></v>
<v t="ekr.20070925144534.111"><vh>@item *c&amp;opy-node</vh></v>
<v t="ekr.20070925144534.112"><vh>@item *&amp;paste-node</vh></v>
<v t="ekr.20070925144534.113"><vh>@item paste-retaining-clones</vh></v>
<v t="ekr.20070925144534.114"><vh>@item *&amp;delete-node</vh></v>
<v t="ekr.20070925144534.115"><vh>@item -</vh></v>
<v t="ekr.20070925144534.116"><vh>@item *&amp;insert-node</vh></v>
<v t="ekr.20071005173455"><vh>@item *insert-child</vh></v>
<v t="ekr.20070925144534.117"><vh>@item *&amp;clone-node</vh></v>
<v t="ekr.20070925144534.118"><vh>@item *sort-childre&amp;n</vh></v>
<v t="ekr.20070925144534.119"><vh>@item *&amp;sort-siblings</vh></v>
<v t="ekr.20070925144534.120"><vh>@item -</vh></v>
<v t="ekr.20070925144534.121"><vh>@item *&amp;hoist</vh></v>
<v t="ekr.20070925144534.122"><vh>@item de-hoist</vh></v>
<v t="ekr.20070925144534.123"><vh>@item -</vh></v>
<v t="ekr.20070925144534.124"><vh>@menu Chec&amp;k...</vh>
<v t="ekr.20070925144534.125"><vh>@item *check-&amp;outline</vh></v>
<v t="ekr.20070925144534.126"><vh>@item *&amp;dump-outline</vh></v>
<v t="ekr.20070925144534.127"><vh>@@item -</vh></v>
<v t="ekr.20070925144534.128"><vh>@@item *check-&amp;all-python-code</vh></v>
<v t="ekr.20070925144534.129"><vh>@@item *&amp;check-python-code</vh></v>
</v>
<v t="ekr.20070925144534.130"><vh>@menu E&amp;xpand/Contract...</vh>
<v t="ekr.20080819075811.5"><vh>Accel: a,c,d,e,n,o,p,l,r,t,x</vh></v>
<v t="ekr.20070925144534.131"><vh>@item *&amp;contract-all</vh></v>
<v t="ekr.20080819075811.6"><vh>@item *contract-all-o&amp;ther-nodes</vh></v>
<v t="ekr.20070925144534.132"><vh>@item *contract-&amp;node</vh></v>
<v t="ekr.20070925144534.133"><vh>@item *contract-&amp;parent</vh></v>
<v t="ekr.20070925144534.134"><vh>@item *contract-or-go-&amp;left</vh></v>
<v t="ekr.20070925144534.135"><vh>@item -</vh></v>
<v t="ekr.20070925144534.136"><vh>@item *expand-p&amp;rev-level</vh></v>
<v t="ekr.20070925144534.137"><vh>@item *expand-n&amp;ext-level</vh></v>
<v t="ekr.20070925144534.138"><vh>@item *e&amp;xpand-and-go-right</vh></v>
<v t="ekr.20070925144534.139"><vh>@item *expan&amp;d-or-go-right</vh></v>
<v t="ekr.20070925144534.140"><vh>@item -</vh></v>
<v t="ekr.20070925144534.141"><vh>@item *expand-to-level-&amp;1</vh></v>
<v t="ekr.20070925144534.142"><vh>@item *expand-to-level-&amp;2</vh></v>
<v t="ekr.20070925144534.143"><vh>@item *expand-to-level-&amp;3</vh></v>
<v t="ekr.20070925144534.144"><vh>@item *expand-to-level-&amp;4</vh></v>
<v t="ekr.20070925144534.145"><vh>@item *expand-to-level-&amp;5</vh></v>
<v t="ekr.20070925144534.146"><vh>@item *expand-to-level-&amp;6</vh></v>
<v t="ekr.20070925144534.147"><vh>@item *expand-to-level-&amp;7</vh></v>
<v t="ekr.20070925144534.148"><vh>@item *expand-to-level-&amp;8</vh></v>
<v t="ekr.20070925144534.149"><vh>@item -</vh></v>
<v t="ekr.20070925144534.150"><vh>@item *expand-&amp;all</vh></v>
<v t="ekr.20070925144534.151"><vh>@item *expand-n&amp;ode</vh></v>
</v>
<v t="ekr.20070925144534.152"><vh>@menu &amp;Move...</vh>
<v t="ekr.20070925144534.153"><vh>@item move-outline-down</vh></v>
<v t="ekr.20070925144534.154"><vh>@item move-outline-left</vh></v>
<v t="ekr.20070925144534.155"><vh>@item move-outline-right</vh></v>
<v t="ekr.20070925144534.156"><vh>@item move-outline-up</vh></v>
<v t="ekr.20070925144534.157"><vh>@item -</vh></v>
<v t="ekr.20070925144534.158"><vh>@item *&amp;promote</vh></v>
<v t="ekr.20070925144534.159"><vh>@item *&amp;demote</vh></v>
</v>
<v t="ekr.20070925144534.160"><vh>@menu M&amp;ark...</vh>
<v t="ekr.20090905151712.8546"><vh>@item *clone-marked</vh></v>
<v t="ekr.20070925144534.161"><vh>@item *&amp;mark</vh></v>
<v t="ekr.20070925144534.162"><vh>@item *mark-&amp;subheads</vh></v>
<v t="ekr.20070925144534.163"><vh>@item *mark-changed-&amp;items</vh></v>
<v t="ekr.20070925144534.166"><vh>@item *&amp;unmark-all</vh></v>
</v>
<v t="ekr.20070925144534.167"><vh>@menu &amp;Go To...</vh>
<v t="ekr.20071213190345"><vh>@item find-next-clone</vh></v>
<v t="ekr.20070925144534.168"><vh>@item goto-first-node</vh></v>
<v t="ekr.20070925144534.169"><vh>@item goto-first-visible-node</vh></v>
<v t="ekr.20070925144534.170"><vh>@item goto-first-sibling</vh></v>
<v t="ekr.20070925144534.171"><vh>@item -</vh></v>
<v t="ekr.20070925144534.172"><vh>@item goto-next-changed</vh></v>
<v t="ekr.20070925144534.173"><vh>@item goto-next-clone</vh></v>
<v t="ekr.20070925144534.174"><vh>@item goto-next-marked</vh></v>
<v t="ekr.20070925144534.175"><vh>@item goto-next-node</vh></v>
<v t="ekr.20070925144534.176"><vh>@item goto-next-sibling</vh></v>
<v t="ekr.20070925144534.177"><vh>@item goto-next-visible</vh></v>
<v t="ekr.20070925144534.178"><vh>@item go-forward</vh></v>
<v t="ekr.20070925144534.179"><vh>@item -</vh></v>
<v t="ekr.20070925144534.180"><vh>@item goto-parent</vh></v>
<v t="ekr.20070925144534.181"><vh>@item -</vh></v>
<v t="ekr.20070925144534.182"><vh>@item goto-prev-node</vh></v>
<v t="ekr.20070925144534.183"><vh>@item goto-prev-sibling</vh></v>
<v t="ekr.20070925144534.184"><vh>@item goto-prev-visible</vh></v>
<v t="ekr.20070925144534.185"><vh>@item go-back</vh></v>
<v t="ekr.20070925144534.186"><vh>@item -</vh></v>
<v t="ekr.20070925144534.187"><vh>@item goto-last-node</vh></v>
<v t="ekr.20070925144534.188"><vh>@item goto-last-sibling</vh></v>
<v t="ekr.20070925144534.189"><vh>@item goto-last-visible-node</vh></v>
</v>
</v>
<v t="ekr.20070925144534.190"><vh>@menu &amp;Plugins</vh>
<v t="ekr.20090203134354.2"><vh>@item xyzzy</vh></v>
</v>
<v t="ekr.20070925144534.191"><vh>@menu &amp;Cmds</vh>
<v t="ekr.20070925144534.192"><vh>@menu &amp;Abbrev...</vh>
<v t="ekr.20070925144534.193"><vh>@item abbre&amp;v-mode</vh></v>
<v t="ekr.20070925144534.194"><vh>@item -</vh></v>
<v t="ekr.20070925144534.195"><vh>@item &amp;list-abbrevs</vh></v>
<v t="ekr.20070925144534.196"><vh>@item &amp;read-abbrev-file</vh></v>
<v t="ekr.20070925144534.197"><vh>@item &amp;write-abbrev-file</vh></v>
<v t="ekr.20070925144534.198"><vh>@item -</vh></v>
<v t="ekr.20070925144534.199"><vh>@item &amp;add-global-abbrev</vh></v>
<v t="ekr.20070925144534.200"><vh>@item &amp;inverse-add-global-abbrev</vh></v>
<v t="ekr.20070925144534.201"><vh>@item &amp;kill-all-abbrevs</vh></v>
<v t="ekr.20070925144534.202"><vh>@@item -</vh></v>
<v t="ekr.20070925144534.203"><vh>@@item &amp;expand-region-abbrevs</vh></v>
</v>
<v t="ekr.20070925144534.204"><vh>@menu &amp;Body Editors...</vh>
<v t="ekr.20070925144534.205"><vh>@item &amp;add-editor</vh></v>
<v t="ekr.20070925144534.206"><vh>@item &amp;cycle-editor-focus</vh></v>
<v t="ekr.20070925144534.207"><vh>@item &amp;delete-editor</vh></v>
</v>
<v t="ekr.20070925144534.208"><vh>@menu Buffers...</vh>
<v t="ekr.20070925144534.209"><vh>@item &amp;append-to-buffer</vh></v>
<v t="ekr.20070925144534.210"><vh>@item &amp;kill-buffer</vh></v>
<v t="ekr.20070925144534.211"><vh>@item list-&amp;buffers</vh></v>
<v t="ekr.20070925144534.212"><vh>@item &amp;list-buffers-alphabetically</vh></v>
<v t="ekr.20070925144534.213"><vh>@item &amp;prepend-to-buffer</vh></v>
<v t="ekr.20070925144534.214"><vh>@item &amp;rename-buffer</vh></v>
<v t="ekr.20070925144534.215"><vh>@item &amp;switch-to-buffer</vh></v>
</v>
<v t="ekr.20070925144534.216"><vh>@menu &amp;Chapters...</vh>
<v t="ekr.20070925144534.217"><vh>@item chapter-&amp;clone-node-to</vh></v>
<v t="ekr.20070925144534.218"><vh>@item chapter-c&amp;opy-node-to</vh></v>
<v t="ekr.20070925144534.219"><vh>@item chapter-c&amp;reate</vh></v>
<v t="ekr.20070925144534.220"><vh>@item chapter-&amp;move-node-to</vh></v>
<v t="ekr.20070925144534.221"><vh>@item chapter-&amp;remove</vh></v>
<v t="ekr.20070925144534.222"><vh>@item chapter-&amp;select</vh></v>
</v>
<v t="ekr.20070925144534.223"><vh>@menu Cursor/Selection...</vh>
<v t="ekr.20070925144534.224"><vh>@menu Cursor &amp;Back...</vh>
<v t="ekr.20070925144534.225"><vh>@item back-&amp;char</vh></v>
<v t="ekr.20070925144534.226"><vh>@item back-&amp;paragraph</vh></v>
<v t="ekr.20070925144534.227"><vh>@item back-&amp;sentence</vh></v>
<v t="ekr.20070925144534.228"><vh>@item back-&amp;word</vh></v>
<v t="ekr.20070925144534.229"><vh>@item -</vh></v>
<v t="ekr.20070925144534.230"><vh>@item beginning-of-&amp;buffer</vh></v>
<v t="ekr.20070925144534.231"><vh>@item beginning-of-&amp;line</vh></v>
<v t="ekr.20070925144534.232"><vh>@item -</vh></v>
<v t="ekr.20070925144534.233"><vh>@item pre&amp;vious-line</vh></v>
</v>
<v t="ekr.20070925144534.234"><vh>@menu Cursor Back &amp;Extend Selection...</vh>
<v t="ekr.20070925144534.235"><vh>@item back-&amp;char-extend-selection</vh></v>
<v t="ekr.20070925144534.236"><vh>@item back-&amp;paragraph-extend-selection</vh></v>
<v t="ekr.20070925144534.237"><vh>@item back-&amp;sentence-extend-selection</vh></v>
<v t="ekr.20070925144534.238"><vh>@item back-&amp;word-extend-selection</vh></v>
<v t="ekr.20070925144534.239"><vh>@item -</vh></v>
<v t="ekr.20070925144534.240"><vh>@item beginning-of-&amp;buffer-extend-selection</vh></v>
<v t="ekr.20070925144534.241"><vh>@item beginning-of-&amp;line-extend-selection</vh></v>
<v t="ekr.20070925144534.242"><vh>@item -</vh></v>
<v t="ekr.20070925144534.243"><vh>@item pre&amp;vious-line-extend-selection</vh></v>
</v>
<v t="ekr.20070925144534.244"><vh>@menu Cursor Back Extend &amp;to...</vh>
<v t="ekr.20070925144534.245"><vh>@item extend-to-&amp;line</vh></v>
<v t="ekr.20070925144534.246"><vh>@item extend-to-&amp;paragraph</vh></v>
<v t="ekr.20070925144534.247"><vh>@item extend-to-&amp;sentence</vh></v>
<v t="ekr.20070925144534.248"><vh>@item extend-to-&amp;word</vh></v>
</v>
<v t="ekr.20070925144534.249"><vh>@menu Cursor &amp;Forward...</vh>
<v t="ekr.20070925144534.250"><vh>@item end-of-&amp;buffer</vh></v>
<v t="ekr.20070925144534.251"><vh>@item end-of-&amp;line</vh></v>
<v t="ekr.20070925144534.252"><vh>@item -</vh></v>
<v t="ekr.20070925144534.253"><vh>@item forward-&amp;char</vh></v>
<v t="ekr.20070925144534.254"><vh>@item forward-&amp;paragraph</vh></v>
<v t="ekr.20070925144534.255"><vh>@item forward-&amp;sentence</vh></v>
<v t="ekr.20070925144534.256"><vh>@item forward-&amp;end-word</vh></v>
<v t="ekr.20070925144534.257"><vh>@item forward-&amp;word</vh></v>
<v t="ekr.20070925144534.258"><vh>@item -</vh></v>
<v t="ekr.20070925144534.259"><vh>@item &amp;next-line</vh></v>
</v>
<v t="ekr.20070925144534.260"><vh>@menu Cursor Forward E&amp;xtend Selection...</vh>
<v t="ekr.20070925144534.261"><vh>@item end-of-&amp;buffer-extend-selection</vh></v>
<v t="ekr.20070925144534.262"><vh>@item end-of-&amp;line-extend-selection</vh></v>
<v t="ekr.20070925144534.263"><vh>@item -</vh></v>
<v t="ekr.20070925144534.264"><vh>@item forward-&amp;char-extend-selection</vh></v>
<v t="ekr.20070925144534.265"><vh>@item forward-&amp;paragraph-extend-selection</vh></v>
<v t="ekr.20070925144534.266"><vh>@item forward-&amp;sentence-extend-selection</vh></v>
<v t="ekr.20070925144534.267"><vh>@item forward-&amp;end-word-extend-selection</vh></v>
<v t="ekr.20070925144534.268"><vh>@item forward-&amp;word-extend-selection</vh></v>
<v t="ekr.20070925144534.269"><vh>@item -</vh></v>
<v t="ekr.20070925144534.270"><vh>@item &amp;next-line-extend-selection</vh></v>
</v>
</v>
<v t="ekr.20070925144534.271"><vh>@menu &amp;Focus...</vh>
<v t="ekr.20070925144534.272"><vh>@item &amp;cycle-all-focus</vh></v>
<v t="ekr.20070925144534.273"><vh>@item focus-to-&amp;body</vh></v>
<v t="ekr.20070925144534.274"><vh>@item focus-to-&amp;log</vh></v>
<v t="ekr.20070925144534.275"><vh>@item focus-to-&amp;minibuffer</vh></v>
<v t="ekr.20070925144534.276"><vh>@item focus-to-&amp;tree</vh></v>
</v>
<v t="ekr.20071114081712"><vh>@menu &amp;Icons...</vh>
<v t="ekr.20071114084709"><vh>@item delete-&amp;first-icon</vh></v>
<v t="ekr.20071114084709.1"><vh>@item delete-&amp;last-icon</vh></v>
<v t="ekr.20071114081712.3"><vh>@item delete-&amp;node-icons</vh></v>
<v t="ekr.20071114081712.4"><vh>@item -</vh></v>
<v t="ekr.20071114081712.5"><vh>@item &amp;insert-icon</vh></v>
</v>
<v t="ekr.20070925144534.277"><vh>@menu &amp;Macro...</vh>
<v t="ekr.20070925144534.279"><vh>@item &amp;call-kbd-macro</vh></v>
<v t="ekr.20070925144534.278"><vh>@item call-&amp;last-kbd-macro</vh></v>
<v t="ekr.20070925144534.280"><vh>@item l&amp;oad-kbd-macros</vh></v>
<v t="ekr.20070925144534.282"><vh>@item &amp;name-last-kbd-macro</vh></v>
<v t="ekr.20070925144534.281"><vh>@item &amp;print-macros</vh></v>
<v t="ekr.20070925144534.283"><vh>@item &amp;save-kbd-macros</vh></v>
<v t="ekr.20070925144534.284"><vh>@item s&amp;tart-kbd-macro</vh></v>
</v>
<v t="ekr.20070925144534.286"><vh>@menu Minibuffer...</vh>
<v t="ekr.20070925144534.287"><vh>@item &amp;full-command</vh></v>
<v t="ekr.20070925144534.288"><vh>@item keyboard-&amp;quit</vh></v>
<v t="ekr.20070925144534.289"><vh>@item &amp;repeat-complex-command</vh></v>
<v t="ekr.20070925144534.290"><vh>@item &amp;view-lossage</vh></v>
<v t="ekr.20070925144534.291"><vh>@item -</vh></v>
<v t="ekr.20070925144534.292"><vh>@item &amp;show-mini-buffer</vh></v>
<v t="ekr.20070925144534.293"><vh>@item h&amp;ide-mini-buffer</vh></v>
<v t="ekr.20070925144534.294"><vh>@item -</vh></v>
<v t="ekr.20070925144534.295"><vh>@item &amp;help-for-minibuffer</vh></v>
</v>
<v t="ekr.20070925144534.296"><vh>@menu &amp;Pickers...</vh>
<v t="ekr.20070925144534.297"><vh>@item show-&amp;colors</vh></v>
<v t="ekr.20070925144534.298"><vh>@item show-find-&amp;options</vh></v>
<v t="ekr.20070925144534.299"><vh>@item show-&amp;fonts</vh></v>
</v>
<v t="ekr.20070925144534.300"><vh>@menu &amp;Rectangles...</vh>
<v t="ekr.20070925144534.301"><vh>@item &amp;clear-rectangle</vh></v>
<v t="ekr.20070925144534.302"><vh>@item c&amp;lose-rectangle</vh></v>
<v t="ekr.20070925144534.303"><vh>@item &amp;delete-rectangle</vh></v>
<v t="ekr.20070925144534.304"><vh>@item &amp;kill-rectangle</vh></v>
<v t="ekr.20070925144534.305"><vh>@item &amp;open-rectangle</vh></v>
<v t="ekr.20070925144534.306"><vh>@item &amp;string-rectangle</vh></v>
<v t="ekr.20070925144534.307"><vh>@item &amp;yank-rectangle</vh></v>
</v>
<v t="ekr.20070925144534.308"><vh>@menu Registers...</vh>
<v t="ekr.20070925144534.309"><vh>@item &amp;append-to-register</vh></v>
<v t="ekr.20070925144534.310"><vh>@item copy-r&amp;ectangle-to-register</vh></v>
<v t="ekr.20070925144534.311"><vh>@item &amp;copy-to-register</vh></v>
<v t="ekr.20070925144534.312"><vh>@item i&amp;ncrement-register</vh></v>
<v t="ekr.20070925144534.313"><vh>@item &amp;insert-register</vh></v>
<v t="ekr.20070925144534.314"><vh>@item &amp;jump-to-register</vh></v>
<v t="ekr.20070925144534.315"><vh>@item &amp;point-to-register</vh></v>
<v t="ekr.20070925144534.316"><vh>@item p&amp;repend-to-register</vh></v>
<v t="ekr.20070925144534.317"><vh>@item &amp;view-register</vh></v>
</v>
<v t="ekr.20070925144534.318"><vh>@menu Run Script/Tests...</vh>
<v t="ekr.20070925144534.319"><vh>@item &amp;execute-script</vh></v>
<v t="ekr.20070925144534.320"><vh>@item &amp;run-unit-tests</vh></v>
</v>
<v t="ekr.20070925144534.321"><vh>@menu &amp;Scrolling...</vh>
<v t="ekr.20070925144534.322"><vh>@item scroll-outline-down-&amp;line</vh></v>
<v t="ekr.20070925144534.323"><vh>@item scroll-outline-down-&amp;page</vh></v>
<v t="ekr.20070925144534.324"><vh>@item scroll-outline-le&amp;ft</vh></v>
<v t="ekr.20070925144534.325"><vh>@item scroll-outline-&amp;right</vh></v>
<v t="ekr.20070925144534.326"><vh>@item s&amp;croll-outline-up-line</vh></v>
<v t="ekr.20070925144534.327"><vh>@item scr&amp;oll-outline-up-page</vh></v>
<v t="ekr.20070925144534.328"><vh>@item -</vh></v>
<v t="ekr.20090531084727.10893"><vh>@item scroll-down-half-page</vh></v>
<v t="ekr.20090531084727.10895"><vh>@item scroll-down-line</vh></v>
<v t="ekr.20070925144534.329"><vh>@item scroll-&amp;down-page</vh></v>
<v t="ekr.20090531084727.10894"><vh>@item scroll-up-half-page</vh></v>
<v t="ekr.20090531084727.10896"><vh>@item scroll-up-line</vh></v>
<v t="ekr.20070925144534.330"><vh>@item scroll-&amp;up-page</vh></v>
</v>
<v t="ekr.20070925144534.334"><vh>@menu Spell C&amp;heck...</vh>
<v t="ekr.20070925144534.335"><vh>@item &amp;open-spell-tab</vh></v>
<v t="ekr.20070925144534.336"><vh>@item spell-&amp;change</vh></v>
<v t="ekr.20070925144534.337"><vh>@item spell-change-&amp;then-find</vh></v>
<v t="ekr.20070925144534.338"><vh>@item spell-&amp;find</vh></v>
<v t="ekr.20070925144534.339"><vh>@item spell-&amp;ignore</vh></v>
</v>
<v t="ekr.20070925144534.340"><vh>@menu &amp;Text Commands...</vh>
<v t="ekr.20070925144534.341"><vh>@item &amp;beautify</vh></v>
<v t="ekr.20070925144534.342"><vh>@item beautify-&amp;all</vh></v>
<v t="ekr.20070925144534.343"><vh>@item -</vh></v>
<v t="ekr.20070925144534.344"><vh>@item center-&amp;line</vh></v>
<v t="ekr.20070925144534.345"><vh>@item center-&amp;region</vh></v>
<v t="ekr.20070925144534.346"><vh>@item -</vh></v>
<v t="ekr.20070925144534.347"><vh>@item &amp;capitalize-word</vh></v>
<v t="ekr.20070925144534.348"><vh>@item &amp;downcase-word</vh></v>
<v t="ekr.20070925144534.349"><vh>@item &amp;upcase-word</vh></v>
<v t="ekr.20070925144534.350"><vh>@item -</vh></v>
<v t="ekr.20070925144534.351"><vh>@item d&amp;owncase-region</vh></v>
<v t="ekr.20070925144534.352"><vh>@item u&amp;pcase-region</vh></v>
<v t="ekr.20070925144534.353"><vh>@item -</vh></v>
<v t="ekr.20070925144534.354"><vh>@item &amp;indent-region</vh></v>
<v t="ekr.20070925144534.355"><vh>@item indent-r&amp;elative</vh></v>
<v t="ekr.20070925144534.356"><vh>@item indent-ri&amp;gidly</vh></v>
<v t="ekr.20070925144534.357"><vh>@item u&amp;nindent-region</vh></v>
<v t="ekr.20070925144534.358"><vh>@item -</vh></v>
<v t="ekr.20070925144534.359"><vh>@item sort-colu&amp;mns</vh></v>
<v t="ekr.20070925144534.360"><vh>@item sort-&amp;fields</vh></v>
<v t="ekr.20070925144534.361"><vh>@item &amp;sort-lines</vh></v>
</v>
<v t="ekr.20070925144534.362"><vh>@menu Toggle Settings...</vh>
<v t="ekr.20070925144534.363"><vh>@item toggle-a&amp;utocompleter</vh></v>
<v t="ekr.20070925144534.364"><vh>@item toggle-call&amp;tips</vh></v>
<v t="ekr.20070925144534.365"><vh>@item toggle-&amp;extend-mode</vh></v>
<v t="ekr.20070925144534.366"><vh>@item toggle-input-&amp;state</vh></v>
<v t="ekr.20070925144534.367"><vh>@item toggle-in&amp;visibles</vh></v>
<v t="ekr.20070925144534.368"><vh>@item toggle-&amp;mini-buffer</vh></v>
<v t="ekr.20070925144534.369"><vh>@item toggle-split-&amp;direction</vh></v>
<v t="ekr.20070925144534.370"><vh>@item -</vh></v>
<v t="ekr.20070925144534.371"><vh>@item toggle-find-&amp;ignore-case-option</vh></v>
<v t="ekr.20070925144534.372"><vh>@item toggle-find-in-&amp;body-option</vh></v>
<v t="ekr.20070925144534.373"><vh>@item toggle-find-in-&amp;headline-option</vh></v>
<v t="ekr.20070925144534.374"><vh>@item toggle-find-mark-&amp;changes-option</vh></v>
<v t="ekr.20070925144534.375"><vh>@item toggle-find-mark-&amp;finds-option</vh></v>
<v t="ekr.20070925144534.376"><vh>@item toggle-find-rege&amp;x-option</vh></v>
<v t="ekr.20070925144534.377"><vh>@item toggle-find-&amp;reverse-option</vh></v>
<v t="ekr.20070925144534.378"><vh>@item toggle-find-&amp;word-option</vh></v>
<v t="ekr.20070925144534.379"><vh>@item toggle-find-wrap-&amp;around-option</vh></v>
<v t="ekr.20071213190345.1"><vh>@item toggle-s&amp;parce-move</vh></v>
</v>
<v t="ekr.20071004121248"><vh>@menu &amp;Yank And Kill</vh>
<v t="ekr.20071004121328"><vh>@item kill-&amp;buffer</vh></v>
<v t="ekr.20071004121840"><vh>@item kill-&amp;line</vh></v>
<v t="ekr.20071004121401"><vh>@item kill-&amp;rectangle</vh></v>
<v t="ekr.20071004121840.1"><vh>@item kill-re&amp;gion</vh></v>
<v t="ekr.20071004121840.2"><vh>@item kill-region-s&amp;ave</vh></v>
<v t="ekr.20071004121248.2"><vh>@item kill-&amp;sentence</vh></v>
<v t="ekr.20071006153725"><vh>@item kill-ws</vh></v>
<v t="ekr.20071004121248.1"><vh>@item kill-&amp;word</vh></v>
<v t="ekr.20071004121248.3"><vh>@item -</vh></v>
<v t="ekr.20071004121248.4"><vh>@item &amp;yank</vh></v>
<v t="ekr.20071004121619"><vh>@item yank-&amp;pop</vh></v>
<v t="ekr.20071004121248.5"><vh>@item yank-r&amp;ectangle</vh></v>
</v>
</v>
<v t="ekr.20070925144534.380"><vh>@menu &amp;Window</vh>
<v t="ekr.20070925144534.381"><vh>@item *&amp;equal-sized-panes</vh></v>
<v t="ekr.20070925144534.382"><vh>@item *&amp;toggle-active-pane</vh></v>
<v t="ekr.20070925144534.383"><vh>@item *toggle-&amp;split-direction</vh></v>
<v t="ekr.20070925144534.384"><vh>@item -</vh></v>
<v t="ekr.20070925144534.385"><vh>@item *contract-&amp;body-pane</vh></v>
<v t="ekr.20070925144534.386"><vh>@item *contract-&amp;log-pane</vh></v>
<v t="ekr.20070925144534.387"><vh>@item *contract-&amp;outline-pane</vh></v>
<v t="ekr.20070925144534.388"><vh>@item *contract-&amp;pane</vh></v>
<v t="ekr.20070925144534.389"><vh>@item -</vh></v>
<v t="ekr.20070925144534.390"><vh>@item *expand-bo&amp;dy-pane</vh></v>
<v t="ekr.20070925144534.391"><vh>@item *expand-lo&amp;g-pane</vh></v>
<v t="ekr.20070925144534.392"><vh>@item *expand-o&amp;utline-pane</vh></v>
<v t="ekr.20070925144534.393"><vh>@item *expand-pa&amp;ne</vh></v>
<v t="ekr.20070925144534.394"><vh>@item -</vh></v>
<v t="ekr.20070925144534.395"><vh>@item *&amp;fully-expand-body-pane</vh></v>
<v t="ekr.20070925144534.396"><vh>@item *full&amp;y-expand-log-pane</vh></v>
<v t="ekr.20070925144534.397"><vh>@item *fully-e&amp;xpand-outline-pane</vh></v>
<v t="ekr.20070925144534.398"><vh>@item *fully-exp&amp;and-pane</vh></v>
<v t="ekr.20070925144534.399"><vh>@item -</vh></v>
<v t="ekr.20070925144534.400"><vh>@item *&amp;resize-to-screen</vh></v>
<v t="ekr.20070925144534.401"><vh>@item *&amp;cascade-windows</vh></v>
<v t="ekr.20070925144534.402"><vh>@item *&amp;minimize-all</vh></v>
<v t="ekr.20070925144534.403"><vh>@item -</vh></v>
<v t="ekr.20070925144534.404"><vh>@item *open-compare-window</vh></v>
<v t="ekr.20070925144534.405"><vh>@item *open-python-&amp;window</vh></v>
</v>
<v t="ekr.20070925144534.406"><vh>@menu &amp;Help</vh>
<v t="ekr.20070925144534.407"><vh>@item about-leo</vh></v>
<v t="ekr.20070925144534.408"><vh>@item open-online-home</vh></v>
<v t="ekr.20070925144534.409"><vh>@item *open-online-&amp;tutorial</vh></v>
<v t="ekr.20070925144534.410"><vh>@item *open-&amp;users-guide</vh></v>
<v t="ekr.20070925144534.411"><vh>@item -</vh></v>
<v t="ekr.20070925144534.412"><vh>@item open-leoDocs-leo</vh></v>
<v t="ekr.20070925144534.413"><vh>@item open-leoPlugins-leo</vh></v>
<v t="ekr.20070925144534.414"><vh>@item open-leoSettings-leo</vh></v>
<v t="ekr.20070925144534.415"><vh>@item open-myLeoSettings-leo</vh></v>
<v t="ekr.20090628075121.8432"><vh>@item open-quickstart-leo</vh></v>
<v t="ekr.20070925144534.416"><vh>@item open-scripts-leo</vh></v>
<v t="ekr.20070925144534.417"><vh>@item -</vh></v>
<v t="ekr.20070925144534.418"><vh>@item *he&amp;lp-for-minibuffer</vh></v>
<v t="ekr.20070925144534.419"><vh>@item *help-for-&amp;command</vh></v>
<v t="ekr.20070925144534.420"><vh>@item -</vh></v>
<v t="ekr.20070925144534.421"><vh>@item *&amp;apropos-autocompletion</vh></v>
<v t="ekr.20070925144534.422"><vh>@item *apropos-&amp;bindings</vh></v>
<v t="ekr.20070925144534.423"><vh>@item *apropos-&amp;debugging-commands</vh></v>
<v t="ekr.20070925144534.424"><vh>@item *apropos-&amp;find-commands</vh></v>
<v t="ekr.20070925144534.425"><vh>@item -</vh></v>
<v t="ekr.20070925144534.426"><vh>@item *pri&amp;nt-bindings</vh></v>
<v t="ekr.20070925144534.427"><vh>@item *print-c&amp;ommands</vh></v>
<v t="ekr.20090630073313.8521"><vh>@item *print-&amp;plugins-info</vh></v>
<v t="ekr.20090630073313.8522"><vh>@item *print-&amp;settings</vh></v>
</v>
</v>
<v t="ekr.20080515053412.3"><vh>@popup_menus</vh>
<v t="ekr.20080515053412.4"><vh>Main Context Menus</vh>
<v t="ekr.20080515053412.5"><vh>@popup body</vh>
<v t="ekr.20080515053412.6"><vh>@item &amp;</vh></v>
<v t="ekr.20080515053412.7"><vh>@item -</vh></v>
<v t="ekr.20080515053412.8"><vh>@menu Block Operations</vh>
<v t="ekr.20080515053412.9"><vh>@item indent-region</vh></v>
<v t="ekr.20080515053412.10"><vh>@item dedent-region</vh></v>
<v t="ekr.20080515053412.11"><vh>@item -</vh></v>
<v t="ekr.20080515053412.12"><vh>@item add-comments</vh></v>
<v t="ekr.20080515053412.13"><vh>@item delete-comments</vh></v>
</v>
<v t="ekr.20080515053412.14"><vh>@item &amp;</vh></v>
<v t="ekr.20080515053412.15"><vh>@item -</vh></v>
<v t="ekr.20080515053412.16"><vh>@item match-brackets</vh></v>
<v t="ekr.20080515053412.17"><vh>@item execute-script</vh></v>
<v t="ekr.20080515053412.18"><vh>@item *</vh></v>
</v>
<v t="ekr.20080515053412.19"><vh>@popup log</vh>
<v t="ekr.20080515053412.20"><vh>@item &amp;</vh></v>
</v>
<v t="ekr.20080515053412.21"><vh>@popup find-text</vh>
<v t="ekr.20080515053412.22"><vh>@item &amp;</vh></v>
</v>
<v t="ekr.20080515053412.23"><vh>@popup change-text</vh>
<v t="ekr.20080515053412.24"><vh>@item &amp;</vh></v>
</v>
<v t="ekr.20080515053412.25"><vh>@popup canvas</vh>
<v t="ekr.20080515053412.26"><vh>@item &amp;</vh></v>
<v t="ekr.20080515053412.27"><vh>@item -</vh></v>
<v t="ekr.20080515053412.28"><vh>@item *create-chapter</vh></v>
<v t="ekr.20080515053412.29"><vh>@item *remove-chapter</vh></v>
</v>
<v t="ekr.20080515053412.30"><vh>@popup headline</vh></v>
<v t="ekr.20080515053412.31"><vh>@popup iconbox</vh></v>
<v t="ekr.20080515053412.32"><vh>@popup plusbox</vh></v>
</v>
<v t="ekr.20080515053412.33"><vh>Fragments</vh>
<v t="ekr.20080515053412.34"><vh>@popup edit-menu</vh>
<v t="ekr.20080515053412.35"><vh>@item rclick-cut-text</vh></v>
<v t="ekr.20080515053412.36"><vh>@item rclick-copy-text</vh></v>
<v t="ekr.20080515053412.37"><vh>@item rclick-paste-text</vh></v>
<v t="ekr.20080515053412.38"><vh>@item -</vh></v>
<v t="ekr.20080515053412.39"><vh>@item rclick-select-all</vh></v>
</v>
<v t="ekr.20080515053412.40"><vh>@popup recent-files-menu</vh>
<v t="ekr.20080515053412.41"><vh>@menu Recent Files</vh>
<v t="ekr.20080515053412.42"><vh>@item *</vh></v>
</v>
</v>
<v t="ekr.20080515053412.43"><vh>@popup to-chapter-fragment</vh>
<v t="ekr.20080515053412.44"><vh>@menu Clone to Chapter</vh>
<v t="ekr.20080515053412.45"><vh>@item *</vh></v>
</v>
<v t="ekr.20080515053412.46"><vh>@menu Copy to Chapter</vh>
<v t="ekr.20080515053412.47"><vh>@item *</vh></v>
</v>
<v t="ekr.20080515053412.48"><vh>@menu Move to Chapter</vh>
<v t="ekr.20080515053412.49"><vh>@item *</vh></v>
</v>
<v t="ekr.20080515053412.50"><vh>@menu Select Chapter</vh>
<v t="ekr.20080515053412.51"><vh>@item *</vh></v>
</v>
</v>
</v>
</v>
<v t="ville.20091008201813.3909"><vh>Qt context menu</vh>
<v t="ville.20091008201813.3911"><vh>@@data contextmenu_commands</vh></v>
</v>
</v>
<v t="ekr.20051123100536"><vh>Plugins</vh>
<v t="vivainio.20080307190927"><vh>IPython</vh>
<v t="vivainio.20080307185812"><vh>@string ipython_argv = ipython -p sh</vh></v>
</v>
<v t="ekr.20070417071249"></v>
<v t="ekr.20041119034357.13"><vh>@bool use_plugins = True</vh></v>
<v t="ekr.20071113084330"><vh>@bool warn_when_plugins_fail_to_load = True</vh></v>
<v t="ekr.20070224073109.1"></v>
<v t="tbrown.20100524101550.4704"><vh>@string mod_scripting_subtext =</vh></v>
<v t="ekr.20080328105334.1"><vh>cleo</vh>
<v t="ekr.20080602174756.1"><vh>@bool cleo_color_ignore = True</vh></v>
<v t="ekr.20080328105334.2"><vh>@color cleo_color_prog_green =</vh></v>
<v t="ekr.20080328105334.3"><vh>@color cleo_color_prog_red =</vh></v>
<v t="ekr.20080328105334.4"><vh>@data cleo_color_file_node_list</vh></v>
<v t="ekr.20080328105334.8"><vh>@float cleo_prog_extra = 4</vh></v>
<v t="ekr.20080328105334.6"><vh>@float cleo_time_init = 1.0</vh></v>
<v t="ekr.20080328105334.7"><vh>@int cleo_prog_scale = 1</vh></v>
<v t="ekr.20080328105334.5"><vh>@int cleo_prog_width = 18</vh></v>
<v t="ekr.20080328105334.9"><vh>@string cleo_time_name = days</vh></v>
<v t="tbrown.20090430112929.1"><vh>@string cleo_icon_path = cleo</vh></v>
</v>
<v t="ekr.20060807103220"><vh>datenodes plugin</vh>
<v t="ekr.20060807103220.1"><vh>@string datenodes_body_text = To do...</vh></v>
<v t="ekr.20060807103220.2"><vh>@string datenodes_day_node_headline = %Y-%m-%d</vh></v>
<v t="ekr.20060807103220.3"><vh>@string datenodes_month_node_day_headline = %d: %A</vh></v>
<v t="ekr.20060807103220.4"><vh>@string datenodes_month_node_month_headline = %B %Y</vh></v>
<v t="ekr.20060807103220.5"><vh>@bool datenodes_month_node_omit_saturdays = True</vh></v>
<v t="ekr.20060807103220.6"><vh>@bool datenodes_month_node_omit_sundays = True</vh></v>
<v t="ekr.20060807103220.7"><vh>@string datenodes_year_node_day_headline = %d: %A</vh></v>
<v t="ekr.20060807103220.8"><vh>@string datenodes_year_node_month_headline = %B</vh></v>
<v t="ekr.20060807103220.9"><vh>@string datenodes_year_node_year_headline = %Y</vh></v>
<v t="ekr.20060807103220.10"><vh>@bool datenodes_year_node_omit_saturdays = True</vh></v>
<v t="ekr.20060807103220.11"><vh>@bool datenodes_year_node_omit_sundays = True</vh></v>
</v>
<v t="ekr.20060111091324"><vh>fastgotonode plugin</vh>
<v t="ekr.20060111091324.1"><vh>@bool fastgotonode_useKeyBinding = True</vh></v>
<v t="ekr.20060111091324.2"><vh>@string fastgotonode_binding =  Shift-space</vh></v>
</v>
<v t="ekr.20060109115046"><vh>library plugin</vh>
<v t="ekr.20060109115046.1"><vh>@bool library_verbose = True</vh></v>
<v t="ekr.20060109115046.2"><vh>@string library_lib = default</vh></v>
<v t="ekr.20060109115046.3"><vh>@string library_lib0 = default/library.dbm</vh></v>
<v t="ekr.20060109121753"><vh>@string library_lib1 = default/libraryS.dbm</vh></v>
</v>
<v t="TL.20090225102340.33"><vh>nodeActions plugin</vh>
<v t="TL.20090225102340.34"><vh>@bool nodeActions_save_atFile_nodes = False</vh></v>
<v t="TL.20090303191843.1"><vh>@int nodeActions_message_level = 1</vh></v>
</v>
<v t="ekr.20070411101857"><vh>Open With plugin</vh>
<v t="ekr.20070411101857.1"><vh>@openwith Idle = Alt+Shift+Ctrl+I</vh></v>
<v t="ekr.20070411101857.2"><vh>@openwith Word = Alt+Shift+Ctrl+W </vh></v>
<v t="ekr.20070411101857.3"><vh>@@openwith Wordpad = Alt+Shift+Ctrl+T</vh></v>
<v t="TL.20080702085131.2"><vh>@bool open_with_save_on_update = False</vh></v>
<v t="TL.20080702085131.3"><vh>@bool open_with_goto_node_on_update = True</vh></v>
<v t="TL.20080702085131.4"><vh>@bool open_with_clean_filenames = False</vh></v>
<v t="TL.20080702085131.5"><vh>@bool open_with_uses_derived_file_extensions = False</vh></v>
</v>
<v t="ekr.20060919171527"><vh>opml plugin</vh>
<v t="ekr.20060921080239"><vh>@bool opml_read_derived_files = True</vh></v>
<v t="ekr.20060919171527.1"><vh>@bool opml_use_outline_elements = True</vh></v>
<v t="ekr.20060919195145"><vh>@string opml_version = 2.0</vh></v>
<v t="ekr.20060919181622"><vh>@bool opml_write_body_text = True</vh></v>
<v t="ekr.20060921080239.1"><vh>@bool opml_write_derived_files = True</vh></v>
<v t="ekr.20060919173031"><vh>@bool opml_write_leo_details = True</vh></v>
<v t="ekr.20060919173031.1"><vh>@bool opml_write_leo_globals_attributes = True</vh></v>
<v t="ekr.20060922110220"><vh>@bool opml_write_uAs = True</vh></v>
<v t="ekr.20060919171527.2"><vh>@string opml_namespace = leo:com:leo-opml-version-1</vh></v>
</v>
<v t="ekr.20081018053140.11"><vh>qtGui plugin</vh>
<v t="ekr.20100107060708.6390"><vh>@bool qt-tree-multiple-selection = True</vh></v>
<v t="ekr.20090724102842.2492"><vh>@int qt_max_colorized_chars = 200000</vh></v>
<v t="ekr.20081023060109.14"><vh>@bool qt-use-scintilla = False</vh></v>
<v t="leohag.20081204085551.13"><vh>@string qt-ui-file-name = qt_main.ui</vh></v>
<v t="ekr.20081018053140.12"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="ekr.20081020075840.10"><vh>@int qt-scintilla-zoom-in = 6</vh></v>
<v t="ekr.20081023060109.13"><vh>@int qt-rich-text-zoom-in = 10</vh></v>
<v t="ekr.20081022181056.10"><vh>@data qt-scintilla-styles</vh></v>
<v t="ekr.20090620112052.9070"><vh>@string qt-default-encoding = UTF-8</vh></v>
<v t="ekr.20090406071640.18"><vh>@@string selected-background-color = #fdf5f5</vh></v>
<v t="ekr.20090406071640.19"><vh>@@string unselected-background-color = #f2fdff</vh></v>
</v>
<v t="ekr.20071213060239"><vh>rst3 plugin</vh>
<v t="ekr.20071213060239.1"><vh>rst3 http options</vh>
<v t="ekr.20071213061454"><vh>@bool rst3_clear_http_attributes = False</vh></v>
<v t="ekr.20071213061454.1"><vh>@bool rst3_http_server_support = False</vh></v>
<v t="ekr.20071213061454.2"><vh>@string rst3_http_attributename = rst_http_attribute</vh></v>
<v t="ekr.20071213061454.3"><vh>@string rst3_node_begin_marker = http-node-marker-</vh></v>
</v>
<v t="ekr.20071213060239.2"><vh>rst3 path options</vh>
<v t="ekr.20071213061504"><vh>@string rst3_default_path = None</vh></v>
<v t="ekr.20071213061504.1"><vh>@string rst3_stylesheet_name = default.css</vh></v>
<v t="ekr.20071213061504.2"><vh>@string rst3_stylesheet_path = None</vh></v>
<v t="ekr.20071213061504.3"><vh>@string rst3_publish_argv_for_missing_stylesheets = None</vh></v>
</v>
<v t="ekr.20071213060514"><vh>rst3 global options</vh>
<v t="ekr.20080916092417.1"><vh>@string rst3_default_encoding = uTf-8</vh></v>
<v t="ekr.20071213061811"><vh>@bool rst3_number_code_lines = True</vh></v>
<v t="ekr.20071213061811.1"><vh>@string rst3_underline_characters = #=+*^~"'`-:&gt;&lt;_</vh></v>
<v t="ekr.20071213061811.2"><vh>@bool rst3_verbose = True</vh></v>
<v t="ekr.20071213061811.3"><vh>@bool rst3_write_intermediate_file = False</vh></v>
</v>
<v t="ekr.20071213060514.1"><vh>rst3 mode options</vh>
<v t="ekr.20071213061923"><vh>@bool rst3_code_mode = False</vh></v>
<v t="ekr.20071213061923.1"><vh>@bool rst3_doc_only_mode = False</vh></v>
<v t="ekr.20071213061923.2"><vh>@bool rst3_generate_rst = True</vh></v>
<v t="ekr.20090430075506.7"><vh>@bool rst3_generate_rst_header_comment = True</vh></v>
</v>
<v t="ekr.20071213060514.2"><vh>rst3 formatting options</vh>
<v t="ekr.20071213061930.1"><vh>@bool rst3_show_headlines = True</vh></v>
<v t="ekr.20071213061930.2"><vh>@bool rst3_show_organizer_nodes = True</vh></v>
<v t="ekr.20071213061930.3"><vh>@bool rst3_show_options_nodes = False</vh></v>
<v t="ekr.20071213061930.4"><vh>@bool rst3_strip_at_file_prefixes = True</vh></v>
</v>
<v t="ekr.20071213061923.3"><vh>rst3 formatting options (code mode only)</vh>
<v t="ekr.20071213062019"><vh>@bool rst3_show_doc_parts_as_paragraphs = False</vh></v>
<v t="ekr.20071213062019.1"><vh>@bool rst3_show_leo_directives = True</vh></v>
<v t="ekr.20071213062019.2"><vh>@bool rst3_show_markup_doc_parts = False</vh></v>
<v t="ekr.20071213062019.3"><vh>@bool rst3_show_options_doc_parts = False</vh></v>
<v t="ekr.20090430173906.1"><vh>@@string rst3_code_block_string = \n.. class:: code\n..\n\n::\n</vh></v>
</v>
<v t="ekr.20071213060607"><vh>rst3 options: names of headline commands</vh>
<v t="ekr.20071213062019.4"><vh>@string rst3_code_prefix = @rst-code</vh></v>
<v t="ekr.20071213062019.5"><vh>@string rst3_doc_only_prefix = @rst-doc-only</vh></v>
<v t="ekr.20080916094157.1"><vh>@string rst3_default_encoding_prefix = @rst-default-encoding</vh></v>
<v t="ekr.20071213062019.6"><vh>@string rst3_rst_prefix = @rst</vh></v>
<v t="ekr.20071213062019.7"><vh>@string rst3_ignore_headline_prefix = @rst-no-head</vh></v>
<v t="ekr.20071213062019.8"><vh>@string rst3_ignore_headlines_prefix = @rst-no-headlines</vh></v>
<v t="ekr.20071213062019.9"><vh>@string rst3_ignore_node_prefix = @rst-ignore-node</vh></v>
<v t="ekr.20071213062019.10"><vh>@string rst3_ignore_prefix = @rst-ignore</vh></v>
<v t="ekr.20071213062019.11"><vh>@string rst3_ignore_tree_prefix = @rst-ignore-tree</vh></v>
<v t="ekr.20071213062019.12"><vh>@string rst3_option_prefix = @rst-option</vh></v>
<v t="ekr.20071213062019.13"><vh>@string rst3_options_prefix = @rst-options</vh></v>
<v t="ekr.20071213062019.14"><vh>@string rst3_preformat_prefix = @rst-preformat</vh></v>
<v t="ekr.20071213062019.15"><vh>@string rst3_show_headline_prefix = @rst-head</vh></v>
</v>
</v>
<v t="ekr.20100910115903.8297"><vh>screenshot settings</vh>
<v t="ekr.20100910115903.8299"><vh>@string screenshot-bin = "c:\Program Files (x86)\Inkscape\inkscape.exe"</vh></v>
</v>
<v t="ekr.20060930111325"><vh>scripting plugin</vh>
<v t="ekr.20060930111325.2"><vh>@bool scripting-at-button-nodes = True</vh></v>
<v t="ekr.20060930111325.3"><vh>@bool scripting-at-commands-nodes = True</vh></v>
<v t="ekr.20060930111325.4"><vh>@bool scripting-at-plugin-nodes = False</vh></v>
<v t="ekr.20060930111325.5"><vh>@bool scripting-at-script-nodes = False</vh></v>
<v t="ekr.20060930111325.6"><vh>@bool scripting-create-debug-button = False</vh></v>
<v t="ekr.20060930111325.7"><vh>@bool scripting-create-run-script-button = False</vh></v>
<v t="ekr.20060930112030"><vh>@bool scripting-create-script-button-button = True</vh></v>
<v t="ekr.20060930111325.1"><vh>@int scripting-max-button-size = 18</vh></v>
</v>
<v t="bobjack.20080614084120.3"><vh>shortcut _button plugin</vh>
<v t="bobjack.20080614084120.5"><vh>@data shortcut_button_data</vh></v>
</v>
<v t="ekr.20051123100536.1"><vh>vim plugin</vh>
<v t="ekr.20051123100536.2"><vh>@@string vim_cmd = c:\Program Files\vim\vim63\gvim --servername LEO</vh></v>
<v t="ekr.20051123100536.3"><vh>@@string vim_exe = c:\Program Files\vim\vim63\gvim</vh></v>
<v t="ekr.20071114072753"><vh>@bool vim_plugin_opens_url_nodes = False</vh></v>
</v>
<v t="ekr.20090202191501.10"><vh>xemacs plugin</vh>
<v t="ekr.20090202191501.11"><vh>@string xemacs_exe = c:\XEmacs\XEmacs-21.4.21\i586-pc-win32\xemacs.exe</vh></v>
</v>
<v t="ekr.20060904211808"><vh>zodb plugin</vh>
<v t="ekr.20060904211808.1"><vh>@string zodb_storage_file = c:\prog\zopeTemp\leo.fs</vh></v>
</v>
<v t="tbrown.20091129085043.11789"><vh>active_path plugin</vh>
<v t="tbrown.20091129085043.11790"><vh>@string active_path_attype = auto</vh></v>
<v t="tbrown.20091129085043.11792"><vh>@string active_path_event = icondclick1</vh></v>
<v t="tbrown.20091129085043.11793"><vh>@data active_path_ignore</vh></v>
<v t="tbrown.20091129085043.11795"><vh>@data active_path_autoload</vh></v>
<v t="tbrown.20100304170159.5189"><vh>@bool active_path_load_docstring = False</vh></v>
<v t="tbrown.20100401100336.16108"><vh>@float active_path_timeout_seconds = 10.</vh></v>
<v t="tbrown.20100401100336.31583"><vh>@int active_path_max_size = 1000000</vh></v>
</v>
<v t="vitalije.20100306144625.8944"><vh>autosave plugin</vh>
<v t="vitalije.20100306144625.8945"><vh>@bool mod_autosave_active = True</vh></v>
<v t="vitalije.20100306144625.8946"><vh>@int mod_autosave_interval = 300</vh></v>
</v>
</v>
<v t="ekr.20041119034357.28"><vh>Preferences panel</vh>
<v t="ekr.20041119034357.29"><vh>@directory default_tangle_directory = None</vh></v>
<v t="ekr.20080326060254.3"><vh>@string target_language = python</vh></v>
<v t="ekr.20041119034357.31"></v>
<v t="ekr.20041119034357.32"><vh>@int page_width = 80</vh></v>
</v>
<v t="ekr.20051025084017"><vh>Spell tab</vh>
<v t="ekr.20100904095239.8440"><vh>@string enchant_language = en_US</vh></v>
<v t="ekr.20100904095239.8441"><vh>@string enchant_local_dictionary = None</vh></v>
</v>
<v t="ekr.20041119034357.15"><vh>Unicode options</vh>
<v t="ekr.20080212084020"></v>
<v t="ekr.20041119042929.9"></v>
<v t="ekr.20041119042929.10"></v>
<v t="ekr.20041119042929.11"><vh>@string tk_encoding = None</vh></v>
</v>
<v t="ekr.20050203090810"><vh>Unit test</vh>
<v t="ekr.20050203085250"><vh>@int global_setting_for_unit_tests = 132</vh></v>
</v>
<v t="ekr.20041213105954"><vh>Window</vh>
<v t="ekr.20100507153425.8304"><vh>@string qt-toolbar-location=top</vh></v>
<v t="edward.20081129091117.12"></v>
<v t="ekr.20041119034357.38"><vh>Body pane options</vh>
<v t="ekr.20061010111324"><vh>@bool select_all_text_when_editing_headlines = False</vh></v>
<v t="ekr.20060531094310"><vh>@bool autoindent_in_nocolor_mode = True</vh></v>
<v t="ekr.20041119034357.43"><vh>@bool body_gmt_time = False</vh></v>
<v t="ekr.20041119034357.39"><vh>@bool body_pane_wraps = True</vh></v>
<v t="ekr.20060216135834"><vh>@bool enable_autocompleter_initially = False</vh></v>
<v t="ekr.20060603070801"><vh>@bool enable_calltips_initially = False</vh></v>
<v t="ekr.20060627084739"><vh>@bool flash_matching_brackets = True</vh></v>
<v t="ekr.20060627121646"><vh>@color flash_brackets_background_color = DodgerBlue1</vh></v>
<v t="ekr.20060627121646.1"><vh>@color flash_brackets_foreground_color = white</vh></v>
<v t="ekr.20060627121646.2"><vh>@int flash_brackets_count = 2</vh></v>
<v t="ekr.20060627121646.3"><vh>@int flash-brackets-delay = 75</vh></v>
<v t="ekr.20041119034357.44"><vh>@bool smart_auto_indent = False</vh></v>
<v t="ekr.20090213065933.11"><vh>@bool smart_tab = True</vh></v>
<v t="ekr.20041119034357.53"><vh>@int additional_body_text_border = 0</vh></v>
<v t="ekr.20041119034357.42"><vh>@string body_time_format_string = %m/%d/%Y %H:%M:%S</vh></v>
<v t="ekr.20060620085654"><vh>@string editor_orientation = horizontal</vh></v>
</v>
<v t="ekr.20080930072519.3"><vh>Icon bar options</vh></v>
<v t="ekr.20080930072519.4"><vh>@int icon_bar_widgets_per_row = 20</vh></v>
<v t="ekr.20041213105954.1"><vh>Log pane options</vh>
<v t="ekr.20041119052015.1"><vh>@bool log_pane_wraps = False</vh></v>
</v>
<v t="ekr.20041119034357.56"><vh>Options for new windows</vh>
<v t="ekr.20071024145953"><vh>@bool big_outline_pane = False</vh></v>
<v t="ekr.20060930085332"><vh>@bool outline_pane_has_initial_focus = False</vh></v>
<v t="ekr.20041119034357.59"><vh>@strings[vertical,horizontal] initial_splitter_orientation = vertical</vh></v>
<v t="ekr.20041119034357.57"><vh>@ratio initial_horizontal_ratio = 0.4</vh></v>
<v t="ekr.20041119034357.58"><vh>@ratio initial_horizontal_secondary_ratio = 0.8</vh></v>
<v t="ekr.20041119034357.60"><vh>@ratio initial_vertical_ratio = 0.5</vh></v>
<v t="ekr.20041119034357.61"><vh>@ratio initial_vertical_secondary_ratio = 0.65</vh></v>
<v t="ekr.20041119034357.62"><vh>@int initial_window_height = 600</vh></v>
<v t="ekr.20041119034357.63"><vh>@int initial_window_left =  20</vh></v>
<v t="ekr.20041119034357.64"><vh>@int initial_window_top = 20</vh></v>
<v t="ekr.20041119034357.65"><vh>@int initial_window_width = 800</vh></v>
</v>
<v t="ekr.20041119034357.54"><vh>Outline pane options</vh>
<v t="ekr.20041119050749.3"><vh>@bool allow_clone_drags = False</vh></v>
<v t="ekr.20061030092620"><vh>@bool center_selected_tree_node = True</vh></v>
<v t="ekr.20041119050749.4"><vh>@bool enable_drag_messages = False</vh></v>
<v t="ekr.20041119050749.5"><vh>@bool expanded_click_area = True</vh></v>
<v t="ekr.20060528175513"><vh>@bool idle_redraw = False</vh></v>
<v t="ekr.20060120123529"><vh>@bool initialClickExpandsOrContractsNode = True</vh></v>
<v t="ekr.20061030104734"><vh>@bool invisible_outline_navigation = False</vh></v>
<v t="ekr.20041119050749.17"><vh>@bool look_for_control_drag_on_mouse_down = True</vh></v>
<v t="ekr.20041119050749.18"><vh>@bool outline_pane_scrolls_horizontally = True</vh></v>
<v t="ekr.20061002115414.1"></v>
<v t="ekr.20070318065601"></v>
<v t="ekr.20070604075218"></v>
</v>
<v t="ekr.20041213105954.2"><vh>Splitter options</vh>
<v t="ekr.20041119034357.68"><vh>@string split_bar_relief = groove</vh></v>
<v t="ekr.20041119034357.69"><vh>@int split_bar_width = 6</vh></v>
</v>
</v>
</v>
<v t="ekr.20081018053140.11"></v>
<v t="TL.20100307105950.3137"><vh>@keys Vim bindings</vh>
<v t="TL.20100307105950.3138"><vh>Vim User Documentation</vh></v>
<v t="TL.20100307105950.3139"><vh>Vim History</vh></v>
<v t="TL.20100307105950.3140"><vh>Vim Developer Documentation</vh></v>
<v t="TL.20100307105950.3141"><vh>Vim settings</vh>
<v t="TL.20100307105950.3142"><vh>@strings [command,insert, overwrite] top_level_unbound_key_action = command</vh></v>
<v t="TL.20100307105950.3143"><vh>@bool stayInTreeAfterEditHeadline = True</vh></v>
<v t="TL.20100307105950.3144"><vh>@bool outline_pane_has_initial_focus = True</vh></v>
<v t="TL.20100307105950.3145"><vh>@bool stayInTreeAfterSelect = True</vh></v>
</v>
<v t="TL.20100307105950.3146"><vh>@shortcuts - vi miscellaneous</vh>
<v t="TL.20100307105950.3147"><vh>@mode tree-undo</vh></v>
<v t="TL.20100307105950.3148"><vh>@mode tree-redo</vh></v>
<v t="TL.20100307105950.3149"><vh>@mode focus-to-tree</vh></v>
<v t="TL.20100307105950.3150"><vh>@mode focus-to-body</vh></v>
<v t="TL.20100307105950.3151"><vh>@mode body-command-line</vh>
<v t="TL.20100307105950.3152"><vh>@mode body-command-revert</vh></v>
<v t="TL.20100307105950.3153"><vh>@mode body-command-save</vh>
<v t="TL.20100307105950.3154"><vh>@mode body-command-save-quit</vh>
<v t="TL.20100307105950.3155"><vh>@mode body-command-save-quit-return</vh></v>
</v>
</v>
<v t="TL.20100307105950.3156"><vh>@mode body-command-quit</vh></v>
</v>
<v t="TL.20100307105950.3157"><vh>@mode tree-command-line</vh>
<v t="TL.20100307105950.3158"><vh>@mode tree-command-revert</vh></v>
<v t="TL.20100307105950.3159"><vh>@mode tree-command-save</vh>
<v t="TL.20100307105950.3160"><vh>@mode tree-command-save-only</vh></v>
<v t="TL.20100307105950.3161"><vh>@mode tree-command-save-quit</vh>
<v t="TL.20100307105950.3162"><vh>@mode tree-command-save-quit-return</vh></v>
</v>
</v>
<v t="TL.20100307105950.3163"><vh>@mode tree-command-quit</vh></v>
</v>
<v t="TL.20100307105950.3164"><vh>@mode body-shift-z</vh>
<v t="TL.20100307105950.3165"><vh>@mode body-shift-z-save-quit</vh></v>
</v>
</v>
<v t="TL.20100307105950.3166"><vh>@shortcuts - vi in Outline pane</vh>
<v t="TL.20100307105950.3167"><vh>@mode tree-yank-object</vh></v>
<v t="TL.20100307105950.3168"><vh>@mode tree-change-object</vh></v>
<v t="TL.20100307105950.3169"><vh>@mode tree-delete-text-object</vh></v>
<v t="TL.20100307105950.3170"><vh>@mode tree-copy-node</vh></v>
<v t="TL.20100307105950.3171"><vh>@mode tree-paste-node</vh></v>
<v t="TL.20100307105950.3172"><vh>@mode tree-delete-node</vh></v>
<v t="TL.20100307105950.3173"><vh>@mode tree-goto-last-node</vh></v>
<v t="TL.20100307105950.3174"><vh>@mode tree-goto</vh>
<v t="TL.20100307105950.3175"><vh>@mode node-goto-first-node</vh></v>
</v>
<v t="TL.20100307105950.3176"><vh>@mode tree-goto-next-visible</vh></v>
<v t="TL.20100307105950.3177"><vh>@mode tree-goto-prev-visible</vh></v>
<v t="TL.20100307105950.3178"><vh>@mode tree-search-forward</vh></v>
<v t="TL.20100307105950.3179"><vh>@mode tree-replace-string</vh></v>
<v t="TL.20100307105950.3180"><vh>@mode tree-contract-or-go-left</vh></v>
<v t="TL.20100307105950.3181"><vh>@mode tree-contract-node</vh></v>
<v t="TL.20100307105950.3182"><vh>@mode tree-expand-and-go-right</vh></v>
<v t="TL.20100307105950.3183"><vh>@mode tree-move-outline-up</vh></v>
<v t="TL.20100307105950.3184"><vh>@mode tree-move-outline-down</vh></v>
<v t="TL.20100307105950.3185"><vh>@mode tree-move-outline-left</vh></v>
<v t="TL.20100307105950.3186"><vh>@mode tree-move-outline-right</vh></v>
<v t="TL.20100307105950.3187"><vh>@mode tree-clone-node</vh></v>
<v t="TL.20100307105950.3188"><vh>@mode tree-goto-next-clone-node</vh></v>
<v t="TL.20100307105950.3189"><vh>@mode tree-mark-node</vh></v>
<v t="TL.20100307105950.3190"><vh>@mode tree-goto-next-marked-node</vh></v>
<v t="TL.20100307105950.3191"><vh>@mode tree-unmark-all-nodes</vh></v>
<v t="TL.20100307105950.3192"><vh>Body actions from Tree pane</vh>
<v t="TL.20100307105950.3193"><vh>@mode tree-goto-next-line</vh></v>
<v t="TL.20100307105950.3194"><vh>@mode tree-goto-prev-line</vh></v>
</v>
</v>
<v t="TL.20100307105950.3195"><vh>@shortcuts - vi in Body pane</vh>
<v t="TL.20100307105950.3196"><vh>@mode body-search-forward</vh></v>
<v t="TL.20100307105950.3197"><vh>@mode body-search-backward</vh></v>
<v t="TL.20100307105950.3198"><vh>@mode body-search-everywhere</vh></v>
<v t="TL.20100307105950.3199"><vh>@mode body-search-options</vh>
<v t="TL.20100307105950.3200"><vh>@mode body-search-all-nodes</vh></v>
<v t="TL.20100307105950.3201"><vh>@mode body-search-toggle-headline</vh></v>
<v t="TL.20100307105950.3202"><vh>@mode body-search-toggle-body</vh></v>
<v t="TL.20100307105950.3203"><vh>@mode body-search-toggle-mark</vh>
<v t="TL.20100307105950.3204"><vh>@mode body-search-toggle-mark-finds</vh></v>
<v t="TL.20100307105950.3205"><vh>@mode body-search-toggle-mark-changes</vh></v>
</v>
<v t="TL.20100307105950.3206"><vh>@mode body-search-toggle-regex</vh></v>
</v>
<v t="TL.20100307105950.3207"><vh>@mode body-replace-string</vh></v>
<v t="TL.20100307105950.3208"><vh>@mode body-paste-then-find</vh></v>
<v t="TL.20100307105950.3209"><vh>@mode body-goto-end-of-buffer</vh></v>
<v t="TL.20100307105950.3210"><vh>@mode body-g</vh>
<v t="TL.20100307105950.3211"><vh>@mode body-g-beginning-of-buffer</vh>
<v t="TL.20100307105950.3212"><vh>@mode body-g-q</vh></v>
<v t="TL.20100307105950.3213"><vh>@mode body-g-w</vh>
<v t="TL.20100307105950.3214"><vh>@mode body-g-wq-a</vh></v>
</v>
</v>
</v>
<v t="TL.20100307105950.3215"><vh>@mode body-new-line-below</vh></v>
<v t="TL.20100307105950.3216"><vh>@mode body-new-line-above</vh></v>
<v t="TL.20100307105950.3217"><vh>@mode body-append</vh></v>
<v t="TL.20100307105950.3218"><vh>@mode body-insert-at-indent</vh></v>
<v t="TL.20100307105950.3219"><vh>@mode body-delete-to-end-of-line</vh></v>
<v t="TL.20100307105950.3220"><vh>@mode body-delete-object</vh>
<v t="TL.20100307105950.3221"><vh>@mode body-delete-line</vh></v>
<v t="TL.20100307105950.3222"><vh>@mode body-delete-to-end-of-word</vh></v>
<v t="TL.20100307105950.3223"><vh>@mode body-delete-to-begin-of-word</vh></v>
<v t="TL.20100307105950.3224"><vh>@mode body-delete-to-end-of-sentence</vh></v>
<v t="TL.20100307105950.3225"><vh>@mode body-delete-to-beginning-of-sentence</vh></v>
<v t="TL.20100307105950.3226"><vh>@mode body-delete-to-end-of-paragraph</vh></v>
<v t="TL.20100307105950.3227"><vh>@mode body-delete-to-beginning-of-paragraph</vh></v>
<v t="TL.20100307105950.3228"><vh>@mode body-delete-to-g-object</vh>
<v t="TL.20100307105950.3229"><vh>@mode body-delete-to-beginning-of-buffer</vh></v>
</v>
<v t="TL.20100307105950.3230"><vh>@mode body-delete-to-end-of-buffer</vh></v>
<v t="TL.20100307105950.3231"><vh>@mode body-delete-section</vh></v>
<v t="TL.20100307105950.3232"><vh>@mode body-delete-to-char</vh></v>
<v t="TL.20100307105950.3233"><vh>@mode body-delete-selected</vh></v>
</v>
<v t="TL.20100307105950.3234"><vh>@mode body-yank-to-end-of-line</vh></v>
<v t="TL.20100307105950.3235"><vh>@mode body-yank-object</vh>
<v t="TL.20100307105950.3236"><vh>@mode body-yank-line</vh></v>
<v t="TL.20100307105950.3237"><vh>@mode body-yank-to-beginning-of-next-word</vh></v>
<v t="TL.20100307105950.3238"><vh>@mode body-yank-to-beginning-of-current-word</vh></v>
<v t="TL.20100307105950.3239"><vh>@mode body-yank-to-end-of-sentence</vh></v>
<v t="TL.20100307105950.3240"><vh>@mode body-yank-to-beginning-of-sentence</vh></v>
<v t="TL.20100307105950.3241"><vh>@mode body-yank-to-end-of-paragraph</vh></v>
<v t="TL.20100307105950.3242"><vh>@mode body-yank-to-beginning-of-paragraph</vh></v>
<v t="TL.20100307105950.3243"><vh>@mode body-yank-to-g-object</vh>
<v t="TL.20100307105950.3244"><vh>@mode body-yank-to-beginning-of-buffer</vh></v>
</v>
<v t="TL.20100307105950.3245"><vh>@mode body-yank-to-end-of-buffer</vh></v>
<v t="TL.20100307105950.3246"><vh>@mode body-yank-section</vh></v>
<v t="TL.20100307105950.3247"><vh>@mode body-yank-selected</vh></v>
</v>
<v t="TL.20100307105950.3248"><vh>@mode body-change-to-end-of-line</vh></v>
<v t="TL.20100307105950.3249"><vh>@mode body-change-object</vh>
<v t="TL.20100307105950.3250"><vh>@mode body-change-line</vh></v>
<v t="TL.20100307105950.3251"><vh>@mode body-change-to-end-of-word</vh></v>
<v t="TL.20100307105950.3252"><vh>@mode body-change-to-beginning-of-word</vh></v>
<v t="TL.20100307105950.3253"><vh>@mode body-change-to-end-of-sentence</vh></v>
<v t="TL.20100307105950.3254"><vh>@mode body-change-to-beginning-of-sentence</vh></v>
<v t="TL.20100307105950.3255"><vh>@mode body-change-to-end-of-paragraph</vh></v>
<v t="TL.20100307105950.3256"><vh>@mode body-change-to-beginning-of-paragraph</vh></v>
<v t="TL.20100307105950.3257"><vh>@mode body-change-to-g-object</vh>
<v t="TL.20100307105950.3258"><vh>@mode body-change-to-beginning-of-buffer</vh></v>
</v>
<v t="TL.20100307105950.3259"><vh>@mode body-change-to-end-of-buffer</vh></v>
<v t="TL.20100307105950.3260"><vh>@mode body-change-section</vh></v>
<v t="TL.20100307105950.3261"><vh>@mode body-change-selected</vh></v>
</v>
<v t="TL.20100307105950.3262"><vh>@mode body-substitute-char</vh></v>
<v t="TL.20100307105950.3263"><vh>@mode body-substitute-line</vh></v>
<v t="TL.20100307105950.3264"><vh>@mode body-indent</vh>
<v t="TL.20100307105950.3265"><vh>@mode body-indent-line</vh></v>
<v t="TL.20100307105950.3266"><vh>@mode body-indent-to-end-of-sentence</vh></v>
<v t="TL.20100307105950.3267"><vh>@mode body-indent-to-beginning-of-sentence</vh></v>
<v t="TL.20100307105950.3268"><vh>@mode body-indent-to-end-of-paragraph</vh></v>
<v t="TL.20100307105950.3269"><vh>@mode body-indent-to-beginning-of-paragraph</vh></v>
<v t="TL.20100307105950.3270"><vh>@mode body-indent-to-beginning-of-buffer</vh></v>
<v t="TL.20100307105950.3271"><vh>@mode body-indent-to-end-of-buffer</vh></v>
</v>
<v t="TL.20100307105950.3272"><vh>@mode body-unindent</vh>
<v t="TL.20100307105950.3273"><vh>@mode body-unindent-less</vh></v>
<v t="TL.20100307105950.3274"><vh>@mode body-unindent-to-end-of-paragraph</vh></v>
<v t="TL.20100307105950.3275"><vh>@mode body-unindent-to-beginning-of-paragraph</vh></v>
<v t="TL.20100307105950.3276"><vh>@mode body-unindent-to-end-of-sentence</vh></v>
<v t="TL.20100307105950.3277"><vh>@mode body-unindent-to-beginning-of-sentence</vh></v>
<v t="TL.20100307105950.3278"><vh>@mode body-unindent-to-end-of-buffer</vh></v>
<v t="TL.20100307105950.3279"><vh>@mode body-unindent-to-beginning-of-buffer</vh></v>
</v>
<v t="TL.20100307105950.3280"><vh>@mode body-goto-indent-previous-line</vh></v>
<v t="TL.20100307105950.3281"><vh>@mode body-goto-after-paragraph</vh></v>
<v t="TL.20100307105950.3282"><vh>@mode body-goto-before-paragraph</vh></v>
<v t="TL.20100307105950.3283"><vh>@mode body-join</vh></v>
<v t="TL.20100307105950.3284"><vh>@mode body-match</vh></v>
<v t="TL.20100307105950.3285"><vh>Tree actions from Body pane</vh>
<v t="TL.20100307105950.3286"><vh>@mode body-goto-next-visible</vh></v>
<v t="TL.20100307105950.3287"><vh>@mode body-goto-prev-visible</vh></v>
<v t="TL.20100307105950.3288"><vh>@mode body-expand-and-go-right</vh></v>
<v t="TL.20100307105950.3289"><vh>@mode body-contract-or-go-left</vh></v>
</v>
<v t="TL.20100307105950.3290"><vh>@mode vim-window-commands</vh></v>
</v>
</v>
<v t="ekr.20070224073109.1"></v>
<v t="ekr.20060603215208"></v>
</vnodes>
<tnodes>
<t tx="TL.20080702085131.2">If True: Save the Leo file and all modified derived files every time the external editor saves a modified file.

If False: Don't save the Leo file or any derived files when the external editor saves a file.</t>
<t tx="TL.20080702085131.3">If True: When a file is saved by the external editor the node associated with that file is becomes that selected node in Leo.

If False: The current node remains selected when a file, associated with a different node, is saved by the external editor.</t>
<t tx="TL.20080702085131.4">Only supported with the mod_tempfname.py plugin.

if True: The Open-With plugin will store temporary files utilizing cleaner file names (no unique number is appended to the node's headline text).  Unique temporary directory paths are used to insure unique files are created by creating temporary directories reflecting each node's ancestor nodes in the Leo outline.
Note: Do not have multiple sibling nodes (nodes having the same parent node) in Leo with the same headline text.  There will be a conflict if both are opened in an external editor at the same time. 

if False: The Open-With plugin will store temporary files with an appended unique number to insure unique temporary filenames.
</t>
<t tx="TL.20080702085131.5">Only supported with the mod_tempfname.py plugin.

If True: The Open-With plugin will use the file extension of the node's derived file for the extension of the temporary file passed to the external editor.  This can be useful for external editors that are providing text highlighting or other file type specific capabilities.

If False or no derived file exists for that node: The Open-With plugin will use the file extension of the node's default language (set by the @language command) or '.txt' if none exists.</t>
<t tx="TL.20090225102340.33"></t>
<t tx="TL.20090225102340.34">If set to True then if a match occurs on an @file type node the nodeActions plugin will save the clicked @file type node (and any other @file type nodes) to disk, if modified, before running the script.
</t>
<t tx="TL.20090303191843.1">Specifies the type of messages to be sent to the log pane.	Specifying a
higher message level will display that level and all lower levels.
The following integer values are supported:

0 = no messages
1 = Plugin triggered and the patterns that were matched (default)
2 = Double-click event passed or not to next plugin
3 = Patterns that did not match
4 = Code debugging messages
</t>
<t tx="TL.20100307105950.3137">To use the Vim emulation within you Leo files
place a copy this "@keys Vim bindings" node and its sub-nodes
into your myLeoSettings.leo file under the "@settings" node.
</t>
<t tx="TL.20100307105950.3138">@nocolor-node

Vi emulation - User documentation:
	Installation
	| Place a copy of the "@keys Vim bindings" node and its sub-nodes,
	| located in the leoSettings.leo file, under the "@settings" node
	| in the myLeoSettings.leo file
	|
	| The same procedure is performed to upgrade to a new version.
	| Note: Place any local customized key bindings in a "@keys My Vi" node
	|       below (not underneath) the "@keys Vim bindings" node in the
	|       myLeoSettings.leo file.

	Commands supported
	| Documentation of the supported vi commands is provided in Chapter 22 of
	| Leo's User Guide (http://webpages.charter.net/edreamleo/vimBindings.html).

	Commands not supported
	| Most unsupported Vi commands are either due to a Leo architecture problem
	| or the lack of an equivelent Leo function.
	| (See the Vim Developer Documentation for a detailed list of open issues)
	|
	| Most extensions to the Vi editor implemented in Vim are not supported
	| by Leo's Vi/Vim emulation at this time.

	Vi emulation in the Outline pane:
		Editing the headline text:
		| Only Vi commands that operate on a single line of text are supported.
		| Some workarounds were required due to the current Leo implementation.
		| Problems associated with editing a node's headline text are documented
		| in the "Open issues" section in the Vim Developer Documentation node.

		Traversing and reorganizing the outline:
		| Outline navigation and manipulation are mapped to keys based on Vi's
		| use of the H, J, K, and L key to move left, down, up, and right.  Refer
		| to Leo's User Guide for details on the operation's supported and their
		| key mappings.

		Outline traversing from the Body pane:
		| Outline navigation commands can also be invoked while in the body
		| panes' command mode.  This reduces the keystrokes necessary to switch
		| to Outline pane, select another node, and switch back to the body pane.
		| (Refer to Chapter 22 of the Leo User Guide for more details)
</t>
<t tx="TL.20100307105950.3139">History
	Version 03-07-10
		Assigned line scroll by one line to 'j' and 'k' keys when the
		   focus is in the outline 
		Fixed unexpected switch from Body to Outline focus when inserting
			character into 1st column of 1st row.
		Removed duplicate key bindings
			'p' and 'P' commands in "@shortcuts - vi in Outline pane" node
	Version 10-06-09
		Restored buffer 'scroll' by page in body pane (works in Tk GUI)
			(Moves cursor, scrolling to keep cursor visible)
		Added buffer 'scroll' by half-page and line in body pane
			(Moves cursor, scrolling to keep cursor visible)
		Added paragraph reformating using 'gqq' and 'gqap' commands
			Also added 'gww' and 'gwap' (should not move cursor but does)
		Mapped period key to repeat-complex-command.
			Repeats Leo's command line. Should repeat key commands.
		Removed mapping of Ctrl-[ to "Promote" function.
			Using Ctrl-[ to exit a search string entry was promoting the node.
	Version 12-Jul-09
		Fixed commands using beginning-of-line and end-of-line.  Functions
			in leoEditCommands.py were updated in past months to stay on
			current line when called when cursor at beginning/end of line.
		Effected commands:
			beginning-of-line function (&lt;vi command&gt; - &lt;node changed&gt;)
				|   - @mode body-beginning-of-line-mode
				O   - @mode body-new-line-above
				dd  - @mode body-delete-line
				dG  - @mode body-delete-to-end-of-buffer
				yy  - @mode body-yank-line
				yG  - @mode body-yank-to-end-of-buffer
				cc  - @mode body-change-line
				cG  - @mode body-change-to-end-of-buffer
				-   - @mode body-goto-indent-previous-line
			end-of-line function (&lt;vi command&gt; - &lt;node changed&gt;)
				o   - @mode body-new-line-below
				A   - @mode body-append
				dgg - @mode body-delete-to-beginning-of-buffer
				ygg - @mode body-yank-to-beginning-of-buffer
				cgg - @mode body-change-to-beginning-of-buffer
				$   - @mode body-end-of-line
				J   - @mode body-join
	Version 07-Mar-09
		Added "Vim Settings" node containing the Leo settings needed/used to
			support Vim emulation.
		Removed binding of '=' key to "double-click-icon-box" function
		| It is not a Vi/Vim related function
		| Re-enable it by placing the following bindings in an "@keys" node
		|   double-click-icon-box  ! body = equal
		|   enter-tree-double-click-node-mode ! tree = equal        
		Corrected installation procedure in the Vim User Documentation node
		Clarified descriptions in the User and Developer documentation nodes.
	Version 21-Oct-08
		Split the "Vim documentation" node into "Vim User Documentation"
			and "Vim Developer Documentation" nodes.
		Updated User and Developer documentation.
		Fixed '|' to not go to previous line if key pressed while at column 1
		Fixed '-' to go to previous line (Goes to column 1 instead of indent)
	Version 06-Aug-08
		Removed mapping of 'Ctrl-v' in the outline to toggle select mode.
			'Ctrl-v' already assigned to paste a node into the outline.
	Version 05-Aug-08
		Updated Vim documentation in the Users Guide.
		Changed key mapped to insert-node from 'Ctrl-o' to 'o'.
		Added mapping of 'Ctrl-v' in addition to 'v' to toggle select mode.
		Fixed unindent, now shifts one tab width instead of all.
		Added unindent by sentence, paragraph, and buffer support.
		Removed 'Ctrl-n' and 'Alt-n' as alternatives for 'n'.
		Removed '' and `` to go to last edit, use Undo/Redo (Leo limitation)
	Version 23-Jul-08
		Updated Vim documentation in the Users Guide.
		Added '^' key to move to the first column when in the outline pane.
		Modified 'Ctrl-/' to set one of multiple search options (see User Guide).
		Fixed move backward to beginning of word in headline text ('b' key).
		Fixed yank to end of paragraph to not yank trailing blank line ("y}" key).
		Removed selecting of text when using W,B,E keys in outline.
		Removed binding of "goto-line" to Ctrl-G as "&lt;num&gt;G" replacement (broken).
	Version 22-Jul-08
		Updated Vim documentation in the Users Guide.
		Added support for vi's Mark and Go To Mark commands in body pane.
		Added support for deleting selected text in body pane ("d&lt;cr&gt;").
		Added support for changing selected text in body pane ("c&lt;cr&gt;").
		Modified yank-selected-text ("y&lt;cr&gt;"), now exits select mode (body pane).
		Modified searches in outline to limit search to node and its subnodes.
		Modified searches in node's body to limit search to node's body.
		Added command to set search scope to "everything" ('Ctrl-/')
		Added command to "paste from clipboard then find next" ('Ctrl-p')
		Added command to prompt user for search and replace strings ('Alt-/')
		Added command to "replace then search" using 'Alt-/' strings ('Alt-p')
		Fixed ':w' (tree pane) and ':wq' (tree and body panes) commands
	Version 22-Jun-08
		Updated Vim documentation in the Users Guide.
		Improved "dd" command (handles blank lines correctly)
		added "'." and "`." commands to go to location of last edit.
		Added y&lt;cr&gt; mapping to yank selected text (removed Alt-Y).
		Added paste text support for node headlines.
		Added Delete,Yank,Change to beginning and end of buffer.
		Added &lt;cr&gt; to :wq command.
		Added text selection workaround for yt&lt;char&gt; and ct&lt;char&gt;.
		Added j and k to move to next/previous node when outline in focus.
		Added Ctrl-w j and Crl-w k to switch active view in a split window.
		Added Alt-G support when outline in focus.
		Removed binding of Ctrl-s to save-file (Not Vi, done by default).
		Removed all arrow key bindings (see open issues section) 
	Version 27-May-08
		Newly found commands
			| Additional commands were found that are available for mapping to
			| keys.  The "@shortcuts - unbind all commands" node has been
			| updated.
		Added Vim's window support (basic) to the body pane (Leo's editors)
			| 'Ctrl-w s' or 'Ctrl-w n' will add another editing window.
			| 'Ctrl-w w' or 'Ctrl-w p' will cycle focus between editor windows.
			| 'Ctrl-w c' or 'Ctrl-w q' will close the editor window with focus.
		Fixed Arrow mappings
			| All arrows were mapped to a goto-node command in outline pane.
			| Left and right arrows in outline pane move cursor one character.
		Added Ctrl-Arrow support in Outline and Body pane.
			| Ctrl-Arrow keys are also mapped to the goto-node commands
		Added Ctrl-Shift-Arrow support in Outline pane
			| Ctrl-Shift-Arrow keys are also mapped to the move-node commands
		Added vi's 'e' key mapping to move to the end of the current word.
			| Made possible by the newly found forward-end-word command.
		Added 'Shift-e' key mapping to select to the end of the current word.
			| Not-vi but useful until text editing commands work in headlines.
			| Made possible by the newly found forward-end-word-extend-select
		Added vi's Shift-f key mapping to go backwards to a character.
			| Made possible by the newly found backward-to-character command.
		Mapped '=' to double-click-icon-box command (Not Vi/Vim)
			| Use open-with plug-in to invoke external Vim editor without
			| mouse. Made possible by the newly found double-click-icon-box
			| command.
		Added vi's Ctrl-y and Ctrl-e to scroll outline up and down by lines.
			| Made possible by newly found scroll-outline-up/down-line commands
			| Also mapped vi's Ctrl-d,-u,-f,-b to same (until implemented).
		Removed Ctrl-y,Ctrl-d,Ctrl-p in outline to copy,delete,paste nodes.
			| Keys are used in vi for other functions. Use Ctrl-c,Ctrl-x,Ctrl-v
		Remapped copy-text to Alt-y to avoid use of vi key mappings
			| copy-text yanks the currently selected text into the clipboard.
			| Vi doesn't have a concept of "selected text" but it is useful.
		Mapped vi's Ctrl-d,-u,-e,-y to Ctrl-f,-b in body (until implemented)
		Fixed missing @mode node mapped to Ctrl-Shift-l
	Version 26-May-08
		Body pane key mappings - added and corrected
		Outline pane key mappings - initial release
		non-vi support key mappings - merged into Body and Outline mappings
		Documentation - Added
	Version 22-May-08
		Body pane key mappings - Released
		non-vi support key mappings - Released
	Version 18-May-08
		Body pane key mappings - Updated
		non-vi support key mappings - Updated

Vim Modeline (used by Vim for file specific settings)
	| vim: noet filetype=otl foldcolumn=1
</t>
<t tx="TL.20100307105950.3140">@nocolor-node

Vi emulation - Developer documentation:
	Realization:
		Leo Configuration:
		| The following configuration was used for all testing:
			@strings top_level_unbound_key_action = command
			@bool stayInTreeAfterEditHeadline = True
			@bool stayInTreeAfterSelect = True
			@bool outline_pane_has_initial_focus = True
		
		Leo's Panes:
		| A "pane" is a area of the screen containing a user interface dedicated
		| to supporting a common set of tasks.  Vi key mappings are associated
		| with the Outline pane, the Body pane, or to the entire Leo program.
		| (See the "Leo's @mode nodes" section bellow)
		
		Leo's Command/Insert States:
			Command state - Denoted by a blue background color (Outline,Body pane)
			| Keys are mapped to commands.
			Insert state - Denoted by a red background color (Outline,Body pane)
			| Keys pressed are inserted into the text.
			Grayed state - Denoted by a gray background color (Outline pane)
			| Keys pressed will cause the next node with a headline starting with
			| that key to be selected.  This "select node by first character"
			| feature is built into Leo. It is not part of the vi support.
			| 
			| This state is intentionally avoided in the vi based outline key
			| mappings. If in the "Grayed" state, enter Ctrl-i to switch to the
			| "Command" state.  The "Grayed" state can be entered from the
			| outline's "Command" state by pressing the Ctrl-] key.
		
		Leo's @mode nodes:
		| Most vi commands are implemented using Leo's @mode nodes to execute
		| macros or to implement Vi's multi-key commands.
		| 
		| Functions that act on the Outline pane are implemented in the
		| "@shortcuts - vi in Outline pane" node and its sub-nodes.
		| Modes associated with functions invoked when the Outline pane has
		| focus begin with "tree-".
		| Modes associated with functions invoked when the Body pane has
		| focus begin with "body-".
		|
		| Functions that act on the Body pane are implemented in the
		| "@shortcuts - vi in Body pane" node and its sub-nodes.
		|
		| Functions with both an Outline and a Body pane component are
		| implemented in the "@shortcuts - vi miscellaneous" node and
		| its sub-nodes.

			Multi-key Vi commands:
			| Vi has many commands that require multiple keys to invoke.
			| Each key except the last in the command are assigned to an
			| @mode node that, when executed, maps the subsequent allowed
			| keys in the command sequence.
			| The last key in the sequence is mapped directly to a Leo
			| command or to a "Macro" mode (see below). Any modes mapped
			| to a key by another mode are located in a child node of the
			| @mode node doing the mapping.
			| 
			| Example:
			| The "dtw" key sequence, which performs a "Delete To the 'W'
			| character" command (note the capital letters) has the following
			| key bindings:
			|   The 'd' key is mapped to the "vi-delete-object" @mode node.
			|   The "vi-delete-object" node binds the 't' key to the
			|       "vi-delete-to-char" @mode node.
			|   The "vi-delete-to-char" contains the Leo commands to emulate
			|       the vi "Delete to &lt;character&gt;" command.

			Macros
			| Many vi commands do not have an equivalent Leo command.
			| Instead, an @mode node is used to store a macro containing
			| a series of Leo commands that, when executed, emulates the
			| Vi functionality.

	Open issues
		Current character:
		| Vi normally uses two different "current character" designators
		| depending on the current state.

			Insert state:
			| In the Insert state, a vertical bar is placed between two
			| characters to indicate where the next key will be inserted.
			| Leo's cursor is of this type.

			Command state: 
			| In the Command state, vi expects that the cursor is highlighting
			| a current character and provides commands to enter the insert
			| state or paste text either before or after that current
			| character.  Leo's vi emulation currently does not support a
			| "current character" cursor. As a result, inserting and pasting
			| before or after is replaced by inserting or pasting "at" the
			| current cursor location.  For example, the 'i' and 'a' command
			| are both mapped to enter the insert state at the current cursor
			| location.

		Commands requesting user input:
		| Commands requesting user input must be the last command executed within
		| an @mode node.  This prevents the implementation of commands such as
		| "yank to &lt;character&gt;" that requires a "copy to clipboard" operation
		| after the "find-character" command.

		Editing node headlines using @mode nodes:
		| Commands modifying or selecting headline text do not work correctly
		| within a @mode node.  This eliminates accurate implementation of
		| vi's delete/change/substitute/yank object commands.  As a workaround,
		| the commands are currently written to only select the text.  The user
		| must perform the subsequent delete, change, substitute, and yank.

		Repeat last editing command:
		| The ability to repeat the last editing related command by pressing the
		| period key is not supported and there is no workaround in place.

		Repeat last cursor movement command:
		| The ability to repeat the last "To character" or "Find character"
		| command by selecting the ";" key is not supported and there is no
		| workaround in place.

		Range prefix to commands:
		| The ability to specify a numeric range prefix is not supported.  For
		| example, entering "3dd" will not delete the next three lines and "20G"
		| will not move the cursor to the 20th line in the file.

		Range prefix to objects:
		| The ability to specify a numeric range prefix to an object is not
		| supported.  For example, the "d2fx" command should Delete up to and
		| including the 2nd Found "x" character.

		Binding numeric keys:
		| Mapping a number to a command or an @mode node works but can not be
		| used as it prevents the number from being entered as text while in Vi's
		| insert state.

		Binding Arrow keys:
		| Binding arrow keys, with or without Shift, Ctrl, Alt, and their
		| combinations, to commands or @mode nodes have no effect. 

		Binding 'bksp' key:
		| Binding 'bksp' key to back-char to move back a character in command
		| mode prevents 'bksp' from deleting characters in text edit mode.

		Undo command:
		| Using the "undo" command (key 'u') to undo a change to a node's
		| headline text only works correctly after another node has been
		| selected.  It appears that changes made to a node's headline text are
		| not recorded in Leo's change history until the edited node has lost
		| focus.

		Functions missing or require changes:
			Toggle case:
			| Leo provides support for switching to upper or lower case but no
			| method exists to toggle between cases (used by Vi's "~" command).

			Replace current character:
			| Vi's "r" command allows user to replace the current character with
			| the next entered character.

			Move current line:
			| Vi has a collection of "z&lt;movement&gt;" commands that will move the
			| current line to the top, middle, and bottom of the screen.  They are
			| not supported in Leo.

			Move buffer up/down:
			| Vi maps keys to scroll the text up/down one line and by half the
			| number of visible lines.  Leo does not support this.

			Word related commands:
			| Vi supports two types of words in its commands: Words that consist
			| of only a subset of the character set and words that considers all
			| characters except the space and tab characters as part of a word.
			|
			| Leo's always considers a word to consist of a subset of characters
			| although some word related commands include different characters
			| than others.

			Forward and backward by sentences:
			| Leo's sentence related functions do not stop at empty lines nor do
			| they skip over periods within words nor do they stop at sentences
			| ending in non-periods nor do they stop at the end or beginning of
			| the buffer. Note: see forwardSentenceHelper and backSentenceHelper
			| functions.

			Focus to Body pane:
			| Leo functions exist which unconditionally set focus to the body pane
			| regardless of the active pane.
			|
			| For example, bracket matching commands ("%" key) do not work within
			| a node's headline text.  Instead, the command is performed on the
			| node's body text.

			Displaying mode help:
			| The "--&gt; mode-help" command has the following issues related to the
			| display of the "Help" tab:
				Key label always capitalized:
				| Vim commands are mapped to both lower-case and upper-case keys
				| but always appear mapped to upper-case keys within the "Help"
				| tab.
				Layout of tab's contents:
				| To improve readability and better support narrow tab cards,
				| display the mode's label without the "enter-" and "-mode" text
				| and place the key label before the mode label.
				|
				| For example, the following entries would change from:
				| 		enter-vi-delete-line-mode d
				| 		enter-vi-delete-to-begin-of-word-mode b
				| to:
				| 		d : vi-delete-line
				| 		b : vi-delete-to-begin-of-word

	Notes:
		Yank vs. Yank:
		| Vi's "yank" commands copy the selected text TO the clipboard.
		| Leo's "yank" commands insert text FROM the clipboard.

		copy-text in modes:
		| Leo's copy-text command does not work within a mode.  As a result,
		| all "copy to clipboard" capability is being implemented using the
		| kill-&lt;object&gt; command followed by Leo's "yank" command to put the
		| text back.

		paste-text in modes:
		| The paste-text command does not work within an @mode node.  Leo's
		| "yank" command is used instead.

		delete-node does not copy node to clipboard:
		| A copy-node command is issued to copy the node to the clipboard
		| followed by the delete-node command.

Vim Modeline (used by Vim for file specific settings)
	| vim: noet filetype=otl foldcolumn=1
</t>
<t tx="TL.20100307105950.3141"></t>
<t tx="TL.20100307105950.3142">@nocolor

This setting determines the initial binding for otherwise-unbound keystrokes
when no mode is in effect.  Note: the keyboard-quit command exits all modes.

The valid values are::

command:  Leo ignores the key (like Vim).
insert:  Leo inserts the key at the cursor (like Emacs)
overwrite: Leo replaces the character at the cursor.</t>
<t tx="TL.20100307105950.3143">This allows the newline character to switch from the outline pane to the body pane.</t>
<t tx="TL.20100307105950.3144">True:  Outline gets focus when a new window is opened.
False: Body pane gets focus when a new window is opened.</t>
<t tx="TL.20100307105950.3145">True: (Recommended) Selecting an outline node leaves the focus in the outline pane.

If this is False it will be harder to use the arrow keys in the headline.
    
False: (Legacy) Selecting an outline node transfers focus to the body pane.</t>
<t tx="TL.20100307105950.3146">#Miscellaneous vi commands
#---------------------------------

#Prevent Ctrl-[ (= Esc) from promoting node when invoked to exit entry of search string
promote                           ! kill = Ctrl-[

enter-focus-to-tree-mode          ! body = Tab      #Focus to Outline pane
enter-focus-to-body-mode          ! tree = Tab

enter-body-command-line-mode      ! body = colon    #Enter vi's command line
enter-tree-command-line-mode      ! tree = colon
full-command                      = Ctrl-colon      #Enter Leo's command mode

#undo/redo commands (vim commands using multiple Leo commands will need multiple undo commands)
undo                              ! body = u        #Undo last command
enter-tree-undo-mode              ! tree = u
redo                              ! body = Ctrl-r   #Re-do undone command
enter-tree-redo-mode              ! tree = Ctrl-r
repeat-complex-command            = period          #Re-do last command

goto-global-line                  = Alt-g           #Goto line (in derived file)

enter-body-shift-z-mode           = Shift-z         #ZZ command - Save file and exit
</t>
<t tx="TL.20100307105950.3147">#Undo last headline edit
#Bind: u
#Note: undo only seems to work from body pane
--&gt; focus-to-body
--&gt; undo
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3148">#Redo last headline edit
#Bind: Ctrl-r
#Note: redo only seems to work from body pane
--&gt; focus-to-body
--&gt; redo
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3149">#Focus to Outline pane
#Bind: &lt;Tab&gt;

--&gt; focus-to-tree
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3150">#Focus to Body pane
#Bind: &lt;Tab&gt;

--&gt; end-edit-headline
--&gt; focus-to-body
#   exit-named-mode: Prevents focus returning to outline
#                    when inserting character in 1st row/col.
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3151">#Enter vi's command line
#Bind: :

--&gt; set-silent-mode
#--&gt; mode-help

enter-body-command-revert-mode = e
enter-body-command-save-mode = w
enter-body-command-quit-mode = q
</t>
<t tx="TL.20100307105950.3152">#Reload current file
#Bind: :e&lt;cr&gt;
#Note: Vi command is :e!&lt;cr&gt;.
#      '!' not used since Leo prompts to save file changes.

revert = return</t>
<t tx="TL.20100307105950.3153">#Save current file (and maybe quit)
#Bind: :w[q]&lt;cr&gt;

--&gt; set-silent-mode
#--&gt; mode-help

save-file                           = return
enter-body-command-save-quit-mode   = q</t>
<t tx="TL.20100307105950.3154">#Save file and exit Leo
#Bind: :wq&lt;cr&gt;

enter-body-command-save-quit-return-mode = return
</t>
<t tx="TL.20100307105950.3155">#Save file and exit Leo
#Bind: :wq&lt;cr&gt;

--&gt; save-file
--&gt; exit-leo
</t>
<t tx="TL.20100307105950.3156">#Exit Leo
#Bind: :q&lt;cr&gt;

exit-leo = return</t>
<t tx="TL.20100307105950.3157">#Enter vi's command line
#Bind: :

--&gt; set-silent-mode
#--&gt; mode-help

--&gt; focus-to-body
enter-tree-command-revert-mode   = e
enter-tree-command-save-mode     = w
enter-tree-command-quit-mode     = q
</t>
<t tx="TL.20100307105950.3158">#Reload current file
#Bind: :e&lt;cr&gt;
#Note: Vi command is :e!&lt;cr&gt;.
#      '!' not used since Leo prompts to save file changes.

revert = return</t>
<t tx="TL.20100307105950.3159">#Save current file (and maybe quit)
#Bind: :w[q]&lt;cr&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-tree-command-save-only-mode      = return
enter-tree-command-save-quit-mode   = q
</t>
<t tx="TL.20100307105950.3160">#Not in use, see "@mode tree-comm#Save file
#Bind: :w&lt;cr&gt;

--&gt; save-file
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3161">#Save file and exit Leo
#Bind: :wq&lt;cr&gt;

enter-tree-command-save-quit-return-mode = return
</t>
<t tx="TL.20100307105950.3162">#Save file and exit Leo
#Bind: :wq&lt;cr&gt;

--&gt; save-file
--&gt; exit-leo
</t>
<t tx="TL.20100307105950.3163">#Exit Leo
#Bind: :q&lt;cr&gt;

exit-leo = return</t>
<t tx="TL.20100307105950.3164">#Save buffers and exit Leo
#Bind: ZZ

enter-body-shift-z-save-quit-mode = Shift-Z</t>
<t tx="TL.20100307105950.3165">#Save file and exit Leo
#Bind: ZZ

--&gt; save-file
--&gt; exit-leo
</t>
<t tx="TL.20100307105950.3166"># vi key bindings - Outline pane #
 ################################

#State change commands
#--------------------------------
set-insert-state                 ! tree = i        #To insert from command state
set-insert-state                 ! tree = a        #To insert from command state

edit-headline                    ! tree = Ctrl-i   #To command from grayed state
#end-edit-headline                ! tree = Ctrl-]   #To grayed from command state

set-command-state                ! tree = Ctrl-[   #To command from insert state
set-command-state                ! tree = Esc      #To command from insert state
set-command-state                ! tree = return   #To command from insert state

#Yank text commands
#--------------------------------
end-of-line-extend-selection     ! tree = Shift-y  #Select to end of line
enter-tree-yank-object-mode      ! tree = y        #'yy' selects line, 'y&lt;return&gt;' yanks selected text
toggle-extend-mode               ! tree = v        #select characters on/off (Vim selects lines)
#toggle-extend-mode              ! tree = Ctrl-v   #Not used. Leo uses Ctrl-v to paste nodes.

#Change text commands
#--------------------------------
end-of-line-extend-selection     ! tree = Shift-c  #Select to end of line
enter-tree-change-object-mode    ! tree = c        #Only 'cc' supported, follow with 'i'

#Substitute text commands
#--------------------------------
forward-char-extend-selection    ! tree = s
#kill-line                        ! tree = Shift-s #kill-line seems to only work within @mode

#Delete text commands
#--------------------------------
end-of-line-extend-selection     ! tree = Shift-d  #Temporary workaround, follow with 'i'
enter-tree-delete-text-object-mode ! tree = d      #Only 'dd' supported

delete-char                      ! tree = x
delete-char                      ! tree = delete

#Scroll commands
#--------------------------------
scroll-outline-up-page           ! tree = Ctrl-b   #Scroll full window
scroll-outline-down-page         ! tree = Ctrl-f

scroll-outline-up-page           ! tree = Ctrl-u   #Should scroll 1/2 window
scroll-outline-down-page         ! tree = Ctrl-d

scroll-outline-up-line           ! tree = Ctrl-y   #Scroll 1 line
scroll-outline-down-line         ! tree = Ctrl-e

#Move within line commands
#--------------------------------
forward-char                     ! tree = RtArrow
forward-char                     ! tree = l
back-char                        ! tree = Left     #LtArrow
back-char                        ! tree = h

forward-word                     ! tree = w
forward-word                     ! tree = Shift-w  #no before/after support.
back-word                        ! tree = b
back-word                        ! tree = Shift-b  #no before/after support.
forward-end-word                 ! tree = e        #no before/after support.
forward-end-word                 ! tree = Shift-e

beginning-of-line                ! tree = bar      #beginning-of-line (Vi style)
beginning-of-line                ! tree = ^        #beginning-of-line (Vi style)
end-of-line                      ! tree = $        #end-of-line (Vi style)

match-brackets                   ! tree = %        #Go to matching bracket

#Move within tree commands
#--------------------------------
enter-tree-goto-mode                ! tree = g        #gg command (go to first)
enter-tree-goto-last-node-mode      ! tree = Shift-g

enter-tree-goto-next-visible-mode   ! tree = Ctrl-j
enter-tree-goto-next-visible-mode   ! tree = DnArrow
enter-tree-goto-next-visible-mode   ! tree = Ctrl-DnArrow

enter-tree-goto-prev-visible-mode   ! tree = Ctrl-k
enter-tree-goto-prev-visible-mode   ! tree = UpArrow
enter-tree-goto-prev-visible-mode   ! tree = Ctrl-UpArrow

enter-tree-contract-or-go-left-mode ! tree = Ctrl-h
enter-tree-contract-or-go-left-mode ! tree = Ctrl-LtArrow
enter-tree-expand-and-go-right-mode ! tree = Ctrl-l
enter-tree-expand-and-go-right-mode ! tree = Ctrl-RtArrow

#Move with body pane (focus remains in tree pane)
#------------------------------------------------
enter-tree-goto-next-line-mode      ! tree = j
enter-tree-goto-prev-line-mode      ! tree = k

#Find character commands
#-----------------------
find-character                      ! tree = f
backward-find-character             ! tree = Shift-f

#search text commands (limited to node and subnodes unless stated otherwise)
#  Note: Backward searches ('?') not supported. They do not go beyond current node's body pane.
#---------------------------
enter-tree-search-forward-mode      ! tree = /        #Search forward within node and subnodes
do-nothing                          ! tree = ?        #Does not work, scope only current body
do-nothing                          ! tree = Ctrl-?   #Does not work, scope only current body
find-next                           ! tree = n        #Find next (same scope, same direction)
find-prev                           ! tree = Shift-n  #Find next (same scope, other direction)
enter-body-search-options-mode      ! tree = Ctrl-/   #Change search options
#Note: changing options puts cursor in body and exits @mode macro. Use &lt;tab&gt; to go to headline.

#Replace [and find next (scope set by search command)] using paste buffer (clipboard)
#  Note: Scope and direction set by last search command '/', '?' or 'Ctrl-/'(scope only)
#  Note: Same replace commands implemented for both "tree" and "body" panes
#--------------------------------
paste-text                          ! tree = p        #Paste text before cursor.
paste-text                          ! tree = Shift-p  #Paste after not supported
do-nothing                          ! tree = Ctrl-p   #Does not work in headlines, use 'pn'

#Replace and find next (user prompted) (search direction taken from last use of '/' or '?')
enter-tree-replace-string-mode      ! tree = Alt-/    #Prompt for search &amp; replace string
change-then-find                    ! tree = Alt-p    #Replace then search (use after Alt-/)

#Node create/delete/copy/paste commands
#--------------------------------------
insert-node                      ! tree = o

enter-tree-copy-node-mode        ! tree = Ctrl-c
enter-tree-delete-node-mode      ! tree = Ctrl-x
enter-tree-paste-node-mode       ! tree = Ctrl-v

#Move nodes
#--------------------------------
enter-tree-move-outline-down-mode   ! tree = Ctrl-Shift-j
enter-tree-move-outline-left-mode   ! tree = Ctrl-Shift-h
enter-tree-move-outline-right-mode  ! tree = Ctrl-Shift-l
enter-tree-move-outline-up-mode     ! tree = Ctrl-Shift-k

enter-tree-move-outline-down-mode   ! tree = Ctrl-Shift-DnArrow
enter-tree-move-outline-left-mode   ! tree = Ctrl-Shift-LtArrow
enter-tree-move-outline-right-mode  ! tree = Ctrl-Shift-RtArrow
enter-tree-move-outline-up-mode     ! tree = Ctrl-Shift-UpArrow

#Transclude nodes commands
#--------------------------------
enter-tree-clone-node-mode             ! tree = t        #Clone current node
enter-tree-goto-next-clone-node-mode   ! tree = Ctrl-t

#Mark nodes commands
#--------------------------------
enter-tree-mark-node-mode              ! tree = m
enter-tree-goto-next-marked-node-mode  ! tree = Ctrl-m
enter-tree-unmark-all-nodes-mode       ! tree = Alt-m
</t>
<t tx="TL.20100307105950.3167">#Yank &lt;obj&gt; (vi's yank is the same as Leo's copy-text)
#Bind: y&lt;obj&gt;
#Note: Problem, all comamnds that select text switch to body pane.
      
--&gt; set-silent-mode

copy-text   = return
select-all  = y
</t>
<t tx="TL.20100307105950.3168">#Change &lt;object&gt;
#Bind: c&lt;obj&gt;
#Note: Problem, any select text commands switches focus to body pane.

--&gt; set-silent-mode

kill-line = c	   #follow with 'i' to enter text
</t>
<t tx="TL.20100307105950.3169">--&gt; set-silent-mode
kill-line = d
</t>
<t tx="TL.20100307105950.3170">--&gt; end-edit-headline
--&gt; copy-node
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3171">#Paste node
#Bind: Ctrl-v

--&gt; end-edit-headline
--&gt; paste-node
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3172">--&gt; end-edit-headline
--&gt; copy-node
--&gt; delete-node         #Does not copy to clipboard
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3173">#Go to first node
#Bind: gg 

--&gt; set-silent-mode
--&gt; goto-last-node
--&gt; edit-headline

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3174">#Go to specified node location
#Bind: g&lt;location&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-node-goto-first-node-mode     = g</t>
<t tx="TL.20100307105950.3175">#Go to first node
#Bind: gg 

--&gt; set-silent-mode
--&gt; goto-first-node
--&gt; edit-headline

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3176">--&gt; goto-next-visible
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3177">--&gt; goto-prev-visible
--&gt; edit-headline

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3178">#Search forward within suboutline
#Bind: /
--&gt; set-find-suboutline-only
--&gt; search-forward</t>
<t tx="TL.20100307105950.3179">#Specify search and replace string
#  then Search in direction of last '/', '?' command within suboutline
#  (follow with 'p' to replace or 'Ctrl-p' to replace and search)
#Bind: Ctrl-/

--&gt; set-find-suboutline-only
--&gt; replace-string</t>
<t tx="TL.20100307105950.3180">--&gt; contract-or-go-left
--&gt; edit-headline

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3181">--&gt; contract-node
--&gt; edit-headline

--&gt; exit-named-mode 
</t>
<t tx="TL.20100307105950.3182">--&gt; expand-and-go-right
--&gt; edit-headline

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3183">--&gt; move-outline-up
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3184">--&gt; move-outline-down
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3185">--&gt; move-outline-left
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3186">--&gt; move-outline-right
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3187">#Clone current node
#Bind: t

--&gt; clone-node
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3188">#Go to next cloned node
#Bind: ctrl-t

--&gt; goto-next-clone
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3189">#Mark current node
#Bind: m

--&gt; mark
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3190">#Go to next marked node
#Bind: ctrl-m

--&gt; goto-next-marked
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3191">#Unmark all nodes
#Bind: Alt-m

--&gt; unmark-all
--&gt; edit-headline
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3192"></t>
<t tx="TL.20100307105950.3193">#Scroll body up one page when focus is in the outline pane
#Bind: j

#--&gt; focus-to-body
--&gt; next-line
--&gt; focus-to-tree
--&gt; edit-headline
--&gt; exit-named-mode   #Runs faster when used
</t>
<t tx="TL.20100307105950.3194">#Scroll body up one line when focus is in the outline pane
#Bind: k

#--&gt; focus-to-body
--&gt; previous-line
--&gt; focus-to-tree
--&gt; edit-headline
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3195"># vi key bindings - body pane #
 ##############################

#State change commands
#--------------------------------
set-insert-state                 ! body = i        #Insert at cursor
set-insert-state                 ! body = a        #Insert at cursor
enter-body-insert-at-indent-mode ! body = Shift-i  #Insert at first non-space
enter-body-append-mode           ! body = Shift-a  #Insert at end of line
set-overwrite-state              ! body = Shift-r  #Overwrite text
enter-body-new-line-below-mode   ! body = o        #Open new line below
enter-body-new-line-above-mode   ! body = Shift-o  #Open new line above
keyboard-quit                    ! body = Ctrl-[   #Exit insert state
keyboard-quit                    ! body = esc      #Exit insert state

#Change commands
#--------------------------------
enter-body-change-to-end-of-line-mode ! body = Shift-c
enter-body-change-object-mode         ! body = c        #Supports 'cd','cw','cb'

#Substitute commands
#--------------------------------
enter-body-substitute-char-mode    ! body = s        #Replace current character
enter-body-substitute-line-mode    ! body = Shift-s  #Replace current line

#Delete commands
#--------------------------------
enter-body-delete-object-mode    ! body = d        #Supports 'dd','dw','db'
enter-body-delete-to-end-of-line-mode ! body = Shift-d
delete-char                      ! body = x
delete-char                      ! body = delete

#Yank text commands
#--------------------------------
enter-body-yank-to-end-of-line-mode   ! body = Shift-y
enter-body-yank-object-mode      ! body = y        #Yank objects
toggle-extend-mode               ! body = Ctrl-v   #select characters-on/off
toggle-extend-mode               ! body = v        #select characters-on/off (Vim selects lines)

#Indent line commands
#--------------------------------
enter-body-indent-mode           ! body = greater  #&gt;&lt;obj&gt; commands
enter-body-unindent-mode         ! body = less     #&lt;&lt;obj&gt; command

#Join lines
#--------------------------------
enter-body-join-mode             ! body = Shift-j

#Move within line commands
#--------------------------------
back-char                        ! body = h
back-char                        ! body = LtArrow
#back-char                       ! body = bksp     #Prob: Effects bksp in edit
forward-char                     ! body = l
forward-char                     ! body = RtArrow

forward-word                     ! body = w        #no before/after support.
forward-word                     ! body = Shift-w
back-word                        ! body = b        #no before/after support.
back-word                        ! body = Shift-b  #
forward-end-word                 ! body = e        #no before/after support.
forward-end-word                 ! body = Shift-e

beginning-of-line											  ! body = |
back-to-indentation                ! body = ^
end-of-line									        ! body = $
enter-body-goto-indent-previous-line-mode   !body = minus

#Move within tree commands (while focus is in body pane)
#-------------------------------------------------------
enter-body-goto-prev-visible-mode   ! body = Ctrl-k
enter-body-goto-prev-visible-mode   ! body = Ctrl-UpArrow
enter-body-contract-or-go-left-mode ! body = Ctrl-h
enter-body-contract-or-go-left-mode ! body = Ctrl-LtArrow
enter-body-expand-and-go-right-mode ! body = Ctrl-l
enter-body-expand-and-go-right-mode ! body = Ctrl-RtArrow
enter-body-goto-next-visible-mode   ! body = Ctrl-j
enter-body-goto-next-visible-mode   ! body = Ctrl-DnArrow

#Move within buffer commands
#--------------------------------
next-line                         ! body = j
next-line                         ! body = DnArrow
previous-line                     ! body = k
previous-line                     ! body = UpArrow

forward-sentence                  ! body = )
back-sentence                     ! body = (
enter-body-goto-after-paragraph-mode  ! body = }
enter-body-goto-before-paragraph-mode ! body = {

enter-body-g-mode                   ! body = g        #g commands - Goto line, reformat text)
enter-body-goto-end-of-buffer-mode  ! body = Shift-g

enter-body-match-mode               ! body = %

#Scroll commands
#--------------------------------
scroll-up-page                           ! body = Ctrl-b   #Scrolls full window
scroll-down-page                         ! body = Ctrl-f

scroll-up-half-page                      ! body = Ctrl-u   #should scroll 1/2
scroll-down-half-page                    ! body = Ctrl-d

scroll-up-line                           ! body = Ctrl-y   #should scroll 1 line
scroll-down-line                         ! body = Ctrl-e

#Find character commands
#--------------------------------
find-character                      ! body = f
backward-find-character             ! body = Shift-f

#search text commands (limited to current node's body text unless stated otherwise)
#---------------------------
enter-body-search-forward-mode      ! body = /        #Search forward within node's body text
enter-body-search-backward-mode     ! body = ?        #Search backward within node's body text
find-next                           ! body = n        #Find next (same scope, same direction)
find-prev                           ! body = Shift-n  #Find next (same scope, other direction)
enter-body-search-options-mode      ! body = Ctrl-/   #Change search options

#Replace [and find next] using paste buffer (clipboard)
#  Note: Scope and direction set by last search command '/', '?' or 'Ctrl-/'(scope only)
#--------------------------------
paste-text                          ! body = p        #To paste a line before current: use '|p'
paste-text                          ! body = Shift-p  #Paste text before cursor.
enter-body-paste-then-find-mode     ! body = Ctrl-p   #Replace then find next from last /,?

#Replace and find next 'simple' string (search direction taken from last use of '/' or '?')
enter-body-replace-string-mode      ! body = Alt-/    #Prompt for search &amp; replace string
change-then-find                    ! body = Alt-p    #Replace then search (use after Alt-/)

#Mark and go to mark commands
#----------------------------
point-to-register    ! body = m
jump-to-register     ! body = quoteright  # '
jump-to-register     ! body = quoteleft   # `

#Window commands
#--------------------------------
enter-vim-window-commands-mode      ! body = Ctrl-w
</t>
<t tx="TL.20100307105950.3196">#Search forward within node
#Bind: /

--&gt; set-find-node-only
--&gt; search-forward
</t>
<t tx="TL.20100307105950.3197">#Search forward within node
#Bind: /

--&gt; set-find-node-only
--&gt; search-backward
</t>
<t tx="TL.20100307105950.3198">#Search forward within node
#Bind: /

--&gt; set-find-node-only
--&gt; search-forward
</t>
<t tx="TL.20100307105950.3199">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/

--&gt; set-silent-mode
--&gt; mode-help

enter-body-search-all-nodes-mode          = return
enter-body-search-all-nodes-mode          = a

enter-body-search-toggle-headline-mode    = h
enter-body-search-toggle-headline-mode    = o
enter-body-search-toggle-body-mode        = b
enter-body-search-toggle-mark-mode        = m
enter-body-search-toggle-regex-mode       = r
</t>
<t tx="TL.20100307105950.3200">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ &lt;cr&gt;

--&gt; set-find-everywhere

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3201">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ h
#      Ctrl-/ o

--&gt; toggle-find-in-headline-option

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3202">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ b

--&gt; toggle-find-in-body-option

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3203">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ m

enter-body-search-toggle-mark-finds-mode   = f
enter-body-search-toggle-mark-changes-mode = c
</t>
<t tx="TL.20100307105950.3204">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ m f

--&gt; toggle-find-mark-finds-option

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3205">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ m c

--&gt; toggle-find-mark-changes-option

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3206">#Set search scope to search all nodes in current direction
#Bind: Ctrl-/ r

--&gt; toggle-find-regex-option

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3207">#Specify search and replace string
#  then search in direction of last '/', '?' command within node
#  (follow with 'p' to replace or 'Ctrl-p' to replace and search)
#Bind: Alt-/

--&gt; set-find-node-only
--&gt; replace-string
</t>
<t tx="TL.20100307105950.3208">#Paste then search in current direction
#  (Preceeded by '/' or '?' to find first occurance)
#Bind: Alt-p

--&gt; yank
--&gt; find-next

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3209">#Go to end of buffer
#Bind: G

--&gt; set-silent-mode
--&gt; end-of-buffer
--&gt; beginning-of-line   #vi puts curser in first column of last row

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3210">#Go to &lt;object&gt;
#Bind: g&lt;obj&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-body-g-beginning-of-buffer-mode   ! body = g

#Reformat text - cursor moved to end of formated text
enter-body-g-q-mode                        ! body = q

#Reformat text - cursor remains at current location (not supported)
enter-body-g-w-mode                        ! body = w
</t>
<t tx="TL.20100307105950.3211">#Go to top of buffer
#Bind: gg (Vim)
#Note: Vi key binding of '1G' not used. Bound numbers are not entered when editing.
#Note: Vim also supports 'gg' to go to top of buffer.
--&gt; set-silent-mode
--&gt; beginning-of-buffer

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3212">#Format text &lt;object&gt; (Moving cursor to end of formatted text)
#Bind: gq&lt;obj&gt;

fill-paragraph ! body = q		       #gqq - Format the entire paragraph
#Note: reformat-paragraph also exists; Seems to do the same thing

enter-body-g-wq-a-mode ! body = a		#gqa&lt;obj&gt; - Format all of the specified scope</t>
<t tx="TL.20100307105950.3213">#Format text &lt;object&gt; - Keeping cursor at same location (not supported yet)
#Bind: gw&lt;obj&gt;

fill-paragraph ! body = w	#gww - Format the entire paragraph
#Note: reformat-paragraph also exists; Seems to do the same thing

enter-body-g-wq-a-mode ! body = a		#gqa&lt;obj&gt; - Format all of the specified scope</t>
<t tx="TL.20100307105950.3214">#Format paragraph
#Bind: gqap

fill-paragraph ! body = p		#Format the entire paragraph
#Note: reformat-paragraph also exists; Seems to do the same thing
</t>
<t tx="TL.20100307105950.3215">#Open new line below current line
#Bind: o

--&gt; set-silent-mode
--&gt; end-of-line
--&gt; insert-newline   #Enter insert mode

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3216">#Open new line above current line
#Bind: O

--&gt; set-silent-mode
--&gt; beginning-of-line
--&gt; insert-newline
--&gt; keyboard-quit
--&gt; previous-line
--&gt; set-insert-state

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3217">#Append text to end of current line
#Bind: A

--&gt; set-silent-mode
--&gt; end-of-line      #Delete the &lt;cr&gt;&lt;lf&gt; at the end of the line
--&gt; set-insert-state

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3218">#Insert text at first non-blank character in current line
#Bind: I

--&gt; set-silent-mode
--&gt; back-char        #Move cursor to cancel any selected text.
--&gt; forward-char     #  otherwise insert will replace selected text.
--&gt; back-to-indentation #cursor to beginning of first word in line
--&gt; set-insert-state

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3219">#Delete to the end of the current line
#Bind: D
#Note: If cursor at end of line, command will delete next line

--&gt; set-silent-mode
--&gt; end-of-line-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3220">#Delete &lt;obj&gt; command
#Bind: d&lt;obj&gt;

--&gt; set-silent-mode
#--&gt; mode-help

enter-body-delete-line-mode      = d
enter-body-delete-selected-mode  = return       #Delete selected text(exit select mode)


enter-body-delete-to-end-of-word-mode           = w
enter-body-delete-to-end-of-word-mode           = Shift-w
enter-body-delete-to-begin-of-word-mode         = b
enter-body-delete-to-begin-of-word-mode         = Shift-b
enter-body-delete-to-end-of-sentence-mode       = )
enter-body-delete-to-beginning-of-sentence-mode = (
enter-body-delete-to-end-of-paragraph-mode      = }
enter-body-delete-to-beginning-of-paragraph-mode  = {
enter-body-delete-section-mode                  = %
enter-body-delete-to-g-object-mode              = g
enter-body-delete-to-end-of-buffer-mode         = shift-g

enter-body-delete-to-char-mode     = t</t>
<t tx="TL.20100307105950.3221">#Deleted current line
#Bind: dd
#Note: Last line in file will not be deleted.

--&gt; set-silent-mode

--&gt; beginning-of-line               #   on beginning of current line

--&gt; next-line-extend-selection      #Select line and the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3222">#Deleted to end of word
#Bind: dw
#Note: Travels past end of line.
#Note: Forward-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; split-line       #Split word (kill-word only deletes whole words)
--&gt; kill-word        #Delete to end of word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3223">#Delete to beginning of word.i
#Bind: db
#Note: Travels past beginning of line.

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3224">#Delete to end of sentence
#Bind: d)

--&gt; set-silent-mode
--&gt; forward-sentence-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3225">#Delete to beginning of sentence
#Bind: d(

--&gt; set-silent-mode
--&gt; back-sentence-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3226">#Delete to end of paragraph
#Bind: d}

--&gt; set-silent-mode
--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; back-char-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3227">#Delete to beginning of paragraph
#Bind: d{

--&gt; set-silent-mode
--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3228">#Delete to 'g' type object (ex: gg is 1st line in buffer)
#Bind: dg

enter-body-delete-to-beginning-of-buffer-mode     = g
</t>
<t tx="TL.20100307105950.3229">#Delete to beginning of buffer (including all of current line)
#Bind: dgg

--&gt; set-silent-mode

--&gt; end-of-line
--&gt; forward-char
#--&gt; beginning-of-line

--&gt; beginning-of-buffer-extend-selection
--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3230">#Delete to end of buffer
#Bind: dG

--&gt; set-silent-mode

--&gt; beginning-of-line
--&gt; back-char

--&gt; end-of-buffer-extend-selection
--&gt; kill-region
--&gt; beginning-of-line

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3231">#Delete from current bracket type to its apposing bracket
#Bind: d%

--&gt; set-silent-mode

--&gt; set-extend-mode
--&gt; match-brackets
--&gt; clear-extend-mode

--&gt; kill-region

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3232">#Delete to character
#Bind: dt&lt;character&gt;
#Note: Character search not limited to current line.

--&gt; set-silent-mode
--&gt; zap-to-character

</t>
<t tx="TL.20100307105950.3233">#Delete selected text
#Bind: d&lt;cr&gt;


#Copy to clipboard (copy-text doesn't work in modes)
--&gt; kill-region

#Turn off select mode
--&gt; clear-extend-mode

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3234">#Yank text to the end of the current line
#Bind: Y

--&gt; set-silent-mode
--&gt; end-of-line-extend-selection
--&gt; kill-region
--&gt; yank
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3235">#Yank &lt;obj&gt; (Leo's copy-text)
#Bind: y&lt;obj&gt;
#Note: yank-to-character not supported.  Can not issue yank command.
      #Leo's zap-to-character must be last command (needs user input)
      #Issue 'dt&lt;char&gt;' followed by 'p'
      
--&gt; set-silent-mode
#--&gt; mode-help

enter-body-yank-selected-mode                     = return #Yank selected text(exit select mode)
enter-body-yank-line-mode                         = y
enter-body-yank-to-beginning-of-next-word-mode    = w
enter-body-yank-to-beginning-of-current-word-mode = b
enter-body-yank-to-end-of-sentence-mode           = )
enter-body-yank-to-beginning-of-sentence-mode     = (
enter-body-yank-to-end-of-paragraph-mode          = }
enter-body-yank-to-beginning-of-paragraph-mode    = {
enter-body-yank-to-g-object-mode                  = g
enter-body-yank-to-end-of-buffer-mode             = Shift-g
enter-body-yank-section-mode                      = %

#Yank to user specified character
#Workaround used until @mode's execute commands after
#command requesting user input.
#follow command with "y&lt;cr&gt;" to yank &amp; "v" to unselect
find-character-extend-selection                 = t
backward-find-character-extend-selection        = Shift-t
</t>
<t tx="TL.20100307105950.3236">#Yank current line
#Bind: yy
#Note: Problem yanking empty line. Also yanks line below it.
#Note: Problem yanking last line.  Does not yank a trailing &lt;cr&gt;

--&gt; set-silent-mode

#body-delete-line macro
--&gt; set-silent-mode
--&gt; beginning-of-line
--&gt; end-of-line-extend-selection    #Select all text on current line and
--&gt; forward-char-extend-selection   #  select the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; beginning-of-line
#--&gt; forward-char

--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3237">#Yank to beginning of next word
#Bind: dw
#Note: Travels past end of line.
#Note: Forward-word-extend-selection not used, it consumes all
#      trailing non-alpha-numeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to beginning of next word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3238">#Yank to beginning of current word.
#Bind: yb
#Note: Travels past beginning of line.
#Note: AlphaNumeric word in contact with a non-alphanumeric word
      #is not handled correctly. Can cause text to be deleted or replicated.

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char


--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3239">#Yank to end of sentence
#Bind: y)

--&gt; set-silent-mode
--&gt; forward-sentence-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3240">#Yank to beginning of sentence
#Bind: y(

--&gt; set-silent-mode
--&gt; back-sentence-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3241">#Yank to end of paragraph
#Bind: y}
#Note: Yanking paragraph at end of body will not yank 1 or
#      two characters (Characters after final cursor position)

--&gt; set-silent-mode
--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; back-char-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3242">#Yank to beginning of paragraph
#Bind: y{

--&gt; set-silent-mode
--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; kill-region
#Put text back
--&gt; yank
#Clear selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3243">#Yank to 'g' type object (ex: gg is 1st line in buffer)
#Bind: yg

enter-body-yank-to-beginning-of-buffer-mode     = g
</t>
<t tx="TL.20100307105950.3244">#Yank to beginning of buffer
#Bind: ygg

--&gt; set-silent-mode

--&gt; end-of-line
--&gt; forward-char
#--&gt; beginning-of-line

--&gt; beginning-of-buffer-extend-selection
--&gt; kill-region
--&gt; yank

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3245">#Yank to end of buffer
#Bind: yG

--&gt; set-silent-mode

--&gt; beginning-of-line
--&gt; back-char

--&gt; end-of-buffer-extend-selection
--&gt; kill-region
--&gt; yank                #Put text back
--&gt; beginning-of-line

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3246">#Yank from current bracket type to its opposing bracket
#Bind: y%

--&gt; set-silent-mode

--&gt; set-extend-mode
--&gt; match-brackets
--&gt; clear-extend-mode

#Copy to clipboard (copy-text doesn't work in modes)
--&gt; kill-region
--&gt; yank

#Remove highlighting of selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3247">#Yank selected text
#Bind: y&lt;cr&gt;


#Copy to clipboard (copy-text doesn't work in modes)
--&gt; kill-region
--&gt; yank

#Turn off select mode
--&gt; clear-extend-mode

#Remove highlighting of selection
--&gt; back-char
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3248">#Change to end of line
#Bind: C
#Note: If cursor at end of line, command will delete next line and enter insert mode
#      Use 'i' command instead (enter insert mode)

--&gt; set-silent-mode
--&gt; end-of-line-extend-selection
--&gt; kill-region

--&gt; set-insert-state           #Enter insert mode</t>
<t tx="TL.20100307105950.3249">#Change &lt;object&gt;
#Bind: c&lt;obj&gt;
#Note: change-to-character not supported.  Can not issue set-insert-state.
      #Leo's zap-to-character must be last command (needs user input)
      #Emulate command by issuing 'dt&lt;char&gt;' followed by 'i'

--&gt; set-silent-mode
#--&gt; mode-help

enter-body-change-selected-mode                     = return #Change selected text(exit select mode)
enter-body-change-line-mode                         = c
enter-body-change-to-end-of-word-mode               = w
enter-body-change-to-beginning-of-word-mode         = b
enter-body-change-to-end-of-sentence-mode           = )
enter-body-change-to-beginning-of-sentence-mode     = (
enter-body-change-to-end-of-paragraph-mode          = }
enter-body-change-to-beginning-of-paragraph-mode    = {
enter-body-change-to-g-object-mode                  = g
enter-body-change-to-end-of-buffer-mode             = Shift-g
enter-body-change-section-mode                      = %

#Change to specified character
#Workaround used until @mode's execute commands after
#command requesting user input.
#follow command with "i" to change the text.
find-character-extend-selection                 = t
backward-find-character-extend-selection        = Shift-t
</t>
<t tx="TL.20100307105950.3250">#Change to end of line
#Bind: cc
#Note: Performs body-delete-line followed by a an insert-newline

#Note: Problem deleting empty line. Also deletes line below it.
      #Use Join function instead (key 'J')
#Note: Problem deleting last line.  Also deletes line above it.
      #Invoke undo one time to restore line ('u' key)

--&gt; set-silent-mode
--&gt; beginning-of-line
--&gt; end-of-line-extend-selection    #Select all text on current line and
--&gt; forward-char-extend-selection   #  select the &lt;cr&gt;
--&gt; kill-region                     #Remove text, place in paste buffer

--&gt; set-insert-state</t>
<t tx="TL.20100307105950.3251">#Change to end of word
#Bind: cw
#Note: Travels past end of line.
#Note: forward-word-extend-selection not used,
#      it skips non-alphanumeric characters.

--&gt; set-silent-mode
--&gt; split-line
--&gt; kill-word        #Delete to end of word, copies text into paste-buffer
--&gt; back-char        #Restore split line
--&gt; delete-char      #

--&gt; set-insert-state</t>
<t tx="TL.20100307105950.3252">#Change to beginning of word
#Bind: cb

--&gt; set-silent-mode
--&gt; split-line
--&gt; back-word        #Problem: doesn't stop at beginning of line
--&gt; kill-word
--&gt; delete-char      #Restore split line

--&gt; set-insert-state</t>
<t tx="TL.20100307105950.3253">#Delete to end of sentence
#Bind: d)

--&gt; set-silent-mode
--&gt; forward-sentence-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3254">#Delete to beginning of sentence
#Bind: d(

--&gt; set-silent-mode
--&gt; back-sentence-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3255">#Delete to end of paragraph
#Bind: d}

--&gt; set-silent-mode
--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; back-char-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3256">#Delete to beginning of paragraph
#Bind: d{

--&gt; set-silent-mode
--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3257">#Change to 'g' type object (ex: gg is 1st line in buffer)
#Bind: cg

enter-body-change-to-beginning-of-buffer-mode     = g
</t>
<t tx="TL.20100307105950.3258">#Change to beginning of buffer
#Bind: cgg

--&gt; set-silent-mode

--&gt; end-of-line
--&gt; forward-char
#--&gt; beginning-of-line

--&gt; beginning-of-buffer-extend-selection
--&gt; kill-region
--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3259">#Delete to end of buffer
#Bind: cG

--&gt; set-silent-mode

--&gt; beginning-of-line
--&gt; back-char

--&gt; end-of-buffer-extend-selection
--&gt; kill-region

--&gt; insert-newline   #Enter insert mode

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3260">#Change from current bracket type its matching bracket type
#Bind: c%

--&gt; set-silent-mode

--&gt; set-extend-mode
--&gt; match-brackets
--&gt; clear-extend-mode

--&gt; kill-region
--&gt; yank             #Show what text will be replaced

--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3261">#Yank selected text
#Bind: c&lt;cr&gt;


#Delete selected text (keeping copy in paste buffer)
--&gt; kill-region

#Turn off select mode
--&gt; clear-extend-mode

--&gt; set-insert-state

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3262">#Substitute character
#Bind: s

--&gt; set-silent-mode
--&gt; delete-char
--&gt; set-insert-state           #Enter insert mode</t>
<t tx="TL.20100307105950.3263">#Substitute line
#Bind: S

--&gt; set-silent-mode
--&gt; kill-line
--&gt; set-insert-state           #Enter insert mode</t>
<t tx="TL.20100307105950.3264">#Indent &lt;object&gt;
#Bind: &gt;&lt;obj&gt;

--&gt; set-silent-mode

enter-body-indent-line-mode = greater
enter-body-indent-to-end-of-sentence-mode = )
enter-body-indent-to-beginning-of-sentence-mode = (
enter-body-indent-to-end-of-paragraph-mode = }
enter-body-indent-to-beginning-of-paragraph-mode = {
enter-body-indent-to-beginning-of-buffer-mode = g
enter-body-indent-to-end-of-buffer-mode = Shift-g
</t>
<t tx="TL.20100307105950.3265">#Indent line
#Bind: &gt;&gt;

--&gt; set-silent-mode
--&gt; back-to-indentation #cursor to beginning of first word in line
--&gt; forward-char-extend-selection

--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3266">#Indent to beginning of sentence
#Bind: &gt;(

--&gt; forward-sentence-extend-selection
--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3267">#Indent to beginning of sentence
#Bind: &gt;)

--&gt; back-sentence-extend-selection
--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3268">#Indent to end of paragraph
#Bind: &gt;}

--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3269">#Indent to beginning of paragraph
#Bind: &gt;{

--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3270">#Indent to end of buffer
#Bind: &gt;G

--&gt; set-silent-mode
--&gt; beginning-of-buffer-extend-selection
--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3271">#Indent to end of buffer
#Bind: &gt;G

--&gt; set-silent-mode
--&gt; end-of-buffer-extend-selection
--&gt; indent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3272">#Unindent object
#Bind: &lt;&lt;obj&gt;

--&gt; set-silent-mode

enter-body-unindent-less-mode = less

enter-body-unindent-to-end-of-sentence-mode = )
enter-body-unindent-to-beginning-of-sentence-mode = (
enter-body-unindent-to-end-of-paragraph-mode = }
enter-body-unindent-to-beginning-of-paragraph-mode = {
enter-body-unindent-to-beginning-of-buffer-mode = g
enter-body-unindent-to-end-of-buffer-mode = Shift-g
</t>
<t tx="TL.20100307105950.3273">#Unindent current line
#Bind: &lt;&lt;
#Note: Unindents to first column instead of previous tab stop

#--&gt; set-silent-mode
#--&gt; back-to-indentation #cursor to beginning of first word in line

--&gt; unindent-region
#--&gt; delete-indentation
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3274">#Indent to end of paragraph
#Bind: &lt;}

--&gt; forward-paragraph-extend-selection
--&gt; back-char-extend-selection
--&gt; unindent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3275">#Indent to beginning of paragraph
#Bind: &lt;{

--&gt; back-paragraph-extend-selection
--&gt; forward-char-extend-selection
--&gt; unindent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3276">#Indent to end of sentence
#Bind: &lt;)

--&gt; forward-sentence-extend-selection
--&gt; unindent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3277">#Indent to beginning of sentence
#Bind: &lt;(

--&gt; back-sentence-extend-selection
--&gt; unindent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3278">#Unindent to end of buffer
#Bind: &lt;G

--&gt; set-silent-mode
--&gt; end-of-buffer-extend-selection
--&gt; unindent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3279">#Unindent to end of buffer
#Bind: &lt;G

--&gt; set-silent-mode
--&gt; beginning-of-buffer-extend-selection
--&gt; unindent-region
--&gt; back-char
--&gt; forward-char
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3280">#Goto first visible charecter on previous line
#Bind: -
#Note: No indent performed, using back-char, forward-word will
#      not skip over blank lines, goes to 2nd word on first line.

--&gt; set-silent-mode
--&gt; beginning-of-line		#Now at beginning of current line.

--&gt; previous-line
# --&gt; back-char
# --&gt; forward-word			#Skips over visible non-alpha-numeric characters


--&gt; exit-named-mode

</t>
<t tx="TL.20100307105950.3281">#Go to end of paragraph
#Bind: }

--&gt; set-silent-mode

--&gt; forward-char        #Be sure cursor in a paragraph
--&gt; forward-paragraph
--&gt; back-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3282">#Go to beginning of paragraph
#Bind: {

--&gt; set-silent-mode

--&gt; back-char        #Be sure cursor in a paragraph
--&gt; back-paragraph
--&gt; forward-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3283">#Join next line to end of current line
#Bind: J

--&gt; set-silent-mode
--&gt; end-of-line      #Delete the &lt;cr&gt;&lt;lf&gt; at the end of the line
--&gt; delete-char

--&gt; exit-named-mode

</t>
<t tx="TL.20100307105950.3284">#Goto matching bracket: () [] {}
#Bind: %

--&gt; set-silent-mode
--&gt; match-brackets
--&gt; forward-char
--&gt; back-char

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3285"></t>
<t tx="TL.20100307105950.3286">--&gt; focus-to-tree
--&gt; goto-next-visible
--&gt; edit-headline
--&gt; focus-to-body
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3287">--&gt; focus-to-tree
--&gt; goto-prev-visible
--&gt; edit-headline
--&gt; focus-to-body
--&gt; exit-named-mode
</t>
<t tx="TL.20100307105950.3288">--&gt; focus-to-tree
--&gt; expand-and-go-right
--&gt; edit-headline
--&gt; focus-to-body

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3289">--&gt; focus-to-tree
--&gt; contract-or-go-left
--&gt; edit-headline
--&gt; focus-to-body

--&gt; exit-named-mode</t>
<t tx="TL.20100307105950.3290">#Window commands
#Bind: Ctrl-w

add-editor           = s   #Open another view to current node
add-editor           = n   #Open another view to current node

cycle-editor-focus   = w   #Vim goes to next below-right window (wraps)
cycle-editor-focus   = p   #Vim goes to previous window with focus
cycle-editor-focus   = k   #Vim goes to window above current window
cycle-editor-focus   = j   #Vim goes to window below current window

delete-editor        = c   #Close current window (if more than one)
delete-editor        = q   #Close current window (if more than one)
</t>
<t tx="bobjack.20080614084120.3"></t>
<t tx="bobjack.20080614084120.5"># The name of the iconBar to which the buttons should initially be placed
# This is ignored unless the toolbar.py plugin is enabled

iconbar = 


# An icon to be used in place of text if the toolbar.py plugin is enabled
# The PIL module must also be availiable for icons to be visible
# Value may be a full path or a path relative to leo/icons or leave empty for text only 

icon = 


# The colors to be used for the 'shortcut' button

master-fg = 
master-bg = 


# The colors to be used for the buttons generated by the 'shortcut' button

slave-fg = 
slave-bg = 


# The rClick menu to use for the 'shortcut' button and generated buttons
# These will be ignored unless both rClick.py and tooblar.py plugins are enabled

master-menu = 
slave-menu = 

</t>
<t tx="edward.20081129091117.12">horizontal: body pane to the right
vertical: body pane on the botton</t>
<t tx="ekr.20041119034357.1">@nocolor

The @settings tree contains all active settings.  Settings outside this tree have no effect.
</t>
<t tx="ekr.20041119034357.10"></t>
<t tx="ekr.20041119034357.11"></t>
<t tx="ekr.20041119034357.12"></t>
<t tx="ekr.20041119034357.13">True: Leo loads plugins on startup.

Warnings:

- This is a global option ONLY. It can only be set in the leoSettings.leo files
that Leo reads during startup. Changing this option in other Leo files will have
NO effect.

- When this option is enabled, plugins could potentially execute HOSTILE CODE
contained in Leo files. See further warnings in LeoDocs.leo.</t>
<t tx="ekr.20041119034357.14">This option affects how Leo treats body text in @root trees.

True:    Body text in @root trees start in doc mode.

This is the way @root trees always worked prior to version 3.10.

False:    Body text in @root trees start in code mode.

This way makes @root trees more compatible with @file trees.</t>
<t tx="ekr.20041119034357.15"></t>
<t tx="ekr.20041119034357.16"></t>
<t tx="ekr.20041119034357.17"></t>
<t tx="ekr.20041119034357.18">Limit directory searches to files with the given file extension.

None  Compares all files when comparing directories.
.py   Compares only .py files when comparing directories.</t>
<t tx="ekr.20041119034357.19">These options have no effect when comparing directories.</t>
<t tx="ekr.20041119034357.20"></t>
<t tx="ekr.20041119034357.28">@nocolor</t>
<t tx="ekr.20041119034357.29">DEPRECATED

The default directory used if no directory specified in @path, @root or @file directives.

</t>
<t tx="ekr.20041119034357.31">The width of tabs on the screen.  This setting is also used when writing doc parts.

Valid values: Any nonzero integer.

Negative tab widths (recommended) cause Leo to convert tabs to blanks when typing.</t>
<t tx="ekr.20041119034357.32">The page width for wrapping doc parts in derived files.

Valid values: any nonzero positive integer.</t>
<t tx="ekr.20041119034357.33">True: Explicit Tangle commands output doc parts.</t>
<t tx="ekr.20041119034357.34">True: Explicit Tangle commands output file header.</t>
<t tx="ekr.20041119034357.35">True: Run tangle_done.py after explicit Tangle commands.</t>
<t tx="ekr.20041119034357.36">True: Run tangle_done.py after explicit Untangle commands.</t>
<t tx="ekr.20041119034357.38"></t>
<t tx="ekr.20041119034357.39">True: Wrap body text.

</t>
<t tx="ekr.20041119034357.40">

Foreground color for the cursor in body text.

</t>
<t tx="ekr.20041119034357.41">Background color for the cursor in body text.

</t>
<t tx="ekr.20041119034357.42">The format string used when creating the Time/Date string for the Insert Time/Date command.
See the Python documentation for time.strftime for full details.

Examples:

1/30/2003 8:31:55
%m/%d/%y %H:%M:%S

Thu, 30 Jan 2003 16:57:12
%a, %d %b %Y %H:%M:%S</t>
<t tx="ekr.20041119034357.43">True:  use gmt time.
False: use local time.</t>
<t tx="ekr.20041119034357.44">True:  auto-indent aligns with open ({[ brackets

False: auto-indent increases indentation by one tab for Python only.</t>
<t tx="ekr.20041119034357.45">body_text_font_family = None
body_text_font_size = None
body_text_font_slant = None
body_text_font_weight = None
</t>
<t tx="ekr.20041119034357.48">Foreground color of body text.

Note: this setting can be overridden by the x_mode_fg_color settings.</t>
<t tx="ekr.20041119034357.49">Background color of body text.

#ffecea

Note: this setting can be overridden by the x_mode_bg_color settings.</t>
<t tx="ekr.20041119034357.5">False: Leo writes leoSettings.leo files.</t>
<t tx="ekr.20041119034357.50">Color of insertion cursor

</t>
<t tx="ekr.20041119034357.53">Additional border in body text pane, in pixels.</t>
<t tx="ekr.20041119034357.54"></t>
<t tx="ekr.20041119034357.56">These options apply only to windows opened with the New command.</t>
<t tx="ekr.20041119034357.57">The ratio of tree pane size to body pane size when splitting primary panes horizontally.

Valid values: 0.0 to 1.0.

**Important**: Leo **does** save this ratio when saving a .leo file, so Leo
always uses this ratio only when creating a new outline.</t>
<t tx="ekr.20041119034357.58">The ratio of outline (tree) pane size to log pane size when splitting the primary panes horizontally.

Valid values: 0.0 to 1.0.

**Important**: Leo does not save this ratio when saving a .leo file, so Leo
always uses this ratio when opening a file that is being split horizontally.</t>
<t tx="ekr.20041119034357.59">Defines the primary splitter orientation.

The primary panes are the body pane and the secondary pane.
The secondary pane contains the outline and log panes.

vertical: body pane below outline and log panes.
horizontal: body pane to right of outline and log panes.

The so-called 'primary' ratio is the ratio between the body pane and the pane
containing the other two panes. The so-called secondary ratio is the ratio
between sizes of the log pane and the outline pane.

The thing to keep in mind is that Leo saves *only* the primary ratio in .leo
files. Leo does not save the so-called 'secondary' ratio in .leo files, because
doing so would change Leo's file format.

Because Leo **does** save the primary ratio in .leo files, Leo will open a file
with the same primary ratio that you had when you last saved the file.

Because Leo does **not** save the secondary ratio in the .leo file Leo
determines the relative sizes of the log and outline panes from settings in
leoSettings.leo. One of the two settings is used:

- initial_horizontal_secondary_ratio or

- initial_vertical_secondary_ratio

Which one is used depends on the initial_splitter_orientation setting.

**Important** If you change these settings you must restart Leo for them to take effect.

Here are some further notes adapted from comments from Paul Paterson:

Leo also doesn't save the split direction. This can be confusing, because if you
save a horizontal split file but your default split is vertical, then when you
reload and correct the split Leo has forgotten the ratio!  To restate:

- if you change the split direction (window .. toggle split) Leo resets the
split ratios.

- if you save a Leo file with a split other than the default (in settings) Leo
won't remember that.
</t>
<t tx="ekr.20041119034357.60">The ratio of tree pane size to body pane size when splitting primary panes vertically.

Valid values: 0.0 to 1.0.

**Important**: Leo **does** save this ratio when saving a .leo file, so Leo
always uses this ratio only when creating a new outline.</t>
<t tx="ekr.20041119034357.61">The ratio of outline (tree) pane size to log pane size when splitting the primary panes vertically.

Valid values: 0.0 to 1.0.

**Important**: Leo does not save this ratio when saving a .leo file, so Leo
always uses this ratio when opening a file that is being split vertically.</t>
<t tx="ekr.20041119034357.62">Height of window in pixels.
    
</t>
<t tx="ekr.20041119034357.63">Distance from left of screen of window, in pixels.
</t>
<t tx="ekr.20041119034357.64">Distance from top of screen of window, in pixels.</t>
<t tx="ekr.20041119034357.65">Width window in pixels.

</t>
<t tx="ekr.20041119034357.67">The color of the split bar. gray90 also looks good.</t>
<t tx="ekr.20041119034357.68">The Tk -relief option for the split bar.</t>
<t tx="ekr.20041119034357.69">The width of the split bar, in pixels (must be an integer).</t>
<t tx="ekr.20041119034357.7"></t>
<t tx="ekr.20041119034357.70">Syntax colors may be any valid Tk color name or color value.

For example, "00aa00" is the dark green used by IDLE.

See http://www.tcl.tk/man/tcl8.3/TkCmd/colors.htm for a list of valid color
names. These names are case sensitive, for example: BlanchedAlmond.</t>
<t tx="ekr.20041119034357.72">True:  Leo colors @space, @* and @** sections in cweb mode as black with LaTeX keywords highlighted.
False: Leo colors @space, @* and @** sections in cweb mode as comments (default is red).

Note: this setting does not affect how Leo colors noweb section references and defintions.</t>
<t tx="ekr.20041119034357.73">True:  Leo colors C language comments in cweb mode as black with LaTeX keywords highlighted.
Flase: Leo colors C language comments in cweb mode as comments (default red).

Note: this setting does not affect how Leo colors noweb section references and defintions.</t>
<t tx="ekr.20041119034357.74">True:  Leo colors @directives when @language plain is in effect.
False: Leo colors everything black when @language plain is in effect.</t>
<t tx="ekr.20041119034357.75">True: Underline undefined section names

Only functional if use_hyperlinks = 0

</t>
<t tx="ekr.20041119034357.76">True:  underline "live" links.
False: (recommended): Underline undefined section names.</t>
<t tx="ekr.20041119034357.78">The color of comments in code parts.</t>
<t tx="ekr.20041119034357.79">The color of name in @&lt;name@&gt;</t>
<t tx="ekr.20041119034357.8">Example:

"Created by Leo at @date"

A comment to be iserted in derived files just after the initial @+leo line.
The comment will appear in an @comment sentinel.
Notes:
1. Leo replaces @date with the date and time that the derived file was created.
2. Use \n to separate lines.
3. This must be empty for compatibility with older versions of Leo.
4. Please use an empty comment when updating to CVS!</t>
<t tx="ekr.20041119034357.80">The color of C/C++ preprocessor directive lines.</t>
<t tx="ekr.20041119034357.81">The color of text in doc parts.</t>
<t tx="ekr.20041119034357.82">The color of keywords of the present language.

For example, the color of "if", "try" and "except" in Python.</t>
<t tx="ekr.20041119034357.83">The color of Leo keywords such as @ignore, @color, etc.</t>
<t tx="ekr.20041119034357.84">The color of name in &lt; &lt; name &gt; &gt; when name is defined.</t>
<t tx="ekr.20041119034357.85">The color of the double angle brackets in &lt;&lt; name &gt;&gt;

</t>
<t tx="ekr.20041119034357.86">The background color that represents spaces and tabs when Show Invisibles mode is in effect.</t>
<t tx="ekr.20041119034357.87">The foreground color that represents spaces and tabs when Show Invisibles mode is in effect.</t>
<t tx="ekr.20041119034357.88">The color of strings and their delimiters.

</t>
<t tx="ekr.20041119034357.89">The color of name in &lt;&lt; name &gt;&gt; when name is undefined.</t>
<t tx="ekr.20041119034357.9">A string, s.  If present, .leo files will contain an xml-stylesheet line following
the opening xml line. 
For example:
  &lt;?xml ....?&gt; 
  &lt;?xml-stylesheet ekr_stylesheet?&gt;
  
Notes:
- The string s should contain any needed XML escapes.
- Leo writes the line &lt;?xml-stylesheet s ?&gt;
  where s is the value of this setting.
- Please set this field empty when uploading to CVS.
- Very old versions of Leo did not support reading files containing xml-stylesheet lines.</t>
<t tx="ekr.20041119035137">@nocolor
@pagewidth 80

This is Leo's main settings file.  It specifies settings used to customize Leo.

**New in Leo 4.4.2**: You can 'override' settings defined here by placing your
own settings in myLeoSettings.leo, either in your HOME directory or in the
leo/config directory (the directory containing this file.) Distributions of Leo
leave myLeoSettings.leo along, and myLeoSettings.leo is not part of Leo's cvs
repository, so Leo never changes myLeoSettings.leo.

@settings trees are composed of various kinds of nodes. The headline of each
node indicates its type. The body text of most nodes contain comments. However,
the body text of @font and @shortcuts nodes contain settings. See the children
of this node for details.
</t>
<t tx="ekr.20041119035704">These nodes describe the type, name and value of a single setting.  Headlines have the form:

@type-name setting-name = value

The basic types are: @bool, @color, @directory, @encoding, @font, @int, @path, and @string.  However, @type nodes can define other types.  The body text of basic nodes contains comments to be displayed in the settings dialog.

None is a valid value for all types.  It indicates that the setting node has no effect.
</t>
<t tx="ekr.20041119035704.1">Organizer nodes have headlines that do no start with @.

Organizer nodes may be inserted freely without changing the meaning of an @setting tree.</t>
<t tx="ekr.20041119035704.2">Leo ignores subtrees of @settings trees whose headline starts with @ignore.</t>
<t tx="ekr.20041119035704.3">Not implemented yet.

Creates a user-defined type. For example:

@type relief: string = [raised, sunken, flat, ridge, solid, groove]

This is much better than using a base type because the dialog creator can
present the user with a listbox containing only the valid options.</t>
<t tx="ekr.20041119035931">Acts like an organizer node if the expression evaluates to True, otherwise acts
like an @ignore node. If the expression is empty thebody text should contain a
script that will be evaluated (in an empty context).
</t>
<t tx="ekr.20041119041019">False: Print sends its output to stdout (console) when doing Execute Script command.
True:  Print redirected to Leo's log pane when doing Execute Script command.
</t>
<t tx="ekr.20041119041019.1">
The string to be appended to file names resulting from the Remove Sentinels command.
If the value starts with . the extension is appended to the original file name.
Otherwise, the extension is appended before the file extension.
Example 1:
  File name x.y
  remove_sentinels_extension = _ns
  Result: x_ns.y
Example 2:
  File name x.y
  remove_sentinels_extension = .txt
  Result: x.y.txt

</t>
<t tx="ekr.20041119041019.2">True:  The Save command clears undo buffer.
False: The undo buffer persists across saves.</t>
<t tx="ekr.20041119041304">This option applies to directories specified in filenames in all kinds of @file trees, and to filenames specified in the @path directive.

True:  Leo attempts to create directories if they do not exist.
False: Leo never attempts to create directories.</t>
<t tx="ekr.20041119041304.1">This option specifies the directory to be used as a prefix for &lt;filename&gt; in

@path &lt;filename&gt;
@file &lt;filename&gt;
@root &lt;filename&gt;

when &lt;filename&gt; is a relative path.

Valid values for this option:

'!' means relative to the location leo.py (recommended).
'.' means relative to the location of the .leo file in the top window.

An absolute path (in platform-dependent format).

Relative paths are not allowed because their meaning would depend on the changing value of the current working directory.</t>
<t tx="ekr.20041119041747">nl or lf: (recommended) All lines end with "\n"
cr:       All lines end with "\r"
crlf:     All lines end with "\r\n"
platform: Lines end in platform-specific way.

With platform Leo opens output files in "w" mode rather than "wb" mode and writes '\n'

Please specify nl when uploading files to Leo's CVS site.</t>
<t tx="ekr.20041119041747.1">The number of trailing newlines Leo retains at the end of each body text.

asis: Leo retains the number of newlines contained in each body text.
      
    Warning: Leo sometimes has problems determining which ending newlines are "real".

zero: Leo removes all trailing whitespace from body text.

one:  Leo ends each non-empty body text with exactly one trailing newline.</t>
<t tx="ekr.20041119041747.4">
True:  Leo strips blanks and tabs from otherwise blank lines.
False: Leo retains whitespace even in otherwise blank lines.</t>
<t tx="ekr.20041119042929"></t>
<t tx="ekr.20041119042929.1"></t>
<t tx="ekr.20041119042929.10">The encoding specified in the following line of new .leo files:

&lt;?xml version="1.0" encoding="UTF-8"&gt;

The recommended value is UTF-8 (upper case for compatibility for old versions of Leo).

iso-8859-1 would be a popular alternative.

Important: Once a .leo file is created the &lt;?xml..."&gt; line can only be changed by hand.  Alas, changing the &lt;?xml..."&gt; line by hand may cause unicode errors the next time the .leo file is loaded.  Therefore, you should change the &lt;?xml..."&gt; line by hand only when first creating a .leo file.</t>
<t tx="ekr.20041119042929.11">The encoding that Tk text widgets are assumed for non-ascii character strings.

You would typically use this setting only in an emergency.

Leo assumes that Tk text widgets return:

1. The value specified by the tk_encoding parameter, if it exists.
2. locale.getdefaultlocale()[1] if it is exists.
3. sys.getdefaultencoding()</t>
<t tx="ekr.20041119042929.2">Same as @directory.</t>
<t tx="ekr.20041119042929.3"></t>
<t tx="ekr.20041119042929.4"></t>
<t tx="ekr.20041119042929.5">Valid values:
    
weight: bold, normal, None
slant: roman, italic, None

Use the show-fonts command to pick fonts, then copy the values shown by the show-fonts command to the values here.</t>
<t tx="ekr.20041119042929.7"></t>
<t tx="ekr.20041119042929.9">The encoding used for derived files if no @encoding directive is in effect.
This setting is also used to encode files created by the Tangle commands.
Default is UTF-8 (case not important).</t>
<t tx="ekr.20041119043902">The path to the first file or directory to be compared.

Directory compares ignore a filename part of the path, if present.

E.g., c:/directory2/spam.py is valid for directory compares</t>
<t tx="ekr.20041119043902.1">The path to the second file or directory to be compared.

Directory compares ignore a filename part of the path, if present.

E.g., c:/directory2/spam.py is valid for directory compares</t>
<t tx="ekr.20041119043902.10">0: Show lines regardless of the number of mismatches.

n: Stop showing lines after n mismatches.

</t>
<t tx="ekr.20041119043902.11">
1: Show blanks as [ ] and tabs as [t]

</t>
<t tx="ekr.20041119043902.12">True:  Print lines of both files when showing matching lines.

False: Print only the line of compare_file_1 when showing matching lines.

</t>
<t tx="ekr.20041119043902.13">True: Print lines that match using the print_both_lines_for_matches option.

</t>
<t tx="ekr.20041119043902.14">True: Print lines that do not compare equal to each other.

</t>
<t tx="ekr.20041119043902.15">True: Print lines all lines in one file after an end-of-file is seen on the other file.</t>
<t tx="ekr.20041119043902.2">The path to the output file.

Leo will silently write to this file, regardless of whether it already exists, creating the file if needed.

Leo will write to the log pane if this path is empty or invalid.</t>
<t tx="ekr.20041119043902.3">True:  Append output to output file.

False: Replace output file with results of compare.</t>
<t tx="ekr.20041119043902.4">True: Ignore blanks lines when comparing files.

</t>
<t tx="ekr.20041119043902.5">True: Ignore the first line of compare_file_1 when comparing files.

</t>
<t tx="ekr.20041119043902.6">True: Ignore the first line of compare_file_2 when comparing files.</t>
<t tx="ekr.20041119043902.7">True: Ignore whitespace after the leading whitespace of a line when comparing files.</t>
<t tx="ekr.20041119043902.8">True:  Ignore leading whitespace of each line when comparing files.

False: The recommended setting when comparing Python source files.

</t>
<t tx="ekr.20041119043902.9">True: Ignore sentinel lines when comparing files.

Leo sets sentinel comment delimiters from the first line of each file.  This option has no effect if the first line is not a @+leo line.</t>
<t tx="ekr.20041119044139"></t>
<t tx="ekr.20041119050105">These options affecting how Leo shows the results of file compares.

Leo gathers statistics regardless of these options.</t>
<t tx="ekr.20041119050105.1">The change string (without the quotes unless quotes are part of the string).

N.B. Leo requires utf-8 encoding for any non-ascii characters.</t>
<t tx="ekr.20041119050105.10"></t>
<t tx="ekr.20041119050105.11"></t>
<t tx="ekr.20041119050105.12"></t>
<t tx="ekr.20041119050105.14">When checked, the Find and Change commands search body text.
</t>
<t tx="ekr.20041119050105.15">When checked, the Find and Change commands search headline text.
</t>
<t tx="ekr.20041119050105.16">When checked, the Find and Change commands search only the currently selected headline and its offspring.
</t>
<t tx="ekr.20041119050105.2">The find string (without the quotes unless quotes are part of the string).

N.B. Leo requires utf-8 encoding for any non-ascii characters.

</t>
<t tx="ekr.20041119050105.3">These settings determine whether the corresponding checkbox is checked by default.</t>
<t tx="ekr.20041119050105.4">Despite its name, this setting affects the default value of the Show Context checkbox.</t>
<t tx="ekr.20041119050105.5">When checked, the Find and Change commands ignore the case of alphabetic characters when determining matches.
</t>
<t tx="ekr.20041119050105.6">When checked, the Change command marks all headlines whose headline or body text are changed by the command.
</t>
<t tx="ekr.20041119050105.7">When checked, the Find and Change commands mark all headlines in which a match is found with the pattern.
</t>
<t tx="ekr.20041119050105.8">When checked, the Find and Change commands treat several characters specially in
the find pattern. The '*' character matches any sequence of zero or more
characters. The '.' character matches any single character. The '^' character at
the start of a pattern, or a '$' character at the end of a pattern matches a
newline.

Examples:

The pattern "^abc$" matches lines that only contain "abc".
The pattern "^a" matches any line starting with "A".
The pattern "a$" matches any line ending with "a".
The pattern "^*$" matches any line at all.</t>
<t tx="ekr.20041119050105.9"></t>
<t tx="ekr.20041119050749.10">The format string used when creating the Time/Date string for the Insert Time/Date command.

See the Python documentation for time.strftime for full details.

Examples:
1/30
%m/%d

1/30/03 8:31:02
%m/%d/%y %H:%M:%S

Thu, 30 Jan 2003 16:57:12
%a, %d %b %Y %H:%M:%S
</t>
<t tx="ekr.20041119050749.11">True:  use gmt time when inserting time into headlines.

False: use local time.</t>
<t tx="ekr.20041119050749.12">Background color of outline pane itself.

LavenderBlush1
#ffffe1 # a little too yellow.
#ffffec
LightSteelBlue1 # Good for testing.</t>
<t tx="ekr.20041119050749.17">This option controls the interpretation of the control key when dragging nodes in the outline pane.

True: A drag is a control-drag if the control key is down at the start of the drag.

False: A drag is a control-drag if the control key is down at the end of the drag.</t>
<t tx="ekr.20041119050749.18">True: Use horizontal scrollbar in outline pane.</t>
<t tx="ekr.20041119050749.3">True:  Allows control-dragging to create clones.
False: All drags move nodes.

See also: look_for_control_drag_on_mouse_down
Setting this setting to False allows Leo to be used on Aqua.</t>
<t tx="ekr.20041119050749.4">True:  Tell whether drags will move nodes or clone nodes.
False: Don't issue such messages.

</t>
<t tx="ekr.20041119050749.5">1: Click near a node expands or contracts the node.
0: Only clicks in a node's plus/minus box expands or contracts the node.

Note:  @bool expanded_click_area = True conflicts with the UniversalScrolling plugin.</t>
<t tx="ekr.20041119050749.6">Foreground color of unselected headline text.</t>
<t tx="ekr.20041119050749.7">Foreground color of selected headline text that is not being edited.

DodgerBlue4</t>
<t tx="ekr.20041119050749.8">Foreground color of unselected headline text in a headline that is being edited.

Background color must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119050749.9">Foreground color of selected text headline text in a headline that is being edited.

Background must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119051246.1"></t>
<t tx="ekr.20041119051246.2">Background color of unselected headline text.

LavenderBlush1</t>
<t tx="ekr.20041119051246.3">Background color of selected headline text that is not being edited.

LavenderBlush2</t>
<t tx="ekr.20041119051246.4">headline_text_font_family = None
headline_text_font_size = None
headline_text_font_slant = roman
headline_text_font_weight = normal
</t>
<t tx="ekr.20041119051901">Background color of unselected headline text in a headline that is being edited.

Foreground color must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119051901.1">Background color of selected text headline text in a headline that is being edited.

Foreground must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119052015">Color for error messages written to the log window.</t>
<t tx="ekr.20041119052015.1">True: Wrap body text.

</t>
<t tx="ekr.20041119052015.2">Foreground color of log text.

</t>
<t tx="ekr.20041119053445">Background color of log text.</t>
<t tx="ekr.20041119105509">Not implemented yet.

Creates a permanent value that can be tested later with @if. That is, it alters
the environment in which @if code is executed.</t>
<t tx="ekr.20041119110141">Same as:

@if sys.platform == "platform-name":

except that it isn't necessary to import sys.

This would be the natural way to implement platform-dependent settings.</t>
<t tx="ekr.20041120152508"></t>
<t tx="ekr.20041120152657"></t>
<t tx="ekr.20041120152900.2">When the Script Search radio button is selected Leo treats the contents of the
Search Text as a script to execute whenever any kind of Find command is
executed. Similarly, when the Script Change checkbox is selected Leo treats the
context of the Change Text as a script to execute whenever any kind of Change
command is executed. See below for just how this works.

Script-based find-change is extremely powerful. In effect, Leo's Find/Change
panel becomes a new platform for running scripts interactively. Leo now has all
the find/change capability of pattern matching languages like Snobol and Icon,
just by using the capabilities of the plain Python language. Moreover, Leo can
deliver these capabilities interactively or not depending which buttons you push
in Leo's Find/Change panel.

Script-based find/change frees the user from having to control script-based
searches interactively. Rather than forcing find/change scripts to implement
their own interactive controls, it is much easier to use what Leo already has.

HOW IT WORKS

Leo dedicates a Python dictionary called app.searchDict for communication
between Leo and the search and change scripts. The search and change scripts may
also use app.searchDict for communication between themselves. Leo sets
app.searchDict["type"] to "find", "change", "findAll" or "changeAll" to indicate
the kind of command being executed. Scripts may use all other entries in
app.searchDict as they please.

Leo executes the find script once when you press the Find button (or the Change
then Find button) in Leo's Find/Change dialog. Typically, the find script would
traversing the tree and highlight the found text or otherwise indicate to the
user that the find operation has succeeded. However, the script can do anything
it pleases.

Leo executes the the find script repeatedly when you press the Find All button.
Leo keeps executing the find script until app.searchDict["continue"] evaluates
to false. Initially there is no entry for app.searchDict["continue"], so the
find script must set app.searchDict["continue"] = true if it wants Leo to keep
executing it.

Leo executes the change script once when you press the Change button. Typically,
the change script would change the selected text. Usually the change script will
compute the new value of body text and call v.setBodyStringOrPane(newText) to
make that change permanent. 

The change script also may handle undo, typically by calling
c.frame.onBodyChanged(v,"Change",oldText=oldText). Leo does not handle undo
automatically. Indeed, Leo makes no assumptions whatever about what the change
script really does.

Leo executes the the change script repeatedly when you press the Change All
button. Just as with the Find All command, Leo keeps executing the change script
until app.searchDict["continue"] evaluates to false.

Most find and change scripts will ignore settings in the Find Panel like "whole
word", "pattern match", and "reverse". However, these settings are available to
the scripts via ivars such as c.whole_word_flag, etc. if desired.

For examples, see the node called 'Script Find and Script Change' in leoDocs.leo.</t>
<t tx="ekr.20041120155431.1">The body text of @shortcut nodes contain the specification for zero or more shortcuts.

Lines starting with # are ignored.

All other non-blank lines should have the form:

commandName = shortcut specifier.</t>
<t tx="ekr.20041120155431.2">Not implemented yet.

Autments the settings parser and the dialog creator with scripts.</t>
<t tx="ekr.20041120181045">A float value restricted to the range 0.0 to 1.0.</t>
<t tx="ekr.20041122163623">When looking at @x, Leo converts to lower case and removes minus signs.
Therefore, @if-platform and @ifPlatformare equivalent to @ifplatform.</t>
<t tx="ekr.20041213105007">@nocolor
@

**Important** The following settings apply only to the Tk gui.

For the Qt gui the settings are in the node @data qt-gui-plugin-style-sheet.

Valid values:

weight: bold, normal, None
slant: roman, italic, None

Use the show-fonts command to pick fonts, then copy the values shown by the show-fonts command to the values here.

@c

import sys ; print sys.platform
</t>
<t tx="ekr.20041213105007.1"></t>
<t tx="ekr.20041213105007.2"></t>
<t tx="ekr.20041213105007.3"></t>
<t tx="ekr.20041213105508"># The font for the log pane. Default is default font for Tk.Text widgets.
# Tk translates invalid font names to another font in a system-dependent way.
# 
# Default size is 12 for Linux, 9 otherwise.

log_text_font_family = Courier
log_text_font_size = 9
log_text_font_slant = roman
log_text_font_weight = normal
</t>
<t tx="ekr.20041213105954">Options that require pixel values can be any Python expression that yields an int.
Warning: the number of pixels per inch varies...</t>
<t tx="ekr.20041213105954.1"></t>
<t tx="ekr.20041213105954.2"></t>
<t tx="ekr.20041217184352.2">LightYellow1

#f2fdff</t>
<t tx="ekr.20050126083026">node granularity: start a new undo unit when typing moves to a new node.
line granularity: start a new undo unit when typing moves to new line.
word granularity: start a new undo unit when typing starts a new word.
char granularity: start a new undo unit for each character typed.

'line' granularity is the default used if no valid setting is specified.

Leo used char granularity for all version prior to 4.3. char granularity is not
recommended; it is clumsy and wasteful of computer memory.</t>
<t tx="ekr.20050203085250">This is not used in Leo, except in unit tests.

Please do not change this; it would make a unit test fail.</t>
<t tx="ekr.20050203090810">Please do not change any of these settings.

Doing so would make unit tests fail.
</t>
<t tx="ekr.20051006200015">Use a light selectbackground value so syntax coloring looks good.

Default is Gray80.
CadetBlue3 has been suggested.</t>
<t tx="ekr.20051006200015.1">Default is white.</t>
<t tx="ekr.20051007193321">abbrev-mode                         = None
abort-edit-headline                 = Shift-Esc
about-leo                           = None
add-comments                        = Ctrl-(
add-global-abbrev                   = None
advertised-undo                     = Control-underscore
append-to-buffer                    = None
append-to-register                  = None
auto-complete                       = None
back-char                           = Control-b
back-char-extend-selection          = None
back-paragraph                      = Alt-braceleft
back-paragraph-extend-selection     = None
back-sentence                       = Alt-a
back-sentence-extend-selection      = None
back-to-indentation                 = Alt-m
back-word                           = Alt-b          
back-word                           = Control-Left
back-word-extend-selection          = None
backward-delete-char                = Delete
backward-kill-paragraph             = None
backward-kill-sentence              = None
backward-kill-word                  = Alt-Delete
beginning-of-buffer                 ! text =  Alt-less
beginning-of-buffer                 ! text = Ctrl-Home
beginning-of-buffer-extend-selection= None
beginning-of-line                   = Alt-Up        
beginning-of-line                   = Control-a
beginning-of-line-extend-selection  = None
capitalize-word                     = Alt-c
cascade-windows                     = None
center-line                         = Alt-s
center-region                       = None
#check-all-python-code              = None
check-outline                       = None
# check-python-code                 = None
clear-extend-mode                   = None
clear-kill-ring                     = None
clear-recent-files                  = None
clear-rectangle                     = None
clone-node                          = Ctrl-`

close-rectangle                     = None
close-window                        = Alt-F4
contract-all                        = None             # Alt-- conflicts with negative-arg.
contract-node                       = Alt-[
contract-or-go-left                 = Alt-LtArrow
contract-parent                     = None
convert-all-blanks                  = None
convert-all-tabs                    = None
convert-blanks                      = Shift-Ctrl-B
convert-tabs                        = Shift-Ctrl-J
copy-node                           = Shift-Ctrl-C
copy-rectangle-to-register          = None
copy-text                           = None      # Ctrl-C conflicts with quick-command.
copy-to-register                    = None
count-region                        = Alt-equal
cut-node                            = Shift-Ctrl-X
cut-text                            = None      # Ctrl-X (possible)
cycle-focus                         = None
dabbrev-completion                  = Control-Alt-slash
dabbrev-expands                     = Alt-slash
de-hoist                            = None
delete-char                         = Control-d
delete-comments                     = Ctrl-)
delete-file                         = None
delete-indentation                  = Alt-asciicircum
delete-node                         = Shift-Ctrl-BkSp
delete-rectangle                    = None
delete-spaces                       = Alt-backslash
demote                              = Ctrl-}
diff                                = None
digit-argument                      = None
downcase-region                     = None
downcase-word                       = Alt-l
dump-outline                        = None
edit-headline                       = Ctrl-H
end-edit-headline                   = None             # Esc conflicts with watch-escape.
end-of-buffer                       ! text = Alt-greater
end-of-buffer                       ! text = Ctrl-End
end-of-buffer-extend-selection      ! text = Ctrl-Shift-End
end-of-line                         = Alt-Down      
end-of-line                         = Control-e
end-of-line-extend-selection        = None
equal-sized-panes                   = Alt-Shift-E
escape                              = Escape
eval-expression                     = Alt-colon
eval-expression                     = None
exchange-point-mark                 = None  # Should be Control-X Control-X.
execute-script                      = None             # Ctrl-e conflicts with end-of-line
exit-leo                            = Ctrl-Q
exit-named-mode                     = None
expand-all                          = None
expand-and-go-right                 = None
expand-next-level                   = None
expand-node                         = Alt-]
expand-or-go-right                  = Alt-RtArrow
expand-prev-level                   = None
# expand-region-abbrevs             = None
expand-to-level-1                   = None
expand-to-level-2                   = None
expand-to-level-3                   = None
expand-to-level-4                   = None
expand-to-level-5                   = None
expand-to-level-6                   = None
expand-to-level-7                   = None
expand-to-level-8                   = None
expand-to-level-9                   = None
export-headlines                    = None
extend-to-paragraph                 = Alt-h
extract                             = Shift-Ctrl-D
extract-names                       = Shift-Ctrl-N
extract-python-method               = None
extract-section                     = Shift-Ctrl-E</t>
<t tx="ekr.20051007200824">@nocolor

This node contains sets of key bindings and settings.
These sets should have headlines starting with @keys so that the Check Bindings script can find them.

- The *inactive* sets should be children of the node '@ignore Unused key bindings'

- The *active* set should be *outside* of the @ignore and its descendants.

@color</t>
<t tx="ekr.20051007200824.1">The following special single characters may be used in the tails of shortcuts.
They are listed along with their associated Tk binding value. Leo contains
special code to handle these characters. No other single characters may be
specified.

For example, you could specify Ctrl+! as a shortcut, and Leo will create a
binding for &lt;Control+exclam&gt;. Some of these values may be invalid on some
machines.

The full list is at http://tcl.activestate.com/man/tcl8.4/TkCmd/keysyms.htm

! exclam
" quotedbl
# numbersign
$ dollar
% percent
&amp; ampersand
' quoteright
( parenleft
) parenright
* asterisk
+ plus
, comma
- minus
. period
/ slash
: colon
; semicolon
&lt; less
= equal
&gt; greater
? question
@ at
[ bracketleft
\ backslash
] bracketright
^ asciicircum
_ underscore
` quoteleft
{ braceleft
| bar
} braceright
~ asciitilde

Leo recognizes the following mult-character names, and translates the indicated
strings in the menu items:
    
"bksp"     : "BkSp"
"dnarrow"  : "DnArrow"
"ltarrow"  : "LtArrow"
"rtarrow"  : "RtArrow"
"uparrow"  : "UpArrow"
"pageup"   : "PgUp"),
"pagedn"   : "PgDn")

For example, "Ctrl-uparrow"  will appear as "Ctrl+UpArrow" in the menu.

Leo passes all other mult-character names verbatim to Tk, so on some platforms
you may be able to use any of the following. Most appear on the numeric keypad.
For example, the following may work on some systems:
    
"Ctrl+BackSpace"

Don't use these if you want to be sure that the binding work on all platforms.
The complete list of names may be found at:
http://tcl.activestate.com/man/tcl8.4/TkCmd/keysyms.htm.
    
F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
BackSpace, Break, Clear, Delete, Escape, Linefeed, Return, Tab, 
Down, Left, Right, Up,
Begin, End, Home, Next, Prior,
Num_Lock, Pause, Scroll_Lock, Sys_Req,
KP_Add, KP_Decimal, KP_Divide, KP_Enter, KP_Equal,
KP_Multiply, KP_Separator, KP_Space, KP_Subtract, KP_Tab,
KP_F1, KP_F2, KP_F3, KP_F4,
KP_0, KP_1, KP_2, KP_3, KP_4, KP_5, KP_6, KP_7, KP_8, KP_9</t>
<t tx="ekr.20051010093913">c.save()</t>
<t tx="ekr.20051011123608">n = len('insert-newline              ')

s = p.bodyString()
result = []
for line in g.splitLines(s):
    i = line.find('=')
    if i == -1 or i &lt;= n:
        result.append(line)
    else:
        result.append(line[:n] + line[i:])

result = ''.join(result)
# print result
p.setBodyString(result)</t>
<t tx="ekr.20051020125928">#d6c7d3
#d2cad0
#c6d3d7</t>
<t tx="ekr.20051025070845">#d6c7d3
#d2cad0
#c6d3d7
#ffffec # Same as outline.</t>
<t tx="ekr.20051025084017">Leo's spell checker requires PyEnchant to be installed.
See: http://www.rfk.id.au/software/pyenchant/tutorial.html#installation</t>
<t tx="ekr.20051027175030">True: When typing an opening bracket '(','[' or '{', immediately type the
corresponding closing bracket.  To move past the closing bracket, just type it.</t>
<t tx="ekr.20051101160257">A shortcut specification has the form:

command-name = shortcutSpecifier

or

command-name ! pane = shortcutSpecifier

The first form creates a binding for all panes except the minibuffer. The second
form creates a binding for one or more panes. The possible values for 'pane'
are:

pane    bound panes
----    -----------
all     body,log,tree
body    body
log     log
mini    minibuffer
text    body,log
tree    tree
    
You may use None as the specifier. Otherwise, a shortcut specifier consists of a
head followed by a tail. The head may be empty, or may be a concatenation of the
following: (All entries in each row are equivalent).
    
Shift+ Shift-
Alt+ or Alt-
Control+, Control-, Ctrl+ or Ctrl-

Notes:

1. The case of plain letters is significant:  a is not A.

2. The Shift- (or Shift+) prefix can be applied *only* to letters or
multi-letter tails. Leo will ignore (with a warning) the shift prefix applied to
other single letters, e.g., Ctrl-Shift-(

3. The case of letters prefixed by Ctrl-, Alt-, Key- or Shift- is *not*
significant.

The following table illustrates these rules.  In each row, the first entry is the key (for k.bindingsDict) and the other entries are equivalents that the user may specify in leoSettings.leo:

a, Key-a, Key-A
A, Shift-A
Alt-a, Alt-A
Alt-A, Alt-Shift-a, Alt-Shift-A
Ctrl-a, Ctrl-A
Ctrl-A, Ctrl-Shift-a, Ctrl-Shift-A
!, Key-!,Key-exclam,exclam
    
See "About shortcut specifiers" for a full discussion of what may appear in the tail of a shortcut.</t>
<t tx="ekr.20051123100536">Note: These settings have effect only if the corresponding plugin has been enabled.</t>
<t tx="ekr.20051123100536.1">For MacOS X (darwin) the following are typical defaults:

vim_cmd = /Applications/gvim.app/Contents/MacOS/gvim --servername LEO
vim_exe = /Applications/gvim.app/Contents/MacOS/gvim
</t>
<t tx="ekr.20051123100536.2"></t>
<t tx="ekr.20051123100536.3"></t>
<t tx="ekr.20051126062243"></t>
<t tx="ekr.20051126062243.1"></t>
<t tx="ekr.20051126062525"></t>
<t tx="ekr.20051126062830">This is the most useful focus trace: it tells what really is happening.</t>
<t tx="ekr.20051218202206">abbrev-mode                         = None
abort-edit-headline                 = None
about-leo                           = None
activate-cmds-menu                  = None
activate-edit-menu                  = None
activate-file-menu                  = None
activate-help-menu                  = None
activate-outline-menu               = None
activate-plugins-menu               = None
activate-window-menu                = None
add-comments                        = None
add-editor                          = None
add-global-abbrev                   = None
add-space-to-lines                  = None
add-tab-to-lines                    = None
advertised-undo                     = None
# append-next-kill                    = None
append-to-buffer                    = None
append-to-register                  = None
apropos-autocompletion              = None
apropos-bindings                    = None
apropos-find-commands               = None
auto-complete                       = None
auto-complete-force                 = None
back-char                           = None
back-char-extend-selection          = None
back-page                           = None
back-page-extend-selection          = None
back-paragraph                      = None
back-paragraph-extend-selection     = None
back-sentence                       = None
back-sentence-extend-selection      = None
back-to-home                        = None
back-to-indentation                 = None
back-word                           = None
back-word-extend-selection          = None
backward-delete-char                = None
backward-delete-word                = None
backward-find-character                     = None
backward-find-character-extend-selection    = None
backward-kill-paragraph             = None
backward-kill-sentence              = None
backward-kill-word                  = None
beginning-of-buffer                 = None
beginning-of-buffer-extend-selection= None
beginning-of-line                   = None
beginning-of-line-extend-selection  = None
call-last-kbd-macro                 = None
capitalize-word                     = None
cascade-windows                     = None
center-line                         = None
center-region                       = None
chapter-clone-node-to               = None
chapter-copy-node-to                = None
chapter-create                      = None
chapter-move-node-to                = None
chapter-remove                      = None
chapter-select                      = None
# check-all-python-code             = None
check-outline                       = None
# check-python-code                 = None
# check-spelling                    = None
clean-all-lines                     = None
clean-lines                         = None
clean-recent-files                  = None
clear-extend-mode                   = None
clear-kill-ring                     = None
clear-recent-files                  = None
clear-rectangle                     = None
clear-selected-text                 = None
click-click-box                     = None
click-headline                      = None
click-icon-box                      = None
clone-find-all                      = None
clone-node                          = None
close-rectangle                     = None
close-window                        = None
cm-external-editor                  = None
collect-garbage                     = None
contract-all                        = None
contract-node                       = None
contract-or-go-left                 = None
contract-body-pane                  = None
contract-log-pane                   = None
contract-outline-pane               = None
contract-pane                       = None
contract-parent                     = None
convert-all-blanks                  = None
convert-all-tabs                    = None
convert-blanks                      = None
convert-tabs                        = None
copy-node                           = None
copy-rectangle-to-register          = None
copy-text                           = None
# copy-to-buffer                      = None
copy-to-register                    = None
count-region                        = None
cut-node                            = None
cut-text                            = None
cycle-all-focus                     = None
cycle-focus                         = None
cycle-editor-focus                  = None
dabbrev-completion                  = None
dabbrev-expands                     = None
debug                               = None
de-hoist                            = None
delete-char                         = None
delete-comments                     = None
delete-editor                       = None
delete-file                         = None
delete-first-icon                   = None
delete-indentation                  = None
delete-last-icon                    = None
delete-node                         = None
delete-rectangle                    = None
delete-spaces                       = None
delete-word                         = None
demote                              = None
diff                                = None
digit-argument                      = None
disable-autocompleter               = None
disable-calltips                    = None
disable-gc-trace                    = None
do-nothing                          = None
downcase-region                     = None
downcase-word                       = None
double-click-headline               = None
double-click-icon-box               = None
dump-all-objects                    = None
dump-new-objects                    = None
dump-outline                        = None
edit-headline                       = None
enable-autocompleter                = None
enable-calltips                     = None
enable-gc-trace                     = None
end-edit-headline                   = None
# end-kbd-macro                     = None
end-of-buffer                       = None
end-of-buffer-extend-selection      = None
end-of-line                         = None
end-of-line-extend-selection        = None
equal-sized-panes                   = None
escape                              = None
eval-expression                     = None
exchange-point-mark                 = None
push-to-ipython                     = None
execute-script                      = None
exit-leo                            = None
exit-named-mode                     = None
expand-all                          = None
expand-and-go-right                 = None
expand-next-level                   = None
expand-node                         = None
expand-or-go-right                  = None
expand-body-pane                    = None
expand-log-pane                     = None
expand-outline-pane                 = None
expand-pane                         = None
expand-prev-level                   = None
# expand-region-abbrevs             = None
expand-to-level-1                   = None
expand-to-level-2                   = None
expand-to-level-3                   = None
expand-to-level-4                   = None
expand-to-level-5                   = None
expand-to-level-6                   = None
expand-to-level-7                   = None
expand-to-level-8                   = None
expand-to-level-9                   = None
export-headlines                    = None
extend-to-line                      = None
extend-to-paragraph                 = None
extend-to-sentence                  = None
extend-to-word                      = None
extract                             = None
extract-names                       = None
extract-python-method               = None
extract-section                     = None
</t>
<t tx="ekr.20060104093101">@nocolor

This file contains 6 sets of key bindings and settings.

- The *active* set should be *outside* of this node and its descendants.
- The *inactive* sets should be children of this node.

@color</t>
<t tx="ekr.20060109115046"></t>
<t tx="ekr.20060109115046.1">True: turns on extra feedback</t>
<t tx="ekr.20060109115046.2"></t>
<t tx="ekr.20060109115046.3"></t>
<t tx="ekr.20060109121753"></t>
<t tx="ekr.20060110141538">@color</t>
<t tx="ekr.20060110141538.1">@color
@

These are no options for this keyset: we assume other options sets will also be in effect.

**Important**:
    
- With this keyset in effect other binding sets need only specify the commands
that actually have bindings.
    
- These definitions do not interfere with other settings, and do not cause
warnings about duplicate bindings.

- The Check Bindings script only checks for missing bindings in this set.</t>
<t tx="ekr.20060111091324"></t>
<t tx="ekr.20060111091324.1">If this setting is True, the ``fastgotonode_binding`` setting should be a
Keyspecifier that does not conflict with any key binding in leoSettings.leo.

If this setting is False, the ``fastgotonode_binding`` setting should be some
other event specifier, typically 'Button-3'.</t>
<t tx="ekr.20060111091324.2"># The binding used to invoke the popup menu.
# Some possibilities:

Shift-space  # Control-space conflicts with an Emacs binding.
Button-3
Double-Button-3 # Useful if you also have the rClick plugin enabled.</t>
<t tx="ekr.20060112090844">fill-paragraph                      = Alt-q
fill-region                         = None
fill-region-as-paragraph            = None
change                              = Ctrl-=
change-all                          = None  # Not recommended to bind this to a shortcut.
change-then-find                    = Ctrl--
find-next                           = F3
find-prev                           = F2
flatten-outline                     = None
flush-lines                         = None
focus-to-body                       = None
focus-to-log                        = None
focus-to-minibuffer                 = None
focus-to-tree                       = None
forward-char                        = Control-f
forward-char-extend-selection       = None
forward-paragraph                   = Alt-braceright
forward-paragraph-extend-selection  = None
forward-sentence                    = Alt-e
forward-sentence-extend-selection   = None
forward-word                        = Alt-f
forward-word                        = Control-Right
forward-word-extend-selection       = None
full-command                        = Alt-x
go-back                             = None
go-forward                          = None
goto-char                           = None
goto-first-node                     = Alt-Shift-G
goto-first-sibling                  = None
goto-last-node                      = Alt-Shift-H
goto-last-sibling                   = None
goto-last-visible-node              = None
goto-line                           = Alt-g
goto-line                           = None         # Emacs version is less powerful than Leo version
goto-next-changed                   = None         # Alt-D conflicts with kill-word
goto-next-clone                     = None         # Removed Alt-N: not useful enough.
goto-next-marked                    = None         # Alt-M conflicts with back-to-indentation.
goto-next-node                      = Alt-Shift-DnArrow
goto-next-sibling                   = Alt-Shift-S
goto-next-visible                   = None         # Alt-DnArrow conflicts with end-of-line.
goto-parent                         = Alt-Shift-P
goto-prev-node                      = Alt-Shift-UpArrow
goto-prev-sibling                   = Alt-Shift-R
goto-prev-visible                   = None         # Alt-UpArrow conflicts with beginning-of-line.
help-for-minibuffer                 = None
hide-find-tab                       = None
hide-mini-buffer                    = None
hide-spell-tab                      = None
hoist                               = None
how-many                            = None
iconify-frame                       = Control-z
import-at-file                      = None         # Removed Shift-Ctrl-F: not useful enough.
import-at-root                      = None
import-cweb-files                   = None
import-derived-file                 = None
import-flattened-outline            = None
import-noweb-files                  = None
increment-register                  = None
indent-region                       = Alt-Control-backslash
indent-region                       = Ctrl-]
indent-relative                     = None
indent-rigidly                      = None
indent-to-comment-column            = Alt-semicolon
insert-body-time                    = None         # Removed Shift-Ctrl-G: not useful enough.
insert-child                        = None
insert-file                         = None
insert-headline-time                = None         # Removed Shift-Ctrl-H: not useful enough.
insert-newline                      = Control-o
insert-node                         = Ctrl-I
insert-node                         = Insert
insert-parentheses                  = Alt-parenleft
insert-register                     = None
inverse-add-global-abbrev           = None
isearch-backward                    = Control-R
isearch-backward-regexp             = Control-Alt-r
isearch-forward                     = Control-S
isearch-forward-regexp              = Control-Alt-s
jump-to-register                    = None
keep-lines                          = None
keyboard-quit                       = Ctrl-g
kill-all-abbrevs                    = None
kill-buffer                         = None
kill-line                           = Control-k
kill-paragraph                      = None
kill-rectangle                      = None
kill-region                         = Control-w
kill-region-save                    = Alt-w
kill-sentence                       = Alt-k
kill-word                           = Alt-d
line-number                         = None
list-abbrevs                        = None
list-buffers                        = None
list-buffers-alphabetically         = None
mode-help                           = None
move-past-close-extend-selection    = None</t>
<t tx="ekr.20060112090844.1">make-directory                  = None
mark                            = Ctrl-M
mark-changed-items              = None         # Alt-C: now quick-command.
mark-subheads                   = None         # Alt-S conflicts with center-line.
match-brackets                  = None         # Ctrl-K conflicts with kill-line.
minimize-all                    = None
move-outline-down               = None         # Removed Ctrl-D: no point if other moves are not defined.
move-outline-left               = None         # Removed Ctrl-L: no point if other moves are not defined.
move-outline-right              = None         # Ctrl-R conflicts with search-backward.
move-outline-up                 = None         # Ctrl-U confllicts with universal-argument.
move-past-close                 = Alt-parenright
negative-argument               = Alt-minus
new                             = None         # Ctrl-n conflicts with next-line.
newline-and-indent              = Control-j
next-line                       = Control-n
next-line-extend-selection      = None
number-command                  = None
number-command-0                = Alt-0
number-command-1                = Alt-1
number-command-2                = Alt-2
number-command-3                = Alt-3
number-command-4                = Alt-4
number-command-5                = Alt-5
number-command-6                = Alt-6
number-command-7                = Alt-7
number-command-8                = Alt-8
number-command-9                = Alt-9 
open-compare-window             = None
open-find-tab                   = None
open-leoDocs-leo                = None
open-leoPlugins-leo             = None
open-leoSettings-leo            = None
open-scripts-leo                = None
open-offline-tutorial           = None
open-online-home                = None
open-online-tutorial            = None
open-outline                    = None         # Ctrl-O conflicts with insert-newline
open-python-window              = None         # Removed Alt-P: not useful enough.
open-rectangle                  = None
open-spell-tab                  = None
open-with                       = None
outline-to-cweb                 = None
outline-to-noweb                = None
paste-node                      = Shift-Ctrl-V
paste-retaining-clones          = None
paste-text                      = None      # Ctrl-V conflicts with scroll-down-page
point-to-register               = None
prepend-to-buffer               = None
prepend-to-register             = None
pretty-print-all-python-code    = None
pretty-print-python-code        = None
previous-line                   = Control-p
previous-line-extend-selection  = None
print-bindings                  = None
print-commands                  = None
promote                         = Ctrl-{            
# query-replace                   = Alt-percent
# query-replace-regex             = None
quick-command                   = Ctrl-c
re-search-backward              = None
re-search-forward               = None
read-abbrev-file                = None
read-at-file-nodes              = None
read-outline-only               = None         # Removed Shift-Ctrl-R: not useful enough.
redo                            = None         # Ctrl-Z not defined, so Shift-Ctrl-Z less useful.
reformat-paragraph              = Shift-Ctrl-P
remove-blank-lines              = None
remove-directory                = None
remove-sentinels                = None
rename-buffer                   = None
repeat-complex-command          = None
replace-string                  = None
resize-to-screen                = None
reverse-region                  = None
revert                          = None
save-buffers-kill-leo           = None # Should be Control-x Control-c
save-file                       = None         # Ctrl-s conflicts with isearch-forward.
save-file-as                    = Shift-Ctrl-S
save-file-to                    = None
scroll-down-half-page           = None
scroll-down-line                = None
scroll-down-page                = Control-v
scroll-up-half-page             = None
scroll-up-line                  = None
scroll-up-page                  = Alt-v
search-again                    = None
search-backward                 = None
search-forward                  = None
select-all                      = None  # Ctrl-A conflicts with beginning-of-line.
set-colors                      = None
set-comment-column              = None
set-extend-mode                 = None
set-fill-column                 = None
set-fill-prefix                 = None
set-find-everywhere                 = None
set-find-node-only                  = None
set-find-suboutline-only            = None
set-font                        = None
set-command-state               = None
set-insert-state                = None
# set-mark-command              = Control-Shift-at
set-overwrite-state             = None
settings                        = None  # Ctrl-Y conflicts with yank.
shell-command                   = Alt-exclam
shell-command-on-region         = Alt-bar
show-colors                     = None
show-fonts                      = None
show-invisibles                 = Alt-V
show-invisibles                 = None  # Alt-V conflicts with scroll-up-page .
show-mini-buffer                = None
sort-children                   = None
sort-columns                    = None
sort-fields                     = None
sort-lines                      = None
sort-siblings                   = Shift-Alt-A  # Alt-A conflicts with back-sentence.
spell-change                    = None
spell-change-then-find          = None
spell-find                      = None
spell-ignore                    = None
split-line                      = Control-Alt-o
string-rectangle                = None
suspend                         = None
switch-to-buffer                = None
tabify                          = None
tangle                          = None      # Removed Shift-Ctrl-T: not useful enough.
tangle-all                      = None      # Removed Shift-Ctrl-A: not useful enough.
tangle-marked                   = None      # Removed Shift-Ctrl-M: not useful enough.
toggle-active-pane              = None      # Ctrl-T conflicts with swap-characters.
toggle-angle-brackets           = None
toggle-extend-mode              = None
toggle-find-ignore-case-option      = None
toggle-find-in-body-option          = None
toggle-find-in-headline-option      = None
toggle-find-mark-changes-option     = None
toggle-find-mark-finds-option       = None
toggle-find-regex-option            = None
toggle-find-reverse-option          = None
toggle-find-word-option             = None
toggle-find-wrap-around-option      = None
toggle-mini-buffer                  = Alt+Shift+S
    # It **is** possible to use &lt;alt-x&gt;toggle-mini-buffer&lt;return&gt; even if the mini-buffer isn't visible!
    # This had better be defined if you intend ever to hide the minibuffer.
    # To avoid confusion, it should be something unlikely to be typed by accident.
toggle-split-direction          = None
transpose-chars                 = Control-t
transpose-lines                 = None
transpose-words                 = Alt-t
undo                            = None         # Ctrl-Z conflicts with suspend.
unindent-region                 = None
universal-argument              = Ctrl-u
unmark-all                      = None         # Alt-U: conflicts with upcase-word.
untabify                        = None
untangle                        = None         # Removed Shift-Ctrl-U: not useful enough
untangle-all                    = None
untangle-marked                 = None
upcase-region                   = None
upcase-word                     = Alt-u
view-lossage                    = None
view-register                   = None
weave                           = None
what-line                       = None
word-search-backward            = None
word-search-forward             = None
write-abbrev-file               = None
write-at-file-nodes             = Shift-Ctrl-W
write-dirty-at-file-nodes       = None
write-missing-at-file-nodes     = None
write-outline-only              = None 
yank                            = Control-y
yank-pop                        = Alt-y
yank-rectangle                  = None
zap-to-character                = Alt-z
</t>
<t tx="ekr.20060112093227.1">fill-paragraph                      = None
fill-region                         = None
fill-region-as-paragraph            = None
find-character                      = None
find-character-extend-selection     = None
find-clone-all                      = None
find-next-clone                     = None
change                              = None
change-all                          = None
change-then-find                    = None
find-next                           = None
find-all                            = None
find-prev                           = None
find-word                           = None
find-word-in-line                   = None
flatten-outline                     = None
flush-lines                         = None
focus-to-body                       = None
focus-to-log                        = None
focus-to-minibuffer                 = None
focus-to-tree                       = None
forward-char                        = None
forward-char-extend-selection       = None
forward-end-word                    = None
forward-end-word-extend-selection   = None
forward-page                        = None
forward-page-extend-selection       = None
forward-paragraph                   = None
forward-paragraph-extend-selection  = None
forward-sentence                    = None
forward-sentence-extend-selection   = None
forward-word                        = None
forward-word-extend-selection       = None
free-tree-widgets                   = None
full-command                        = None
fully-expand-body-pane              = None
fully-expand-log-pane               = None
fully-expand-outline-pane           = None
fully-expand-pane                   = None
get-ipython-results                 = None
go-back                             = None
go-forward                          = None
goto-char                           = None
goto-first-node                     = None
goto-first-visible-node             = None
goto-first-sibling                  = None
goto-global-line                    = None
goto-last-node                      = None
goto-last-sibling                   = None
goto-last-visible-node              = None
goto-line                           = None # Leo's goto-line is better.
goto-next-changed                   = None
goto-next-clone                     = None
goto-next-marked                    = None
goto-next-node                      = None
goto-next-sibling                   = None
goto-next-visible                   = None
goto-parent                         = None
goto-prev-node                      = None
goto-prev-sibling                   = None
goto-prev-visible                   = None
group-operations-clear-marked       = None
group-operations-mark-for-clone     = None
group-operations-mark-for-copy      = None
group-operations-mark-for-move      = None
group-operations-mark-target        = None
group-operations-operate-on-marked  = None
group-operations-transfer           = None
toggle-input-state                  = None
help-for-minibuffer                 = None
help-for-command                    = None
hide-body-pane                      = None
hide-find-tab                       = None
hide-log-pane                       = None
hide-mini-buffer                    = None
hide-pane                           = None
hide-outline-pane                   = None
hide-spell-tab                      = None
hoist                               = None
how-many                            = None
iconify-frame                       = None
import-at-file                      = None
import-at-root                      = None
import-cweb-files                   = None
import-derived-file                 = None
import-flattened-outline            = None
import-noweb-files                  = None
increment-register                  = None
indent-region                       = None
indent-relative                     = None
indent-rigidly                      = None
indent-to-comment-column            = None
insert-body-time                    = None
insert-child                        = None
insert-icon                         = None
insert-file                         = None
insert-headline-time                = None
# insert-kbd-macro                  = None
insert-newline                      = None
insert-node                         = None
insert-parentheses                  = None
insert-register                     = None
# insert-to-buffer                  = None
inverse-add-global-abbrev           = None
isearch-backward                    = None
isearch-backward-regexp             = None
isearch-forward                     = None
isearch-forward-regexp              = None
isearch-with-present-options        = None
jump-to-register                    = None
keep-lines                          = None
keyboard-quit                       = None
kill-all-abbrevs                    = None
kill-buffer                         = None
kill-line                           = None
kill-paragraph                      = None
kill-rectangle                      = None
kill-region                         = None
kill-region-save                    = None
kill-sentence                       = None
kill-word                           = None
line-number                         = None
list-abbrevs                        = None
list-buffers                        = None
list-buffers-alphabetically         = None
make-directory                      = None
mark                                = None
mark-changed-items                  = None
mark-subheads                       = None
match-brackets                      = None
minimize-all                        = None
mode-help                           = None
move-lines-down                     = None
move-lines-up                       = None
move-outline-down                   = None
move-outline-left                   = None
move-outline-right                  = None
move-outline-up                     = None
move-past-close                     = None
move-past-close-extend-selection    = None
</t>
<t tx="ekr.20060112093227.2">name-last-kbd-macro                 = None
negative-argument                   = None
new                                 = None
newline-and-indent                  = None
next-line                           = None
next-line-extend-selection          = None
number-command                      = None
number-command-0                    = None
number-command-1                    = None
number-command-2                    = None
number-command-3                    = None
number-command-4                    = None
number-command-5                    = None
number-command-6                    = None
number-command-7                    = None
number-command-8                    = None
number-command-9                    = None
# number-to-register                = None
open-compare-window                 = None
open-find-dialog                    = None # Deprecated: all find commands use the Find *tab*
open-find-tab                       = None
open-leoDocs-leo                    = None
open-leoPlugins-leo                 = None
open-leoSettings-leo                = None
open-scripts-leo                    = None
open-offline-tutorial               = None
open-online-home                    = None
open-online-tutorial                = None
open-outline                        = None
open-python-window                  = None
open-rectangle                      = None
open-spell-tab                      = None
open-with                           = None
outline-to-cweb                     = None
outline-to-noweb                    = None
paste-node                          = None
paste-retaining-clones              = None
paste-text                          = None
point-to-register                   = None
prepend-to-buffer                   = None
prepend-to-register                 = None
pretty-print-all-python-code        = None
pretty-print-python-code            = None
previous-line                       = None
previous-line-extend-selection      = None
print-bindings                      = None
print-commands                      = None
print-focus                         = None
print-gc-summary                    = None
print-stats                         = None
promote                             = None
propagate-key-event                 = None
# query-replace                       = None
# query-replace-regex                 = None
quick-command                       = None
re-search-backward                  = None
re-search-forward                   = None
read-abbrev-file                    = None
read-at-file-nodes                  = None
read-outline-only                   = None
redo                                = None
reformat-paragraph                  = None
remove-blank-lines                  = None
remove-directory                    = None
remove-sentinels                    = None
remove-space-from-lines             = None
remove-tab-from-lines               = None
rename-buffer                       = None
repeat-complex-command              = None
replace-string                      = None
resize-to-screen                    = None
reverse-region                      = None
reverse-sort-lines                  = None
reverse-sort-lines-ignoring-case    = None
revert                              = None
run-unit-tests                      = None
run-unit-tests-locally              = None
save-buffers-kill-leo               = None
save-file                           = None
save-file-as                        = None
save-file-to                        = None
# scan-for-autocompleter            = None
scroll-down-half-page               = None
scroll-down-line                    = None
scroll-down-page                    = None
scroll-outline-down-line            = None
scroll-outline-down-page            = None
scroll-outline-left                 = None
scroll-outline-right                = None
scroll-outline-up-line              = None
scroll-outline-up-page              = None
scroll-up-half-page                 = None
scroll-up-line                      = None
scroll-up-page                      = None
search-again                        = None
search-backward                     = None
search-forward                      = None
search-with-present-options         = None
select-all                          = None
set-colors                          = None
set-comment-column                  = None
set-extend-mode                     = None
set-fill-column                     = None
set-fill-prefix                     = None
set-find-everywhere                 = None
set-find-node-only                  = None
set-find-suboutline-only            = None
set-font                            = None
set-command-state                   = None
set-insert-state                    = None
# set-mark-command                    = None
set-overwrite-state                 = None
settings                            = None
shell-command                       = None
shell-command-on-region             = None
show-calltips                       = None
show-calltips-force                 = None
show-colors                         = None
show-find-options                   = None
show-fonts                          = None
show-invisibles                     = None
show-mini-buffer                    = None
simulate-begin-drag                 = None
simulate-end-drag                   = None
sort-children                       = None
sort-columns                        = None
sort-fields                         = None
sort-lines                          = None
sort-lines-ignoring-case            = None
sort-recent-files                   = None
sort-siblings                       = None
spell-change                        = None
spell-change-then-find              = None
spell-find                          = None
spell-ignore                        = None
split-line                          = None
start-ipython                       = None
start-kbd-macro                     = None
string-rectangle                    = None
suspend                             = None
switch-to-buffer                    = None
tabify                              = None
tangle                              = None
tangle-all                          = None
tangle-marked                       = None
toggle-active-pane                  = None
toggle-angle-brackets               = None
toggle-autocompleter                = None
toggle-calltips                     = None
toggle-extend-mode                  = None
toggle-find-ignore-case-option      = None
toggle-find-in-body-option          = None
toggle-find-in-headline-option      = None
toggle-find-mark-changes-option     = None
toggle-find-mark-finds-option       = None
toggle-find-regex-option            = None
toggle-find-reverse-option          = None
toggle-find-word-option             = None
toggle-find-wrap-around-option      = None
toggle-mini-buffer                  = None
    # It **is** possible to use &lt;alt-x&gt;toggle-mini-buffer&lt;return&gt; even if the mini-buffer isn't visible!
    # This had better be defined if you intend ever to hide the minibuffer.
    # To avoid confusion, it should be something unlikely to be typed by accident.
# toggle-sparce-move                = None
toggle-split-direction              = None
transpose-chars                     = None
transpose-lines                     = None
transpose-words                     = None
undo                                = None
unindent-region                     = None
universal-argument                  = None
unmark-all                          = None
untabify                            = None
untangle                            = None
untangle-all                        = None
untangle-marked                     = None
upcase-region                       = None
upcase-word                         = None
verbose-dump-objects                = None
view-lossage                        = None
view-register                       = None
weave                               = None
what-line                           = None
word-search-backward                = None
word-search-forward                 = None
write-abbrev-file                   = None
write-at-file-nodes                 = None
write-dirty-at-file-nodes           = None
write-missing-at-file-nodes         = None
write-outline-only                  = None
yank                                = None
yank-pop                            = None
yank-rectangle                      = None
zap-to-character                    = None</t>
<t tx="ekr.20060112103537.17">'''This script reports commands that exist in some but not all key- binding
sets. setNames is a list of the roots of all such sets.'''

import leo.core.leoConfig as leoConfig
import leo.core.leoTest as leoTest

u = leoTest.testUtils(c)
parser = leoConfig.settingsTreeParser(c)

# Add these as required to handle commands defined by plugins.
optionalCommandPrefixes = ['group-operations']
optionalCommandNames = [
    # These are the command names as defined by plugins.
    # LeoSlideShows.leo defines buttons whose commands do not end in '-command'.
    'next-slide-command','next-slide-show-command',
    'prev-slide-command','prev-slide-show-command',
    # The ipython plugin.
    'start-ipython','get-ipython-results','push-to-ipython',
]

setNames = []
setsDict = {} # keys are set names, values are dicts of command names.
shortcutsDict = {}

@others

main()
</t>
<t tx="ekr.20060112104119">def defineSetNames():

    global setNames

    if 1:
        setNames = []
        for p in c.allNodes_iter():
            h = p.headString()
            if h.startswith('@keys'):
                h = h[5:].strip()
                if h not in setNames:
                    setNames.append(h)
        g.es('Found these sets...')
        for setName in setNames:
            g.es_print('  %s' % str(setName))
    else:
        setNames = [
            'Default Emacs shortcuts',
            'Legacy Leo bindings',
            'Legacy Leo shortcuts with important Emacs bindings',
            'No bindings',
            'EKR bindings: a mix',
            'EKR bindings: Mode-oriented',
        ]

    setNames.sort()
</t>
<t tx="ekr.20060112104333">def doSet(p,name):

    global shortcutsDict

    shortcutsDict = {}

    for p in p.subtree_iter():
        if p.headString().startswith('@shortcuts'):
            doShortcuts(p,name)
</t>
<t tx="ekr.20060112104333.1">def checkSets():

    global setNames, optionalCommandPrefixes, optionalCommandNames

    # Compute the union of all the command names.
    allNames = {}
    for setName in setNames:
        d = setsDict.get(setName)
        if d:
            for key in d.keys():
                allNames[key] = key
        else:
            g.es_print('No setsDict for %s' % (repr(setName)),color='red')

    k = c.keyHandler
    keys = list(allNames.keys())
    keys.sort()

    # Warn about missing names.
    for setName in ('No bindings',): # setNames:
        d = setsDict.get(setName)
        if not d:
            g.es_print("'@keys No bindings' not found",color='red')
        for key in keys:
            if key not in ('none','None',None) and key not in d.keys():
                # Don't warn about missing 'enter-xxx-mode' commands.
                if (
                    not (key.startswith('enter-') and key.endswith('-mode')) and
                    not (key.startswith('press-') and key.endswith('-button'))
                ):
                    g.es_print('%s is missing %-35s = None' % (setName,repr(key)))

    # Warn about undefined commands.
    for key in keys:
        if not c.commandsDict.get(key):
            ok = False
            # full-command and quick command are weird special cases.
            if key not in ('None',None,'full-command','quick-command'):
                # Don't warn about missing 'enter-xxx-mode' commands.
                if key.startswith('enter-') and key.endswith('-mode'):
                    ok = True
                elif key.startswith('press-') and key.endswith('-button'):
                    ok = True
                for prefix in optionalCommandPrefixes:
                    if key.startswith(prefix):
                        ok = True
                for optionalCommand in optionalCommandNames:
                    if key == optionalCommand:
                        ok = True
                if not ok:
                    g.es_print('Undefined command name: %s' % (key))
</t>
<t tx="ekr.20060112104823">def main ():

    global setNames
    defineSetNames()

    # root = u.findNodeAnywhere('Keyboard shortcuts')
    # for p in root.self_and_subtree_iter():

    g.es_print('-' * 40)
    seen = {}
    for p in c.allNodes_iter():
        h = p.headString()
        if h.startswith('@keys'):
            h = h[5:].strip()
            if not seen.get(h):
                seen[h] = True
                doSet(p,h)
    checkSets()
    g.es('Check Bindings done')
</t>
<t tx="ekr.20060112105523">def doShortcuts(p,setName):

    global parser,setsDict,shortcutsDict

    d = setsDict.get(setName,{})
    s = p.bodyString()
    lines = g.splitLines(s)
    for line in lines:
        line = line.strip()
        if line and not line.startswith('#'):
            commandName,bunch = parser.parseShortcutLine(line)
            if not bunch:
                g.es_print('In %s:\nmissing "=" in shortcut line:%s' % (
                    p.headString(),repr(line)),color='red')
            else:
                # Having multiple shortcuts for a command if fine,
                # But having multiple commands for a shortcut is not.
                shortcut = bunch and bunch.val
                pane = bunch and bunch.pane
                if shortcut not in (None,'None','none'):
                    aList = shortcutsDict.get(shortcut,[])
                    if aList:
                        for commandName2,pane2 in aList:
                            if pane == pane2:
                                g.es_print('duplicate shortcut %s in set %s: previous command: %s' % (
                                    shortcut,setName,commandName2),color='red')
                        else:
                            aList.append((commandName,pane),)
                    else:
                        shortcutsDict [shortcut] = [(commandName,pane),]

                data = d.get(commandName)
                if data:
                    shortcut2,pane2 = data
                    if shortcut == shortcut2 and pane == pane2:
                        g.es_print('duplicate %s in set %s' % (
                            commandName,setName),color='red')
                else:
                    data = shortcut,pane
                    d[commandName] = data

    setsDict[setName] = d
</t>
<t tx="ekr.20060112110750"></t>
<t tx="ekr.20060112112006"></t>
<t tx="ekr.20060114073238">If True, Leo will report to the console which bindings have been created.

Thus, you must be running from a console window for this setting to be useful.</t>
<t tx="ekr.20060114082205">If this setting is non-empty the trace_bindings setting will report only
bindings that match the string (ignoring case).

For this setting to be useful the following must be true:

- you must be running from a console window.

- @bool trace_bindings must be True.</t>
<t tx="ekr.20060114083009">If this setting is non-empty the trace_bindings setting will report only bindings for matching panes.  For example, to see all ! text bindings, set this setting to text.

For this setting to be useful the following must be true:

- you must be running from a console window.

- @bool trace_bindings must be True.</t>
<t tx="ekr.20060116090646">@nocolor

Standard keys (Windows defaults in parens)

F1 help
Windows key + F1 Windows Help
F2 find-prev (Rename)
F3 find-next (Find Files)
F4 None (Address bar in Windows Explorer)
F5 None (Refresh, Reload in Windows Explorer)
F6 None (Should cycle from window to window)
F7 open-spell-tab (Spell in Word)
Shift-F7 None (Thesaurus in Word)
F8 None (Safe mode)
F9 None
F10 None (Activate menu bar in many programs)
F11 None (Toggle full screen mode in explorer)
F12 None

You can use F10 to highlight the first menu choice, and then use the arrow keys to move around the menus. Pressing the Shift key while pressing F10 will bring up the shortcut menu. This is similar to right-clicking on an object.</t>
<t tx="ekr.20060117092249">A mode is a temporary set of key bindings. Modes are created by nodes whose
headline has the form:

@mode &lt;mode name&gt;

The body text contains a list of shortcut specifiers. @mode nodes work just like
@shortcuts, but as a side effect they create the enter-&lt;mode name&gt;-mode
command.  For example, 

@mode quick-commands

creates the enter-quick-commands command. You can bind keys to such commands in
@shortcut nodes as usual.

Notes:

- Pane specifiers are ignored in @mode nodes. Bindings apply only to a single
mode.

- @shortcuts nodes specify the bindings in effect for the 'default' or
'top-level' mode. The keyboard-quit command always set the mode to the top-level
mode.

- The top_level_unbound_key_action setting determines what happens to unbound
keys *only* for the top-level mode.

- A mode contains *only* the key bindings explicitly specified in the @mode
node. The only default key binding is the binding for the keyboard-quit command
(usually Control-g). Thus, all modes except the top-level mode act as if
top_level_unbound_key_action = 'ignore'. In particular, the set-command-state,
set-insert-state and set-overwrite-state commands affect only the top-level mode.

- The mode-help command (recommend binding is Tab) lists all bound keystrokes in
a mode.

- ** New in 4.4.1: In @mode nodes, shortcut specifier lines of the form::

    --&gt; command-name
    
Specify that the named command will be executed before entering the mode. More
than one such **mode-entry commands may appear.

- In @mode nodes, shortcut specifier lines of the form:

    command-name -&gt; mode-name = binding

specify that Leo will enter the named mode after executing the command. As a
special case,

    command-name -&gt; same = binding

will cause the command to be executed without changing mode.</t>
<t tx="ekr.20060120123529">True:  Clicking anywhere in an unselected node selects the node and *also* expands or contracts it.
False: Clicking an unselected node just selects the node, unless the click happens in the expand/contract box.</t>
<t tx="ekr.20060121102627"></t>
<t tx="ekr.20060122105527.3"></t>
<t tx="ekr.20060122105527.4">@nocolor

This setting determines the initial binding for otherwise-unbound keystrokes
when no mode is in effect.  Note: the keyboard-quit command exits all modes.

The valid values are::

ignore:  Leo ignores the key (like Vim).
insert:  Leo inserts the key at the cursor (like Emacs)
overwrite: Leo replaces the character at the cursor.</t>
<t tx="ekr.20060122105527.5">The Cmds menu is not ready yet.  It will be similar to the Emacs Cmds menu.</t>
<t tx="ekr.20060122105527.6">Important:

1. The minibuffer will exist regardless of this setting, but will not be shown
   initially if it is False.

2. Hiding the minibuffer does not change any bindings or the operation of Leo in
   any other way. Therefore, if you do hide the minibuffer initially, and never
   want to use it, you should not bind shortcuts to any commands that use the
   minibuffer.

3. You can execute the show-mini-buffer, hide-mini-buffer and toggle-mini-buffer
   commands (or any other minibuffer command!) if the minibuffer is hidden.
   Indeed, the following will work even if the minibuffer is hidden.

       &lt;alt-x&gt;show-mini-buffer&lt;return&gt;</t>
<t tx="ekr.20060122105527.7">True: (Recommended) Selecting an outline node leaves the focus in the outline pane.

If this is False it will be harder to use the arrow keys in the headline.
    
False: (Legacy) Selecting an outline node transfers focus to the body pane.</t>
<t tx="ekr.20060122105527.8"></t>
<t tx="ekr.20060125104049">True: (recommended) The Find tab shows only options, not text or buttons.
False: (legacy)     The Find tab shows text, options and buttons.</t>
<t tx="ekr.20060126075152"># True: calls to the garbage collector.</t>
<t tx="ekr.20060126083715"># True: verbose trace the garbage collector.</t>
<t tx="ekr.20060127050605">Zero (recommended): unlimited stack size.
Non-zero: limit the maximum stack size to the given number.</t>
<t tx="ekr.20060131071612">
</t>
<t tx="ekr.20060131071947"></t>
<t tx="ekr.20060201110016"></t>
<t tx="ekr.20060201111002"></t>
<t tx="ekr.20060202092911"></t>
<t tx="ekr.20060202113731"></t>
<t tx="ekr.20060204093736"></t>
<t tx="ekr.20060204102644"></t>
<t tx="ekr.20060204124608">True: minibuffer commands show the Find Tab.
False: minibuffer commands hide the Find Tab.

Important: the Find Tab always exists regardless of this setting.</t>
<t tx="ekr.20060206155101"></t>
<t tx="ekr.20060206161839"></t>
<t tx="ekr.20060207142012"></t>
<t tx="ekr.20060209045356"></t>
<t tx="ekr.20060210105437"></t>
<t tx="ekr.20060212101234"># True: call Python's garbage collector before every screen redraw.
# There used to be a warning about this slowing Leo, but I seen now problem with it at present.</t>
<t tx="ekr.20060212103826"># True (recommended): print a message when Leo calls gc.collect explicitly.</t>
<t tx="ekr.20060215054710"></t>
<t tx="ekr.20060215094146">No longer functional

True (recommended): Leo completely ignores the caps-lock key.
False: The caps-lock key reverses the case of alphabetic characters.

Regardless of this setting, the caps-lock key has no effect on Control or Alt keys.</t>
<t tx="ekr.20060215102141">True (Legacy):          ignore unbound non-ascii keys, like Ä.
False: (Recommended):   allow unicode characters in Leo's text.</t>
<t tx="ekr.20060215104345">True (legacy):      Translate control-only keys to command keys on the Mac.
False (recommended):  No translation.</t>
<t tx="ekr.20060216091239">True: trace all changes to the minibuffer</t>
<t tx="ekr.20060216130607">True: trace all changes to the status line.</t>
<t tx="ekr.20060216135834">True:  enable autocompletion initially.
False: disable autocomopletion initially.

You can use the enable-autocompleter and disable-autocompleter
commands to enable or disable autocompletion at any time.

Note: The 'initially' prefix is needed to distinguish this setting from
enable-autocompleter command. Otherwised they would get 'munged' to the same
configuration value.</t>
<t tx="ekr.20060216170801"></t>
<t tx="ekr.20060303075452">The following commands are will be useful for operating Leo without a mouse.

Clicks

click-headline
click-icon-box
double-click-headline
double-click-icon-box

Cursor moves and selection (Basic Emacs commands)

back-char
back-char-extend-selection
back-paragraph
back-paragraph-extend-selection
back-sentence
back-sentence-extend-selection
back-to-indentation
back-word
back-word-extend-selection
backward-delete-char
backward-kill-paragraph
backward-kill-sentence
backward-kill-word
beginning-of-buffer
beginning-of-buffer-extend-selection=
beginning-of-line
beginning-of-line-extend-selection
delete-char
end-of-buffer
end-of-buffer-extend-selection
end-of-line
end-of-line-extend-selection
exchange-point-mark
forward-char
forward-char-extend-selection
forward-paragraph
forward-paragraph-extend-selection
forward-sentence
forward-sentence-extend-selection
forward-word
forward-word-extend-selection
insert-newline
kill-line
kill-paragraph
kill-rectangle
kill-region
kill-region-save
kill-sentence
kill-word
move-past-close
move-past-close-extend-selection
newline-and-indent 
next-line
next-line-extend-selection
paste-text
point-to-register
prepend-to-buffer
previous-line
previous-line-extend-selection
scroll-down-half-page
scroll-down-line
scroll-down-page
scroll-up-line
scroll-up-page
yank
yank-pop  
zap-to-character

Focus

abort-edit-headline
cycle-focus
edit-headline
end-edit-headline
focus-to-body
focus-to-log
focus-to-minibuffer
focus-to-tree

Menus

activate-cmds-menu
activate-edit-menu
activate-file-menu
activate-help-menu
activate-outline-menu
activate-plugins-menu
activate-window-menu

Nodes: selecting, expanding and contracting

contract-all
contract-node
contract-or-go-left
contract-parent
equal-sized-panes
expand-all
expand-and-go-right
expand-next-level
expand-node
expand-or-go-right
expand-prev-level
go-back
go-forward
goto-char
goto-first-node
goto-first-sibling
goto-first-visible-node
goto-last-node
goto-last-sibling
goto-last-visible-node
goto-next-node
goto-next-sibling
goto-next-visible
goto-parent
goto-prev-node
goto-prev-sibling
goto-prev-visible

Panes

contract-body-pane
contract-log-pane
contract-outline-pane
contract-pane
expand-body-pane
expand-log-pane
expand-outline-pane
expand-pane
fully-expand-body-pane
fully-expand-log-pane
fully-expand-outline-pane
fully-expand-pane
hide-body-pane
hide-find-tab
hide-log-pane
hide-mini-buffer
hide-pane
hide-outline-pane
hide-spell-tab

Furthermore, the find commands are a good tool for using Leo without a mouse
(More commands are coming)

change
change-all
change-then-find
find-next
find-all
find-prev
hide-find-tab
isearch-backward
isearch-backward-regexp
isearch-forward
isearch-forward-regexp
open-find-tab
# query-replace
# query-replace-regex
replace-string
search-again
search-backward
search-forward
search-with-present-options

Setting find options:

enter-find-options-mode
set-find-everywhere
set-find-node-only
set-find-suboutline-only
show-find-options
toggle-find-ignore-case-option
toggle-find-in-body-option
toggle-find-in-headline-option
toggle-find-mark-changes-option
toggle-find-mark-finds-option
toggle-find-regex-option
toggle-find-reverse-option
toggle-find-word-option
toggle-find-wrap-around-option
word-search-backward
word-search-forward</t>
<t tx="ekr.20060306031258"></t>
<t tx="ekr.20060309022759"></t>
<t tx="ekr.20060323131801">True: warn if a command has no setting.</t>
<t tx="ekr.20060325071042"></t>
<t tx="ekr.20060325071042.1"></t>
<t tx="ekr.20060325071042.2"></t>
<t tx="ekr.20060325071042.3"></t>
<t tx="ekr.20060325071916"></t>
<t tx="ekr.20060408090018"></t>
<t tx="ekr.20060425124142"></t>
<t tx="ekr.20060425125015"></t>
<t tx="ekr.20060504131831"></t>
<t tx="ekr.20060504131831.1"></t>
<t tx="ekr.20060504131831.2"></t>
<t tx="ekr.20060504134056"></t>
<t tx="ekr.20060504134056.1"></t>
<t tx="ekr.20060504134056.2"></t>
<t tx="ekr.20060504140351"></t>
<t tx="ekr.20060504140408"></t>
<t tx="ekr.20060504140408.1"></t>
<t tx="ekr.20060504140408.2"></t>
<t tx="ekr.20060513100933">The number of times the colorizer's main loop in colorOneChunk executes before pausing to check for events.
A reasonable value is 10.</t>
<t tx="ekr.20060513100933.1">The number of times the colorizer's main loop in colorOneChunk executes before actually colorizing text.
A reasonable value is 5000.</t>
<t tx="ekr.20060521132401">c:\Python24\Scripts\_winpdb.py</t>
<t tx="ekr.20060521134125">The debug target to use if no target is specified otherwise.

c:\prog\tigris-cvs\leo\src\leo.py
</t>
<t tx="ekr.20060521134125.1">The debug target to use regardless of the selected node or other settings.</t>
<t tx="ekr.20060524151415"></t>
<t tx="ekr.20060524151415.1">idle: use Python's standard Idle debugger.

winpdb: (recommended) use winpdb debugger.

To use winpdb you must download and install winpdb from:
http://www.digitalpeers.com/pythondebugger/

There is no special support for Idle, so you may as well open Idle using Leo's
open-python-window command.</t>
<t tx="ekr.20060528175513"></t>
<t tx="ekr.20060531094310">True:  auto-indent regardless of how text is colored.
False: suppress auto-indenting if in range @nocolor or @kill.</t>
<t tx="ekr.20060603070801">True:  enable calltip expansion initially.
False: disable calltip expansion initially.

You can use the enable-calltips and disable-calltips
commands to enable or disable autocompletion at any time.

Note: The 'initially' prefix is needed to distinguish this setting from
enable-calltips command. Otherwised they would get 'munged' to the same
configuration value.</t>
<t tx="ekr.20060603215208"># These bindings are a mixture of emacs bindings, windows bindings and vim bindings.</t>
<t tx="ekr.20060603215208.19"># Quick finds
backward-find-character                     = Alt-Q
backward-find-character-extend-selection    = Alt-Shift-Q
find-character                              = None ### = Alt-P
find-character-extend-selection             = None ### = Alt-Shift-P

# To start finds and changes...
search-again                        = None  # similar to search-with-present-options.
search-with-present-options         = Ctrl-f
replace-string                      = Ctrl-Shift-r
hide-find-tab                       = None
open-find-tab                       = None

clone-find-all                      = None
isearch-backward                    = Alt-R
isearch-backward-regexp             = None
isearch-forward                     = Alt-S
isearch-forward-regexp              = None
# isearch-with-present-options      = Alt-i
# query-replace                       = None
# query-replace-regex                 = None
search-backward                     = None
search-forward                      = None
word-search-backward                = None 
word-search-forward                 = None

# To coninue finds and changes...
find-next                           = F3
find-all                            = None
find-prev                           = F2
change                              = Ctrl-=
change-all                          = None  # Not recommended to bind this to a shortcut.
change-then-find                    = Ctrl--

set-find-everywhere                 = Alt-Ctrl-e
set-find-node-only                  = Alt-Ctrl-n
set-find-suboutline-only            = Alt-Ctrl-s
toggle-find-ignore-case-option      = Alt-Ctrl-i
toggle-find-in-body-option          = Alt-Ctrl-b
toggle-find-in-headline-option      = Alt-Ctrl-h
toggle-find-mark-changes-option     = Alt-Ctrl-c
toggle-find-mark-finds-option       = Alt-Ctrl-f
toggle-find-regex-option            = Alt-Ctrl-x
toggle-find-reverse-option          = Alt-Ctrl-r
toggle-find-word-option             = Alt-Ctrl-w
toggle-find-wrap-around-option      = Alt-Ctrl-a</t>
<t tx="ekr.20060603215208.20">full-command            = Alt-x
negative-argument       = None      # Alt-minus conflicts with contract-all.
repeat-complex-command  = Ctrl-P
universal-argument      = Alt-u     # Usually Ctrl-u, conflicts with move-outline-up.



</t>
<t tx="ekr.20060605081712">Recommended:
    
white                   if top_level_unbound_key_action is command
a color like MistyRose1 if top_level_unbound_key_action is insert or overwrite.

#f2fdff</t>
<t tx="ekr.20060605081712.3">Overrides body_text_foreground_color.</t>
<t tx="ekr.20060606085536">Overrides body_text_background_color.

wheat1
PeachPuff1
LemonChiffon1
cornsilk1
honeydew1
LavenderBlush1
azure2
aquamarine1</t>
<t tx="ekr.20060606085536.1">Overrides body_text_foreground_color.</t>
<t tx="ekr.20060616172614"></t>
<t tx="ekr.20060620085654">vertical:   pack body-pane editors vertically.
horizontal: pack body-pane editors horizontally.</t>
<t tx="ekr.20060627065953"></t>
<t tx="ekr.20060627084739">True: flash matching bracket when typing (, ), [, ], { or }.</t>
<t tx="ekr.20060627121646"></t>
<t tx="ekr.20060627121646.1"></t>
<t tx="ekr.20060627121646.2">The number of times to flash matching brackets.</t>
<t tx="ekr.20060627121646.3">One half the total cycle time of bracket flashes, in milliseconds.</t>
<t tx="ekr.20060702100257">menu_text_font_family = None
menu_text_font_size = None
menu_text_font_slant = None
menu_text_font_weight = None</t>
<t tx="ekr.20060704090341"></t>
<t tx="ekr.20060713101831"></t>
<t tx="ekr.20060730101451"></t>
<t tx="ekr.20060730101451.3"></t>
<t tx="ekr.20060730101451.5"></t>
<t tx="ekr.20060804095015">Important: the order the open_flash_brackets and close_flash_brackets settings must be consistent.</t>
<t tx="ekr.20060804095015.1">Important: the order the open_flash_brackets and close_flash_brackets settings must be consistent.</t>
<t tx="ekr.20060807103220"></t>
<t tx="ekr.20060807103220.1">This is the body text of a single day node.</t>
<t tx="ekr.20060807103220.10">True: Omit saturdays if a whole year is inserted</t>
<t tx="ekr.20060807103220.11">True: Omit sundays if a whole year is inserted</t>
<t tx="ekr.20060807103220.2">This is the format of the headline if a single day node is inserted.</t>
<t tx="ekr.20060807103220.3">This is the format of day node headline if a whole month is inserted.</t>
<t tx="ekr.20060807103220.4">This is the format of the month node headline if a whole month is inserted.</t>
<t tx="ekr.20060807103220.5">True: Omit saturdays if a whole month is inserted.</t>
<t tx="ekr.20060807103220.6">True: Omit sundays if a whole month is inserted.</t>
<t tx="ekr.20060807103220.7">This is the format of the day node headline if a whole year is inserted.</t>
<t tx="ekr.20060807103220.8">This is the format of the month node headline if a whole year is inserted.</t>
<t tx="ekr.20060807103220.9">This is the format of the year node headline if a whole year is inserted.</t>
<t tx="ekr.20060822101942.1">Overrides body_text_foreground_color.</t>
<t tx="ekr.20060826152759"></t>
<t tx="ekr.20060827102902"></t>
<t tx="ekr.20060827102902.1"></t>
<t tx="ekr.20060827102902.2"></t>
<t tx="ekr.20060828110551"></t>
<t tx="ekr.20060828110551.1">Valid settings for _style strings are None, normal, bold, italic, bold-italic.</t>
<t tx="ekr.20060828110551.2"></t>
<t tx="ekr.20060828110551.3"></t>
<t tx="ekr.20060828145228"></t>
<t tx="ekr.20060828145228.1"># For new colorizer

# php_keyword1_font_family = None
php_keyword1_font_size = None
php_keyword1_font_slant = roman
    # roman, italic
php_keyword1_font_weight = normal
    # normal, bold</t>
<t tx="ekr.20060829085840"># php_keyword_font_family = None
php_keyword_font_size = None
php_keyword_font_slant = roman
    # roman, italic
php_keyword_font_weight = none
    # normal, bold</t>
<t tx="ekr.20060904211808"></t>
<t tx="ekr.20060904211808.1">The path to the zodb storage.</t>
<t tx="ekr.20060913144412">@keys nodes mark as set of @shortcuts nodes.  @keys nodes are used only by the script in the node:
    
    @button Check Bindings
    
in this file.  This makes it possible for the script to produce better error messages.</t>
<t tx="ekr.20060919171527"></t>
<t tx="ekr.20060919171527.1">True:  Use &lt;:body&gt; elements to hold body text in &lt;outline&gt; elements.
False: Use :body attributes to hold body text in &lt;outline&gt; elements.</t>
<t tx="ekr.20060919171527.2">The namespace urn for the xmlns attribute of &lt;opml&gt; elements.
This value typically is not used, but it should refer to Leo in some way.</t>
<t tx="ekr.20060919173031">True: Write (as attributes of the opml &lt;outline&gt; elements) the Leo-specific
      attributes written in Leo's &lt;v&gt; elements, namely 'a',
      'descendentTnodeUnknownAttributes', 'expanded', 'marks','t', and
      'tnodeList' elements.
    
False: Do not write such attributes.</t>
<t tx="ekr.20060919173031.1">True:  Write (as attributes of the opml &lt;head&gt; element) the attributes in Leo's &lt;globals&gt; element.
False: Do not write such attributes.</t>
<t tx="ekr.20060919181622">True:  Write body text in either &lt;:body&gt; elements or :body attributes,
       depending on the opml_use_outline_elements setting.

False: Write only outlines.</t>
<t tx="ekr.20060919195145">This should be either 2.0 or 1.0.
Version 2.0 is more flexible, and should be used unless there are problems.</t>
<t tx="ekr.20060921080239">True:  Read derived files referenced from @file and @thin nodes when reading .opml files.

False: Do not read derived when reading .opml files.</t>
<t tx="ekr.20060921080239.1">True:  Write derived files when writing .opml files.

False: Do not write derived when reading .opml files.</t>
<t tx="ekr.20060922110220">True:  Write unknown attributes (uA's) in either &lt;:uA&gt; sub-elements of &lt;outline&gt; elements.

False: Do not write uA's.</t>
<t tx="ekr.20060925060533.1"># Important: arrow keys also move the cursor: all arrow keys are handled elsewhere.

back-word                           = Alt-b  
back-word-extend-selection          = Alt-Shift-b
back-to-indentation                 = None # Ctrl-space
beginning-of-line                   = Ctrl-a
beginning-of-line-extend-selection  = Ctrl-Shift-a
end-of-line                         = Ctrl-e
exchange-point-mark                 = Alt-M     # Should be Ctrl-X Ctrl-X.
end-of-line-extend-selection        = Ctrl-Shift-e
extend-to-line                      = Alt-L
extend-to-word                      = Ctrl-W # Alt-W
forward-paragraph                   = Alt-braceright
forward-paragraph-extend-selection  = Alt-Shift-braceright
forward-sentence                    = None # Alt-e
forward-sentence-extend-selection   = None # Alt-Shift-e
forward-word                        = None # Alt-f
forward-word-extend-selection       = None # Alt-Shift-f
goto-global-line                    = Alt-g
# match-brackets                    = Ctrl-K    # kill-line
move-past-close                     = Alt-parenright # Same as Alt-shift-parenright
move-past-close-extend-selection    = None
# next-line                         = Ctrl-N
# next-line-extend-selection        = Ctrl-Shift-N
# previous-line                     = Ctrl-P
# previous-line-extend-selection    = Ctrl-Shift-P
#select-all                         =  Alt-Shift-A  # Shift-Ctrl-A: beginning-of-line-extend-selection.
select-all                          = Alt-Shift-A  # Shift-Ctrl-A: beginning-of-line-extend-selection.</t>
<t tx="ekr.20060925060533.2">contract-pane       = Alt+Ctrl+-
expand-pane         = Alt+Ctrl-=
focus-to-body       = Alt-d
focus-to-tree       = Alt-t
toggle-active-pane  = Ctrl-t
keyboard-quit       = Ctrl-g

# Possible alternatives.
# keyboard-quit     = Escape # Hard to type, interferes with dismissing dialogs.
# focus-to-tree     = Ctrl-T</t>
<t tx="ekr.20060925060533.3">clone-node                  = Ctrl-`
chapter-clone-node-to       = None
chapter-copy-node-to        = None
chapter-create              = None
chapter-move-node-to        = None
chapter-remove              = None
chapter-select              = None
contract-node               = None
copy-node                   = Shift-Ctrl-c
cut-node                    = Shift-Ctrl-x
contract-all                = Alt--
edit-headline               = Ctrl-h
delete-node                 = None
demote                      = Ctrl-}
demote                      = Ctrl-]
expand-next-level           = None
expand-node                 = Alt-]
extract                     = Shift-Ctrl-D
extract-names               = Shift-Ctrl-N
extract-python-method       = None
extract-section             = Shift-Ctrl-S  # Shift-Ctrl-E: end-of-line-extend-selection
goto-next-clone             = Alt-N
insert-child                = Ctrl-Insert
insert-node                 = Ctrl-I
insert-node                 = Insert
mark                        = Ctrl-M
move-outline-down           = Ctrl-D
move-outline-left           = Ctrl-L
move-outline-right          = Ctrl-R
move-outline-up             = Ctrl-U
paste-node                  = Shift-Ctrl-V
promote                     = Ctrl-{
promote                     = Ctrl-[</t>
<t tx="ekr.20060925060533.4">add-comments                        = Ctrl-parenleft
backward-delete-char                = BackSpace
backward-delete-word                = Ctrl-BackSpace
backward-kill-word                  = Alt-BackSpace
copy-text                           = Ctrl-c        # Conflicts with Emacs ctrl-c
cut-text                            = Ctrl-x
delete-char                         = Delete
delete-comments                     = Ctrl-parenright
delete-comments                     = Shift-Ctrl-0
delete-word                         = Ctrl-Delete
delete-spaces                       = None
kill-line                           = Ctrl-k
newline-and-indent                  = Ctrl-j
paste-text                          = Ctrl-v
reformat-paragraph                  = Shift-Ctrl-p
split-line                          = None
unindent-region                     = Shift-tab
yank                                = Ctrl-Y
yank-pop                            = Alt-Y
zap-to-character                    = Alt-z</t>
<t tx="ekr.20060925061845">close-window                = Alt-F4
exit-leo                    = Ctrl-q
new                         = Ctrl-n    # Ctrl-n conflicts with next-line.
open-outline                = Ctrl-o
save-file                   = Ctrl-s
write-at-file-nodes         = Shift-Ctrl-W
write-dirty-at-file-nodes   = Shift+Ctrl+Q
</t>
<t tx="ekr.20060925061845.1">auto-complete-force         = Ctrl-space
auto-complete               = period
debug                       = None
execute-script              = Ctrl+B
help-for-command            = F1
open-spell-tab              = F7
redo                        = Shift-Ctrl-Z
run-unit-tests              = Alt-5
run-unit-tests-locally      = Alt-4
show-calltips               = parenleft
show-calltips-force         = None # This command needs work before it is useful. Alt-parenleft
sort-siblings               = Alt-A
toggle-autocompleter        = Alt-1
toggle-calltips             = Alt-2
toggle-extend-mode          = Alt-3
undo                        = Ctrl-Z</t>
<t tx="ekr.20060926160657">True: Focus moves to outline pane after editing a headline.

False: (legacy operation) Focus moves to body pane after editing a headline.
       </t>
<t tx="ekr.20060926161207.1"></t>
<t tx="ekr.20060926161207.2">@nocolor

This setting determines the initial binding for otherwise-unbound keystrokes
when no mode is in effect.  Note: the keyboard-quit command exits all modes.

The valid values are::

command:  Leo ignores the key (like Vim).
insert:  Leo inserts the key at the cursor (like Emacs)
overwrite: Leo replaces the character at the cursor.</t>
<t tx="ekr.20060930085332">True: Outline gets focus when a new window is opened.
False Body pane gets focus when a new window is opened.</t>
<t tx="ekr.20060930085532">True: (Recommended) The find commands collapse all nodes that are not ancestors of the node containing the match.
False: The find command expands nodes needed to show the match, but does not collapse any nodes.</t>
<t tx="ekr.20060930111325"></t>
<t tx="ekr.20060930111325.1">The maximum length of button names.
</t>
<t tx="ekr.20060930111325.2">True: adds a button for every @button node.
</t>
<t tx="ekr.20060930111325.3">True: define a minibuffer command for every @command node.
</t>
<t tx="ekr.20060930111325.4">True: dynamically loads plugins in @plugins nodes when a window is created.
</t>
<t tx="ekr.20060930111325.5">True: dynamically executes script in @script nodes when a window is created.  DANGEROUS!
</t>
<t tx="ekr.20060930111325.6">True: create Debug Script button.
</t>
<t tx="ekr.20060930111325.7">True: create Run Script button.

Note: The plugin creates the press-run-script-button command regardless of this setting.</t>
<t tx="ekr.20060930112030">True: create Script Button button in icon area.

Note: The plugin creates the press-script-button-button regardless of this setting.</t>
<t tx="ekr.20061002115414"></t>
<t tx="ekr.20061002115414.1">This setting appears in two places: 'Keyboard and minibuffer options' and 'Outline pane options'.

A time (in seconds) that controls how handles keystrokes when the outline pane has focus.

When two keystrokes are separated by less than this time, Leo will attempt to
find the next headline that starts with the previous match, extended by the key
just typed. Otherwise, Leo will find the next headline that starts with the key
just typed.

The outline nav search reverts to a single-character search if the extended
search fails, so in practice everything works well without thinking about what
is happening.
</t>
<t tx="ekr.20061003173413"></t>
<t tx="ekr.20061004150211">True:  Use a sax-based parser to read .leo files.
       This is slower than using Leo's legacy xml parser, but may solve some unicode problems.
False: Use Leo's legacy xml parser code.</t>
<t tx="ekr.20061007211759">True: collapse the parent of the moved node when moving a node left.</t>
<t tx="ekr.20061009190510">True: update .leoRecentFiles.txt, creating it if if does not exist.
False: don't update .leoRecentFiles and don't create it.</t>
<t tx="ekr.20061010111324">True: (legacy) Select all headline text when editing a headline.
False: Put the cursor at the end of the headline text.</t>
<t tx="ekr.20061011082224">@nocolor

myLeoSettings.leo is a major improvement in how Leo handles settings. You can
'override' settings defined in any leoSettings.leo file by placing your own
settings in myLeoSettings.leo, either in your HOME directory or in the
leo/config directory (the directory containing this file.) Distributions of Leo
leave myLeoSettings.leo alone, and myLeoSettings.leo is not part of Leo's cvs
repository, so Leo never changes myLeoSettings.leo.

This section lists settings that would be natural candidates for inclusion in
myLeoSettings.leo. That is, you may have strong preferences for these settings
that differ from mine.

Notes:

- The actual settings here have no effect because they are not in an @settings
tree. However, their *clones* can have effect elsewhere in this file. You can use
the Go To Next Clone (Alt-N) to find clones elsewhere in the file.

- I have not included any keyboard shortcuts here because they are highly personal.
  However, the ignore_unbound_non_ascii_keys option affects how Leo handles 'plain' keys.</t>
<t tx="ekr.20061012122620">True:  When a node is expanded, insert new nodes as the last child.
False: (legacy &amp; recommended) When a node is expanded, insert new nodes as the first child.</t>
<t tx="ekr.20061029091403"></t>
<t tx="ekr.20061030092620">True (Recommended): Leo scrolls the outline to put the selected node near the center of the outline pane.
False (Legacy): Leo scrolls the outline to put the selected node at the top or bottom of the outline pane.</t>
<t tx="ekr.20061030104734">This option tells how to treat an uppercase letter typed when the outline pane
is active but no headline is being edited. In such situations Leo searchs for an
node whose headline starts with the present prefix, ignoring case The prefix
starts with the first letter typed and other letters are added if they are typed
within a 'short' period of time, as specified by the outline_nav_extend_delay

True: Look in invisible nodes.
False: Look only in visible nodes.

I set this option to False because it is too easy form me to type Shift-whatever when I meant Ctrl-whatever.</t>
<t tx="ekr.20061210091932">True: call os.chdir(base) when handling a relative path.
      as specified by the @string relative_path_base_directory setting.
      
False: Do not call os.chdir(base) when handing a relative path.</t>
<t tx="ekr.20070115134125">True: The execute script command writes the script to be executed to a file,
      then executes the script using Python's execFile function.
      The script_file_path setting specifies the path to this file.
      
False (legacy): The execute script command uses Python's exec command to execute the script. </t>
<t tx="ekr.20070115134125.1">The path to the file to be written by the execute-script command.

The default path is home/.leo/scriptFile.py if no path is given.
It is *not* recommended to enable this setting.
  
Notes:
    
- This setting has effect only if the write_script_file setting is True.
- Use / to as the path delimiter, regardless of platform.
- The filename should end in .py.
</t>
<t tx="ekr.20070224073109">@enabled-plugins nodes contain the list of enabled plugins, one per line.

Comment lines starting with '#' are ignored.

Leo loads plugins in the order they appear.

There has been considerable confusion in the past about just how this works.
Please read the following carefully.

Let us distinguish two different situations.
First, what Leo does when loading a file, say x.leo initially.
Second, what Leo does when loading a second file, say y.leo, *from x.leo*.

In the first case, Leo will use the *last* found @enabled-plugins node from
the list list of settings files.  As always, the search order for settings is:

1. leo/config/leoSettings.leo
2. ~/.leo/leoSettings.leo
3. leo/config/myLeoSettings.leo
4. ~/.leo/myLeoSettings.leo
5.  x.leo

In the first case, it *is* possible to disable any or all plugins.
For example, you could put an empty @enabled-plugins node in x.leo.
If x.leo contains no @enabled-plugins node,
you could put an empty @enabled-plugins node in myLeoSettings.leo.

In the second case, plugins have *already* been loaded and enabled.
In this case, there is *no way* to disable already-loaded-and-enabled plugins.
All you can do is enable more plugins.

y.leo can enable more plugins if it contains an @enabled-plugins node that mentions more plugins.
If y.leo contains no @enabled-plugins node,
loading y.leo might cause myLeoSettings.leo to enable more plugins if

a) x.leo contained an @enabled-plugins node and
b) myLeoSettings.leo mentions plugins not mentioned x.leo

To summarize, Leo enables plugins in a (relatively) straightforward way when it loads x.leo.
Leo also enables plugins (in the same way) when loading y.leo.
But things might get confusing, depending on whether x.leo or y.leo (or both or neither)
contain @enabled-plugins nodes.
This simply can't be helped, and it is emphatically *not* a bug in Leo.

Leo acts in a reasonable manner, but it is still possible to get confused even if you know the rules.
This suggests that you refrain from putting @enabled-plugins nodes in any .leo file except myLeoSettings.leo.
That way all your .leo files will use the same plugins.
If you do put @enabled-plugins nodes in x.leo, be prepared for confusion from time to time. </t>
<t tx="ekr.20070224073109.1"># Leo loads plugins in the order they appear here.
# File names may be indented as desired.

# Standard plugins enabled in official distributions....

plugins_menu.py
leo_to_html.py
mod_scripting.py
quicksearch.py
UNL.py
contextmenu.py
nav_qt.py

# The plugins manager plugin does not
# understand @enabled-plugins nodes.
# plugin_manager.py

# The rst3 plugin is no longer needed.
# It's code has been moved to Leo's core
# rst3.py

# These plugins used to be enabled when using the tk plugin.
# cleo.py
# hoist.py
# image.py
# nav_buttons.py
# threading_colorizer.py

# All other plugins.
# Order is important for enabled plugins that
# add items to the icon area.

# ConceptualSort.py
# EditAttributes.py
# FileActions.py
# Library.py
# nodeActions.py
# UASearch.py
# URLloader.py
# UniversalScrolling.py

# add_directives.py
# arrows.py
# at_folder.py
# at_view.py
# autotrees.py
# base64Packager.py
# bibtex.py
# chapter_hoist.py
# cleo.py
# color_markup.py
# datenodes.py
# detect_urls.py
# dyna_menu.py
# fastGotoNode.py
# footprints.py
# groupOperations.py
# hoist.py
# image.py
# import_cisco_config.py
# ipython.py
# keybindings.py
# leoOPML.py
# leo_to_html.py
# leo_to_rtf.py
# leoupdate.py
# macros.py
# mod_autosave.py
# mod_http.py
# mod_labels.py
# mod_read_dir_outline.py
# mod_shadow.py
# multifile.py
# nav_buttons.py
# newButtons.py
# niceNosent.py
# nodebar.py
# nodenavigator.py
# open_shell.py
# open_with.py
# paste_as_headlines.py
# pie_menus.py
# pretty_print.py
# print_cp.py
# quickMove.py
# rClick.py
# read_only_nodes.py
# rowcol.py
# run_nodes.py
# s_menu.py
# scheduler.py
# searchbox.py
# shortcut_button.py
# slideshow.py
# table.py
# templates.py
# trace_tags.py
# vim.py
# word_count.py
# word_export.py
# xcc_nodes.py
# xemacs.py
# xsltWithNodes.py
# zodb.py
# quicksearch.py
# tomboy_import.py
# ctagscompleter.py
# colorize_headlines.py</t>
<t tx="ekr.20070318065601">True:  Chapter commands are functional.
False: Chapter commands do not exists.</t>
<t tx="ekr.20070326094544"></t>
<t tx="ekr.20070411101857"></t>
<t tx="ekr.20070411101857.1">'subprocess.Popen',['pythonw','C:/Python24/Lib/idlelib/idle.pyw'],'.py'
</t>
<t tx="ekr.20070411101857.2">'subprocess.Popen','C:/Program Files/Microsoft Office/Office/WINWORD.exe',None</t>
<t tx="ekr.20070411101857.3">'subprocess.Popen','C:/Program Files/Windows NT/Accessories/wordpad.exe',None</t>
<t tx="ekr.20070411172718">@openwith nodes in @settings trees create menu items. The openWith
plugin must be active for these settings to have any effect.

The headline of an @openwith node has the form::

    @openwith name = shortcut
    
name is name of the menu item. shortcut specifies the shortcut used to invoke
the menu item. shortcut may be None.

The body text @openwith nodes should contain a single line contain a tuple of the form::

    command,arg,ext

For example::
    
    'subprocess.Popen',['pythonw','C:/Python24/Lib/idlelib/idle.pyw'],'.py'
    
When the user selects this menu item Leo executes command(arg+path) where path
is the full path to the temp file. The ext argument specifies the extension of
the temp file. Notes:

- command is a string.  Valid values are::
    
  'subprocess.Popen'
  'os.system'
  'os.startfile'
  'os.spawnl'
  'os.spawnv'
  'exec'
  
- arg is either a single string or a list of strings.

- ext is a string or None. If None, Leo computes a file extension base on what
  @language directive is in effect.
  
- If the .leo file being loaded contains @openwith nodes, the File:Open With
menu contains only the items created by those nodes. Similarly, @openwith nodes
in myLeoSettings.leo override entries in leoSettings.leo.

- If no @openwith nodes are found anywhere the openWith plugin uses hard-coded
tables in the plugin itself.</t>
<t tx="ekr.20070417071249">True: show info as plugins are loaded.</t>
<t tx="ekr.20070419103554">True:  Leo ensures that non-empty body text ends in a newline in @nosent trees.
False: Leo leaves body text alone when writing @nosent trees.</t>
<t tx="ekr.20070503080312">True: trace storage allocation in Leo's tree.</t>
<t tx="ekr.20070531103454"></t>
<t tx="ekr.20070604075218">True:  Chapter tabs appear in the outline pane.
False: Chapter tabs do not appear.</t>
<t tx="ekr.20070613133747">propagate-key-event = Alt-C
propagate-key-event = Alt-E
propagate-key-event = Alt-F
propagate-key-event = Alt-H
propagate-key-event = Alt-P
propagate-key-event = Alt-O
propagate-key-event = Alt-W
</t>
<t tx="ekr.20070615094204">True: goto-next-node and goto-prev-node commands contract the selected node.</t>
<t tx="ekr.20070622214401"></t>
<t tx="ekr.20070729101310">True: trace import commands and @auto imports.</t>
<t tx="ekr.20070803082435">True: import commands (including @auto nodes) do full checks.</t>
<t tx="ekr.20070919125633">button_text_font_family = verdana
button_text_font_size = 7
button_text_font_slant = roman
button_text_font_weight = bold
</t>
<t tx="ekr.20070925144534"></t>
<t tx="ekr.20070925144534.1"></t>
<t tx="ekr.20070925144534.10">Save As &amp;Zipped</t>
<t tx="ekr.20070925144534.100"></t>
<t tx="ekr.20070925144534.101"></t>
<t tx="ekr.20070925144534.102"></t>
<t tx="ekr.20070925144534.103"></t>
<t tx="ekr.20070925144534.104"></t>
<t tx="ekr.20070925144534.105"></t>
<t tx="ekr.20070925144534.106"></t>
<t tx="ekr.20070925144534.107">Show In&amp;visibles</t>
<t tx="ekr.20070925144534.108">Setti&amp;ngs</t>
<t tx="ekr.20070925144534.109"></t>
<t tx="ekr.20070925144534.11">Save &amp;To</t>
<t tx="ekr.20070925144534.110"></t>
<t tx="ekr.20070925144534.111"></t>
<t tx="ekr.20070925144534.112"></t>
<t tx="ekr.20070925144534.113">Pas&amp;te Node As Clone</t>
<t tx="ekr.20070925144534.114"></t>
<t tx="ekr.20070925144534.115"></t>
<t tx="ekr.20070925144534.116"></t>
<t tx="ekr.20070925144534.117"></t>
<t tx="ekr.20070925144534.118"></t>
<t tx="ekr.20070925144534.119"></t>
<t tx="ekr.20070925144534.12">Re&amp;vert To Saved</t>
<t tx="ekr.20070925144534.120"></t>
<t tx="ekr.20070925144534.121"></t>
<t tx="ekr.20070925144534.122">D&amp;e-Hoist</t>
<t tx="ekr.20070925144534.123"></t>
<t tx="ekr.20070925144534.124"></t>
<t tx="ekr.20070925144534.125"></t>
<t tx="ekr.20070925144534.126"></t>
<t tx="ekr.20070925144534.127"></t>
<t tx="ekr.20070925144534.128"></t>
<t tx="ekr.20070925144534.129"></t>
<t tx="ekr.20070925144534.13"></t>
<t tx="ekr.20070925144534.130"></t>
<t tx="ekr.20070925144534.131"></t>
<t tx="ekr.20070925144534.132"></t>
<t tx="ekr.20070925144534.133"></t>
<t tx="ekr.20070925144534.134"></t>
<t tx="ekr.20070925144534.135"></t>
<t tx="ekr.20070925144534.136"></t>
<t tx="ekr.20070925144534.137"></t>
<t tx="ekr.20070925144534.138"></t>
<t tx="ekr.20070925144534.139"></t>
<t tx="ekr.20070925144534.14"></t>
<t tx="ekr.20070925144534.140"></t>
<t tx="ekr.20070925144534.141"></t>
<t tx="ekr.20070925144534.142"></t>
<t tx="ekr.20070925144534.143"></t>
<t tx="ekr.20070925144534.144"></t>
<t tx="ekr.20070925144534.145"></t>
<t tx="ekr.20070925144534.146"></t>
<t tx="ekr.20070925144534.147"></t>
<t tx="ekr.20070925144534.148"></t>
<t tx="ekr.20070925144534.149"></t>
<t tx="ekr.20070925144534.15"></t>
<t tx="ekr.20070925144534.150"></t>
<t tx="ekr.20070925144534.151"></t>
<t tx="ekr.20070925144534.152"></t>
<t tx="ekr.20070925144534.153">Move &amp;Down</t>
<t tx="ekr.20070925144534.154">Move &amp;Left</t>
<t tx="ekr.20070925144534.155">Move &amp;Right</t>
<t tx="ekr.20070925144534.156">Move &amp;Up</t>
<t tx="ekr.20070925144534.157"></t>
<t tx="ekr.20070925144534.158"></t>
<t tx="ekr.20070925144534.159"></t>
<t tx="ekr.20070925144534.16"></t>
<t tx="ekr.20070925144534.160"></t>
<t tx="ekr.20070925144534.161"></t>
<t tx="ekr.20070925144534.162"></t>
<t tx="ekr.20070925144534.163"></t>
<t tx="ekr.20070925144534.166"></t>
<t tx="ekr.20070925144534.167"></t>
<t tx="ekr.20070925144534.168">Go To &amp;First Node</t>
<t tx="ekr.20070925144534.169">Go To First V&amp;isible</t>
<t tx="ekr.20070925144534.17">Read @auto Nodes</t>
<t tx="ekr.20070925144534.170">Go To First Si&amp;bling</t>
<t tx="ekr.20070925144534.171"></t>
<t tx="ekr.20070925144534.172">Go To Next C&amp;hanged</t>
<t tx="ekr.20070925144534.173">Go To Next &amp;Clone</t>
<t tx="ekr.20070925144534.174">Go To Next &amp;Marked</t>
<t tx="ekr.20070925144534.175">Go To Next N&amp;ode</t>
<t tx="ekr.20070925144534.176">Go To Next &amp;Sibling</t>
<t tx="ekr.20070925144534.177">Go To Next Visibl&amp;e</t>
<t tx="ekr.20070925144534.178">Go To Next Visite&amp;d</t>
<t tx="ekr.20070925144534.179"></t>
<t tx="ekr.20070925144534.18">Write @auto Nodes</t>
<t tx="ekr.20070925144534.180">Go To P&amp;arent</t>
<t tx="ekr.20070925144534.181"></t>
<t tx="ekr.20070925144534.182">Go To &amp;Prev Node</t>
<t tx="ekr.20070925144534.183">Go To P&amp;rev Sibling</t>
<t tx="ekr.20070925144534.184">Go To Pre&amp;v Visible</t>
<t tx="ekr.20070925144534.185">Go To Prev Visi&amp;ted</t>
<t tx="ekr.20070925144534.186"></t>
<t tx="ekr.20070925144534.187">Go To Last Node</t>
<t tx="ekr.20070925144534.188">Go To Last Siblin&amp;g</t>
<t tx="ekr.20070925144534.189">Go To &amp;Last Visible</t>
<t tx="ekr.20070925144534.19">Write Dirty @auto Nodes</t>
<t tx="ekr.20070925144534.190"></t>
<t tx="ekr.20070925144534.191"></t>
<t tx="ekr.20070925144534.192"></t>
<t tx="ekr.20070925144534.193"></t>
<t tx="ekr.20070925144534.194"></t>
<t tx="ekr.20070925144534.195"></t>
<t tx="ekr.20070925144534.196"></t>
<t tx="ekr.20070925144534.197"></t>
<t tx="ekr.20070925144534.198"></t>
<t tx="ekr.20070925144534.199"></t>
<t tx="ekr.20070925144534.2"></t>
<t tx="ekr.20070925144534.200"></t>
<t tx="ekr.20070925144534.201"></t>
<t tx="ekr.20070925144534.202"></t>
<t tx="ekr.20070925144534.203"></t>
<t tx="ekr.20070925144534.204"></t>
<t tx="ekr.20070925144534.205"></t>
<t tx="ekr.20070925144534.206"></t>
<t tx="ekr.20070925144534.207"></t>
<t tx="ekr.20070925144534.208"></t>
<t tx="ekr.20070925144534.209"></t>
<t tx="ekr.20070925144534.21">Read @&lt;file&gt; Nodes</t>
<t tx="ekr.20070925144534.210"></t>
<t tx="ekr.20070925144534.211"></t>
<t tx="ekr.20070925144534.212"></t>
<t tx="ekr.20070925144534.213"></t>
<t tx="ekr.20070925144534.214"></t>
<t tx="ekr.20070925144534.215"></t>
<t tx="ekr.20070925144534.216"></t>
<t tx="ekr.20070925144534.217"></t>
<t tx="ekr.20070925144534.218"></t>
<t tx="ekr.20070925144534.219"></t>
<t tx="ekr.20070925144534.22">Write Dirty @&lt;file&gt; Nodes</t>
<t tx="ekr.20070925144534.220"></t>
<t tx="ekr.20070925144534.221"></t>
<t tx="ekr.20070925144534.222"></t>
<t tx="ekr.20070925144534.223"></t>
<t tx="ekr.20070925144534.224"></t>
<t tx="ekr.20070925144534.225"></t>
<t tx="ekr.20070925144534.226"></t>
<t tx="ekr.20070925144534.227"></t>
<t tx="ekr.20070925144534.228"></t>
<t tx="ekr.20070925144534.229"></t>
<t tx="ekr.20070925144534.23">Write Missing @&lt;file&gt; Nodes</t>
<t tx="ekr.20070925144534.230"></t>
<t tx="ekr.20070925144534.231"></t>
<t tx="ekr.20070925144534.232"></t>
<t tx="ekr.20070925144534.233"></t>
<t tx="ekr.20070925144534.234"></t>
<t tx="ekr.20070925144534.235"></t>
<t tx="ekr.20070925144534.236"></t>
<t tx="ekr.20070925144534.237"></t>
<t tx="ekr.20070925144534.238"></t>
<t tx="ekr.20070925144534.239"></t>
<t tx="ekr.20070925144534.24">Write @&lt;file&gt; Nodes</t>
<t tx="ekr.20070925144534.240"></t>
<t tx="ekr.20070925144534.241"></t>
<t tx="ekr.20070925144534.242"></t>
<t tx="ekr.20070925144534.243"></t>
<t tx="ekr.20070925144534.244"></t>
<t tx="ekr.20070925144534.245"></t>
<t tx="ekr.20070925144534.246"></t>
<t tx="ekr.20070925144534.247"></t>
<t tx="ekr.20070925144534.248"></t>
<t tx="ekr.20070925144534.249"></t>
<t tx="ekr.20070925144534.25"></t>
<t tx="ekr.20070925144534.250"></t>
<t tx="ekr.20070925144534.251"></t>
<t tx="ekr.20070925144534.252"></t>
<t tx="ekr.20070925144534.253"></t>
<t tx="ekr.20070925144534.254"></t>
<t tx="ekr.20070925144534.255"></t>
<t tx="ekr.20070925144534.256"></t>
<t tx="ekr.20070925144534.257"></t>
<t tx="ekr.20070925144534.258"></t>
<t tx="ekr.20070925144534.259"></t>
<t tx="ekr.20070925144534.26"></t>
<t tx="ekr.20070925144534.260"></t>
<t tx="ekr.20070925144534.261"></t>
<t tx="ekr.20070925144534.262"></t>
<t tx="ekr.20070925144534.263"></t>
<t tx="ekr.20070925144534.264"></t>
<t tx="ekr.20070925144534.265"></t>
<t tx="ekr.20070925144534.266"></t>
<t tx="ekr.20070925144534.267"></t>
<t tx="ekr.20070925144534.268"></t>
<t tx="ekr.20070925144534.269"></t>
<t tx="ekr.20070925144534.27"></t>
<t tx="ekr.20070925144534.270"></t>
<t tx="ekr.20070925144534.271"></t>
<t tx="ekr.20070925144534.272"></t>
<t tx="ekr.20070925144534.273"></t>
<t tx="ekr.20070925144534.274"></t>
<t tx="ekr.20070925144534.275"></t>
<t tx="ekr.20070925144534.276"></t>
<t tx="ekr.20070925144534.277"></t>
<t tx="ekr.20070925144534.278"></t>
<t tx="ekr.20070925144534.279"></t>
<t tx="ekr.20070925144534.28"></t>
<t tx="ekr.20070925144534.280"></t>
<t tx="ekr.20070925144534.281"></t>
<t tx="ekr.20070925144534.282"></t>
<t tx="ekr.20070925144534.283"></t>
<t tx="ekr.20070925144534.284"></t>
<t tx="ekr.20070925144534.286"></t>
<t tx="ekr.20070925144534.287"></t>
<t tx="ekr.20070925144534.288"></t>
<t tx="ekr.20070925144534.289"></t>
<t tx="ekr.20070925144534.29"></t>
<t tx="ekr.20070925144534.290"></t>
<t tx="ekr.20070925144534.291"></t>
<t tx="ekr.20070925144534.292"></t>
<t tx="ekr.20070925144534.293"></t>
<t tx="ekr.20070925144534.294"></t>
<t tx="ekr.20070925144534.295"></t>
<t tx="ekr.20070925144534.296"></t>
<t tx="ekr.20070925144534.297"></t>
<t tx="ekr.20070925144534.298"></t>
<t tx="ekr.20070925144534.299"></t>
<t tx="ekr.20070925144534.3">&amp;Open...</t>
<t tx="ekr.20070925144534.30"></t>
<t tx="ekr.20070925144534.300"></t>
<t tx="ekr.20070925144534.301"></t>
<t tx="ekr.20070925144534.302"></t>
<t tx="ekr.20070925144534.303"></t>
<t tx="ekr.20070925144534.304"></t>
<t tx="ekr.20070925144534.305"></t>
<t tx="ekr.20070925144534.306"></t>
<t tx="ekr.20070925144534.307"></t>
<t tx="ekr.20070925144534.308"></t>
<t tx="ekr.20070925144534.309"></t>
<t tx="ekr.20070925144534.31"></t>
<t tx="ekr.20070925144534.310"></t>
<t tx="ekr.20070925144534.311"></t>
<t tx="ekr.20070925144534.312"></t>
<t tx="ekr.20070925144534.313"></t>
<t tx="ekr.20070925144534.314"></t>
<t tx="ekr.20070925144534.315"></t>
<t tx="ekr.20070925144534.316"></t>
<t tx="ekr.20070925144534.317"></t>
<t tx="ekr.20070925144534.318"></t>
<t tx="ekr.20070925144534.319"></t>
<t tx="ekr.20070925144534.32"></t>
<t tx="ekr.20070925144534.320"></t>
<t tx="ekr.20070925144534.321"></t>
<t tx="ekr.20070925144534.322"></t>
<t tx="ekr.20070925144534.323"></t>
<t tx="ekr.20070925144534.324"></t>
<t tx="ekr.20070925144534.325"></t>
<t tx="ekr.20070925144534.326"></t>
<t tx="ekr.20070925144534.327"></t>
<t tx="ekr.20070925144534.328"></t>
<t tx="ekr.20070925144534.329"></t>
<t tx="ekr.20070925144534.33"></t>
<t tx="ekr.20070925144534.330"></t>
<t tx="ekr.20070925144534.334"></t>
<t tx="ekr.20070925144534.335"></t>
<t tx="ekr.20070925144534.336"></t>
<t tx="ekr.20070925144534.337"></t>
<t tx="ekr.20070925144534.338"></t>
<t tx="ekr.20070925144534.339"></t>
<t tx="ekr.20070925144534.34"></t>
<t tx="ekr.20070925144534.340"></t>
<t tx="ekr.20070925144534.341"></t>
<t tx="ekr.20070925144534.342"></t>
<t tx="ekr.20070925144534.343"></t>
<t tx="ekr.20070925144534.344"></t>
<t tx="ekr.20070925144534.345"></t>
<t tx="ekr.20070925144534.346"></t>
<t tx="ekr.20070925144534.347"></t>
<t tx="ekr.20070925144534.348"></t>
<t tx="ekr.20070925144534.349"></t>
<t tx="ekr.20070925144534.35">Import To @&amp;file</t>
<t tx="ekr.20070925144534.350"></t>
<t tx="ekr.20070925144534.351"></t>
<t tx="ekr.20070925144534.352"></t>
<t tx="ekr.20070925144534.353"></t>
<t tx="ekr.20070925144534.354"></t>
<t tx="ekr.20070925144534.355"></t>
<t tx="ekr.20070925144534.356"></t>
<t tx="ekr.20070925144534.357"></t>
<t tx="ekr.20070925144534.358"></t>
<t tx="ekr.20070925144534.359"></t>
<t tx="ekr.20070925144534.36">Import To @&amp;root</t>
<t tx="ekr.20070925144534.360"></t>
<t tx="ekr.20070925144534.361"></t>
<t tx="ekr.20070925144534.362"># accel: a,b,c,d,e,f,h,i,m,p,r,s,t,u,v,w,x</t>
<t tx="ekr.20070925144534.363"></t>
<t tx="ekr.20070925144534.364"></t>
<t tx="ekr.20070925144534.365"></t>
<t tx="ekr.20070925144534.366"></t>
<t tx="ekr.20070925144534.367"></t>
<t tx="ekr.20070925144534.368"></t>
<t tx="ekr.20070925144534.369"></t>
<t tx="ekr.20070925144534.37"></t>
<t tx="ekr.20070925144534.370"></t>
<t tx="ekr.20070925144534.371"></t>
<t tx="ekr.20070925144534.372"></t>
<t tx="ekr.20070925144534.373"></t>
<t tx="ekr.20070925144534.374"></t>
<t tx="ekr.20070925144534.375"></t>
<t tx="ekr.20070925144534.376"></t>
<t tx="ekr.20070925144534.377"></t>
<t tx="ekr.20070925144534.378"></t>
<t tx="ekr.20070925144534.379"></t>
<t tx="ekr.20070925144534.38"></t>
<t tx="ekr.20070925144534.380"></t>
<t tx="ekr.20070925144534.381"></t>
<t tx="ekr.20070925144534.382"></t>
<t tx="ekr.20070925144534.383"></t>
<t tx="ekr.20070925144534.384"></t>
<t tx="ekr.20070925144534.385"></t>
<t tx="ekr.20070925144534.386"></t>
<t tx="ekr.20070925144534.387"></t>
<t tx="ekr.20070925144534.388"></t>
<t tx="ekr.20070925144534.389"></t>
<t tx="ekr.20070925144534.39"></t>
<t tx="ekr.20070925144534.390"></t>
<t tx="ekr.20070925144534.391"></t>
<t tx="ekr.20070925144534.392"></t>
<t tx="ekr.20070925144534.393"></t>
<t tx="ekr.20070925144534.394"></t>
<t tx="ekr.20070925144534.395"></t>
<t tx="ekr.20070925144534.396"></t>
<t tx="ekr.20070925144534.397"></t>
<t tx="ekr.20070925144534.398"></t>
<t tx="ekr.20070925144534.399"></t>
<t tx="ekr.20070925144534.4"></t>
<t tx="ekr.20070925144534.40"></t>
<t tx="ekr.20070925144534.400"></t>
<t tx="ekr.20070925144534.401"></t>
<t tx="ekr.20070925144534.402"></t>
<t tx="ekr.20070925144534.403"></t>
<t tx="ekr.20070925144534.404"></t>
<t tx="ekr.20070925144534.405"></t>
<t tx="ekr.20070925144534.406"></t>
<t tx="ekr.20070925144534.407">&amp;About Leo...</t>
<t tx="ekr.20070925144534.408">Online &amp;Home Page</t>
<t tx="ekr.20070925144534.409"></t>
<t tx="ekr.20070925144534.41"></t>
<t tx="ekr.20070925144534.410"></t>
<t tx="ekr.20070925144534.411"></t>
<t tx="ekr.20070925144534.412">Open Leo&amp;Docs.leo</t>
<t tx="ekr.20070925144534.413">Open leo&amp;Plugins.leo</t>
<t tx="ekr.20070925144534.414">Open leo&amp;Settings.leo</t>
<t tx="ekr.20070925144534.415">Open &amp;myLeoSettings.leo</t>
<t tx="ekr.20070925144534.416">Open scr&amp;ipts.leo</t>
<t tx="ekr.20070925144534.417"></t>
<t tx="ekr.20070925144534.418"></t>
<t tx="ekr.20070925144534.419"></t>
<t tx="ekr.20070925144534.42"></t>
<t tx="ekr.20070925144534.420"></t>
<t tx="ekr.20070925144534.421"></t>
<t tx="ekr.20070925144534.422"></t>
<t tx="ekr.20070925144534.423"></t>
<t tx="ekr.20070925144534.424"></t>
<t tx="ekr.20070925144534.425"></t>
<t tx="ekr.20070925144534.426"></t>
<t tx="ekr.20070925144534.427"></t>
<t tx="ekr.20070925144534.43"></t>
<t tx="ekr.20070925144534.44"></t>
<t tx="ekr.20070925144534.45"></t>
<t tx="ekr.20070925144534.46"></t>
<t tx="ekr.20070925144534.47">E&amp;xit</t>
<t tx="ekr.20070925144534.48"></t>
<t tx="ekr.20070925144534.49">Can't Undo</t>
<t tx="ekr.20070925144534.5"></t>
<t tx="ekr.20070925144534.50">Can't Redo</t>
<t tx="ekr.20070925144534.51"></t>
<t tx="ekr.20070925144534.52">Cu&amp;t</t>
<t tx="ekr.20070925144534.53">Cop&amp;y</t>
<t tx="ekr.20070925144534.54">&amp;Paste</t>
<t tx="ekr.20070925144534.55">&amp;Delete</t>
<t tx="ekr.20070925144534.56">Select &amp;All</t>
<t tx="ekr.20070925144534.57"></t>
<t tx="ekr.20070925144534.58"></t>
<t tx="ekr.20070925144534.59"></t>
<t tx="ekr.20070925144534.6">&amp;Close</t>
<t tx="ekr.20070925144534.60"></t>
<t tx="ekr.20070925144534.61"></t>
<t tx="ekr.20070925144534.62"></t>
<t tx="ekr.20070925144534.63"></t>
<t tx="ekr.20070925144534.64"></t>
<t tx="ekr.20070925144534.65"></t>
<t tx="ekr.20070925144534.66"></t>
<t tx="ekr.20070925144534.67"></t>
<t tx="ekr.20070925144534.68"></t>
<t tx="ekr.20070925144534.69"></t>
<t tx="ekr.20070925144534.7">&amp;Save</t>
<t tx="ekr.20070925144534.70"></t>
<t tx="ekr.20070925144534.71"></t>
<t tx="ekr.20070925144534.72"></t>
<t tx="ekr.20070925144534.73"></t>
<t tx="ekr.20070925144534.74"></t>
<t tx="ekr.20070925144534.75"></t>
<t tx="ekr.20070925144534.76"></t>
<t tx="ekr.20070925144534.77"></t>
<t tx="ekr.20070925144534.78"></t>
<t tx="ekr.20070925144534.79"></t>
<t tx="ekr.20070925144534.8">Save &amp;As</t>
<t tx="ekr.20070925144534.80"></t>
<t tx="ekr.20070925144534.81"></t>
<t tx="ekr.20070925144534.82"></t>
<t tx="ekr.20070925144534.83"></t>
<t tx="ekr.20070925144534.84"></t>
<t tx="ekr.20070925144534.85"></t>
<t tx="ekr.20070925144534.86"></t>
<t tx="ekr.20070925144534.87"></t>
<t tx="ekr.20070925144534.88"></t>
<t tx="ekr.20070925144534.89"></t>
<t tx="ekr.20070925144534.9">Save As &amp;Unzipped</t>
<t tx="ekr.20070925144534.90"></t>
<t tx="ekr.20070925144534.91"></t>
<t tx="ekr.20070925144534.92"></t>
<t tx="ekr.20070925144534.93"></t>
<t tx="ekr.20070925144534.94"></t>
<t tx="ekr.20070925144534.95"></t>
<t tx="ekr.20070925144534.96"></t>
<t tx="ekr.20070925144534.97"></t>
<t tx="ekr.20070925144534.98"></t>
<t tx="ekr.20070925144534.99"></t>
<t tx="ekr.20070925144552">New in Leo 4.4.4. Leo creates its menus using @menus trees. Within @menus trees,
@menu nodes create menus and @item nodes create menu items.

Notes:

- The menu name always follows @menu. If the menu name is 'Plugins', Leo will
create the Plugins menu and populate the menu by calling the
'create-optional-menus' hook. This creates the Plugins menu as usual.

- Nested @menu nodes contain submenus.

- The command name follows @item. If the body text of an @item node exists, this
body text is the menu name. Otherwise, the menu name is the command name.
However, if the command name starts with a '*', hyphens are removed from the
menu name.

- Menu names and command names may contain a single ampersand (&amp;). If present,
the following character is underlined in the name.

- If the command name in an @item node is just a hyphen (-), the item represents
a menu separator.</t>
<t tx="ekr.20070926082256.1">c.prettyPrintPythonNode()</t>
<t tx="ekr.20070926082407">@color

# @button nodes outside this tree are ignored.</t>
<t tx="ekr.20070926132045">All @button nodes in this tree define **global buttons** that appear in all Leo outlines.

At present, all @button nodes in this tree are disabled because they start with
@@ instead of just @. A better place for global buttons is in myLeoSettings.leo.</t>
<t tx="ekr.20070927051742"></t>
<t tx="ekr.20070927051856"></t>
<t tx="ekr.20070927173324">A placeholder for the actual menu.
Leo's init code populates this menu as a special case.</t>
<t tx="ekr.20071001120755"></t>
<t tx="ekr.20071001120755.1"></t>
<t tx="ekr.20071001120755.2"></t>
<t tx="ekr.20071001120755.3"></t>
<t tx="ekr.20071001120755.4"></t>
<t tx="ekr.20071001121059"></t>
<t tx="ekr.20071001123216"></t>
<t tx="ekr.20071004121248"></t>
<t tx="ekr.20071004121248.1"></t>
<t tx="ekr.20071004121248.2"></t>
<t tx="ekr.20071004121248.3"></t>
<t tx="ekr.20071004121248.4"></t>
<t tx="ekr.20071004121248.5"></t>
<t tx="ekr.20071004121328"></t>
<t tx="ekr.20071004121401"></t>
<t tx="ekr.20071004121619"></t>
<t tx="ekr.20071004121840"></t>
<t tx="ekr.20071004121840.1"></t>
<t tx="ekr.20071004121840.2"></t>
<t tx="ekr.20071005173455"></t>
<t tx="ekr.20071006153053">True: add stuff consisting only of whitespace to the kill ring.</t>
<t tx="ekr.20071006153725"></t>
<t tx="ekr.20071009135515">c.rstCommands.rst3()
</t>
<t tx="ekr.20071010123015">文件</t>
<t tx="ekr.20071010123015.1">新建</t>
<t tx="ekr.20071010123223.1">打开</t>
<t tx="ekr.20071024145953">False (legacy): Top pane contains outline and log panes.
True: Top pane contains only outline.  Bottom pane contains body and log panes.</t>
<t tx="ekr.20071110153046">This option has effect only when importing so-called non-strict languages,
for which leading whitespace is not terribly significant.

True: @auto warns about mismatches that occur solely in leading whitespace.</t>
<t tx="ekr.20071113084330"></t>
<t tx="ekr.20071114072753">True: the vim plugin will open @url nodes when they are double clicked.</t>
<t tx="ekr.20071114081712"></t>
<t tx="ekr.20071114081712.3"></t>
<t tx="ekr.20071114081712.4"></t>
<t tx="ekr.20071114081712.5"></t>
<t tx="ekr.20071114084709"></t>
<t tx="ekr.20071114084709.1"></t>
<t tx="ekr.20071213060239">@color</t>
<t tx="ekr.20071213060239.1"></t>
<t tx="ekr.20071213060239.2"></t>
<t tx="ekr.20071213060514"></t>
<t tx="ekr.20071213060514.1"></t>
<t tx="ekr.20071213060514.2"># Formatting options that apply to both code and rst modes....</t>
<t tx="ekr.20071213060607">rst3_code_prefix =             @rst-code     # Enter code mode.
rst3_doc_only_prefix =         @rst-doc-only # Enter doc-only mode.
rst3_rst_prefix =              @rst          # Enter rst mode.
rst3_ignore_headline_prefix =  @rst-no-head
rst3_ignore_headlines_prefix = @rst-no-headlines
rst3_ignore_node_prefix =      @rst-ignore-node
rst3_ignore_prefix =           @rst-ignore
rst3_ignore_tree_prefix =      @rst-ignore-tree
rst3_option_prefix =           @rst-option
rst3_options_prefix =          @rst-options
rst3_preformat_prefix =        @rst-preformat
rst3_show_headline_prefix =    @rst-head</t>
<t tx="ekr.20071213061454"></t>
<t tx="ekr.20071213061454.1"></t>
<t tx="ekr.20071213061454.2"></t>
<t tx="ekr.20071213061454.3"></t>
<t tx="ekr.20071213061504"></t>
<t tx="ekr.20071213061504.1"></t>
<t tx="ekr.20071213061504.2"></t>
<t tx="ekr.20071213061504.3"></t>
<t tx="ekr.20071213061811"></t>
<t tx="ekr.20071213061811.1"></t>
<t tx="ekr.20071213061811.2"></t>
<t tx="ekr.20071213061811.3"># Used only if generate_rst is True.</t>
<t tx="ekr.20071213061923"># True: generate rst markup from @code and @doc parts.</t>
<t tx="ekr.20071213061923.1"># True: generate only from @doc parts.</t>
<t tx="ekr.20071213061923.2"># True: generate rst markup. False: generate plain text.</t>
<t tx="ekr.20071213061923.3"></t>
<t tx="ekr.20071213061930.1"># Can be set by @rst-no-head headlines.</t>
<t tx="ekr.20071213061930.2"></t>
<t tx="ekr.20071213061930.3"></t>
<t tx="ekr.20071213061930.4"></t>
<t tx="ekr.20071213062019"></t>
<t tx="ekr.20071213062019.1"></t>
<t tx="ekr.20071213062019.10"></t>
<t tx="ekr.20071213062019.11"></t>
<t tx="ekr.20071213062019.12"></t>
<t tx="ekr.20071213062019.13"></t>
<t tx="ekr.20071213062019.14"></t>
<t tx="ekr.20071213062019.15"></t>
<t tx="ekr.20071213062019.2"></t>
<t tx="ekr.20071213062019.3"></t>
<t tx="ekr.20071213062019.4"># Enter code mode.</t>
<t tx="ekr.20071213062019.5"># Enter doc-only mode.</t>
<t tx="ekr.20071213062019.6"># Enter rst mode.</t>
<t tx="ekr.20071213062019.7"></t>
<t tx="ekr.20071213062019.8"></t>
<t tx="ekr.20071213062019.9"></t>
<t tx="ekr.20071213190345"></t>
<t tx="ekr.20071213190345.1"></t>
<t tx="ekr.20071214132254"></t>
<t tx="ekr.20071214132254.1"># xml tags, one per line.

html
HTML
body
BODY
head
HEAD
div
DIV
table
TABLE
</t>
<t tx="ekr.20071217093419">The body text should contain the data, one string per line.
Comments lines starting with '#' are ignored.</t>
<t tx="ekr.20080204124255"># For testing only.

start-ipython           = Alt-Shift-i
push-to-ipython         = Alt-i
</t>
<t tx="ekr.20080212084020">The encoding used for files imported by @auto if no @encoding directive is in effect.
Default is UTF-8 (case not important).</t>
<t tx="ekr.20080312071248.19">The headline contains the button name, optionally followed by an @key=val field indicating a shortcut.

The body text contains the script associated with the button.</t>
<t tx="ekr.20080312071248.20">The headline contains the command name, optionally followed by an @key=val field indicating a shortcut.

The body text contains the script associated with the command.</t>
<t tx="ekr.20080312071248.25">Denotes the tree containing active @button nodes.
@button nodes outside this tree are ignored.</t>
<t tx="ekr.20080312071248.26">Denotes the tree containing active @command nodes.
@command nodes outside this tree are ignored.</t>
<t tx="ekr.20080312075451.1"></t>
<t tx="ekr.20080312075451.2">@color

# @command nodes outside this tree are ignored.</t>
<t tx="ekr.20080315083057.7">True: (Recommended) The spell commands collapse all nodes that are not ancestors of the node containing the match.
False: The spell commands do not collapse any nodes.</t>
<t tx="ekr.20080324105006.6">True: allow linux-like pastes using a mouse's middle button.

Important: this may cause crashes on some platforms.</t>
<t tx="ekr.20080326060254.3">The default language if no @language or @comment is in effect.

Valid values are (case is ignored):

actionscript,c,csharp,css,cweb,elisp,html,java,latex,
pascal,perl,perlpod,php,plain,plsql,python,rapidq,rebol,shell,tcltk.</t>
<t tx="ekr.20080328105334.1"></t>
<t tx="ekr.20080328105334.2">The colour used instead of green in progress bars</t>
<t tx="ekr.20080328105334.3">The colour used instead of red in progress bars</t>
<t tx="ekr.20080328105334.4"># list of @file node types to color.
# Uncomment these to enable coloring for these kinds of nodes.
@asis
@auto
@file
@thin
</t>
<t tx="ekr.20080328105334.5">The base width of progress bars, in pixels.</t>
<t tx="ekr.20080328105334.6">The default number of time units.</t>
<t tx="ekr.20080328105334.7">0: no progress bars
1: unscaled progress bars
2: scaled progress bars</t>
<t tx="ekr.20080328105334.8">pixels per time unit to add to width of scaled progress bars</t>
<t tx="ekr.20080328105334.9">The name of time unit (e.g. days, weeks, hours)</t>
<t tx="ekr.20080412115752.1"># Must be four entries: width,height,left,top.
# Put this in myLeoSettings.leo, **not** in individual .leo files.
# This setting has no effect unless @bool fixed_window = True

1200
800
50
50</t>
<t tx="ekr.20080510072134.2">cycle-focus                         = None # Ctrl-tab
cycle-all-focus                     = Ctrl-Shift-tab

back-word                           = Ctrl-LtArrow
back-word-extend-selection          = Ctrl-Shift-LtArrow
beginning-of-buffer                 = Ctrl-Home
beginning-of-buffer-extend-selection= Ctrl-Shift-Home
end-of-buffer                       = Ctrl-End
end-of-buffer-extend-selection      = Ctrl-Shift-End
forward-word                        = Ctrl-RtArrow
forward-word-extend-selection       = Ctrl-Shift-RtArrow

# beginning-of-line                   = Home
back-to-home                        = Home
beginning-of-line-extend-selection  = Shift-Home
end-of-line                         = End
end-of-line-extend-selection        = Shift-End

</t>
<t tx="ekr.20080510121331.16"># Must keep all these bindings for basic vim compatibility.

beginning-of-line           = a
# unused                    = b
# unused                    = c
enter-d-mode                = d
end-of-line                 = e
find-character              = f
# find-word                 = Shift-f
# unused                    = g
# unused                    = h
set-insert-state            = i
# unused                    = j
kill-line                   = k
select-all                  = l
# unused                    = m
# unused                    = n
focus-to-tree               = o
# unused                    = p
enter-quick-command-mode    = q
# unused                    = r
search-with-present-options = s
# toggle-from-minibuffer    = t
# unused                    = u
toggle-extend-mode          = v
forward-word                = w
back-word                   = Shift-w
delete-char                 = x
yank                        = y
undo                        = z
redo                        = Shift-z
full-command                = :
# enter-newline-insert-mode   ! body = Return

# cursor movement keys...
    # back-char           = h
    # forward-char        = l
    # next-line           = j
    # previous-line       = k
    
    # A 	Append to the end of the current line.
    # C 	Change the rest of the current line.
    # H 	To the first line of the screen.
    # I 	Insert to the start of the current line. (first non-whitespace char)
    # L 	To the the last line of the screen.
    # M 	To the middle line of the screen.
    # N 	Scan for next search match but opposite direction.
    # O 	Open a new line above and insert.
    # P 	Put characters before the cursor. Put lines above the current line.
    # V 	Start highlighting lines.
    # U 	Undo all the latest changes that were made to the current line.
    # X 	Delete characters before the cursor.
    # ^ 	Move to the first non-whitespace character of a line.
    # $ 	Move to the end of a line.
    # Ctrl + r 	Redo.
    
    # a 	Append after cursor.
    # b 	Move to the beginning of a word.
    # d6  Delete 6 lines.
    # dd  Delete the current line.
    # e  	Move to the end of a word.
    # i  	Insert before cursor.
    # o 	Open a new line below and insert.
    # n 	Scan for next search match in the same direction.
    # p 	Put (paste) the text you yanked or deleted.
        # Put characters after the cursor. Put lines below the current line.
    # r 	Overwrite one character. After overwriting the single character, go back to command mode.
    # v  	Start highlighting characters. Use the normal movement keys and commands to select text for highlighting.
        # Then use any other command, like d, on the region.
    # u  	Undo the last action.
    # x  	Delete characters under the cursor.
    # /pattern Incremental search for pattern.
    
    # # Commands for visual mode
    # &gt; Shift right.
    # &lt; Shift left.
    # c Change the highlighted text.
    # yy or Y Yank the highlighted text and copy to clipboard.
    # d Delete the highlighted text and copy to clipboar.
    
    # # Perhaps less useful
    # # ~  	Change the case of characters.
    # #   - In visual mode, change the case of highlighted characters.
    # #   - In command mode, change the case of the character uder cursor.
    # # R 	Enter insert mode but replace characters rather than inserting.
    # # E 	To the end of a whitespace-delimited word.
    # # B 	To the beginning of a whitespace-delimited word.
    
    # # Commands...
    # . repeat last complete editing command.
    # % match paren
    # : enter file (command?) mode
    # :42&lt;return&gt; go to line 42
    # :d Delete the current line.
    
    # :s/foo/bar 	Substitute foo with bar on current line
    # :s/foo/bar c Confirm each substitution. y: make match, n: skip match, a: all remaining, q: quit.
    # :s/foo/bar/g Substitute all occurances on current line.
    # :s/foo/bar/i Ignore case
    # :s/foo/bar/gi (combination of arguments)
    # :s/foo/bar/I Do not ignore case
    # :42s/foo/bar Substitute on line 42
    # :%s/foo/bar Substitute on entire file.
    # :y Yank the current line.
</t>
<t tx="ekr.20080511041907.1">#f9f0f4 light pink
#fbfdfd very light blue

For some reason, colors in the text widget do not match the colors in the canvas widget.</t>
<t tx="ekr.20080511041907.2"></t>
<t tx="ekr.20080512082834.1"># Now that we know what commands are single-line editing commands,
# Only &lt;return&gt; and arrow keys need per-pane bindings.

end-edit-headline           ! tree = Return # Escape is also possible.
# end-edit-headline           ! tree = Escape # May interfere with dismissing dialogs.
insert-newline              ! body = Return
# enter-newline-insert-mode ! body = Return

back-char                   ! text = LtArrow
forward-char                ! text = RtArrow
next-line                   ! text = DnArrow
previous-line               ! text = UpArrow

back-char-extend-selection      ! text = Shift-LtArrow
forward-char-extend-selection   ! text = Shift-RtArrow
next-line-extend-selection      ! text = Shift-DnArrow
previous-line-extend-selection  ! text = Shift-UpArrow

contract-or-go-left         ! tree = LtArrow
expand-and-go-right         ! tree = RtArrow
goto-next-visible           ! tree = DnArrow
goto-prev-visible           ! tree = UpArrow
move-outline-down           ! tree = Shift-DnArrow
move-outline-left           ! tree = Shift-LtArrow
move-outline-right          ! tree = Shift-RtArrow
move-outline-up             ! tree = Shift-UpArrow

# These cause problems with editing headlines.
# goto-first-visible-node     ! tree= Home
# goto-last-visible-node      ! tree= End

contract-or-go-left         = Alt-LtArrow
expand-and-go-right         = Alt-RtArrow
goto-next-visible           = Alt-DnArrow
goto-prev-visible           = Alt-UpArrow
move-outline-down           = Alt-Shift-DnArrow
move-outline-left           = Alt-Shift-LtArrow
move-outline-right          = Alt-Shift-RtArrow
move-outline-up             = Alt-Shift-UpArrow
  
goto-first-visible-node     = Alt-Home
goto-last-visible-node      = Alt-End

back-page                       ! text = PageUp
back-page-extend-selection      ! text = Shift-PageUp
forward-page                    ! text = PageDn
forward-page-extend-selection   ! text = Shift-PageDn

scroll-down-half-page   ! tree = Shift-PageDn
scroll-down-page        ! tree = PageDn
scroll-up-half-page     ! tree = Shift-PageUp
scroll-up-page          ! tree = PageUp         
</t>
<t tx="ekr.20080513060549.1"></t>
<t tx="ekr.20080513060549.3">@nocolor

This setting determines the initial binding for otherwise-unbound keystrokes
when no mode is in effect.  Note: the keyboard-quit command exits all modes.

The valid values are::

command:  Leo ignores the key (like Vim).
insert:  Leo inserts the key at the cursor (like Emacs)
overwrite: Leo replaces the character at the cursor.</t>
<t tx="ekr.20080513095644.1"># Allows temporary rebindings without interfering with typical bindings.

--&gt; set-silent-mode
--&gt; mode-help

keyboard-quit           = Ctrl-g # not needed, but a good reminder
keyboard-quit           = Return

close-rectangle         = c
convert-blanks          = b
convert-tabs            = t
execute-script          = e
open-rectangle          = o
repeat-complex-command  = a
reformat-paragraph      = r
remove-blank-lines      = b
sort-lines              = l
sort-siblings           = s

# enter-emacs-mode        = space
# enter-buttons-mode      = b
# enter-commands-mode     = c
# enter-edit-mode         = e
# enter-file-mode         = f
# enter-gui-mode          = g
# enter-help-mode         = h
# enter-kill-mode         = k
# enter-modes-mode        = m
# enter-outline-mode      = o
# enter-move-outline-mode = Shift-o
# enter-toggle-find-mode  = t
# enter-extract-mode      = x</t>
<t tx="ekr.20080514065934.1">@nocolor

- By default, that is, with the settings in the new version of leoSettings.leo,
Leo will work pretty much as it always has. To enable vim-like bindings, put the
following in the @settings tree in myLeoSettings.leo:

    @strings [command,insert, overwrite] top_level_unbound_key_action = command

- I like the following setting even in "legacy" operation, and I especially
recommend it, or something like it, for when using vim-like bindings:

    @color insert_mode_bg_color = #fdf5f5

It's a soft pink that contrasts nicely with the soft yellow color gets shown in
the body pane when the body pane does *not* have focus.

- *Important*: the new default setting for @bool stayInTreeAfterEditHeadline is False.
  This allows the &lt;Return&gt; key to switch into the body pane anywhere in the outline.

- vim-like bindings are defined in leoSettings.leo in the node:

    @shortcuts Vim plain keys

Play with these as you will. For multi-key sequences, like 'dd', you would have
to define a 'd' mode that handles the follow-on characters after the first d. On
my list: munge mode names so they make pleasing prompts in the minibuffer. Maybe
today.

I'd like to offer a $100 prize for the best vim simulation. This would require
modes for all plain keys that have more than one continuation. I might be
tempted to add more vim-like features, especially support for vim '.', if I knew
that people were really using heavy-duty vim bindings.

If you define your own key bindings in myLeoSettings.leo, I highly recommend
basing them on the new bindings in the '@keys EKR bindings' tree. You will
probably find that your bindings are much easier to understand.
</t>
<t tx="ekr.20080514082950.2">Overrides body_text_background_color.

#fdf5f5 A light pink.
#f0fde1 A light green.
#f9e6dd A light orange.</t>
<t tx="ekr.20080515053412.10">Dedent</t>
<t tx="ekr.20080515053412.11"></t>
<t tx="ekr.20080515053412.12"></t>
<t tx="ekr.20080515053412.13"></t>
<t tx="ekr.20080515053412.14">recent-files-menu

# This will include a copy of @popup recent-files-menu</t>
<t tx="ekr.20080515053412.15"></t>
<t tx="ekr.20080515053412.16"></t>
<t tx="ekr.20080515053412.17"></t>
<t tx="ekr.20080515053412.18">rclick-gen-context-sensitive-commands

# This is an example of a menu generator command. It will scan the
body text for
# occuurances of hyperlinks, or section headings in the current line
- Hide quoted text -
or in the
# selected text and append items to the menu that will invoke a
webbrowser or
# jump to the section as appropriate.
</t>
<t tx="ekr.20080515053412.19">@popup log is the default menu for
right clicks in the log pane.</t>
<t tx="ekr.20080515053412.20">edit-menu</t>
<t tx="ekr.20080515053412.21">@popup find-text is the default menu
for right clicks in the find text entry in the find panel.</t>
<t tx="ekr.20080515053412.22">edit-menu</t>
<t tx="ekr.20080515053412.23">@popup change-text is the default
menu for right clicks in the change text entry in the find panel.</t>
<t tx="ekr.20080515053412.24">find-text</t>
<t tx="ekr.20080515053412.25">@popup canvas is the default menu
for right clicks in the tree canvas that occur outside any other tree
widget.</t>
<t tx="ekr.20080515053412.26">to-chapter-fragment</t>
<t tx="ekr.20080515053412.27"></t>
<t tx="ekr.20080515053412.28"></t>
<t tx="ekr.20080515053412.29"></t>
<t tx="ekr.20080515053412.3"></t>
<t tx="ekr.20080515053412.30">@popup headline is the default menu
for right clicks in the text part of the headline.</t>
<t tx="ekr.20080515053412.31">@popup iconbox is the default menu
for right clicks in the icon box pane.  This will normally be
overridden by the cleo menu.</t>
<t tx="ekr.20080515053412.32">@popup plusbox is the default menu
for right clicks on the plusbox.</t>
<t tx="ekr.20080515053412.33"></t>
<t tx="ekr.20080515053412.34"></t>
<t tx="ekr.20080515053412.35">Cut

icon = Tango/16x16/actions/editcut.png</t>
<t tx="ekr.20080515053412.36">Copy

icon = Tango/16x16/actions/editcopy.png</t>
<t tx="ekr.20080515053412.37">Paste

icon = Tango/16x16/actions/editpaste.png</t>
<t tx="ekr.20080515053412.38"></t>
<t tx="ekr.20080515053412.39">Select All
#First line must be blank as we want to work out the
#label based on the command, key = value pairs may follow.</t>
<t tx="ekr.20080515053412.4"></t>
<t tx="ekr.20080515053412.40">@popup recent-files-menu is a
fragment meant to be included in other menus.

It consists of a single cascade menu which opens to show a list of
recent files. </t>
<t tx="ekr.20080515053412.41"></t>
<t tx="ekr.20080515053412.42">rclick-gen-recent-files-list</t>
<t tx="ekr.20080515053412.43"></t>
<t tx="ekr.20080515053412.44"></t>
<t tx="ekr.20080515053412.45">clone-node-to-chapter-menu</t>
<t tx="ekr.20080515053412.46"></t>
<t tx="ekr.20080515053412.47">copy-node-to-chapter-menu</t>
<t tx="ekr.20080515053412.48"></t>
<t tx="ekr.20080515053412.49">move-node-to-chapter-menu</t>
<t tx="ekr.20080515053412.5">@popup body is the default menu for
right clicks in the body pane.
</t>
<t tx="ekr.20080515053412.50">chapter-select</t>
<t tx="ekr.20080515053412.51">select-chapter-menu</t>
<t tx="ekr.20080515053412.6">edit-menu

# This will include the contents of @popup edit-text </t>
<t tx="ekr.20080515053412.7"></t>
<t tx="ekr.20080515053412.8"></t>
<t tx="ekr.20080515053412.9">Indent</t>
<t tx="ekr.20080602174756.1"></t>
<t tx="ekr.20080703071815.3"></t>
<t tx="ekr.20080703111151.12"># bold words in forth

forth_keyword3_family = None
forth_keyword3_font_size = None
forth_keyword3_font_slant = roman
forth_keyword3_font_weight = bold
</t>
<t tx="ekr.20080703111151.14"># bold-italic words in forth

forth_keyword4_family = None
forth_keyword4_size = None
forth_keyword4_slant = slant
forth_keyword4_weight = bold
</t>
<t tx="ekr.20080703111151.15"># italic words in forth

forth_keyword5_family = None
forth_keyword5_size = None
forth_keyword5_slant = slant
forth_keyword5_weight = normal
</t>
<t tx="ekr.20080703111151.17"># defining words in forth

forth_keyword2_family = None
forth_keyword2_size = None
forth_keyword2_slant = None
forth_keyword2_weight = None
</t>
<t tx="ekr.20080703111151.18">@language text</t>
<t tx="ekr.20080703111151.21"># bold keywords defined in forth-bold-words</t>
<t tx="ekr.20080703111151.22"># bold-italic keywords defined in @data forth-bold-italic-words</t>
<t tx="ekr.20080703111151.23"># italic keywords defined in forth-italic-words</t>
<t tx="ekr.20080705064822.1">:
variable
constant
code
</t>
<t tx="ekr.20080705064822.2"></t>
<t tx="ekr.20080705064822.3"></t>
<t tx="ekr.20080705064822.4">\Delimiter pairs for forth colorizing, one per line

[ ]
{ }
asm[ ]asm
</t>
<t tx="ekr.20080705064822.5">\ lines beginning with '\' are comments, and ignored.
\ declare any supplementary forth words you want coloured, one per line, below

\ asm[ ]asm     now string delims.
\ :             now a defining word.

!
&lt;
'
+
,
-
1+
2&gt;r
2r&gt;
2drop
2dup
2swap
::
::code
;
&lt;=
=
&gt;
&gt;=
&gt;r
r&gt;
&gt;w
w&gt;
[']
again
and
begin
code
constant
drop
dup
else
end-code
exit
host
if
include
invert
label:
macro
meta
needs
or 
picasm
repeat
return-in-w
swap
target
then
until
v-for
v-next
variable
while
@</t>
<t tx="ekr.20080705064822.6"></t>
<t tx="ekr.20080705064822.7">\ List of supplementary tokens to be syntax-coloured by Leo as Forth 'string words'.
\ Each line contains a pair of tokens.
\ Lines beginning with '\' are comments, and ignored.

" "
c" "
." "
s" "
.( )

abort" "
tty" "
ttyl" "
lcd1" "
lcd2" "
lcd1c" "
lcd2c" "
</t>
<t tx="ekr.20080801104153.2">Read @shadow Nodes</t>
<t tx="ekr.20080801104153.3">Write @shadow Nodes</t>
<t tx="ekr.20080801104153.4">Write Dirty @shadow Nodes</t>
<t tx="ekr.20080811105020.2">False: (recommended) Enable import parsing for @shadow and @auto
True: @shadow and @auto create a single node for the entire file.</t>
<t tx="ekr.20080819075811.5">This node just keeps track of the accelerators in the siblings.</t>
<t tx="ekr.20080819075811.6"></t>
<t tx="ekr.20080916092417.1"></t>
<t tx="ekr.20080916094157.1"></t>
<t tx="ekr.20080921060401.3"></t>
<t tx="ekr.20080930072519.3"></t>
<t tx="ekr.20080930072519.4">The number of buttons or widget in any one row of icons in the icon area.
If there are more than this number, a new row is created.</t>
<t tx="ekr.20081018053140.11"></t>
<t tx="ekr.20081018053140.12">/* Documentation of Qt stylesheets at http://doc.trolltech.com/4.2/stylesheet.html */

/* Valid color names: http://www.w3.org/TR/SVG/types.html#ColorKeywords */

/* A QWidget: supports only background attributes.*/

QSplitter::handle {
    background-color: #CAE1FF; /* lightSteelBlue1 */
}

QStackedWidget {
    /* background-color:lightpink; */
    border-color: red;
    padding: 0px;
    /* border-width: 0px; */
    /* background-color: yellow; */
}

QSplitter {
    border-color: white;
    background-color: white;
    border-style: solid;
}

QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    font-family: DejaVu Sans Mono;
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    font-family: DejaVu Sans Mono;
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: white;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family: DejaVu Sans Mono;
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: lightgrey;
    font-family: DejaVu Sans Mono;
    /* font-family: Courier New; */
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family: DejaVu Sans Mono;
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family: DejaVu Sans Mono;
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}

/* The mini-buffer */
QLineEdit#lineEdit {
    selection-color: white;
    selection-background-color: lightgrey;
    font-family: DejaVu Sans Mono;
    font-size: 12px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLineEdit#status1 {
    background-color: lightgrey;
    border-width: 1px;
    border-style: solid;
    border-color: darkgrey;
}

QLineEdit#status2 {
    background-color: lightgrey;
    border-width: 1px;
    border-style: solid;
    border-color: darkgrey;
}
</t>
<t tx="ekr.20081020075840.10">Argument to QSciScintilla.zoomIn method.
This allows you to increase the font size.</t>
<t tx="ekr.20081022181056.10"># Lines have the form: color, style
# color may be any kind of Qt color specifier
# The valid sytles are as follows: (capitalization is significant).
# Default Comment Number Keyword
# DoubleQuotedString SingleQuotedString
# TripleSingleQuotedString TripleDoubleQuotedString
# ClassName FunctionMethodName
# Operator Identifier
# CommentBlock UnclosedString
# HighlightedIdentifier Decorator

 red,   Comment
 green, SingleQuotedString
 green, DoubleQuotedString
 green, TripleSingleQuotedString
 green, TripleDoubleQuotedString
 green, UnclosedString
 green, Decorator
 blue,  Keyword</t>
<t tx="ekr.20081023060109.13">Argument to QSciScintilla.zoomIn method.
This allows you to increase the font size.</t>
<t tx="ekr.20081023060109.14"></t>
<t tx="ekr.20081216090156.5"></t>
<t tx="ekr.20090202191501.10"></t>
<t tx="ekr.20090202191501.11"># Not used yet.</t>
<t tx="ekr.20090203131919.1">'''Check all commands mentioned in the @menus tree
   to ensure that they exist.'''

def checkMenu (p):
    for p2 in p.subtree_iter():
        if p2.h.startswith('@item'):
            checkItem(p.h,p2)

def checkItem (menuName,p):
    h = p.h[len('@item'):].replace('&amp;','').replace('*','').strip()
    if h != '-' and h not in c.commandsDict:
        print ('command not found: %s: %s' % (menuName,p.h))

menus = g.findNodeAnywhere(c,'@menus')
assert menus, 'no @menus tree'
for p in menus.subtree_iter():
    if p.h.startswith('@menu'):
        checkMenu(p.copy())

print ('done')
</t>
<t tx="ekr.20090203134354.2"></t>
<t tx="ekr.20090213065933.11"></t>
<t tx="ekr.20090406071640.18">A kind of pink</t>
<t tx="ekr.20090406071640.19">A kind of blue</t>
<t tx="ekr.20090408091222.1"># These are needed because Qt reports Ctrl-( as Ctrl-Shift-9, etc.

add-comments        = Ctrl-Shift-9  # Ctrl-parenleft
delete-comments     = Ctrl-Shift-0  # Ctrl-parenright
demote              = Ctrl-Shift-]  # Ctrl-}
move-past-close     = Alt-Shift-0   # Alt-parenright
promote             = Ctrl-Shift-[  # Ctrl-{
</t>
<t tx="ekr.20090430075506.7">True: write comment line of the form:
    
.. rst3: filename: &lt;filename&gt;

at start of intermediate file. Requires rst3_generate_rst and
rst3_write_intermediate_file options both to be true.</t>
<t tx="ekr.20090430173906.1">@nocolor-node

The rST markup string preceding code parts.

The default for the C, Perl, Python and Ruby languages is: 

'**code**:\n\n.. code-block:: %s\n' % language.title()

The default for all other languages is:
    
'**code**:\n\n.. class:: code\n..\n\n::\n'

A reasonable alternative would be:
    
'\n.. class:: code\n..\n\n::\n'</t>
<t tx="ekr.20090514111518.8379"></t>
<t tx="ekr.20090531084727.10893"></t>
<t tx="ekr.20090531084727.10894"></t>
<t tx="ekr.20090531084727.10895"></t>
<t tx="ekr.20090531084727.10896"></t>
<t tx="ekr.20090610164636.8489">u = c.undoer
w = c.frame.body.bodyCtrl
p2 = p.insertAsNthChild(0)
c.setHeadString(p2,'@test xxx')
s = '''\
if g.unitTesting:
    c,p = g.getTestVars()

    '''
c.setBodyString(p2,s)
c.selectPosition(p2)
c.redraw()
w.setInsertPoint(len(s))
c.bodyWantsFocus()
c.outerUpdate()
</t>
<t tx="ekr.20090620112052.9070">@nocolor

The encoding assumed for strings used by the Qt plugin.
UTF-8 is a reasonable default.
Change to your Python's default encoding if you have unicode problems.</t>
<t tx="ekr.20090628075121.8432">Open &amp;quickstart.leo</t>
<t tx="ekr.20090630073313.8521"></t>
<t tx="ekr.20090630073313.8522"></t>
<t tx="ekr.20090703122042.7463">print 'hi'</t>
<t tx="ekr.20090724102842.2492">If zero, all nodes are colorized, regardless of length of body text.
If &gt; 0, only nodes whose body text are smaller than this limit are colorized.</t>
<t tx="ekr.20090905151712.8546"></t>
<t tx="ekr.20100102100353.8705"></t>
<t tx="ekr.20100102100353.8706"></t>
<t tx="ekr.20100102121150.6344">
</t>
<t tx="ekr.20100107060708.6390"></t>
<t tx="ekr.20100313080341.8368"></t>
<t tx="ekr.20100313080341.8369"></t>
<t tx="ekr.20100313080341.8370"></t>
<t tx="ekr.20100313080341.8371"></t>
<t tx="ekr.20100507153425.8304">Valid values are top,bottom,left,right</t>
<t tx="ekr.20100806210935.8331"># @root and the related Tangle/Untange commands are deprecated.</t>
<t tx="ekr.20100806211331.8331"></t>
<t tx="ekr.20100904095239.8440">The language code for Enchant.

See http://www.rfk.id.au/software/pyenchant/tutorial.html#installation-dicts
for information about supported languages.</t>
<t tx="ekr.20100904095239.8441">Defaults to leo/plugins/spellpyx.txt</t>
<t tx="ekr.20100904134301.11000"></t>
<t tx="ekr.20100904134301.11002"># Comments lines (lines starting with '#') are ignored.
# Non-comment lines should have the form::
#
#    name=definition

# Definitions in @data abbreviation nodes override definitions in @data
# global-abbreviation nodes. Typically you would define @data abbreviation nodes
# in myLeoSettings.leo
</t>
<t tx="ekr.20100904134301.11004"># Comments lines (lines starting with '#') are ignored.
# Non-comment lines should have the form::
#
#    name=definition

# Definitions in @data abbreviation nodes override definitions in @data
# global-abbreviation nodes. Typically you would define @data abbreviation nodes
# in myLeoSettings.leo
</t>
<t tx="ekr.20100904134301.11006">True: enable abbreviations
False disable abbreviations

Typically you would enable abbreviations in myLeoSettings.leo or in individual
.leo files.</t>
<t tx="ekr.20100907092300.6957"></t>
<t tx="ekr.20100907092300.6958">Path to inkscape template file
</t>
<t tx="ekr.20100907092300.6959">Path to Inkscape executable</t>
<t tx="ekr.20100910115903.8297"></t>
<t tx="ekr.20100910115903.8299"></t>
<t tx="ekr.20100929121021.8511"></t>
<t tx="ekr.20101009103953.8642">True (recommended):
    Write "E" attribute bits in &lt;v&gt; elements.
    Leo outlines will record the expansion state of all nodes.
    
False: (Good for files like unitTest.leo)
    Suppress "E" attribute bits in &lt;v&gt; elements.
    Only the ancestors of the presently selected node will
    be expanded when Leo opens an outline.</t>
<t tx="ekr.20101104191857.8345">True:  put non-definition code in separate nodes.
False: put trailing non-definition code at the start of the next node.</t>
<t tx="ekr.20101114064731.8352"></t>
<t tx="leohag.20081204085551.13"></t>
<t tx="tbrown.20081003103821.1">True: if the same file (basename) occurs more than once in the recent files
list, i.e. on two different paths it will appear as a submenu with the basename
as its heading, and the two (or more) paths as its entries.  This is easier to
scan visually than multiple full paths.  If recent_files_omit_directories is
True this setting has no effect.

False: don't use submenus for multiple path entries, unless recent_files_group_always
is true (and recent_files_omit_directories is False)
</t>
<t tx="tbrown.20081003103821.2">True: same as recent_files_group, except that even files (basenames) which are unique
have their containing path listed in the submenu - so visual clutter is reduced
but you can still see where things come from before you load them.

False: don't use submenus for multiple path entries, unless recent_files_group
is true (and recent_files_omit_directories is False)
</t>
<t tx="tbrown.20090430112929.1">path to cleo icons relative to Leo icon dir
e.g. cleo or cleo/small</t>
<t tx="tbrown.20091129085043.11789"></t>
<t tx="tbrown.20091129085043.11790">file type (auto, shadow, etc.) without the '@', to use when
loading files</t>
<t tx="tbrown.20091129085043.11792">event hook used by active_path, icondclick1 is probably best</t>
<t tx="tbrown.20091129085043.11793"># regular expressions (case insensitive) for files/directories
# active_path won't list, one per line.
#
# NOTE: directory names are always wrapped in '/', so write a
# pattern to target '/.svn/' (e.g. "^/\.bzr/$"), not '.svn'.
#
# e.g.
#
#   ^/\.bzr/$    - ignore directories called '.bzr'
#   \.pyc$     -ignore files ending in '.pyc'
</t>
<t tx="tbrown.20091129085043.11795"># regular expressions (case insensitive) for files/directories
# active_path loads automatically
# e.g.
#
#   ^readme    - load any file starting with 'readme'
</t>
<t tx="tbrown.20100304170159.5189">Should active_path load docstrings for python files?</t>
<t tx="tbrown.20100401100336.16108">controls the maximum time active_path will spend on a recursive operation.</t>
<t tx="tbrown.20100401100336.31583">controls the maximum size file active_path will open without query.</t>
<t tx="tbrown.20100524101550.4704">text appended to @button headlines which have submenu items *in addition* to the standard Goto Script and Remove Button items.  Additional submenu items are added by @rclick nodes directly following the @button, and, if the @button has no '@others', as children of the @button.

Unicode chars like ▾ and … can be used here.
</t>
<t tx="ville.20090701225947.3902"># Open current node in external editor. 'v' is mnemonic for 'vi', because vi users request this most
cm-external-editor = Alt-v</t>
<t tx="ville.20091008201813.3909">Qt ui uses a different (simpler) setup for creating context menus,
a single @data contextmenu_commands node. </t>
<t tx="ville.20091008201813.3911"># Important: the contextmenu.py plugin must be enabled
# for these settings to take effect.

# Add commands to contextmenu
# The format is &lt;command&gt; SPACE &lt;description&gt;

# stickynote Create a sticky note
# read-at-file-nodes Read in file nodes
</t>
<t tx="vitalije.20100306144625.8944"></t>
<t tx="vitalije.20100306144625.8945"></t>
<t tx="vitalije.20100306144625.8946"># Time between saves in seconds</t>
<t tx="vivainio.20080307185812"></t>
<t tx="vivainio.20080307190927"></t>
</tnodes>
</leo_file>
